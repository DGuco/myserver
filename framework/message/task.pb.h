// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: task.proto

#ifndef PROTOBUF_task_2eproto__INCLUDED
#define PROTOBUF_task_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_task_2eproto();
void protobuf_AssignDesc_task_2eproto();
void protobuf_ShutdownFile_task_2eproto();

class TaskDTO;
class ScoreDTO;
class BarTaskDTO;
class BarInfoDTO;
class ReceiveTaskRequest;
class ReceiveTaskResponse;
class SignRewardRequest;
class SignRewardResponse;
class OnlineRewardRequest;
class OnlineRewardResponse;
class ReceiveBarTaskRequest;
class ReceiveBarTaskResponse;
class ReceiveaAgeRequest;
class ReceiveAgeResponse;
class DailyPush;
class AchievementPush;
class MainPush;
class ScorePush;
class SignInfoPush;
class OnlineInfoPush;
class MissionBarPush;
class AgeRewardPush;

enum TaskCommandId {
  REVEIVE_TASK_REWARD = 1801,
  REVEIVE_SIGN_REWARD = 1802,
  REVEIVE_ONLINE_REWARD = 1803,
  FRESH_MISSION_BAR = 1804,
  RECEIVE_MISSION_BAR = 1805,
  MISSION_BAR_UP = 1806,
  RECEIVE_AGE_REWARD = 1807
};
bool TaskCommandId_IsValid(int value);
const TaskCommandId TaskCommandId_MIN = REVEIVE_TASK_REWARD;
const TaskCommandId TaskCommandId_MAX = RECEIVE_AGE_REWARD;
const int TaskCommandId_ARRAYSIZE = TaskCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskCommandId_descriptor();
inline const ::std::string& TaskCommandId_Name(TaskCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskCommandId_descriptor(), value);
}
inline bool TaskCommandId_Parse(
    const ::std::string& name, TaskCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskCommandId>(
    TaskCommandId_descriptor(), name, value);
}
enum TaskPushId {
  DAILY_TASK_PUSH = 51801,
  ACHIEVEMENT_TASK_PUSH = 51802,
  MAIN_TASK_PUSH = 51803,
  SCORE_TASK_PUSH = 51804,
  SIGN_INFO_PUSH = 51805,
  ONLINE_INFO_PUSH = 51806,
  MISSION_BAR_PUSH = 51807,
  AGE_REWARD_PUSH = 51808
};
bool TaskPushId_IsValid(int value);
const TaskPushId TaskPushId_MIN = DAILY_TASK_PUSH;
const TaskPushId TaskPushId_MAX = AGE_REWARD_PUSH;
const int TaskPushId_ARRAYSIZE = TaskPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskPushId_descriptor();
inline const ::std::string& TaskPushId_Name(TaskPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskPushId_descriptor(), value);
}
inline bool TaskPushId_Parse(
    const ::std::string& name, TaskPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskPushId>(
    TaskPushId_descriptor(), name, value);
}
// ===================================================================

class TaskDTO : public ::google::protobuf::Message {
 public:
  TaskDTO();
  virtual ~TaskDTO();

  TaskDTO(const TaskDTO& from);

  inline TaskDTO& operator=(const TaskDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskDTO& default_instance();

  void Swap(TaskDTO* other);

  // implements Message ----------------------------------------------

  TaskDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskDTO& from);
  void MergeFrom(const TaskDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 current = 2;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 2;
  inline ::google::protobuf::int32 current() const;
  inline void set_current(::google::protobuf::int32 value);

  // required int32 limit = 3;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 3;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);

  // optional bool isReceived = 4;
  inline bool has_isreceived() const;
  inline void clear_isreceived();
  static const int kIsReceivedFieldNumber = 4;
  inline bool isreceived() const;
  inline void set_isreceived(bool value);

  // optional int32 star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.TaskDTO)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_current();
  inline void clear_has_current();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_isreceived();
  inline void clear_has_isreceived();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 current_;
  ::google::protobuf::int32 limit_;
  bool isreceived_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static TaskDTO* default_instance_;
};
// -------------------------------------------------------------------

class ScoreDTO : public ::google::protobuf::Message {
 public:
  ScoreDTO();
  virtual ~ScoreDTO();

  ScoreDTO(const ScoreDTO& from);

  inline ScoreDTO& operator=(const ScoreDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreDTO& default_instance();

  void Swap(ScoreDTO* other);

  // implements Message ----------------------------------------------

  ScoreDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScoreDTO& from);
  void MergeFrom(const ScoreDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // required bool isReceived = 2;
  inline bool has_isreceived() const;
  inline void clear_isreceived();
  static const int kIsReceivedFieldNumber = 2;
  inline bool isreceived() const;
  inline void set_isreceived(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.ScoreDTO)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_isreceived();
  inline void clear_has_isreceived();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 score_;
  bool isreceived_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ScoreDTO* default_instance_;
};
// -------------------------------------------------------------------

class BarTaskDTO : public ::google::protobuf::Message {
 public:
  BarTaskDTO();
  virtual ~BarTaskDTO();

  BarTaskDTO(const BarTaskDTO& from);

  inline BarTaskDTO& operator=(const BarTaskDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BarTaskDTO& default_instance();

  void Swap(BarTaskDTO* other);

  // implements Message ----------------------------------------------

  BarTaskDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BarTaskDTO& from);
  void MergeFrom(const BarTaskDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BarTaskDTO)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static BarTaskDTO* default_instance_;
};
// -------------------------------------------------------------------

class BarInfoDTO : public ::google::protobuf::Message {
 public:
  BarInfoDTO();
  virtual ~BarInfoDTO();

  BarInfoDTO(const BarInfoDTO& from);

  inline BarInfoDTO& operator=(const BarInfoDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BarInfoDTO& default_instance();

  void Swap(BarInfoDTO* other);

  // implements Message ----------------------------------------------

  BarInfoDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BarInfoDTO& from);
  void MergeFrom(const BarInfoDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.BarTaskDTO taskList = 1;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTaskListFieldNumber = 1;
  inline const ::slg::protocol::BarTaskDTO& tasklist(int index) const;
  inline ::slg::protocol::BarTaskDTO* mutable_tasklist(int index);
  inline ::slg::protocol::BarTaskDTO* add_tasklist();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BarTaskDTO >&
      tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BarTaskDTO >*
      mutable_tasklist();

  // required int32 reftime = 2;
  inline bool has_reftime() const;
  inline void clear_reftime();
  static const int kReftimeFieldNumber = 2;
  inline ::google::protobuf::int32 reftime() const;
  inline void set_reftime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BarInfoDTO)
 private:
  inline void set_has_reftime();
  inline void clear_has_reftime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::BarTaskDTO > tasklist_;
  ::google::protobuf::int32 reftime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static BarInfoDTO* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveTaskRequest : public ::google::protobuf::Message {
 public:
  ReceiveTaskRequest();
  virtual ~ReceiveTaskRequest();

  ReceiveTaskRequest(const ReceiveTaskRequest& from);

  inline ReceiveTaskRequest& operator=(const ReceiveTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveTaskRequest& default_instance();

  void Swap(ReceiveTaskRequest* other);

  // implements Message ----------------------------------------------

  ReceiveTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveTaskRequest& from);
  void MergeFrom(const ReceiveTaskRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.ReceiveTaskRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ReceiveTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveTaskResponse : public ::google::protobuf::Message {
 public:
  ReceiveTaskResponse();
  virtual ~ReceiveTaskResponse();

  ReceiveTaskResponse(const ReceiveTaskResponse& from);

  inline ReceiveTaskResponse& operator=(const ReceiveTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveTaskResponse& default_instance();

  void Swap(ReceiveTaskResponse* other);

  // implements Message ----------------------------------------------

  ReceiveTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveTaskResponse& from);
  void MergeFrom(const ReceiveTaskResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .slg.protocol.PropertyDTO reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::slg::protocol::PropertyDTO& reward(int index) const;
  inline ::slg::protocol::PropertyDTO* mutable_reward(int index);
  inline ::slg::protocol::PropertyDTO* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::PropertyDTO >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::PropertyDTO >*
      mutable_reward();

  // repeated .slg.protocol.ItemDTO items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::slg::protocol::ItemDTO& items(int index) const;
  inline ::slg::protocol::ItemDTO* mutable_items(int index);
  inline ::slg::protocol::ItemDTO* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:slg.protocol.ReceiveTaskResponse)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::RepeatedPtrField< ::slg::protocol::PropertyDTO > reward_;
  ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ReceiveTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class SignRewardRequest : public ::google::protobuf::Message {
 public:
  SignRewardRequest();
  virtual ~SignRewardRequest();

  SignRewardRequest(const SignRewardRequest& from);

  inline SignRewardRequest& operator=(const SignRewardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignRewardRequest& default_instance();

  void Swap(SignRewardRequest* other);

  // implements Message ----------------------------------------------

  SignRewardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignRewardRequest& from);
  void MergeFrom(const SignRewardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:slg.protocol.SignRewardRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static SignRewardRequest* default_instance_;
};
// -------------------------------------------------------------------

class SignRewardResponse : public ::google::protobuf::Message {
 public:
  SignRewardResponse();
  virtual ~SignRewardResponse();

  SignRewardResponse(const SignRewardResponse& from);

  inline SignRewardResponse& operator=(const SignRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignRewardResponse& default_instance();

  void Swap(SignRewardResponse* other);

  // implements Message ----------------------------------------------

  SignRewardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignRewardResponse& from);
  void MergeFrom(const SignRewardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.ItemDTO reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::slg::protocol::ItemDTO& reward(int index) const;
  inline ::slg::protocol::ItemDTO* mutable_reward(int index);
  inline ::slg::protocol::ItemDTO* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:slg.protocol.SignRewardResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static SignRewardResponse* default_instance_;
};
// -------------------------------------------------------------------

class OnlineRewardRequest : public ::google::protobuf::Message {
 public:
  OnlineRewardRequest();
  virtual ~OnlineRewardRequest();

  OnlineRewardRequest(const OnlineRewardRequest& from);

  inline OnlineRewardRequest& operator=(const OnlineRewardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineRewardRequest& default_instance();

  void Swap(OnlineRewardRequest* other);

  // implements Message ----------------------------------------------

  OnlineRewardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineRewardRequest& from);
  void MergeFrom(const OnlineRewardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:slg.protocol.OnlineRewardRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static OnlineRewardRequest* default_instance_;
};
// -------------------------------------------------------------------

class OnlineRewardResponse : public ::google::protobuf::Message {
 public:
  OnlineRewardResponse();
  virtual ~OnlineRewardResponse();

  OnlineRewardResponse(const OnlineRewardResponse& from);

  inline OnlineRewardResponse& operator=(const OnlineRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineRewardResponse& default_instance();

  void Swap(OnlineRewardResponse* other);

  // implements Message ----------------------------------------------

  OnlineRewardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineRewardResponse& from);
  void MergeFrom(const OnlineRewardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.ItemDTO reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::slg::protocol::ItemDTO& reward(int index) const;
  inline ::slg::protocol::ItemDTO* mutable_reward(int index);
  inline ::slg::protocol::ItemDTO* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:slg.protocol.OnlineRewardResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static OnlineRewardResponse* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveBarTaskRequest : public ::google::protobuf::Message {
 public:
  ReceiveBarTaskRequest();
  virtual ~ReceiveBarTaskRequest();

  ReceiveBarTaskRequest(const ReceiveBarTaskRequest& from);

  inline ReceiveBarTaskRequest& operator=(const ReceiveBarTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveBarTaskRequest& default_instance();

  void Swap(ReceiveBarTaskRequest* other);

  // implements Message ----------------------------------------------

  ReceiveBarTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveBarTaskRequest& from);
  void MergeFrom(const ReceiveBarTaskRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .slg.protocol.BarTaskDTO task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::slg::protocol::BarTaskDTO& task() const;
  inline ::slg::protocol::BarTaskDTO* mutable_task();
  inline ::slg::protocol::BarTaskDTO* release_task();
  inline void set_allocated_task(::slg::protocol::BarTaskDTO* task);

  // @@protoc_insertion_point(class_scope:slg.protocol.ReceiveBarTaskRequest)
 private:
  inline void set_has_task();
  inline void clear_has_task();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::slg::protocol::BarTaskDTO* task_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ReceiveBarTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveBarTaskResponse : public ::google::protobuf::Message {
 public:
  ReceiveBarTaskResponse();
  virtual ~ReceiveBarTaskResponse();

  ReceiveBarTaskResponse(const ReceiveBarTaskResponse& from);

  inline ReceiveBarTaskResponse& operator=(const ReceiveBarTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveBarTaskResponse& default_instance();

  void Swap(ReceiveBarTaskResponse* other);

  // implements Message ----------------------------------------------

  ReceiveBarTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveBarTaskResponse& from);
  void MergeFrom(const ReceiveBarTaskResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .slg.protocol.BarTaskDTO oldTask = 1;
  inline bool has_oldtask() const;
  inline void clear_oldtask();
  static const int kOldTaskFieldNumber = 1;
  inline const ::slg::protocol::BarTaskDTO& oldtask() const;
  inline ::slg::protocol::BarTaskDTO* mutable_oldtask();
  inline ::slg::protocol::BarTaskDTO* release_oldtask();
  inline void set_allocated_oldtask(::slg::protocol::BarTaskDTO* oldtask);

  // required .slg.protocol.BarTaskDTO newTask = 2;
  inline bool has_newtask() const;
  inline void clear_newtask();
  static const int kNewTaskFieldNumber = 2;
  inline const ::slg::protocol::BarTaskDTO& newtask() const;
  inline ::slg::protocol::BarTaskDTO* mutable_newtask();
  inline ::slg::protocol::BarTaskDTO* release_newtask();
  inline void set_allocated_newtask(::slg::protocol::BarTaskDTO* newtask);

  // @@protoc_insertion_point(class_scope:slg.protocol.ReceiveBarTaskResponse)
 private:
  inline void set_has_oldtask();
  inline void clear_has_oldtask();
  inline void set_has_newtask();
  inline void clear_has_newtask();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::slg::protocol::BarTaskDTO* oldtask_;
  ::slg::protocol::BarTaskDTO* newtask_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ReceiveBarTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveaAgeRequest : public ::google::protobuf::Message {
 public:
  ReceiveaAgeRequest();
  virtual ~ReceiveaAgeRequest();

  ReceiveaAgeRequest(const ReceiveaAgeRequest& from);

  inline ReceiveaAgeRequest& operator=(const ReceiveaAgeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveaAgeRequest& default_instance();

  void Swap(ReceiveaAgeRequest* other);

  // implements Message ----------------------------------------------

  ReceiveaAgeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveaAgeRequest& from);
  void MergeFrom(const ReceiveaAgeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.ReceiveaAgeRequest)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ReceiveaAgeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveAgeResponse : public ::google::protobuf::Message {
 public:
  ReceiveAgeResponse();
  virtual ~ReceiveAgeResponse();

  ReceiveAgeResponse(const ReceiveAgeResponse& from);

  inline ReceiveAgeResponse& operator=(const ReceiveAgeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveAgeResponse& default_instance();

  void Swap(ReceiveAgeResponse* other);

  // implements Message ----------------------------------------------

  ReceiveAgeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveAgeResponse& from);
  void MergeFrom(const ReceiveAgeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required .slg.protocol.PropertyDTO reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::slg::protocol::PropertyDTO& reward() const;
  inline ::slg::protocol::PropertyDTO* mutable_reward();
  inline ::slg::protocol::PropertyDTO* release_reward();
  inline void set_allocated_reward(::slg::protocol::PropertyDTO* reward);

  // @@protoc_insertion_point(class_scope:slg.protocol.ReceiveAgeResponse)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::slg::protocol::PropertyDTO* reward_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ReceiveAgeResponse* default_instance_;
};
// -------------------------------------------------------------------

class DailyPush : public ::google::protobuf::Message {
 public:
  DailyPush();
  virtual ~DailyPush();

  DailyPush(const DailyPush& from);

  inline DailyPush& operator=(const DailyPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyPush& default_instance();

  void Swap(DailyPush* other);

  // implements Message ----------------------------------------------

  DailyPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyPush& from);
  void MergeFrom(const DailyPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.TaskDTO taskList = 1;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTaskListFieldNumber = 1;
  inline const ::slg::protocol::TaskDTO& tasklist(int index) const;
  inline ::slg::protocol::TaskDTO* mutable_tasklist(int index);
  inline ::slg::protocol::TaskDTO* add_tasklist();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >&
      tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >*
      mutable_tasklist();

  // required int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.DailyPush)
 private:
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO > tasklist_;
  ::google::protobuf::int32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static DailyPush* default_instance_;
};
// -------------------------------------------------------------------

class AchievementPush : public ::google::protobuf::Message {
 public:
  AchievementPush();
  virtual ~AchievementPush();

  AchievementPush(const AchievementPush& from);

  inline AchievementPush& operator=(const AchievementPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementPush& default_instance();

  void Swap(AchievementPush* other);

  // implements Message ----------------------------------------------

  AchievementPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AchievementPush& from);
  void MergeFrom(const AchievementPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.TaskDTO taskList = 1;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTaskListFieldNumber = 1;
  inline const ::slg::protocol::TaskDTO& tasklist(int index) const;
  inline ::slg::protocol::TaskDTO* mutable_tasklist(int index);
  inline ::slg::protocol::TaskDTO* add_tasklist();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >&
      tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >*
      mutable_tasklist();

  // @@protoc_insertion_point(class_scope:slg.protocol.AchievementPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO > tasklist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static AchievementPush* default_instance_;
};
// -------------------------------------------------------------------

class MainPush : public ::google::protobuf::Message {
 public:
  MainPush();
  virtual ~MainPush();

  MainPush(const MainPush& from);

  inline MainPush& operator=(const MainPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MainPush& default_instance();

  void Swap(MainPush* other);

  // implements Message ----------------------------------------------

  MainPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MainPush& from);
  void MergeFrom(const MainPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .slg.protocol.TaskDTO task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::slg::protocol::TaskDTO& task() const;
  inline ::slg::protocol::TaskDTO* mutable_task();
  inline ::slg::protocol::TaskDTO* release_task();
  inline void set_allocated_task(::slg::protocol::TaskDTO* task);

  // @@protoc_insertion_point(class_scope:slg.protocol.MainPush)
 private:
  inline void set_has_task();
  inline void clear_has_task();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::slg::protocol::TaskDTO* task_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static MainPush* default_instance_;
};
// -------------------------------------------------------------------

class ScorePush : public ::google::protobuf::Message {
 public:
  ScorePush();
  virtual ~ScorePush();

  ScorePush(const ScorePush& from);

  inline ScorePush& operator=(const ScorePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScorePush& default_instance();

  void Swap(ScorePush* other);

  // implements Message ----------------------------------------------

  ScorePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScorePush& from);
  void MergeFrom(const ScorePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.ScoreDTO scoreList = 1;
  inline int scorelist_size() const;
  inline void clear_scorelist();
  static const int kScoreListFieldNumber = 1;
  inline const ::slg::protocol::ScoreDTO& scorelist(int index) const;
  inline ::slg::protocol::ScoreDTO* mutable_scorelist(int index);
  inline ::slg::protocol::ScoreDTO* add_scorelist();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ScoreDTO >&
      scorelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ScoreDTO >*
      mutable_scorelist();

  // @@protoc_insertion_point(class_scope:slg.protocol.ScorePush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::ScoreDTO > scorelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static ScorePush* default_instance_;
};
// -------------------------------------------------------------------

class SignInfoPush : public ::google::protobuf::Message {
 public:
  SignInfoPush();
  virtual ~SignInfoPush();

  SignInfoPush(const SignInfoPush& from);

  inline SignInfoPush& operator=(const SignInfoPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInfoPush& default_instance();

  void Swap(SignInfoPush* other);

  // implements Message ----------------------------------------------

  SignInfoPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignInfoPush& from);
  void MergeFrom(const SignInfoPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool signed = 1;
  inline bool has_signed_() const;
  inline void clear_signed_();
  static const int kSignedFieldNumber = 1;
  inline bool signed_() const;
  inline void set_signed_(bool value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .slg.protocol.ItemDTO reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::slg::protocol::ItemDTO& reward(int index) const;
  inline ::slg::protocol::ItemDTO* mutable_reward(int index);
  inline ::slg::protocol::ItemDTO* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
      mutable_reward();

  // @@protoc_insertion_point(class_scope:slg.protocol.SignInfoPush)
 private:
  inline void set_has_signed_();
  inline void clear_has_signed_();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool signed__;
  ::google::protobuf::int32 count_;
  ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO > reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static SignInfoPush* default_instance_;
};
// -------------------------------------------------------------------

class OnlineInfoPush : public ::google::protobuf::Message {
 public:
  OnlineInfoPush();
  virtual ~OnlineInfoPush();

  OnlineInfoPush(const OnlineInfoPush& from);

  inline OnlineInfoPush& operator=(const OnlineInfoPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineInfoPush& default_instance();

  void Swap(OnlineInfoPush* other);

  // implements Message ----------------------------------------------

  OnlineInfoPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineInfoPush& from);
  void MergeFrom(const OnlineInfoPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lastRecvTime = 1;
  inline bool has_lastrecvtime() const;
  inline void clear_lastrecvtime();
  static const int kLastRecvTimeFieldNumber = 1;
  inline ::google::protobuf::int32 lastrecvtime() const;
  inline void set_lastrecvtime(::google::protobuf::int32 value);

  // required int32 nextRecvTime = 2;
  inline bool has_nextrecvtime() const;
  inline void clear_nextrecvtime();
  static const int kNextRecvTimeFieldNumber = 2;
  inline ::google::protobuf::int32 nextrecvtime() const;
  inline void set_nextrecvtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.OnlineInfoPush)
 private:
  inline void set_has_lastrecvtime();
  inline void clear_has_lastrecvtime();
  inline void set_has_nextrecvtime();
  inline void clear_has_nextrecvtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lastrecvtime_;
  ::google::protobuf::int32 nextrecvtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static OnlineInfoPush* default_instance_;
};
// -------------------------------------------------------------------

class MissionBarPush : public ::google::protobuf::Message {
 public:
  MissionBarPush();
  virtual ~MissionBarPush();

  MissionBarPush(const MissionBarPush& from);

  inline MissionBarPush& operator=(const MissionBarPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionBarPush& default_instance();

  void Swap(MissionBarPush* other);

  // implements Message ----------------------------------------------

  MissionBarPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MissionBarPush& from);
  void MergeFrom(const MissionBarPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .slg.protocol.BarInfoDTO barInfo = 1;
  inline bool has_barinfo() const;
  inline void clear_barinfo();
  static const int kBarInfoFieldNumber = 1;
  inline const ::slg::protocol::BarInfoDTO& barinfo() const;
  inline ::slg::protocol::BarInfoDTO* mutable_barinfo();
  inline ::slg::protocol::BarInfoDTO* release_barinfo();
  inline void set_allocated_barinfo(::slg::protocol::BarInfoDTO* barinfo);

  // @@protoc_insertion_point(class_scope:slg.protocol.MissionBarPush)
 private:
  inline void set_has_barinfo();
  inline void clear_has_barinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::slg::protocol::BarInfoDTO* barinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static MissionBarPush* default_instance_;
};
// -------------------------------------------------------------------

class AgeRewardPush : public ::google::protobuf::Message {
 public:
  AgeRewardPush();
  virtual ~AgeRewardPush();

  AgeRewardPush(const AgeRewardPush& from);

  inline AgeRewardPush& operator=(const AgeRewardPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgeRewardPush& default_instance();

  void Swap(AgeRewardPush* other);

  // implements Message ----------------------------------------------

  AgeRewardPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgeRewardPush& from);
  void MergeFrom(const AgeRewardPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 receiveLevel = 1;
  inline int receivelevel_size() const;
  inline void clear_receivelevel();
  static const int kReceiveLevelFieldNumber = 1;
  inline ::google::protobuf::int32 receivelevel(int index) const;
  inline void set_receivelevel(int index, ::google::protobuf::int32 value);
  inline void add_receivelevel(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      receivelevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_receivelevel();

  // @@protoc_insertion_point(class_scope:slg.protocol.AgeRewardPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > receivelevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_task_2eproto();
  friend void protobuf_AssignDesc_task_2eproto();
  friend void protobuf_ShutdownFile_task_2eproto();

  void InitAsDefaultInstance();
  static AgeRewardPush* default_instance_;
};
// ===================================================================


// ===================================================================

// TaskDTO

// required int32 id = 1;
inline bool TaskDTO::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskDTO::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskDTO::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskDTO::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TaskDTO::id() const {
  return id_;
}
inline void TaskDTO::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 current = 2;
inline bool TaskDTO::has_current() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskDTO::set_has_current() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskDTO::clear_has_current() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskDTO::clear_current() {
  current_ = 0;
  clear_has_current();
}
inline ::google::protobuf::int32 TaskDTO::current() const {
  return current_;
}
inline void TaskDTO::set_current(::google::protobuf::int32 value) {
  set_has_current();
  current_ = value;
}

// required int32 limit = 3;
inline bool TaskDTO::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskDTO::set_has_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskDTO::clear_has_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskDTO::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 TaskDTO::limit() const {
  return limit_;
}
inline void TaskDTO::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
}

// optional bool isReceived = 4;
inline bool TaskDTO::has_isreceived() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskDTO::set_has_isreceived() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskDTO::clear_has_isreceived() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskDTO::clear_isreceived() {
  isreceived_ = false;
  clear_has_isreceived();
}
inline bool TaskDTO::isreceived() const {
  return isreceived_;
}
inline void TaskDTO::set_isreceived(bool value) {
  set_has_isreceived();
  isreceived_ = value;
}

// optional int32 star = 5;
inline bool TaskDTO::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TaskDTO::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TaskDTO::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TaskDTO::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 TaskDTO::star() const {
  return star_;
}
inline void TaskDTO::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// ScoreDTO

// required int32 score = 1;
inline bool ScoreDTO::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreDTO::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreDTO::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreDTO::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ScoreDTO::score() const {
  return score_;
}
inline void ScoreDTO::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// required bool isReceived = 2;
inline bool ScoreDTO::has_isreceived() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreDTO::set_has_isreceived() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreDTO::clear_has_isreceived() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreDTO::clear_isreceived() {
  isreceived_ = false;
  clear_has_isreceived();
}
inline bool ScoreDTO::isreceived() const {
  return isreceived_;
}
inline void ScoreDTO::set_isreceived(bool value) {
  set_has_isreceived();
  isreceived_ = value;
}

// -------------------------------------------------------------------

// BarTaskDTO

// required int32 id = 1;
inline bool BarTaskDTO::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BarTaskDTO::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BarTaskDTO::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BarTaskDTO::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BarTaskDTO::id() const {
  return id_;
}
inline void BarTaskDTO::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 quality = 2;
inline bool BarTaskDTO::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BarTaskDTO::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BarTaskDTO::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BarTaskDTO::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 BarTaskDTO::quality() const {
  return quality_;
}
inline void BarTaskDTO::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// -------------------------------------------------------------------

// BarInfoDTO

// repeated .slg.protocol.BarTaskDTO taskList = 1;
inline int BarInfoDTO::tasklist_size() const {
  return tasklist_.size();
}
inline void BarInfoDTO::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::slg::protocol::BarTaskDTO& BarInfoDTO::tasklist(int index) const {
  return tasklist_.Get(index);
}
inline ::slg::protocol::BarTaskDTO* BarInfoDTO::mutable_tasklist(int index) {
  return tasklist_.Mutable(index);
}
inline ::slg::protocol::BarTaskDTO* BarInfoDTO::add_tasklist() {
  return tasklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BarTaskDTO >&
BarInfoDTO::tasklist() const {
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BarTaskDTO >*
BarInfoDTO::mutable_tasklist() {
  return &tasklist_;
}

// required int32 reftime = 2;
inline bool BarInfoDTO::has_reftime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BarInfoDTO::set_has_reftime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BarInfoDTO::clear_has_reftime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BarInfoDTO::clear_reftime() {
  reftime_ = 0;
  clear_has_reftime();
}
inline ::google::protobuf::int32 BarInfoDTO::reftime() const {
  return reftime_;
}
inline void BarInfoDTO::set_reftime(::google::protobuf::int32 value) {
  set_has_reftime();
  reftime_ = value;
}

// -------------------------------------------------------------------

// ReceiveTaskRequest

// required int32 type = 1;
inline bool ReceiveTaskRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveTaskRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveTaskRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveTaskRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReceiveTaskRequest::type() const {
  return type_;
}
inline void ReceiveTaskRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 id = 2;
inline bool ReceiveTaskRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceiveTaskRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceiveTaskRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceiveTaskRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReceiveTaskRequest::id() const {
  return id_;
}
inline void ReceiveTaskRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ReceiveTaskResponse

// required int32 type = 1;
inline bool ReceiveTaskResponse::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveTaskResponse::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveTaskResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveTaskResponse::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReceiveTaskResponse::type() const {
  return type_;
}
inline void ReceiveTaskResponse::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 id = 2;
inline bool ReceiveTaskResponse::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceiveTaskResponse::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceiveTaskResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceiveTaskResponse::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReceiveTaskResponse::id() const {
  return id_;
}
inline void ReceiveTaskResponse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .slg.protocol.PropertyDTO reward = 3;
inline int ReceiveTaskResponse::reward_size() const {
  return reward_.size();
}
inline void ReceiveTaskResponse::clear_reward() {
  reward_.Clear();
}
inline const ::slg::protocol::PropertyDTO& ReceiveTaskResponse::reward(int index) const {
  return reward_.Get(index);
}
inline ::slg::protocol::PropertyDTO* ReceiveTaskResponse::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::slg::protocol::PropertyDTO* ReceiveTaskResponse::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::PropertyDTO >&
ReceiveTaskResponse::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::PropertyDTO >*
ReceiveTaskResponse::mutable_reward() {
  return &reward_;
}

// repeated .slg.protocol.ItemDTO items = 4;
inline int ReceiveTaskResponse::items_size() const {
  return items_.size();
}
inline void ReceiveTaskResponse::clear_items() {
  items_.Clear();
}
inline const ::slg::protocol::ItemDTO& ReceiveTaskResponse::items(int index) const {
  return items_.Get(index);
}
inline ::slg::protocol::ItemDTO* ReceiveTaskResponse::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::slg::protocol::ItemDTO* ReceiveTaskResponse::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
ReceiveTaskResponse::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
ReceiveTaskResponse::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// SignRewardRequest

// -------------------------------------------------------------------

// SignRewardResponse

// repeated .slg.protocol.ItemDTO reward = 1;
inline int SignRewardResponse::reward_size() const {
  return reward_.size();
}
inline void SignRewardResponse::clear_reward() {
  reward_.Clear();
}
inline const ::slg::protocol::ItemDTO& SignRewardResponse::reward(int index) const {
  return reward_.Get(index);
}
inline ::slg::protocol::ItemDTO* SignRewardResponse::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::slg::protocol::ItemDTO* SignRewardResponse::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
SignRewardResponse::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
SignRewardResponse::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// OnlineRewardRequest

// -------------------------------------------------------------------

// OnlineRewardResponse

// repeated .slg.protocol.ItemDTO reward = 1;
inline int OnlineRewardResponse::reward_size() const {
  return reward_.size();
}
inline void OnlineRewardResponse::clear_reward() {
  reward_.Clear();
}
inline const ::slg::protocol::ItemDTO& OnlineRewardResponse::reward(int index) const {
  return reward_.Get(index);
}
inline ::slg::protocol::ItemDTO* OnlineRewardResponse::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::slg::protocol::ItemDTO* OnlineRewardResponse::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
OnlineRewardResponse::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
OnlineRewardResponse::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// ReceiveBarTaskRequest

// required .slg.protocol.BarTaskDTO task = 1;
inline bool ReceiveBarTaskRequest::has_task() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveBarTaskRequest::set_has_task() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveBarTaskRequest::clear_has_task() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveBarTaskRequest::clear_task() {
  if (task_ != NULL) task_->::slg::protocol::BarTaskDTO::Clear();
  clear_has_task();
}
inline const ::slg::protocol::BarTaskDTO& ReceiveBarTaskRequest::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::slg::protocol::BarTaskDTO* ReceiveBarTaskRequest::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::slg::protocol::BarTaskDTO;
  return task_;
}
inline ::slg::protocol::BarTaskDTO* ReceiveBarTaskRequest::release_task() {
  clear_has_task();
  ::slg::protocol::BarTaskDTO* temp = task_;
  task_ = NULL;
  return temp;
}
inline void ReceiveBarTaskRequest::set_allocated_task(::slg::protocol::BarTaskDTO* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
}

// -------------------------------------------------------------------

// ReceiveBarTaskResponse

// required .slg.protocol.BarTaskDTO oldTask = 1;
inline bool ReceiveBarTaskResponse::has_oldtask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveBarTaskResponse::set_has_oldtask() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveBarTaskResponse::clear_has_oldtask() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveBarTaskResponse::clear_oldtask() {
  if (oldtask_ != NULL) oldtask_->::slg::protocol::BarTaskDTO::Clear();
  clear_has_oldtask();
}
inline const ::slg::protocol::BarTaskDTO& ReceiveBarTaskResponse::oldtask() const {
  return oldtask_ != NULL ? *oldtask_ : *default_instance_->oldtask_;
}
inline ::slg::protocol::BarTaskDTO* ReceiveBarTaskResponse::mutable_oldtask() {
  set_has_oldtask();
  if (oldtask_ == NULL) oldtask_ = new ::slg::protocol::BarTaskDTO;
  return oldtask_;
}
inline ::slg::protocol::BarTaskDTO* ReceiveBarTaskResponse::release_oldtask() {
  clear_has_oldtask();
  ::slg::protocol::BarTaskDTO* temp = oldtask_;
  oldtask_ = NULL;
  return temp;
}
inline void ReceiveBarTaskResponse::set_allocated_oldtask(::slg::protocol::BarTaskDTO* oldtask) {
  delete oldtask_;
  oldtask_ = oldtask;
  if (oldtask) {
    set_has_oldtask();
  } else {
    clear_has_oldtask();
  }
}

// required .slg.protocol.BarTaskDTO newTask = 2;
inline bool ReceiveBarTaskResponse::has_newtask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceiveBarTaskResponse::set_has_newtask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceiveBarTaskResponse::clear_has_newtask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceiveBarTaskResponse::clear_newtask() {
  if (newtask_ != NULL) newtask_->::slg::protocol::BarTaskDTO::Clear();
  clear_has_newtask();
}
inline const ::slg::protocol::BarTaskDTO& ReceiveBarTaskResponse::newtask() const {
  return newtask_ != NULL ? *newtask_ : *default_instance_->newtask_;
}
inline ::slg::protocol::BarTaskDTO* ReceiveBarTaskResponse::mutable_newtask() {
  set_has_newtask();
  if (newtask_ == NULL) newtask_ = new ::slg::protocol::BarTaskDTO;
  return newtask_;
}
inline ::slg::protocol::BarTaskDTO* ReceiveBarTaskResponse::release_newtask() {
  clear_has_newtask();
  ::slg::protocol::BarTaskDTO* temp = newtask_;
  newtask_ = NULL;
  return temp;
}
inline void ReceiveBarTaskResponse::set_allocated_newtask(::slg::protocol::BarTaskDTO* newtask) {
  delete newtask_;
  newtask_ = newtask;
  if (newtask) {
    set_has_newtask();
  } else {
    clear_has_newtask();
  }
}

// -------------------------------------------------------------------

// ReceiveaAgeRequest

// required int32 level = 1;
inline bool ReceiveaAgeRequest::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveaAgeRequest::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveaAgeRequest::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveaAgeRequest::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ReceiveaAgeRequest::level() const {
  return level_;
}
inline void ReceiveaAgeRequest::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// ReceiveAgeResponse

// required int32 level = 1;
inline bool ReceiveAgeResponse::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveAgeResponse::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveAgeResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveAgeResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 ReceiveAgeResponse::level() const {
  return level_;
}
inline void ReceiveAgeResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required .slg.protocol.PropertyDTO reward = 2;
inline bool ReceiveAgeResponse::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReceiveAgeResponse::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReceiveAgeResponse::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReceiveAgeResponse::clear_reward() {
  if (reward_ != NULL) reward_->::slg::protocol::PropertyDTO::Clear();
  clear_has_reward();
}
inline const ::slg::protocol::PropertyDTO& ReceiveAgeResponse::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::slg::protocol::PropertyDTO* ReceiveAgeResponse::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::slg::protocol::PropertyDTO;
  return reward_;
}
inline ::slg::protocol::PropertyDTO* ReceiveAgeResponse::release_reward() {
  clear_has_reward();
  ::slg::protocol::PropertyDTO* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ReceiveAgeResponse::set_allocated_reward(::slg::protocol::PropertyDTO* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// -------------------------------------------------------------------

// DailyPush

// repeated .slg.protocol.TaskDTO taskList = 1;
inline int DailyPush::tasklist_size() const {
  return tasklist_.size();
}
inline void DailyPush::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::slg::protocol::TaskDTO& DailyPush::tasklist(int index) const {
  return tasklist_.Get(index);
}
inline ::slg::protocol::TaskDTO* DailyPush::mutable_tasklist(int index) {
  return tasklist_.Mutable(index);
}
inline ::slg::protocol::TaskDTO* DailyPush::add_tasklist() {
  return tasklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >&
DailyPush::tasklist() const {
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >*
DailyPush::mutable_tasklist() {
  return &tasklist_;
}

// required int32 score = 2;
inline bool DailyPush::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyPush::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyPush::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyPush::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 DailyPush::score() const {
  return score_;
}
inline void DailyPush::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// AchievementPush

// repeated .slg.protocol.TaskDTO taskList = 1;
inline int AchievementPush::tasklist_size() const {
  return tasklist_.size();
}
inline void AchievementPush::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::slg::protocol::TaskDTO& AchievementPush::tasklist(int index) const {
  return tasklist_.Get(index);
}
inline ::slg::protocol::TaskDTO* AchievementPush::mutable_tasklist(int index) {
  return tasklist_.Mutable(index);
}
inline ::slg::protocol::TaskDTO* AchievementPush::add_tasklist() {
  return tasklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >&
AchievementPush::tasklist() const {
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::TaskDTO >*
AchievementPush::mutable_tasklist() {
  return &tasklist_;
}

// -------------------------------------------------------------------

// MainPush

// required .slg.protocol.TaskDTO task = 1;
inline bool MainPush::has_task() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MainPush::set_has_task() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MainPush::clear_has_task() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MainPush::clear_task() {
  if (task_ != NULL) task_->::slg::protocol::TaskDTO::Clear();
  clear_has_task();
}
inline const ::slg::protocol::TaskDTO& MainPush::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::slg::protocol::TaskDTO* MainPush::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::slg::protocol::TaskDTO;
  return task_;
}
inline ::slg::protocol::TaskDTO* MainPush::release_task() {
  clear_has_task();
  ::slg::protocol::TaskDTO* temp = task_;
  task_ = NULL;
  return temp;
}
inline void MainPush::set_allocated_task(::slg::protocol::TaskDTO* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
}

// -------------------------------------------------------------------

// ScorePush

// repeated .slg.protocol.ScoreDTO scoreList = 1;
inline int ScorePush::scorelist_size() const {
  return scorelist_.size();
}
inline void ScorePush::clear_scorelist() {
  scorelist_.Clear();
}
inline const ::slg::protocol::ScoreDTO& ScorePush::scorelist(int index) const {
  return scorelist_.Get(index);
}
inline ::slg::protocol::ScoreDTO* ScorePush::mutable_scorelist(int index) {
  return scorelist_.Mutable(index);
}
inline ::slg::protocol::ScoreDTO* ScorePush::add_scorelist() {
  return scorelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ScoreDTO >&
ScorePush::scorelist() const {
  return scorelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ScoreDTO >*
ScorePush::mutable_scorelist() {
  return &scorelist_;
}

// -------------------------------------------------------------------

// SignInfoPush

// required bool signed = 1;
inline bool SignInfoPush::has_signed_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignInfoPush::set_has_signed_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignInfoPush::clear_has_signed_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignInfoPush::clear_signed_() {
  signed__ = false;
  clear_has_signed_();
}
inline bool SignInfoPush::signed_() const {
  return signed__;
}
inline void SignInfoPush::set_signed_(bool value) {
  set_has_signed_();
  signed__ = value;
}

// required int32 count = 2;
inline bool SignInfoPush::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignInfoPush::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignInfoPush::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignInfoPush::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 SignInfoPush::count() const {
  return count_;
}
inline void SignInfoPush::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .slg.protocol.ItemDTO reward = 3;
inline int SignInfoPush::reward_size() const {
  return reward_.size();
}
inline void SignInfoPush::clear_reward() {
  reward_.Clear();
}
inline const ::slg::protocol::ItemDTO& SignInfoPush::reward(int index) const {
  return reward_.Get(index);
}
inline ::slg::protocol::ItemDTO* SignInfoPush::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::slg::protocol::ItemDTO* SignInfoPush::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
SignInfoPush::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
SignInfoPush::mutable_reward() {
  return &reward_;
}

// -------------------------------------------------------------------

// OnlineInfoPush

// required int32 lastRecvTime = 1;
inline bool OnlineInfoPush::has_lastrecvtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineInfoPush::set_has_lastrecvtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineInfoPush::clear_has_lastrecvtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineInfoPush::clear_lastrecvtime() {
  lastrecvtime_ = 0;
  clear_has_lastrecvtime();
}
inline ::google::protobuf::int32 OnlineInfoPush::lastrecvtime() const {
  return lastrecvtime_;
}
inline void OnlineInfoPush::set_lastrecvtime(::google::protobuf::int32 value) {
  set_has_lastrecvtime();
  lastrecvtime_ = value;
}

// required int32 nextRecvTime = 2;
inline bool OnlineInfoPush::has_nextrecvtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlineInfoPush::set_has_nextrecvtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlineInfoPush::clear_has_nextrecvtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlineInfoPush::clear_nextrecvtime() {
  nextrecvtime_ = 0;
  clear_has_nextrecvtime();
}
inline ::google::protobuf::int32 OnlineInfoPush::nextrecvtime() const {
  return nextrecvtime_;
}
inline void OnlineInfoPush::set_nextrecvtime(::google::protobuf::int32 value) {
  set_has_nextrecvtime();
  nextrecvtime_ = value;
}

// -------------------------------------------------------------------

// MissionBarPush

// required .slg.protocol.BarInfoDTO barInfo = 1;
inline bool MissionBarPush::has_barinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MissionBarPush::set_has_barinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MissionBarPush::clear_has_barinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MissionBarPush::clear_barinfo() {
  if (barinfo_ != NULL) barinfo_->::slg::protocol::BarInfoDTO::Clear();
  clear_has_barinfo();
}
inline const ::slg::protocol::BarInfoDTO& MissionBarPush::barinfo() const {
  return barinfo_ != NULL ? *barinfo_ : *default_instance_->barinfo_;
}
inline ::slg::protocol::BarInfoDTO* MissionBarPush::mutable_barinfo() {
  set_has_barinfo();
  if (barinfo_ == NULL) barinfo_ = new ::slg::protocol::BarInfoDTO;
  return barinfo_;
}
inline ::slg::protocol::BarInfoDTO* MissionBarPush::release_barinfo() {
  clear_has_barinfo();
  ::slg::protocol::BarInfoDTO* temp = barinfo_;
  barinfo_ = NULL;
  return temp;
}
inline void MissionBarPush::set_allocated_barinfo(::slg::protocol::BarInfoDTO* barinfo) {
  delete barinfo_;
  barinfo_ = barinfo;
  if (barinfo) {
    set_has_barinfo();
  } else {
    clear_has_barinfo();
  }
}

// -------------------------------------------------------------------

// AgeRewardPush

// repeated int32 receiveLevel = 1;
inline int AgeRewardPush::receivelevel_size() const {
  return receivelevel_.size();
}
inline void AgeRewardPush::clear_receivelevel() {
  receivelevel_.Clear();
}
inline ::google::protobuf::int32 AgeRewardPush::receivelevel(int index) const {
  return receivelevel_.Get(index);
}
inline void AgeRewardPush::set_receivelevel(int index, ::google::protobuf::int32 value) {
  receivelevel_.Set(index, value);
}
inline void AgeRewardPush::add_receivelevel(::google::protobuf::int32 value) {
  receivelevel_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AgeRewardPush::receivelevel() const {
  return receivelevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AgeRewardPush::mutable_receivelevel() {
  return &receivelevel_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::TaskCommandId>() {
  return ::slg::protocol::TaskCommandId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::TaskPushId>() {
  return ::slg::protocol::TaskPushId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_task_2eproto__INCLUDED
