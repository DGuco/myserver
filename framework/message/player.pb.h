// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#ifndef PROTOBUF_player_2eproto__INCLUDED
#define PROTOBUF_player_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_player_2eproto();
void protobuf_AssignDesc_player_2eproto();
void protobuf_ShutdownFile_player_2eproto();

class PlayerDTO;
class GuideDTO;
class UserAccountLoginRequest;
class UserAccountLoginResponse;
class PlayerLoginRequest;
class PlayerLoginResponse;
class PlayerReconnectRequest;
class PlayerReconnectResponse;
class PlayerReloadRequest;
class PlayerReloadResponse;
class PlayerHeartBeatRequest;
class PlayerHeartBeatResponse;
class SetTalentRequest;
class SetTalentResponse;
class SetImageRequest;
class SetImageResponse;
class QueryLordInfoRequest;
class QueryLordInfoResponse;
class SetIconRequest;
class SetIconResponse;
class ChangeNameRequest;
class ChangeNameResponse;
class SetGuideRequest;
class PlayerDataPush;
class PlayerPropertyChangePush;
class PlayerLevelUpPush;
class PlayerProtectPush;
class PlayerCount;
class PlayerCountPush;
class PlayeBattlePush;
class TalentPush;
class VipInfoPush;
class VipActiveInfoPush;
class SysTimePush;
class GuidePush;

enum PlayerCommandId {
  USER_ACCOUNT_LOGIN = 100,
  PLAYER_LOGIN = 101,
  PLAYER_RECONNECT = 102,
  PLAYRE_HEARTBEAT = 103,
  PLAYRE_RELOAD = 104,
  PLAYER_TALENT_SET = 105,
  PLAYER_IMAGE_SET = 106,
  PLAYER_QUERY_PLAYER = 107,
  PLAYER_ICON_SET = 108,
  PLAYER_CHANGE_NAME = 109,
  PLAYER_SET_GUIDE = 110,
  PLAYER_JUMP_GUIDE = 111
};
bool PlayerCommandId_IsValid(int value);
const PlayerCommandId PlayerCommandId_MIN = USER_ACCOUNT_LOGIN;
const PlayerCommandId PlayerCommandId_MAX = PLAYER_JUMP_GUIDE;
const int PlayerCommandId_ARRAYSIZE = PlayerCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCommandId_descriptor();
inline const ::std::string& PlayerCommandId_Name(PlayerCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCommandId_descriptor(), value);
}
inline bool PlayerCommandId_Parse(
    const ::std::string& name, PlayerCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCommandId>(
    PlayerCommandId_descriptor(), name, value);
}
enum ReconnectState {
  CONTINUE = 1,
  RELOAD = 2,
  RELOGIN = 3
};
bool ReconnectState_IsValid(int value);
const ReconnectState ReconnectState_MIN = CONTINUE;
const ReconnectState ReconnectState_MAX = RELOGIN;
const int ReconnectState_ARRAYSIZE = ReconnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReconnectState_descriptor();
inline const ::std::string& ReconnectState_Name(ReconnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReconnectState_descriptor(), value);
}
inline bool ReconnectState_Parse(
    const ::std::string& name, ReconnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReconnectState>(
    ReconnectState_descriptor(), name, value);
}
enum PlayerPushId {
  PLAYRE_DATA_PUSH = 50101,
  PROPERTY_CHANGE_PUSH = 50102,
  PLAYER_LEVEL_UP_PUSH = 50103,
  PLAYER_PROTECT_PUSH = 50104,
  PLAYER_RELOGIN = 50110,
  PLAYER_COUNT_PUSH = 50120,
  PLAYER_BATTLE_PUSH = 50121,
  PLAYER_TALENT_PUSH = 50122,
  PLAYER_VIP_PUSH = 50123,
  PLAYER_VIP_ACTIVE_PUSH = 50124,
  PLAYER_SYS_TIME_PUSH = 50125,
  PLAYER_ONLINE_OTHER_DAY = 50126,
  PLAYER_GUIDE_PUSH = 50127
};
bool PlayerPushId_IsValid(int value);
const PlayerPushId PlayerPushId_MIN = PLAYRE_DATA_PUSH;
const PlayerPushId PlayerPushId_MAX = PLAYER_GUIDE_PUSH;
const int PlayerPushId_ARRAYSIZE = PlayerPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerPushId_descriptor();
inline const ::std::string& PlayerPushId_Name(PlayerPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerPushId_descriptor(), value);
}
inline bool PlayerPushId_Parse(
    const ::std::string& name, PlayerPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerPushId>(
    PlayerPushId_descriptor(), name, value);
}
// ===================================================================

class PlayerDTO : public ::google::protobuf::Message {
 public:
  PlayerDTO();
  virtual ~PlayerDTO();

  PlayerDTO(const PlayerDTO& from);

  inline PlayerDTO& operator=(const PlayerDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDTO& default_instance();

  void Swap(PlayerDTO* other);

  // implements Message ----------------------------------------------

  PlayerDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerDTO& from);
  void MergeFrom(const PlayerDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // repeated .PropertyDTO properties = 4;
  inline int properties_size() const;
  inline void clear_properties();
  static const int kPropertiesFieldNumber = 4;
  inline const ::PropertyDTO& properties(int index) const;
  inline ::PropertyDTO* mutable_properties(int index);
  inline ::PropertyDTO* add_properties();
  inline const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
      properties() const;
  inline ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
      mutable_properties();

  // optional string language = 5;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 5;
  inline const ::std::string& language() const;
  inline void set_language(const ::std::string& value);
  inline void set_language(const char* value);
  inline void set_language(const char* value, size_t size);
  inline ::std::string* mutable_language();
  inline ::std::string* release_language();
  inline void set_allocated_language(::std::string* language);

  // required .PositionDTO mapGridPosition = 6;
  inline bool has_mapgridposition() const;
  inline void clear_mapgridposition();
  static const int kMapGridPositionFieldNumber = 6;
  inline const ::PositionDTO& mapgridposition() const;
  inline ::PositionDTO* mutable_mapgridposition();
  inline ::PositionDTO* release_mapgridposition();
  inline void set_allocated_mapgridposition(::PositionDTO* mapgridposition);

  // required bool hasChangedName = 7;
  inline bool has_haschangedname() const;
  inline void clear_haschangedname();
  static const int kHasChangedNameFieldNumber = 7;
  inline bool haschangedname() const;
  inline void set_haschangedname(bool value);

  // required string icon = 8;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 8;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // @@protoc_insertion_point(class_scope:PlayerDTO)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_mapgridposition();
  inline void clear_has_mapgridposition();
  inline void set_has_haschangedname();
  inline void clear_has_haschangedname();
  inline void set_has_icon();
  inline void clear_has_icon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::PropertyDTO > properties_;
  ::std::string* language_;
  ::google::protobuf::int32 level_;
  bool haschangedname_;
  ::PositionDTO* mapgridposition_;
  ::std::string* icon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerDTO* default_instance_;
};
// -------------------------------------------------------------------

class GuideDTO : public ::google::protobuf::Message {
 public:
  GuideDTO();
  virtual ~GuideDTO();

  GuideDTO(const GuideDTO& from);

  inline GuideDTO& operator=(const GuideDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideDTO& default_instance();

  void Swap(GuideDTO* other);

  // implements Message ----------------------------------------------

  GuideDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuideDTO& from);
  void MergeFrom(const GuideDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bool jump = 3;
  inline bool has_jump() const;
  inline void clear_jump();
  static const int kJumpFieldNumber = 3;
  inline bool jump() const;
  inline void set_jump(bool value);

  // @@protoc_insertion_point(class_scope:GuideDTO)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_jump();
  inline void clear_has_jump();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  bool jump_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static GuideDTO* default_instance_;
};
// -------------------------------------------------------------------

class UserAccountLoginRequest : public ::google::protobuf::Message {
 public:
  UserAccountLoginRequest();
  virtual ~UserAccountLoginRequest();

  UserAccountLoginRequest(const UserAccountLoginRequest& from);

  inline UserAccountLoginRequest& operator=(const UserAccountLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAccountLoginRequest& default_instance();

  void Swap(UserAccountLoginRequest* other);

  // implements Message ----------------------------------------------

  UserAccountLoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAccountLoginRequest& from);
  void MergeFrom(const UserAccountLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platform = 1;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 1;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // required string puid = 2;
  inline bool has_puid() const;
  inline void clear_puid();
  static const int kPuidFieldNumber = 2;
  inline const ::std::string& puid() const;
  inline void set_puid(const ::std::string& value);
  inline void set_puid(const char* value);
  inline void set_puid(const char* value, size_t size);
  inline ::std::string* mutable_puid();
  inline ::std::string* release_puid();
  inline void set_allocated_puid(::std::string* puid);

  // @@protoc_insertion_point(class_scope:UserAccountLoginRequest)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_puid();
  inline void clear_has_puid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* platform_;
  ::std::string* puid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static UserAccountLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserAccountLoginResponse : public ::google::protobuf::Message {
 public:
  UserAccountLoginResponse();
  virtual ~UserAccountLoginResponse();

  UserAccountLoginResponse(const UserAccountLoginResponse& from);

  inline UserAccountLoginResponse& operator=(const UserAccountLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAccountLoginResponse& default_instance();

  void Swap(UserAccountLoginResponse* other);

  // implements Message ----------------------------------------------

  UserAccountLoginResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAccountLoginResponse& from);
  void MergeFrom(const UserAccountLoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:UserAccountLoginResponse)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static UserAccountLoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLoginRequest : public ::google::protobuf::Message {
 public:
  PlayerLoginRequest();
  virtual ~PlayerLoginRequest();

  PlayerLoginRequest(const PlayerLoginRequest& from);

  inline PlayerLoginRequest& operator=(const PlayerLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginRequest& default_instance();

  void Swap(PlayerLoginRequest* other);

  // implements Message ----------------------------------------------

  PlayerLoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLoginRequest& from);
  void MergeFrom(const PlayerLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PlayerLoginRequest)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLoginResponse : public ::google::protobuf::Message {
 public:
  PlayerLoginResponse();
  virtual ~PlayerLoginResponse();

  PlayerLoginResponse(const PlayerLoginResponse& from);

  inline PlayerLoginResponse& operator=(const PlayerLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginResponse& default_instance();

  void Swap(PlayerLoginResponse* other);

  // implements Message ----------------------------------------------

  PlayerLoginResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLoginResponse& from);
  void MergeFrom(const PlayerLoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sessionId = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint64 value);

  // required int64 systime = 2;
  inline bool has_systime() const;
  inline void clear_systime();
  static const int kSystimeFieldNumber = 2;
  inline ::google::protobuf::int64 systime() const;
  inline void set_systime(::google::protobuf::int64 value);

  // required int32 timeZoneOffset = 3;
  inline bool has_timezoneoffset() const;
  inline void clear_timezoneoffset();
  static const int kTimeZoneOffsetFieldNumber = 3;
  inline ::google::protobuf::int32 timezoneoffset() const;
  inline void set_timezoneoffset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerLoginResponse)
 private:
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_systime();
  inline void clear_has_systime();
  inline void set_has_timezoneoffset();
  inline void clear_has_timezoneoffset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::int64 systime_;
  ::google::protobuf::int32 timezoneoffset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerLoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlayerReconnectRequest : public ::google::protobuf::Message {
 public:
  PlayerReconnectRequest();
  virtual ~PlayerReconnectRequest();

  PlayerReconnectRequest(const PlayerReconnectRequest& from);

  inline PlayerReconnectRequest& operator=(const PlayerReconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReconnectRequest& default_instance();

  void Swap(PlayerReconnectRequest* other);

  // implements Message ----------------------------------------------

  PlayerReconnectRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerReconnectRequest& from);
  void MergeFrom(const PlayerReconnectRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sessionId = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint64 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint64 value);

  // required int32 lastPushId = 2;
  inline bool has_lastpushid() const;
  inline void clear_lastpushid();
  static const int kLastPushIdFieldNumber = 2;
  inline ::google::protobuf::int32 lastpushid() const;
  inline void set_lastpushid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerReconnectRequest)
 private:
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_lastpushid();
  inline void clear_has_lastpushid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::int32 lastpushid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerReconnectRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerReconnectResponse : public ::google::protobuf::Message {
 public:
  PlayerReconnectResponse();
  virtual ~PlayerReconnectResponse();

  PlayerReconnectResponse(const PlayerReconnectResponse& from);

  inline PlayerReconnectResponse& operator=(const PlayerReconnectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReconnectResponse& default_instance();

  void Swap(PlayerReconnectResponse* other);

  // implements Message ----------------------------------------------

  PlayerReconnectResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerReconnectResponse& from);
  void MergeFrom(const PlayerReconnectResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReconnectState state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::ReconnectState state() const;
  inline void set_state(::ReconnectState value);

  // @@protoc_insertion_point(class_scope:PlayerReconnectResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerReconnectResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlayerReloadRequest : public ::google::protobuf::Message {
 public:
  PlayerReloadRequest();
  virtual ~PlayerReloadRequest();

  PlayerReloadRequest(const PlayerReloadRequest& from);

  inline PlayerReloadRequest& operator=(const PlayerReloadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReloadRequest& default_instance();

  void Swap(PlayerReloadRequest* other);

  // implements Message ----------------------------------------------

  PlayerReloadRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerReloadRequest& from);
  void MergeFrom(const PlayerReloadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PlayerReloadRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerReloadRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerReloadResponse : public ::google::protobuf::Message {
 public:
  PlayerReloadResponse();
  virtual ~PlayerReloadResponse();

  PlayerReloadResponse(const PlayerReloadResponse& from);

  inline PlayerReloadResponse& operator=(const PlayerReloadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReloadResponse& default_instance();

  void Swap(PlayerReloadResponse* other);

  // implements Message ----------------------------------------------

  PlayerReloadResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerReloadResponse& from);
  void MergeFrom(const PlayerReloadResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 systime = 1;
  inline bool has_systime() const;
  inline void clear_systime();
  static const int kSystimeFieldNumber = 1;
  inline ::google::protobuf::int64 systime() const;
  inline void set_systime(::google::protobuf::int64 value);

  // required int32 timeZoneOffset = 2;
  inline bool has_timezoneoffset() const;
  inline void clear_timezoneoffset();
  static const int kTimeZoneOffsetFieldNumber = 2;
  inline ::google::protobuf::int32 timezoneoffset() const;
  inline void set_timezoneoffset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerReloadResponse)
 private:
  inline void set_has_systime();
  inline void clear_has_systime();
  inline void set_has_timezoneoffset();
  inline void clear_has_timezoneoffset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 systime_;
  ::google::protobuf::int32 timezoneoffset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerReloadResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlayerHeartBeatRequest : public ::google::protobuf::Message {
 public:
  PlayerHeartBeatRequest();
  virtual ~PlayerHeartBeatRequest();

  PlayerHeartBeatRequest(const PlayerHeartBeatRequest& from);

  inline PlayerHeartBeatRequest& operator=(const PlayerHeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHeartBeatRequest& default_instance();

  void Swap(PlayerHeartBeatRequest* other);

  // implements Message ----------------------------------------------

  PlayerHeartBeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerHeartBeatRequest& from);
  void MergeFrom(const PlayerHeartBeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PlayerHeartBeatRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerHeartBeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerHeartBeatResponse : public ::google::protobuf::Message {
 public:
  PlayerHeartBeatResponse();
  virtual ~PlayerHeartBeatResponse();

  PlayerHeartBeatResponse(const PlayerHeartBeatResponse& from);

  inline PlayerHeartBeatResponse& operator=(const PlayerHeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHeartBeatResponse& default_instance();

  void Swap(PlayerHeartBeatResponse* other);

  // implements Message ----------------------------------------------

  PlayerHeartBeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerHeartBeatResponse& from);
  void MergeFrom(const PlayerHeartBeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 systime = 1;
  inline bool has_systime() const;
  inline void clear_systime();
  static const int kSystimeFieldNumber = 1;
  inline ::google::protobuf::int64 systime() const;
  inline void set_systime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PlayerHeartBeatResponse)
 private:
  inline void set_has_systime();
  inline void clear_has_systime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 systime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerHeartBeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetTalentRequest : public ::google::protobuf::Message {
 public:
  SetTalentRequest();
  virtual ~SetTalentRequest();

  SetTalentRequest(const SetTalentRequest& from);

  inline SetTalentRequest& operator=(const SetTalentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTalentRequest& default_instance();

  void Swap(SetTalentRequest* other);

  // implements Message ----------------------------------------------

  SetTalentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTalentRequest& from);
  void MergeFrom(const SetTalentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 talentId = 2;
  inline bool has_talentid() const;
  inline void clear_talentid();
  static const int kTalentIdFieldNumber = 2;
  inline ::google::protobuf::int32 talentid() const;
  inline void set_talentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetTalentRequest)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_talentid();
  inline void clear_has_talentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 talentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SetTalentRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetTalentResponse : public ::google::protobuf::Message {
 public:
  SetTalentResponse();
  virtual ~SetTalentResponse();

  SetTalentResponse(const SetTalentResponse& from);

  inline SetTalentResponse& operator=(const SetTalentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTalentResponse& default_instance();

  void Swap(SetTalentResponse* other);

  // implements Message ----------------------------------------------

  SetTalentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTalentResponse& from);
  void MergeFrom(const SetTalentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 talentId = 2;
  inline bool has_talentid() const;
  inline void clear_talentid();
  static const int kTalentIdFieldNumber = 2;
  inline ::google::protobuf::int32 talentid() const;
  inline void set_talentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetTalentResponse)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_talentid();
  inline void clear_has_talentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 talentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SetTalentResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetImageRequest : public ::google::protobuf::Message {
 public:
  SetImageRequest();
  virtual ~SetImageRequest();

  SetImageRequest(const SetImageRequest& from);

  inline SetImageRequest& operator=(const SetImageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetImageRequest& default_instance();

  void Swap(SetImageRequest* other);

  // implements Message ----------------------------------------------

  SetImageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetImageRequest& from);
  void MergeFrom(const SetImageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 image = 1;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 1;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetImageRequest)
 private:
  inline void set_has_image();
  inline void clear_has_image();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 image_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SetImageRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetImageResponse : public ::google::protobuf::Message {
 public:
  SetImageResponse();
  virtual ~SetImageResponse();

  SetImageResponse(const SetImageResponse& from);

  inline SetImageResponse& operator=(const SetImageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetImageResponse& default_instance();

  void Swap(SetImageResponse* other);

  // implements Message ----------------------------------------------

  SetImageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetImageResponse& from);
  void MergeFrom(const SetImageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 image = 2;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 2;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetImageResponse)
 private:
  inline void set_has_image();
  inline void clear_has_image();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 image_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SetImageResponse* default_instance_;
};
// -------------------------------------------------------------------

class QueryLordInfoRequest : public ::google::protobuf::Message {
 public:
  QueryLordInfoRequest();
  virtual ~QueryLordInfoRequest();

  QueryLordInfoRequest(const QueryLordInfoRequest& from);

  inline QueryLordInfoRequest& operator=(const QueryLordInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryLordInfoRequest& default_instance();

  void Swap(QueryLordInfoRequest* other);

  // implements Message ----------------------------------------------

  QueryLordInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryLordInfoRequest& from);
  void MergeFrom(const QueryLordInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:QueryLordInfoRequest)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 playerid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static QueryLordInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class QueryLordInfoResponse : public ::google::protobuf::Message {
 public:
  QueryLordInfoResponse();
  virtual ~QueryLordInfoResponse();

  QueryLordInfoResponse(const QueryLordInfoResponse& from);

  inline QueryLordInfoResponse& operator=(const QueryLordInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryLordInfoResponse& default_instance();

  void Swap(QueryLordInfoResponse* other);

  // implements Message ----------------------------------------------

  QueryLordInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryLordInfoResponse& from);
  void MergeFrom(const QueryLordInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 allianceid = 3;
  inline bool has_allianceid() const;
  inline void clear_allianceid();
  static const int kAllianceidFieldNumber = 3;
  inline ::google::protobuf::int32 allianceid() const;
  inline void set_allianceid(::google::protobuf::int32 value);

  // optional string alliancename = 4;
  inline bool has_alliancename() const;
  inline void clear_alliancename();
  static const int kAlliancenameFieldNumber = 4;
  inline const ::std::string& alliancename() const;
  inline void set_alliancename(const ::std::string& value);
  inline void set_alliancename(const char* value);
  inline void set_alliancename(const char* value, size_t size);
  inline ::std::string* mutable_alliancename();
  inline ::std::string* release_alliancename();
  inline void set_allocated_alliancename(::std::string* alliancename);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional bool isfriend = 7;
  inline bool has_isfriend() const;
  inline void clear_isfriend();
  static const int kIsfriendFieldNumber = 7;
  inline bool isfriend() const;
  inline void set_isfriend(bool value);

  // optional int32 image = 8;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 8;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // repeated .EquipmentDTO equipmentlist = 9;
  inline int equipmentlist_size() const;
  inline void clear_equipmentlist();
  static const int kEquipmentlistFieldNumber = 9;
  inline const ::EquipmentDTO& equipmentlist(int index) const;
  inline ::EquipmentDTO* mutable_equipmentlist(int index);
  inline ::EquipmentDTO* add_equipmentlist();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >&
      equipmentlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >*
      mutable_equipmentlist();

  // @@protoc_insertion_point(class_scope:QueryLordInfoResponse)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_allianceid();
  inline void clear_has_allianceid();
  inline void set_has_alliancename();
  inline void clear_has_alliancename();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_isfriend();
  inline void clear_has_isfriend();
  inline void set_has_image();
  inline void clear_has_image();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 playerid_;
  ::std::string* nickname_;
  ::std::string* alliancename_;
  ::google::protobuf::int32 allianceid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 level_;
  bool isfriend_;
  ::google::protobuf::RepeatedPtrField< ::EquipmentDTO > equipmentlist_;
  ::google::protobuf::int32 image_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static QueryLordInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetIconRequest : public ::google::protobuf::Message {
 public:
  SetIconRequest();
  virtual ~SetIconRequest();

  SetIconRequest(const SetIconRequest& from);

  inline SetIconRequest& operator=(const SetIconRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetIconRequest& default_instance();

  void Swap(SetIconRequest* other);

  // implements Message ----------------------------------------------

  SetIconRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetIconRequest& from);
  void MergeFrom(const SetIconRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string iconID = 1;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconIDFieldNumber = 1;
  inline const ::std::string& iconid() const;
  inline void set_iconid(const ::std::string& value);
  inline void set_iconid(const char* value);
  inline void set_iconid(const char* value, size_t size);
  inline ::std::string* mutable_iconid();
  inline ::std::string* release_iconid();
  inline void set_allocated_iconid(::std::string* iconid);

  // required int32 oper = 2;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 2;
  inline ::google::protobuf::int32 oper() const;
  inline void set_oper(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetIconRequest)
 private:
  inline void set_has_iconid();
  inline void clear_has_iconid();
  inline void set_has_oper();
  inline void clear_has_oper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* iconid_;
  ::google::protobuf::int32 oper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SetIconRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetIconResponse : public ::google::protobuf::Message {
 public:
  SetIconResponse();
  virtual ~SetIconResponse();

  SetIconResponse(const SetIconResponse& from);

  inline SetIconResponse& operator=(const SetIconResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetIconResponse& default_instance();

  void Swap(SetIconResponse* other);

  // implements Message ----------------------------------------------

  SetIconResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetIconResponse& from);
  void MergeFrom(const SetIconResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string iconID = 2;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconIDFieldNumber = 2;
  inline const ::std::string& iconid() const;
  inline void set_iconid(const ::std::string& value);
  inline void set_iconid(const char* value);
  inline void set_iconid(const char* value, size_t size);
  inline ::std::string* mutable_iconid();
  inline ::std::string* release_iconid();
  inline void set_allocated_iconid(::std::string* iconid);

  // @@protoc_insertion_point(class_scope:SetIconResponse)
 private:
  inline void set_has_iconid();
  inline void clear_has_iconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* iconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SetIconResponse* default_instance_;
};
// -------------------------------------------------------------------

class ChangeNameRequest : public ::google::protobuf::Message {
 public:
  ChangeNameRequest();
  virtual ~ChangeNameRequest();

  ChangeNameRequest(const ChangeNameRequest& from);

  inline ChangeNameRequest& operator=(const ChangeNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNameRequest& default_instance();

  void Swap(ChangeNameRequest* other);

  // implements Message ----------------------------------------------

  ChangeNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeNameRequest& from);
  void MergeFrom(const ChangeNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nickname = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // required bool useItem = 2;
  inline bool has_useitem() const;
  inline void clear_useitem();
  static const int kUseItemFieldNumber = 2;
  inline bool useitem() const;
  inline void set_useitem(bool value);

  // @@protoc_insertion_point(class_scope:ChangeNameRequest)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_useitem();
  inline void clear_has_useitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nickname_;
  bool useitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static ChangeNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class ChangeNameResponse : public ::google::protobuf::Message {
 public:
  ChangeNameResponse();
  virtual ~ChangeNameResponse();

  ChangeNameResponse(const ChangeNameResponse& from);

  inline ChangeNameResponse& operator=(const ChangeNameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNameResponse& default_instance();

  void Swap(ChangeNameResponse* other);

  // implements Message ----------------------------------------------

  ChangeNameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeNameResponse& from);
  void MergeFrom(const ChangeNameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isAvailable = 1;
  inline bool has_isavailable() const;
  inline void clear_isavailable();
  static const int kIsAvailableFieldNumber = 1;
  inline bool isavailable() const;
  inline void set_isavailable(bool value);

  // optional .PropertyDTO reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::PropertyDTO& reward() const;
  inline ::PropertyDTO* mutable_reward();
  inline ::PropertyDTO* release_reward();
  inline void set_allocated_reward(::PropertyDTO* reward);

  // @@protoc_insertion_point(class_scope:ChangeNameResponse)
 private:
  inline void set_has_isavailable();
  inline void clear_has_isavailable();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PropertyDTO* reward_;
  bool isavailable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static ChangeNameResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetGuideRequest : public ::google::protobuf::Message {
 public:
  SetGuideRequest();
  virtual ~SetGuideRequest();

  SetGuideRequest(const SetGuideRequest& from);

  inline SetGuideRequest& operator=(const SetGuideRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGuideRequest& default_instance();

  void Swap(SetGuideRequest* other);

  // implements Message ----------------------------------------------

  SetGuideRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGuideRequest& from);
  void MergeFrom(const SetGuideRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetGuideRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SetGuideRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerDataPush : public ::google::protobuf::Message {
 public:
  PlayerDataPush();
  virtual ~PlayerDataPush();

  PlayerDataPush(const PlayerDataPush& from);

  inline PlayerDataPush& operator=(const PlayerDataPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDataPush& default_instance();

  void Swap(PlayerDataPush* other);

  // implements Message ----------------------------------------------

  PlayerDataPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerDataPush& from);
  void MergeFrom(const PlayerDataPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PlayerDTO player = 1;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline const ::PlayerDTO& player() const;
  inline ::PlayerDTO* mutable_player();
  inline ::PlayerDTO* release_player();
  inline void set_allocated_player(::PlayerDTO* player);

  // @@protoc_insertion_point(class_scope:PlayerDataPush)
 private:
  inline void set_has_player();
  inline void clear_has_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PlayerDTO* player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerDataPush* default_instance_;
};
// -------------------------------------------------------------------

class PlayerPropertyChangePush : public ::google::protobuf::Message {
 public:
  PlayerPropertyChangePush();
  virtual ~PlayerPropertyChangePush();

  PlayerPropertyChangePush(const PlayerPropertyChangePush& from);

  inline PlayerPropertyChangePush& operator=(const PlayerPropertyChangePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropertyChangePush& default_instance();

  void Swap(PlayerPropertyChangePush* other);

  // implements Message ----------------------------------------------

  PlayerPropertyChangePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerPropertyChangePush& from);
  void MergeFrom(const PlayerPropertyChangePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PropertyDTO properties = 1;
  inline int properties_size() const;
  inline void clear_properties();
  static const int kPropertiesFieldNumber = 1;
  inline const ::PropertyDTO& properties(int index) const;
  inline ::PropertyDTO* mutable_properties(int index);
  inline ::PropertyDTO* add_properties();
  inline const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
      properties() const;
  inline ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
      mutable_properties();

  // @@protoc_insertion_point(class_scope:PlayerPropertyChangePush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PropertyDTO > properties_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerPropertyChangePush* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLevelUpPush : public ::google::protobuf::Message {
 public:
  PlayerLevelUpPush();
  virtual ~PlayerLevelUpPush();

  PlayerLevelUpPush(const PlayerLevelUpPush& from);

  inline PlayerLevelUpPush& operator=(const PlayerLevelUpPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLevelUpPush& default_instance();

  void Swap(PlayerLevelUpPush* other);

  // implements Message ----------------------------------------------

  PlayerLevelUpPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLevelUpPush& from);
  void MergeFrom(const PlayerLevelUpPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerLevelUpPush)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerLevelUpPush* default_instance_;
};
// -------------------------------------------------------------------

class PlayerProtectPush : public ::google::protobuf::Message {
 public:
  PlayerProtectPush();
  virtual ~PlayerProtectPush();

  PlayerProtectPush(const PlayerProtectPush& from);

  inline PlayerProtectPush& operator=(const PlayerProtectPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerProtectPush& default_instance();

  void Swap(PlayerProtectPush* other);

  // implements Message ----------------------------------------------

  PlayerProtectPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerProtectPush& from);
  void MergeFrom(const PlayerProtectPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bornProtectEndTime = 1;
  inline bool has_bornprotectendtime() const;
  inline void clear_bornprotectendtime();
  static const int kBornProtectEndTimeFieldNumber = 1;
  inline ::google::protobuf::int32 bornprotectendtime() const;
  inline void set_bornprotectendtime(::google::protobuf::int32 value);

  // required int32 atkProtectEndTime = 2;
  inline bool has_atkprotectendtime() const;
  inline void clear_atkprotectendtime();
  static const int kAtkProtectEndTimeFieldNumber = 2;
  inline ::google::protobuf::int32 atkprotectendtime() const;
  inline void set_atkprotectendtime(::google::protobuf::int32 value);

  // required int32 spyProtectEndTime = 3;
  inline bool has_spyprotectendtime() const;
  inline void clear_spyprotectendtime();
  static const int kSpyProtectEndTimeFieldNumber = 3;
  inline ::google::protobuf::int32 spyprotectendtime() const;
  inline void set_spyprotectendtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerProtectPush)
 private:
  inline void set_has_bornprotectendtime();
  inline void clear_has_bornprotectendtime();
  inline void set_has_atkprotectendtime();
  inline void clear_has_atkprotectendtime();
  inline void set_has_spyprotectendtime();
  inline void clear_has_spyprotectendtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bornprotectendtime_;
  ::google::protobuf::int32 atkprotectendtime_;
  ::google::protobuf::int32 spyprotectendtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerProtectPush* default_instance_;
};
// -------------------------------------------------------------------

class PlayerCount : public ::google::protobuf::Message {
 public:
  PlayerCount();
  virtual ~PlayerCount();

  PlayerCount(const PlayerCount& from);

  inline PlayerCount& operator=(const PlayerCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCount& default_instance();

  void Swap(PlayerCount* other);

  // implements Message ----------------------------------------------

  PlayerCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerCount& from);
  void MergeFrom(const PlayerCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // required int32 defCount = 3;
  inline bool has_defcount() const;
  inline void clear_defcount();
  static const int kDefCountFieldNumber = 3;
  inline ::google::protobuf::int32 defcount() const;
  inline void set_defcount(::google::protobuf::int32 value);

  // optional int32 addCount = 4;
  inline bool has_addcount() const;
  inline void clear_addcount();
  static const int kAddCountFieldNumber = 4;
  inline ::google::protobuf::int32 addcount() const;
  inline void set_addcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerCount)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_defcount();
  inline void clear_has_defcount();
  inline void set_has_addcount();
  inline void clear_has_addcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 defcount_;
  ::google::protobuf::int32 addcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerCount* default_instance_;
};
// -------------------------------------------------------------------

class PlayerCountPush : public ::google::protobuf::Message {
 public:
  PlayerCountPush();
  virtual ~PlayerCountPush();

  PlayerCountPush(const PlayerCountPush& from);

  inline PlayerCountPush& operator=(const PlayerCountPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCountPush& default_instance();

  void Swap(PlayerCountPush* other);

  // implements Message ----------------------------------------------

  PlayerCountPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerCountPush& from);
  void MergeFrom(const PlayerCountPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PlayerCount counts = 1;
  inline int counts_size() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 1;
  inline const ::PlayerCount& counts(int index) const;
  inline ::PlayerCount* mutable_counts(int index);
  inline ::PlayerCount* add_counts();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerCount >&
      counts() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerCount >*
      mutable_counts();

  // @@protoc_insertion_point(class_scope:PlayerCountPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PlayerCount > counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayerCountPush* default_instance_;
};
// -------------------------------------------------------------------

class PlayeBattlePush : public ::google::protobuf::Message {
 public:
  PlayeBattlePush();
  virtual ~PlayeBattlePush();

  PlayeBattlePush(const PlayeBattlePush& from);

  inline PlayeBattlePush& operator=(const PlayeBattlePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayeBattlePush& default_instance();

  void Swap(PlayeBattlePush* other);

  // implements Message ----------------------------------------------

  PlayeBattlePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayeBattlePush& from);
  void MergeFrom(const PlayeBattlePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 battleValue = 1;
  inline bool has_battlevalue() const;
  inline void clear_battlevalue();
  static const int kBattleValueFieldNumber = 1;
  inline ::google::protobuf::int32 battlevalue() const;
  inline void set_battlevalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayeBattlePush)
 private:
  inline void set_has_battlevalue();
  inline void clear_has_battlevalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 battlevalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static PlayeBattlePush* default_instance_;
};
// -------------------------------------------------------------------

class TalentPush : public ::google::protobuf::Message {
 public:
  TalentPush();
  virtual ~TalentPush();

  TalentPush(const TalentPush& from);

  inline TalentPush& operator=(const TalentPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentPush& default_instance();

  void Swap(TalentPush* other);

  // implements Message ----------------------------------------------

  TalentPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalentPush& from);
  void MergeFrom(const TalentPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 talentIds = 1;
  inline int talentids_size() const;
  inline void clear_talentids();
  static const int kTalentIdsFieldNumber = 1;
  inline ::google::protobuf::int32 talentids(int index) const;
  inline void set_talentids(int index, ::google::protobuf::int32 value);
  inline void add_talentids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      talentids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_talentids();

  // @@protoc_insertion_point(class_scope:TalentPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > talentids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static TalentPush* default_instance_;
};
// -------------------------------------------------------------------

class VipInfoPush : public ::google::protobuf::Message {
 public:
  VipInfoPush();
  virtual ~VipInfoPush();

  VipInfoPush(const VipInfoPush& from);

  inline VipInfoPush& operator=(const VipInfoPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipInfoPush& default_instance();

  void Swap(VipInfoPush* other);

  // implements Message ----------------------------------------------

  VipInfoPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipInfoPush& from);
  void MergeFrom(const VipInfoPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lv = 1;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::int32 lv() const;
  inline void set_lv(::google::protobuf::int32 value);

  // required int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // required int32 sign = 3;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 3;
  inline ::google::protobuf::int32 sign() const;
  inline void set_sign(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VipInfoPush)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_sign();
  inline void clear_has_sign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 sign_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static VipInfoPush* default_instance_;
};
// -------------------------------------------------------------------

class VipActiveInfoPush : public ::google::protobuf::Message {
 public:
  VipActiveInfoPush();
  virtual ~VipActiveInfoPush();

  VipActiveInfoPush(const VipActiveInfoPush& from);

  inline VipActiveInfoPush& operator=(const VipActiveInfoPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipActiveInfoPush& default_instance();

  void Swap(VipActiveInfoPush* other);

  // implements Message ----------------------------------------------

  VipActiveInfoPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipActiveInfoPush& from);
  void MergeFrom(const VipActiveInfoPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 activeEnd = 1;
  inline bool has_activeend() const;
  inline void clear_activeend();
  static const int kActiveEndFieldNumber = 1;
  inline ::google::protobuf::int32 activeend() const;
  inline void set_activeend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VipActiveInfoPush)
 private:
  inline void set_has_activeend();
  inline void clear_has_activeend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 activeend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static VipActiveInfoPush* default_instance_;
};
// -------------------------------------------------------------------

class SysTimePush : public ::google::protobuf::Message {
 public:
  SysTimePush();
  virtual ~SysTimePush();

  SysTimePush(const SysTimePush& from);

  inline SysTimePush& operator=(const SysTimePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysTimePush& default_instance();

  void Swap(SysTimePush* other);

  // implements Message ----------------------------------------------

  SysTimePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysTimePush& from);
  void MergeFrom(const SysTimePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 currTime = 1;
  inline bool has_currtime() const;
  inline void clear_currtime();
  static const int kCurrTimeFieldNumber = 1;
  inline ::google::protobuf::int64 currtime() const;
  inline void set_currtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SysTimePush)
 private:
  inline void set_has_currtime();
  inline void clear_has_currtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 currtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static SysTimePush* default_instance_;
};
// -------------------------------------------------------------------

class GuidePush : public ::google::protobuf::Message {
 public:
  GuidePush();
  virtual ~GuidePush();

  GuidePush(const GuidePush& from);

  inline GuidePush& operator=(const GuidePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuidePush& default_instance();

  void Swap(GuidePush* other);

  // implements Message ----------------------------------------------

  GuidePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuidePush& from);
  void MergeFrom(const GuidePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GuideDTO guide = 1;
  inline bool has_guide() const;
  inline void clear_guide();
  static const int kGuideFieldNumber = 1;
  inline const ::GuideDTO& guide() const;
  inline ::GuideDTO* mutable_guide();
  inline ::GuideDTO* release_guide();
  inline void set_allocated_guide(::GuideDTO* guide);

  // @@protoc_insertion_point(class_scope:GuidePush)
 private:
  inline void set_has_guide();
  inline void clear_has_guide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GuideDTO* guide_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_2eproto();
  friend void protobuf_AssignDesc_player_2eproto();
  friend void protobuf_ShutdownFile_player_2eproto();

  void InitAsDefaultInstance();
  static GuidePush* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerDTO

// required uint64 playerId = 1;
inline bool PlayerDTO::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDTO::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerDTO::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerDTO::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 PlayerDTO::playerid() const {
  return playerid_;
}
inline void PlayerDTO::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string name = 2;
inline bool PlayerDTO::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerDTO::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerDTO::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerDTO::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PlayerDTO::name() const {
  return *name_;
}
inline void PlayerDTO::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerDTO::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerDTO::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerDTO::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PlayerDTO::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerDTO::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 level = 3;
inline bool PlayerDTO::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerDTO::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerDTO::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerDTO::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerDTO::level() const {
  return level_;
}
inline void PlayerDTO::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// repeated .PropertyDTO properties = 4;
inline int PlayerDTO::properties_size() const {
  return properties_.size();
}
inline void PlayerDTO::clear_properties() {
  properties_.Clear();
}
inline const ::PropertyDTO& PlayerDTO::properties(int index) const {
  return properties_.Get(index);
}
inline ::PropertyDTO* PlayerDTO::mutable_properties(int index) {
  return properties_.Mutable(index);
}
inline ::PropertyDTO* PlayerDTO::add_properties() {
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
PlayerDTO::properties() const {
  return properties_;
}
inline ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
PlayerDTO::mutable_properties() {
  return &properties_;
}

// optional string language = 5;
inline bool PlayerDTO::has_language() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerDTO::set_has_language() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerDTO::clear_has_language() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerDTO::clear_language() {
  if (language_ != &::google::protobuf::internal::kEmptyString) {
    language_->clear();
  }
  clear_has_language();
}
inline const ::std::string& PlayerDTO::language() const {
  return *language_;
}
inline void PlayerDTO::set_language(const ::std::string& value) {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  language_->assign(value);
}
inline void PlayerDTO::set_language(const char* value) {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  language_->assign(value);
}
inline void PlayerDTO::set_language(const char* value, size_t size) {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  language_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerDTO::mutable_language() {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  return language_;
}
inline ::std::string* PlayerDTO::release_language() {
  clear_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = language_;
    language_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerDTO::set_allocated_language(::std::string* language) {
  if (language_ != &::google::protobuf::internal::kEmptyString) {
    delete language_;
  }
  if (language) {
    set_has_language();
    language_ = language;
  } else {
    clear_has_language();
    language_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .PositionDTO mapGridPosition = 6;
inline bool PlayerDTO::has_mapgridposition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerDTO::set_has_mapgridposition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerDTO::clear_has_mapgridposition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerDTO::clear_mapgridposition() {
  if (mapgridposition_ != NULL) mapgridposition_->::PositionDTO::Clear();
  clear_has_mapgridposition();
}
inline const ::PositionDTO& PlayerDTO::mapgridposition() const {
  return mapgridposition_ != NULL ? *mapgridposition_ : *default_instance_->mapgridposition_;
}
inline ::PositionDTO* PlayerDTO::mutable_mapgridposition() {
  set_has_mapgridposition();
  if (mapgridposition_ == NULL) mapgridposition_ = new ::PositionDTO;
  return mapgridposition_;
}
inline ::PositionDTO* PlayerDTO::release_mapgridposition() {
  clear_has_mapgridposition();
  ::PositionDTO* temp = mapgridposition_;
  mapgridposition_ = NULL;
  return temp;
}
inline void PlayerDTO::set_allocated_mapgridposition(::PositionDTO* mapgridposition) {
  delete mapgridposition_;
  mapgridposition_ = mapgridposition;
  if (mapgridposition) {
    set_has_mapgridposition();
  } else {
    clear_has_mapgridposition();
  }
}

// required bool hasChangedName = 7;
inline bool PlayerDTO::has_haschangedname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerDTO::set_has_haschangedname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerDTO::clear_has_haschangedname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerDTO::clear_haschangedname() {
  haschangedname_ = false;
  clear_has_haschangedname();
}
inline bool PlayerDTO::haschangedname() const {
  return haschangedname_;
}
inline void PlayerDTO::set_haschangedname(bool value) {
  set_has_haschangedname();
  haschangedname_ = value;
}

// required string icon = 8;
inline bool PlayerDTO::has_icon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerDTO::set_has_icon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerDTO::clear_has_icon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerDTO::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& PlayerDTO::icon() const {
  return *icon_;
}
inline void PlayerDTO::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void PlayerDTO::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void PlayerDTO::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerDTO::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* PlayerDTO::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerDTO::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GuideDTO

// required int32 id = 2;
inline bool GuideDTO::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideDTO::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideDTO::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideDTO::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GuideDTO::id() const {
  return id_;
}
inline void GuideDTO::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required bool jump = 3;
inline bool GuideDTO::has_jump() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideDTO::set_has_jump() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideDTO::clear_has_jump() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideDTO::clear_jump() {
  jump_ = false;
  clear_has_jump();
}
inline bool GuideDTO::jump() const {
  return jump_;
}
inline void GuideDTO::set_jump(bool value) {
  set_has_jump();
  jump_ = value;
}

// -------------------------------------------------------------------

// UserAccountLoginRequest

// required string platform = 1;
inline bool UserAccountLoginRequest::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAccountLoginRequest::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAccountLoginRequest::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAccountLoginRequest::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& UserAccountLoginRequest::platform() const {
  return *platform_;
}
inline void UserAccountLoginRequest::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void UserAccountLoginRequest::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void UserAccountLoginRequest::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAccountLoginRequest::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* UserAccountLoginRequest::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAccountLoginRequest::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string puid = 2;
inline bool UserAccountLoginRequest::has_puid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAccountLoginRequest::set_has_puid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAccountLoginRequest::clear_has_puid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAccountLoginRequest::clear_puid() {
  if (puid_ != &::google::protobuf::internal::kEmptyString) {
    puid_->clear();
  }
  clear_has_puid();
}
inline const ::std::string& UserAccountLoginRequest::puid() const {
  return *puid_;
}
inline void UserAccountLoginRequest::set_puid(const ::std::string& value) {
  set_has_puid();
  if (puid_ == &::google::protobuf::internal::kEmptyString) {
    puid_ = new ::std::string;
  }
  puid_->assign(value);
}
inline void UserAccountLoginRequest::set_puid(const char* value) {
  set_has_puid();
  if (puid_ == &::google::protobuf::internal::kEmptyString) {
    puid_ = new ::std::string;
  }
  puid_->assign(value);
}
inline void UserAccountLoginRequest::set_puid(const char* value, size_t size) {
  set_has_puid();
  if (puid_ == &::google::protobuf::internal::kEmptyString) {
    puid_ = new ::std::string;
  }
  puid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAccountLoginRequest::mutable_puid() {
  set_has_puid();
  if (puid_ == &::google::protobuf::internal::kEmptyString) {
    puid_ = new ::std::string;
  }
  return puid_;
}
inline ::std::string* UserAccountLoginRequest::release_puid() {
  clear_has_puid();
  if (puid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = puid_;
    puid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAccountLoginRequest::set_allocated_puid(::std::string* puid) {
  if (puid_ != &::google::protobuf::internal::kEmptyString) {
    delete puid_;
  }
  if (puid) {
    set_has_puid();
    puid_ = puid;
  } else {
    clear_has_puid();
    puid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UserAccountLoginResponse

// required uint64 playerId = 1;
inline bool UserAccountLoginResponse::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAccountLoginResponse::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAccountLoginResponse::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAccountLoginResponse::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 UserAccountLoginResponse::playerid() const {
  return playerid_;
}
inline void UserAccountLoginResponse::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PlayerLoginRequest

// required uint64 playerId = 1;
inline bool PlayerLoginRequest::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLoginRequest::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLoginRequest::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLoginRequest::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 PlayerLoginRequest::playerid() const {
  return playerid_;
}
inline void PlayerLoginRequest::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PlayerLoginResponse

// required uint64 sessionId = 1;
inline bool PlayerLoginResponse::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLoginResponse::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLoginResponse::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLoginResponse::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 PlayerLoginResponse::sessionid() const {
  return sessionid_;
}
inline void PlayerLoginResponse::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// required int64 systime = 2;
inline bool PlayerLoginResponse::has_systime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLoginResponse::set_has_systime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerLoginResponse::clear_has_systime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerLoginResponse::clear_systime() {
  systime_ = GOOGLE_LONGLONG(0);
  clear_has_systime();
}
inline ::google::protobuf::int64 PlayerLoginResponse::systime() const {
  return systime_;
}
inline void PlayerLoginResponse::set_systime(::google::protobuf::int64 value) {
  set_has_systime();
  systime_ = value;
}

// required int32 timeZoneOffset = 3;
inline bool PlayerLoginResponse::has_timezoneoffset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerLoginResponse::set_has_timezoneoffset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerLoginResponse::clear_has_timezoneoffset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerLoginResponse::clear_timezoneoffset() {
  timezoneoffset_ = 0;
  clear_has_timezoneoffset();
}
inline ::google::protobuf::int32 PlayerLoginResponse::timezoneoffset() const {
  return timezoneoffset_;
}
inline void PlayerLoginResponse::set_timezoneoffset(::google::protobuf::int32 value) {
  set_has_timezoneoffset();
  timezoneoffset_ = value;
}

// -------------------------------------------------------------------

// PlayerReconnectRequest

// required uint64 sessionId = 1;
inline bool PlayerReconnectRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReconnectRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReconnectRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReconnectRequest::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 PlayerReconnectRequest::sessionid() const {
  return sessionid_;
}
inline void PlayerReconnectRequest::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// required int32 lastPushId = 2;
inline bool PlayerReconnectRequest::has_lastpushid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerReconnectRequest::set_has_lastpushid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerReconnectRequest::clear_has_lastpushid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerReconnectRequest::clear_lastpushid() {
  lastpushid_ = 0;
  clear_has_lastpushid();
}
inline ::google::protobuf::int32 PlayerReconnectRequest::lastpushid() const {
  return lastpushid_;
}
inline void PlayerReconnectRequest::set_lastpushid(::google::protobuf::int32 value) {
  set_has_lastpushid();
  lastpushid_ = value;
}

// -------------------------------------------------------------------

// PlayerReconnectResponse

// optional .ReconnectState state = 1;
inline bool PlayerReconnectResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReconnectResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReconnectResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReconnectResponse::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::ReconnectState PlayerReconnectResponse::state() const {
  return static_cast< ::ReconnectState >(state_);
}
inline void PlayerReconnectResponse::set_state(::ReconnectState value) {
  assert(::ReconnectState_IsValid(value));
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// PlayerReloadRequest

// -------------------------------------------------------------------

// PlayerReloadResponse

// required int64 systime = 1;
inline bool PlayerReloadResponse::has_systime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReloadResponse::set_has_systime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReloadResponse::clear_has_systime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReloadResponse::clear_systime() {
  systime_ = GOOGLE_LONGLONG(0);
  clear_has_systime();
}
inline ::google::protobuf::int64 PlayerReloadResponse::systime() const {
  return systime_;
}
inline void PlayerReloadResponse::set_systime(::google::protobuf::int64 value) {
  set_has_systime();
  systime_ = value;
}

// required int32 timeZoneOffset = 2;
inline bool PlayerReloadResponse::has_timezoneoffset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerReloadResponse::set_has_timezoneoffset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerReloadResponse::clear_has_timezoneoffset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerReloadResponse::clear_timezoneoffset() {
  timezoneoffset_ = 0;
  clear_has_timezoneoffset();
}
inline ::google::protobuf::int32 PlayerReloadResponse::timezoneoffset() const {
  return timezoneoffset_;
}
inline void PlayerReloadResponse::set_timezoneoffset(::google::protobuf::int32 value) {
  set_has_timezoneoffset();
  timezoneoffset_ = value;
}

// -------------------------------------------------------------------

// PlayerHeartBeatRequest

// -------------------------------------------------------------------

// PlayerHeartBeatResponse

// required int64 systime = 1;
inline bool PlayerHeartBeatResponse::has_systime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerHeartBeatResponse::set_has_systime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerHeartBeatResponse::clear_has_systime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerHeartBeatResponse::clear_systime() {
  systime_ = GOOGLE_LONGLONG(0);
  clear_has_systime();
}
inline ::google::protobuf::int64 PlayerHeartBeatResponse::systime() const {
  return systime_;
}
inline void PlayerHeartBeatResponse::set_systime(::google::protobuf::int64 value) {
  set_has_systime();
  systime_ = value;
}

// -------------------------------------------------------------------

// SetTalentRequest

// required int32 level = 1;
inline bool SetTalentRequest::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTalentRequest::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTalentRequest::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTalentRequest::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SetTalentRequest::level() const {
  return level_;
}
inline void SetTalentRequest::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 talentId = 2;
inline bool SetTalentRequest::has_talentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTalentRequest::set_has_talentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTalentRequest::clear_has_talentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTalentRequest::clear_talentid() {
  talentid_ = 0;
  clear_has_talentid();
}
inline ::google::protobuf::int32 SetTalentRequest::talentid() const {
  return talentid_;
}
inline void SetTalentRequest::set_talentid(::google::protobuf::int32 value) {
  set_has_talentid();
  talentid_ = value;
}

// -------------------------------------------------------------------

// SetTalentResponse

// required int32 level = 1;
inline bool SetTalentResponse::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTalentResponse::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTalentResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTalentResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SetTalentResponse::level() const {
  return level_;
}
inline void SetTalentResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 talentId = 2;
inline bool SetTalentResponse::has_talentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTalentResponse::set_has_talentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTalentResponse::clear_has_talentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTalentResponse::clear_talentid() {
  talentid_ = 0;
  clear_has_talentid();
}
inline ::google::protobuf::int32 SetTalentResponse::talentid() const {
  return talentid_;
}
inline void SetTalentResponse::set_talentid(::google::protobuf::int32 value) {
  set_has_talentid();
  talentid_ = value;
}

// -------------------------------------------------------------------

// SetImageRequest

// required int32 image = 1;
inline bool SetImageRequest::has_image() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetImageRequest::set_has_image() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetImageRequest::clear_has_image() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetImageRequest::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 SetImageRequest::image() const {
  return image_;
}
inline void SetImageRequest::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
}

// -------------------------------------------------------------------

// SetImageResponse

// optional int32 image = 2;
inline bool SetImageResponse::has_image() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetImageResponse::set_has_image() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetImageResponse::clear_has_image() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetImageResponse::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 SetImageResponse::image() const {
  return image_;
}
inline void SetImageResponse::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
}

// -------------------------------------------------------------------

// QueryLordInfoRequest

// optional int64 playerId = 1;
inline bool QueryLordInfoRequest::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryLordInfoRequest::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryLordInfoRequest::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryLordInfoRequest::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 QueryLordInfoRequest::playerid() const {
  return playerid_;
}
inline void QueryLordInfoRequest::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string name = 2;
inline bool QueryLordInfoRequest::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryLordInfoRequest::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryLordInfoRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryLordInfoRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& QueryLordInfoRequest::name() const {
  return *name_;
}
inline void QueryLordInfoRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QueryLordInfoRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QueryLordInfoRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryLordInfoRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* QueryLordInfoRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QueryLordInfoRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// QueryLordInfoResponse

// optional int64 playerId = 1;
inline bool QueryLordInfoResponse::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryLordInfoResponse::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryLordInfoResponse::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryLordInfoResponse::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 QueryLordInfoResponse::playerid() const {
  return playerid_;
}
inline void QueryLordInfoResponse::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string nickname = 2;
inline bool QueryLordInfoResponse::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryLordInfoResponse::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryLordInfoResponse::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryLordInfoResponse::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& QueryLordInfoResponse::nickname() const {
  return *nickname_;
}
inline void QueryLordInfoResponse::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void QueryLordInfoResponse::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void QueryLordInfoResponse::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryLordInfoResponse::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* QueryLordInfoResponse::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QueryLordInfoResponse::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 allianceid = 3;
inline bool QueryLordInfoResponse::has_allianceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryLordInfoResponse::set_has_allianceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryLordInfoResponse::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryLordInfoResponse::clear_allianceid() {
  allianceid_ = 0;
  clear_has_allianceid();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::allianceid() const {
  return allianceid_;
}
inline void QueryLordInfoResponse::set_allianceid(::google::protobuf::int32 value) {
  set_has_allianceid();
  allianceid_ = value;
}

// optional string alliancename = 4;
inline bool QueryLordInfoResponse::has_alliancename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryLordInfoResponse::set_has_alliancename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryLordInfoResponse::clear_has_alliancename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryLordInfoResponse::clear_alliancename() {
  if (alliancename_ != &::google::protobuf::internal::kEmptyString) {
    alliancename_->clear();
  }
  clear_has_alliancename();
}
inline const ::std::string& QueryLordInfoResponse::alliancename() const {
  return *alliancename_;
}
inline void QueryLordInfoResponse::set_alliancename(const ::std::string& value) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::kEmptyString) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(value);
}
inline void QueryLordInfoResponse::set_alliancename(const char* value) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::kEmptyString) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(value);
}
inline void QueryLordInfoResponse::set_alliancename(const char* value, size_t size) {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::kEmptyString) {
    alliancename_ = new ::std::string;
  }
  alliancename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QueryLordInfoResponse::mutable_alliancename() {
  set_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::kEmptyString) {
    alliancename_ = new ::std::string;
  }
  return alliancename_;
}
inline ::std::string* QueryLordInfoResponse::release_alliancename() {
  clear_has_alliancename();
  if (alliancename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = alliancename_;
    alliancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QueryLordInfoResponse::set_allocated_alliancename(::std::string* alliancename) {
  if (alliancename_ != &::google::protobuf::internal::kEmptyString) {
    delete alliancename_;
  }
  if (alliancename) {
    set_has_alliancename();
    alliancename_ = alliancename;
  } else {
    clear_has_alliancename();
    alliancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 exp = 5;
inline bool QueryLordInfoResponse::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryLordInfoResponse::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryLordInfoResponse::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryLordInfoResponse::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::exp() const {
  return exp_;
}
inline void QueryLordInfoResponse::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 level = 6;
inline bool QueryLordInfoResponse::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryLordInfoResponse::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryLordInfoResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryLordInfoResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::level() const {
  return level_;
}
inline void QueryLordInfoResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional bool isfriend = 7;
inline bool QueryLordInfoResponse::has_isfriend() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QueryLordInfoResponse::set_has_isfriend() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QueryLordInfoResponse::clear_has_isfriend() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QueryLordInfoResponse::clear_isfriend() {
  isfriend_ = false;
  clear_has_isfriend();
}
inline bool QueryLordInfoResponse::isfriend() const {
  return isfriend_;
}
inline void QueryLordInfoResponse::set_isfriend(bool value) {
  set_has_isfriend();
  isfriend_ = value;
}

// optional int32 image = 8;
inline bool QueryLordInfoResponse::has_image() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QueryLordInfoResponse::set_has_image() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QueryLordInfoResponse::clear_has_image() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QueryLordInfoResponse::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::image() const {
  return image_;
}
inline void QueryLordInfoResponse::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
}

// repeated .EquipmentDTO equipmentlist = 9;
inline int QueryLordInfoResponse::equipmentlist_size() const {
  return equipmentlist_.size();
}
inline void QueryLordInfoResponse::clear_equipmentlist() {
  equipmentlist_.Clear();
}
inline const ::EquipmentDTO& QueryLordInfoResponse::equipmentlist(int index) const {
  return equipmentlist_.Get(index);
}
inline ::EquipmentDTO* QueryLordInfoResponse::mutable_equipmentlist(int index) {
  return equipmentlist_.Mutable(index);
}
inline ::EquipmentDTO* QueryLordInfoResponse::add_equipmentlist() {
  return equipmentlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >&
QueryLordInfoResponse::equipmentlist() const {
  return equipmentlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >*
QueryLordInfoResponse::mutable_equipmentlist() {
  return &equipmentlist_;
}

// -------------------------------------------------------------------

// SetIconRequest

// required string iconID = 1;
inline bool SetIconRequest::has_iconid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetIconRequest::set_has_iconid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetIconRequest::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetIconRequest::clear_iconid() {
  if (iconid_ != &::google::protobuf::internal::kEmptyString) {
    iconid_->clear();
  }
  clear_has_iconid();
}
inline const ::std::string& SetIconRequest::iconid() const {
  return *iconid_;
}
inline void SetIconRequest::set_iconid(const ::std::string& value) {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  iconid_->assign(value);
}
inline void SetIconRequest::set_iconid(const char* value) {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  iconid_->assign(value);
}
inline void SetIconRequest::set_iconid(const char* value, size_t size) {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  iconid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetIconRequest::mutable_iconid() {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  return iconid_;
}
inline ::std::string* SetIconRequest::release_iconid() {
  clear_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = iconid_;
    iconid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetIconRequest::set_allocated_iconid(::std::string* iconid) {
  if (iconid_ != &::google::protobuf::internal::kEmptyString) {
    delete iconid_;
  }
  if (iconid) {
    set_has_iconid();
    iconid_ = iconid;
  } else {
    clear_has_iconid();
    iconid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 oper = 2;
inline bool SetIconRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetIconRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetIconRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetIconRequest::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::google::protobuf::int32 SetIconRequest::oper() const {
  return oper_;
}
inline void SetIconRequest::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
}

// -------------------------------------------------------------------

// SetIconResponse

// optional string iconID = 2;
inline bool SetIconResponse::has_iconid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetIconResponse::set_has_iconid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetIconResponse::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetIconResponse::clear_iconid() {
  if (iconid_ != &::google::protobuf::internal::kEmptyString) {
    iconid_->clear();
  }
  clear_has_iconid();
}
inline const ::std::string& SetIconResponse::iconid() const {
  return *iconid_;
}
inline void SetIconResponse::set_iconid(const ::std::string& value) {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  iconid_->assign(value);
}
inline void SetIconResponse::set_iconid(const char* value) {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  iconid_->assign(value);
}
inline void SetIconResponse::set_iconid(const char* value, size_t size) {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  iconid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetIconResponse::mutable_iconid() {
  set_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    iconid_ = new ::std::string;
  }
  return iconid_;
}
inline ::std::string* SetIconResponse::release_iconid() {
  clear_has_iconid();
  if (iconid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = iconid_;
    iconid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetIconResponse::set_allocated_iconid(::std::string* iconid) {
  if (iconid_ != &::google::protobuf::internal::kEmptyString) {
    delete iconid_;
  }
  if (iconid) {
    set_has_iconid();
    iconid_ = iconid;
  } else {
    clear_has_iconid();
    iconid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ChangeNameRequest

// required string nickname = 1;
inline bool ChangeNameRequest::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeNameRequest::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeNameRequest::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeNameRequest::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& ChangeNameRequest::nickname() const {
  return *nickname_;
}
inline void ChangeNameRequest::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void ChangeNameRequest::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void ChangeNameRequest::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChangeNameRequest::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* ChangeNameRequest::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChangeNameRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool useItem = 2;
inline bool ChangeNameRequest::has_useitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeNameRequest::set_has_useitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeNameRequest::clear_has_useitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeNameRequest::clear_useitem() {
  useitem_ = false;
  clear_has_useitem();
}
inline bool ChangeNameRequest::useitem() const {
  return useitem_;
}
inline void ChangeNameRequest::set_useitem(bool value) {
  set_has_useitem();
  useitem_ = value;
}

// -------------------------------------------------------------------

// ChangeNameResponse

// required bool isAvailable = 1;
inline bool ChangeNameResponse::has_isavailable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeNameResponse::set_has_isavailable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeNameResponse::clear_has_isavailable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeNameResponse::clear_isavailable() {
  isavailable_ = false;
  clear_has_isavailable();
}
inline bool ChangeNameResponse::isavailable() const {
  return isavailable_;
}
inline void ChangeNameResponse::set_isavailable(bool value) {
  set_has_isavailable();
  isavailable_ = value;
}

// optional .PropertyDTO reward = 2;
inline bool ChangeNameResponse::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeNameResponse::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeNameResponse::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeNameResponse::clear_reward() {
  if (reward_ != NULL) reward_->::PropertyDTO::Clear();
  clear_has_reward();
}
inline const ::PropertyDTO& ChangeNameResponse::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::PropertyDTO* ChangeNameResponse::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::PropertyDTO;
  return reward_;
}
inline ::PropertyDTO* ChangeNameResponse::release_reward() {
  clear_has_reward();
  ::PropertyDTO* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void ChangeNameResponse::set_allocated_reward(::PropertyDTO* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// -------------------------------------------------------------------

// SetGuideRequest

// required int32 id = 1;
inline bool SetGuideRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGuideRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGuideRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGuideRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SetGuideRequest::id() const {
  return id_;
}
inline void SetGuideRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PlayerDataPush

// required .PlayerDTO player = 1;
inline bool PlayerDataPush::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDataPush::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerDataPush::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerDataPush::clear_player() {
  if (player_ != NULL) player_->::PlayerDTO::Clear();
  clear_has_player();
}
inline const ::PlayerDTO& PlayerDataPush::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::PlayerDTO* PlayerDataPush::mutable_player() {
  set_has_player();
  if (player_ == NULL) player_ = new ::PlayerDTO;
  return player_;
}
inline ::PlayerDTO* PlayerDataPush::release_player() {
  clear_has_player();
  ::PlayerDTO* temp = player_;
  player_ = NULL;
  return temp;
}
inline void PlayerDataPush::set_allocated_player(::PlayerDTO* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
}

// -------------------------------------------------------------------

// PlayerPropertyChangePush

// repeated .PropertyDTO properties = 1;
inline int PlayerPropertyChangePush::properties_size() const {
  return properties_.size();
}
inline void PlayerPropertyChangePush::clear_properties() {
  properties_.Clear();
}
inline const ::PropertyDTO& PlayerPropertyChangePush::properties(int index) const {
  return properties_.Get(index);
}
inline ::PropertyDTO* PlayerPropertyChangePush::mutable_properties(int index) {
  return properties_.Mutable(index);
}
inline ::PropertyDTO* PlayerPropertyChangePush::add_properties() {
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
PlayerPropertyChangePush::properties() const {
  return properties_;
}
inline ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
PlayerPropertyChangePush::mutable_properties() {
  return &properties_;
}

// -------------------------------------------------------------------

// PlayerLevelUpPush

// required int32 level = 1;
inline bool PlayerLevelUpPush::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLevelUpPush::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLevelUpPush::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLevelUpPush::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerLevelUpPush::level() const {
  return level_;
}
inline void PlayerLevelUpPush::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PlayerProtectPush

// required int32 bornProtectEndTime = 1;
inline bool PlayerProtectPush::has_bornprotectendtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerProtectPush::set_has_bornprotectendtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerProtectPush::clear_has_bornprotectendtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerProtectPush::clear_bornprotectendtime() {
  bornprotectendtime_ = 0;
  clear_has_bornprotectendtime();
}
inline ::google::protobuf::int32 PlayerProtectPush::bornprotectendtime() const {
  return bornprotectendtime_;
}
inline void PlayerProtectPush::set_bornprotectendtime(::google::protobuf::int32 value) {
  set_has_bornprotectendtime();
  bornprotectendtime_ = value;
}

// required int32 atkProtectEndTime = 2;
inline bool PlayerProtectPush::has_atkprotectendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerProtectPush::set_has_atkprotectendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerProtectPush::clear_has_atkprotectendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerProtectPush::clear_atkprotectendtime() {
  atkprotectendtime_ = 0;
  clear_has_atkprotectendtime();
}
inline ::google::protobuf::int32 PlayerProtectPush::atkprotectendtime() const {
  return atkprotectendtime_;
}
inline void PlayerProtectPush::set_atkprotectendtime(::google::protobuf::int32 value) {
  set_has_atkprotectendtime();
  atkprotectendtime_ = value;
}

// required int32 spyProtectEndTime = 3;
inline bool PlayerProtectPush::has_spyprotectendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerProtectPush::set_has_spyprotectendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerProtectPush::clear_has_spyprotectendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerProtectPush::clear_spyprotectendtime() {
  spyprotectendtime_ = 0;
  clear_has_spyprotectendtime();
}
inline ::google::protobuf::int32 PlayerProtectPush::spyprotectendtime() const {
  return spyprotectendtime_;
}
inline void PlayerProtectPush::set_spyprotectendtime(::google::protobuf::int32 value) {
  set_has_spyprotectendtime();
  spyprotectendtime_ = value;
}

// -------------------------------------------------------------------

// PlayerCount

// required int32 type = 1;
inline bool PlayerCount::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCount::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerCount::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerCount::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PlayerCount::type() const {
  return type_;
}
inline void PlayerCount::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 point = 2;
inline bool PlayerCount::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCount::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerCount::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerCount::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 PlayerCount::point() const {
  return point_;
}
inline void PlayerCount::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// required int32 defCount = 3;
inline bool PlayerCount::has_defcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerCount::set_has_defcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerCount::clear_has_defcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerCount::clear_defcount() {
  defcount_ = 0;
  clear_has_defcount();
}
inline ::google::protobuf::int32 PlayerCount::defcount() const {
  return defcount_;
}
inline void PlayerCount::set_defcount(::google::protobuf::int32 value) {
  set_has_defcount();
  defcount_ = value;
}

// optional int32 addCount = 4;
inline bool PlayerCount::has_addcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerCount::set_has_addcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerCount::clear_has_addcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerCount::clear_addcount() {
  addcount_ = 0;
  clear_has_addcount();
}
inline ::google::protobuf::int32 PlayerCount::addcount() const {
  return addcount_;
}
inline void PlayerCount::set_addcount(::google::protobuf::int32 value) {
  set_has_addcount();
  addcount_ = value;
}

// -------------------------------------------------------------------

// PlayerCountPush

// repeated .PlayerCount counts = 1;
inline int PlayerCountPush::counts_size() const {
  return counts_.size();
}
inline void PlayerCountPush::clear_counts() {
  counts_.Clear();
}
inline const ::PlayerCount& PlayerCountPush::counts(int index) const {
  return counts_.Get(index);
}
inline ::PlayerCount* PlayerCountPush::mutable_counts(int index) {
  return counts_.Mutable(index);
}
inline ::PlayerCount* PlayerCountPush::add_counts() {
  return counts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerCount >&
PlayerCountPush::counts() const {
  return counts_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerCount >*
PlayerCountPush::mutable_counts() {
  return &counts_;
}

// -------------------------------------------------------------------

// PlayeBattlePush

// required int32 battleValue = 1;
inline bool PlayeBattlePush::has_battlevalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayeBattlePush::set_has_battlevalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayeBattlePush::clear_has_battlevalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayeBattlePush::clear_battlevalue() {
  battlevalue_ = 0;
  clear_has_battlevalue();
}
inline ::google::protobuf::int32 PlayeBattlePush::battlevalue() const {
  return battlevalue_;
}
inline void PlayeBattlePush::set_battlevalue(::google::protobuf::int32 value) {
  set_has_battlevalue();
  battlevalue_ = value;
}

// -------------------------------------------------------------------

// TalentPush

// repeated int32 talentIds = 1;
inline int TalentPush::talentids_size() const {
  return talentids_.size();
}
inline void TalentPush::clear_talentids() {
  talentids_.Clear();
}
inline ::google::protobuf::int32 TalentPush::talentids(int index) const {
  return talentids_.Get(index);
}
inline void TalentPush::set_talentids(int index, ::google::protobuf::int32 value) {
  talentids_.Set(index, value);
}
inline void TalentPush::add_talentids(::google::protobuf::int32 value) {
  talentids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TalentPush::talentids() const {
  return talentids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TalentPush::mutable_talentids() {
  return &talentids_;
}

// -------------------------------------------------------------------

// VipInfoPush

// required int32 lv = 1;
inline bool VipInfoPush::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipInfoPush::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipInfoPush::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipInfoPush::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 VipInfoPush::lv() const {
  return lv_;
}
inline void VipInfoPush::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
}

// required int32 exp = 2;
inline bool VipInfoPush::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipInfoPush::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipInfoPush::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipInfoPush::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 VipInfoPush::exp() const {
  return exp_;
}
inline void VipInfoPush::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// required int32 sign = 3;
inline bool VipInfoPush::has_sign() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipInfoPush::set_has_sign() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipInfoPush::clear_has_sign() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipInfoPush::clear_sign() {
  sign_ = 0;
  clear_has_sign();
}
inline ::google::protobuf::int32 VipInfoPush::sign() const {
  return sign_;
}
inline void VipInfoPush::set_sign(::google::protobuf::int32 value) {
  set_has_sign();
  sign_ = value;
}

// -------------------------------------------------------------------

// VipActiveInfoPush

// required int32 activeEnd = 1;
inline bool VipActiveInfoPush::has_activeend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipActiveInfoPush::set_has_activeend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipActiveInfoPush::clear_has_activeend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipActiveInfoPush::clear_activeend() {
  activeend_ = 0;
  clear_has_activeend();
}
inline ::google::protobuf::int32 VipActiveInfoPush::activeend() const {
  return activeend_;
}
inline void VipActiveInfoPush::set_activeend(::google::protobuf::int32 value) {
  set_has_activeend();
  activeend_ = value;
}

// -------------------------------------------------------------------

// SysTimePush

// required int64 currTime = 1;
inline bool SysTimePush::has_currtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysTimePush::set_has_currtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysTimePush::clear_has_currtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysTimePush::clear_currtime() {
  currtime_ = GOOGLE_LONGLONG(0);
  clear_has_currtime();
}
inline ::google::protobuf::int64 SysTimePush::currtime() const {
  return currtime_;
}
inline void SysTimePush::set_currtime(::google::protobuf::int64 value) {
  set_has_currtime();
  currtime_ = value;
}

// -------------------------------------------------------------------

// GuidePush

// required .GuideDTO guide = 1;
inline bool GuidePush::has_guide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuidePush::set_has_guide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuidePush::clear_has_guide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuidePush::clear_guide() {
  if (guide_ != NULL) guide_->::GuideDTO::Clear();
  clear_has_guide();
}
inline const ::GuideDTO& GuidePush::guide() const {
  return guide_ != NULL ? *guide_ : *default_instance_->guide_;
}
inline ::GuideDTO* GuidePush::mutable_guide() {
  set_has_guide();
  if (guide_ == NULL) guide_ = new ::GuideDTO;
  return guide_;
}
inline ::GuideDTO* GuidePush::release_guide() {
  clear_has_guide();
  ::GuideDTO* temp = guide_;
  guide_ = NULL;
  return temp;
}
inline void GuidePush::set_allocated_guide(::GuideDTO* guide) {
  delete guide_;
  guide_ = guide;
  if (guide) {
    set_has_guide();
  } else {
    clear_has_guide();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlayerCommandId>() {
  return ::PlayerCommandId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ReconnectState>() {
  return ::ReconnectState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlayerPushId>() {
  return ::PlayerPushId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_player_2eproto__INCLUDED
