// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#ifndef PROTOBUF_player_2eproto__INCLUDED
#define PROTOBUF_player_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_player_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[35];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPlayerDTOImpl();
void InitDefaultsPlayerDTO();
void InitDefaultsGuideDTOImpl();
void InitDefaultsGuideDTO();
void InitDefaultsUserAccountLoginRequestImpl();
void InitDefaultsUserAccountLoginRequest();
void InitDefaultsUserAccountLoginResponseImpl();
void InitDefaultsUserAccountLoginResponse();
void InitDefaultsPlayerLoginRequestImpl();
void InitDefaultsPlayerLoginRequest();
void InitDefaultsPlayerLoginResponseImpl();
void InitDefaultsPlayerLoginResponse();
void InitDefaultsPlayerReconnectRequestImpl();
void InitDefaultsPlayerReconnectRequest();
void InitDefaultsPlayerReconnectResponseImpl();
void InitDefaultsPlayerReconnectResponse();
void InitDefaultsPlayerReloadRequestImpl();
void InitDefaultsPlayerReloadRequest();
void InitDefaultsPlayerReloadResponseImpl();
void InitDefaultsPlayerReloadResponse();
void InitDefaultsPlayerHeartBeatRequestImpl();
void InitDefaultsPlayerHeartBeatRequest();
void InitDefaultsPlayerHeartBeatResponseImpl();
void InitDefaultsPlayerHeartBeatResponse();
void InitDefaultsSetTalentRequestImpl();
void InitDefaultsSetTalentRequest();
void InitDefaultsSetTalentResponseImpl();
void InitDefaultsSetTalentResponse();
void InitDefaultsSetImageRequestImpl();
void InitDefaultsSetImageRequest();
void InitDefaultsSetImageResponseImpl();
void InitDefaultsSetImageResponse();
void InitDefaultsQueryLordInfoRequestImpl();
void InitDefaultsQueryLordInfoRequest();
void InitDefaultsQueryLordInfoResponseImpl();
void InitDefaultsQueryLordInfoResponse();
void InitDefaultsSetIconRequestImpl();
void InitDefaultsSetIconRequest();
void InitDefaultsSetIconResponseImpl();
void InitDefaultsSetIconResponse();
void InitDefaultsChangeNameRequestImpl();
void InitDefaultsChangeNameRequest();
void InitDefaultsChangeNameResponseImpl();
void InitDefaultsChangeNameResponse();
void InitDefaultsSetGuideRequestImpl();
void InitDefaultsSetGuideRequest();
void InitDefaultsPlayerDataPushImpl();
void InitDefaultsPlayerDataPush();
void InitDefaultsPlayerPropertyChangePushImpl();
void InitDefaultsPlayerPropertyChangePush();
void InitDefaultsPlayerLevelUpPushImpl();
void InitDefaultsPlayerLevelUpPush();
void InitDefaultsPlayerProtectPushImpl();
void InitDefaultsPlayerProtectPush();
void InitDefaultsPlayerCountImpl();
void InitDefaultsPlayerCount();
void InitDefaultsPlayerCountPushImpl();
void InitDefaultsPlayerCountPush();
void InitDefaultsPlayeBattlePushImpl();
void InitDefaultsPlayeBattlePush();
void InitDefaultsTalentPushImpl();
void InitDefaultsTalentPush();
void InitDefaultsVipInfoPushImpl();
void InitDefaultsVipInfoPush();
void InitDefaultsVipActiveInfoPushImpl();
void InitDefaultsVipActiveInfoPush();
void InitDefaultsSysTimePushImpl();
void InitDefaultsSysTimePush();
void InitDefaultsGuidePushImpl();
void InitDefaultsGuidePush();
inline void InitDefaults() {
  InitDefaultsPlayerDTO();
  InitDefaultsGuideDTO();
  InitDefaultsUserAccountLoginRequest();
  InitDefaultsUserAccountLoginResponse();
  InitDefaultsPlayerLoginRequest();
  InitDefaultsPlayerLoginResponse();
  InitDefaultsPlayerReconnectRequest();
  InitDefaultsPlayerReconnectResponse();
  InitDefaultsPlayerReloadRequest();
  InitDefaultsPlayerReloadResponse();
  InitDefaultsPlayerHeartBeatRequest();
  InitDefaultsPlayerHeartBeatResponse();
  InitDefaultsSetTalentRequest();
  InitDefaultsSetTalentResponse();
  InitDefaultsSetImageRequest();
  InitDefaultsSetImageResponse();
  InitDefaultsQueryLordInfoRequest();
  InitDefaultsQueryLordInfoResponse();
  InitDefaultsSetIconRequest();
  InitDefaultsSetIconResponse();
  InitDefaultsChangeNameRequest();
  InitDefaultsChangeNameResponse();
  InitDefaultsSetGuideRequest();
  InitDefaultsPlayerDataPush();
  InitDefaultsPlayerPropertyChangePush();
  InitDefaultsPlayerLevelUpPush();
  InitDefaultsPlayerProtectPush();
  InitDefaultsPlayerCount();
  InitDefaultsPlayerCountPush();
  InitDefaultsPlayeBattlePush();
  InitDefaultsTalentPush();
  InitDefaultsVipInfoPush();
  InitDefaultsVipActiveInfoPush();
  InitDefaultsSysTimePush();
  InitDefaultsGuidePush();
}
}  // namespace protobuf_player_2eproto
class ChangeNameRequest;
class ChangeNameRequestDefaultTypeInternal;
extern ChangeNameRequestDefaultTypeInternal _ChangeNameRequest_default_instance_;
class ChangeNameResponse;
class ChangeNameResponseDefaultTypeInternal;
extern ChangeNameResponseDefaultTypeInternal _ChangeNameResponse_default_instance_;
class GuideDTO;
class GuideDTODefaultTypeInternal;
extern GuideDTODefaultTypeInternal _GuideDTO_default_instance_;
class GuidePush;
class GuidePushDefaultTypeInternal;
extern GuidePushDefaultTypeInternal _GuidePush_default_instance_;
class PlayeBattlePush;
class PlayeBattlePushDefaultTypeInternal;
extern PlayeBattlePushDefaultTypeInternal _PlayeBattlePush_default_instance_;
class PlayerCount;
class PlayerCountDefaultTypeInternal;
extern PlayerCountDefaultTypeInternal _PlayerCount_default_instance_;
class PlayerCountPush;
class PlayerCountPushDefaultTypeInternal;
extern PlayerCountPushDefaultTypeInternal _PlayerCountPush_default_instance_;
class PlayerDTO;
class PlayerDTODefaultTypeInternal;
extern PlayerDTODefaultTypeInternal _PlayerDTO_default_instance_;
class PlayerDataPush;
class PlayerDataPushDefaultTypeInternal;
extern PlayerDataPushDefaultTypeInternal _PlayerDataPush_default_instance_;
class PlayerHeartBeatRequest;
class PlayerHeartBeatRequestDefaultTypeInternal;
extern PlayerHeartBeatRequestDefaultTypeInternal _PlayerHeartBeatRequest_default_instance_;
class PlayerHeartBeatResponse;
class PlayerHeartBeatResponseDefaultTypeInternal;
extern PlayerHeartBeatResponseDefaultTypeInternal _PlayerHeartBeatResponse_default_instance_;
class PlayerLevelUpPush;
class PlayerLevelUpPushDefaultTypeInternal;
extern PlayerLevelUpPushDefaultTypeInternal _PlayerLevelUpPush_default_instance_;
class PlayerLoginRequest;
class PlayerLoginRequestDefaultTypeInternal;
extern PlayerLoginRequestDefaultTypeInternal _PlayerLoginRequest_default_instance_;
class PlayerLoginResponse;
class PlayerLoginResponseDefaultTypeInternal;
extern PlayerLoginResponseDefaultTypeInternal _PlayerLoginResponse_default_instance_;
class PlayerPropertyChangePush;
class PlayerPropertyChangePushDefaultTypeInternal;
extern PlayerPropertyChangePushDefaultTypeInternal _PlayerPropertyChangePush_default_instance_;
class PlayerProtectPush;
class PlayerProtectPushDefaultTypeInternal;
extern PlayerProtectPushDefaultTypeInternal _PlayerProtectPush_default_instance_;
class PlayerReconnectRequest;
class PlayerReconnectRequestDefaultTypeInternal;
extern PlayerReconnectRequestDefaultTypeInternal _PlayerReconnectRequest_default_instance_;
class PlayerReconnectResponse;
class PlayerReconnectResponseDefaultTypeInternal;
extern PlayerReconnectResponseDefaultTypeInternal _PlayerReconnectResponse_default_instance_;
class PlayerReloadRequest;
class PlayerReloadRequestDefaultTypeInternal;
extern PlayerReloadRequestDefaultTypeInternal _PlayerReloadRequest_default_instance_;
class PlayerReloadResponse;
class PlayerReloadResponseDefaultTypeInternal;
extern PlayerReloadResponseDefaultTypeInternal _PlayerReloadResponse_default_instance_;
class QueryLordInfoRequest;
class QueryLordInfoRequestDefaultTypeInternal;
extern QueryLordInfoRequestDefaultTypeInternal _QueryLordInfoRequest_default_instance_;
class QueryLordInfoResponse;
class QueryLordInfoResponseDefaultTypeInternal;
extern QueryLordInfoResponseDefaultTypeInternal _QueryLordInfoResponse_default_instance_;
class SetGuideRequest;
class SetGuideRequestDefaultTypeInternal;
extern SetGuideRequestDefaultTypeInternal _SetGuideRequest_default_instance_;
class SetIconRequest;
class SetIconRequestDefaultTypeInternal;
extern SetIconRequestDefaultTypeInternal _SetIconRequest_default_instance_;
class SetIconResponse;
class SetIconResponseDefaultTypeInternal;
extern SetIconResponseDefaultTypeInternal _SetIconResponse_default_instance_;
class SetImageRequest;
class SetImageRequestDefaultTypeInternal;
extern SetImageRequestDefaultTypeInternal _SetImageRequest_default_instance_;
class SetImageResponse;
class SetImageResponseDefaultTypeInternal;
extern SetImageResponseDefaultTypeInternal _SetImageResponse_default_instance_;
class SetTalentRequest;
class SetTalentRequestDefaultTypeInternal;
extern SetTalentRequestDefaultTypeInternal _SetTalentRequest_default_instance_;
class SetTalentResponse;
class SetTalentResponseDefaultTypeInternal;
extern SetTalentResponseDefaultTypeInternal _SetTalentResponse_default_instance_;
class SysTimePush;
class SysTimePushDefaultTypeInternal;
extern SysTimePushDefaultTypeInternal _SysTimePush_default_instance_;
class TalentPush;
class TalentPushDefaultTypeInternal;
extern TalentPushDefaultTypeInternal _TalentPush_default_instance_;
class UserAccountLoginRequest;
class UserAccountLoginRequestDefaultTypeInternal;
extern UserAccountLoginRequestDefaultTypeInternal _UserAccountLoginRequest_default_instance_;
class UserAccountLoginResponse;
class UserAccountLoginResponseDefaultTypeInternal;
extern UserAccountLoginResponseDefaultTypeInternal _UserAccountLoginResponse_default_instance_;
class VipActiveInfoPush;
class VipActiveInfoPushDefaultTypeInternal;
extern VipActiveInfoPushDefaultTypeInternal _VipActiveInfoPush_default_instance_;
class VipInfoPush;
class VipInfoPushDefaultTypeInternal;
extern VipInfoPushDefaultTypeInternal _VipInfoPush_default_instance_;

enum PlayerCommandId {
  USER_ACCOUNT_LOGIN = 100,
  PLAYER_LOGIN = 101,
  PLAYER_RECONNECT = 102,
  PLAYRE_HEARTBEAT = 103,
  PLAYRE_RELOAD = 104,
  PLAYER_TALENT_SET = 105,
  PLAYER_IMAGE_SET = 106,
  PLAYER_QUERY_PLAYER = 107,
  PLAYER_ICON_SET = 108,
  PLAYER_CHANGE_NAME = 109,
  PLAYER_SET_GUIDE = 110,
  PLAYER_JUMP_GUIDE = 111
};
bool PlayerCommandId_IsValid(int value);
const PlayerCommandId PlayerCommandId_MIN = USER_ACCOUNT_LOGIN;
const PlayerCommandId PlayerCommandId_MAX = PLAYER_JUMP_GUIDE;
const int PlayerCommandId_ARRAYSIZE = PlayerCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCommandId_descriptor();
inline const ::std::string& PlayerCommandId_Name(PlayerCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCommandId_descriptor(), value);
}
inline bool PlayerCommandId_Parse(
    const ::std::string& name, PlayerCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCommandId>(
    PlayerCommandId_descriptor(), name, value);
}
enum ReconnectState {
  CONTINUE = 1,
  RELOAD = 2,
  RELOGIN = 3
};
bool ReconnectState_IsValid(int value);
const ReconnectState ReconnectState_MIN = CONTINUE;
const ReconnectState ReconnectState_MAX = RELOGIN;
const int ReconnectState_ARRAYSIZE = ReconnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReconnectState_descriptor();
inline const ::std::string& ReconnectState_Name(ReconnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReconnectState_descriptor(), value);
}
inline bool ReconnectState_Parse(
    const ::std::string& name, ReconnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReconnectState>(
    ReconnectState_descriptor(), name, value);
}
enum PlayerPushId {
  PLAYRE_DATA_PUSH = 50101,
  PROPERTY_CHANGE_PUSH = 50102,
  PLAYER_LEVEL_UP_PUSH = 50103,
  PLAYER_PROTECT_PUSH = 50104,
  PLAYER_RELOGIN = 50110,
  PLAYER_COUNT_PUSH = 50120,
  PLAYER_BATTLE_PUSH = 50121,
  PLAYER_TALENT_PUSH = 50122,
  PLAYER_VIP_PUSH = 50123,
  PLAYER_VIP_ACTIVE_PUSH = 50124,
  PLAYER_SYS_TIME_PUSH = 50125,
  PLAYER_ONLINE_OTHER_DAY = 50126,
  PLAYER_GUIDE_PUSH = 50127
};
bool PlayerPushId_IsValid(int value);
const PlayerPushId PlayerPushId_MIN = PLAYRE_DATA_PUSH;
const PlayerPushId PlayerPushId_MAX = PLAYER_GUIDE_PUSH;
const int PlayerPushId_ARRAYSIZE = PlayerPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerPushId_descriptor();
inline const ::std::string& PlayerPushId_Name(PlayerPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerPushId_descriptor(), value);
}
inline bool PlayerPushId_Parse(
    const ::std::string& name, PlayerPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerPushId>(
    PlayerPushId_descriptor(), name, value);
}
// ===================================================================

class PlayerDTO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerDTO) */ {
 public:
  PlayerDTO();
  virtual ~PlayerDTO();

  PlayerDTO(const PlayerDTO& from);

  inline PlayerDTO& operator=(const PlayerDTO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDTO(PlayerDTO&& from) noexcept
    : PlayerDTO() {
    *this = ::std::move(from);
  }

  inline PlayerDTO& operator=(PlayerDTO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDTO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDTO* internal_default_instance() {
    return reinterpret_cast<const PlayerDTO*>(
               &_PlayerDTO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerDTO* other);
  friend void swap(PlayerDTO& a, PlayerDTO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDTO* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerDTO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerDTO& from);
  void MergeFrom(const PlayerDTO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerDTO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PropertyDTO properties = 4;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 4;
  const ::PropertyDTO& properties(int index) const;
  ::PropertyDTO* mutable_properties(int index);
  ::PropertyDTO* add_properties();
  ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
      mutable_properties();
  const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
      properties() const;

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string language = 5;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 5;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // required string icon = 8;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 8;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // required .PositionDTO mapGridPosition = 6;
  bool has_mapgridposition() const;
  void clear_mapgridposition();
  static const int kMapGridPositionFieldNumber = 6;
  const ::PositionDTO& mapgridposition() const;
  ::PositionDTO* release_mapgridposition();
  ::PositionDTO* mutable_mapgridposition();
  void set_allocated_mapgridposition(::PositionDTO* mapgridposition);

  // required uint64 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // required int32 level = 3;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required bool hasChangedName = 7;
  bool has_haschangedname() const;
  void clear_haschangedname();
  static const int kHasChangedNameFieldNumber = 7;
  bool haschangedname() const;
  void set_haschangedname(bool value);

  // @@protoc_insertion_point(class_scope:PlayerDTO)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_name();
  void clear_has_name();
  void set_has_level();
  void clear_has_level();
  void set_has_language();
  void clear_has_language();
  void set_has_mapgridposition();
  void clear_has_mapgridposition();
  void set_has_haschangedname();
  void clear_has_haschangedname();
  void set_has_icon();
  void clear_has_icon();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PropertyDTO > properties_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::PositionDTO* mapgridposition_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::int32 level_;
  bool haschangedname_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerDTOImpl();
};
// -------------------------------------------------------------------

class GuideDTO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuideDTO) */ {
 public:
  GuideDTO();
  virtual ~GuideDTO();

  GuideDTO(const GuideDTO& from);

  inline GuideDTO& operator=(const GuideDTO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuideDTO(GuideDTO&& from) noexcept
    : GuideDTO() {
    *this = ::std::move(from);
  }

  inline GuideDTO& operator=(GuideDTO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuideDTO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuideDTO* internal_default_instance() {
    return reinterpret_cast<const GuideDTO*>(
               &_GuideDTO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GuideDTO* other);
  friend void swap(GuideDTO& a, GuideDTO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuideDTO* New() const PROTOBUF_FINAL { return New(NULL); }

  GuideDTO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuideDTO& from);
  void MergeFrom(const GuideDTO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuideDTO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required bool jump = 3;
  bool has_jump() const;
  void clear_jump();
  static const int kJumpFieldNumber = 3;
  bool jump() const;
  void set_jump(bool value);

  // @@protoc_insertion_point(class_scope:GuideDTO)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_jump();
  void clear_has_jump();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  bool jump_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsGuideDTOImpl();
};
// -------------------------------------------------------------------

class UserAccountLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserAccountLoginRequest) */ {
 public:
  UserAccountLoginRequest();
  virtual ~UserAccountLoginRequest();

  UserAccountLoginRequest(const UserAccountLoginRequest& from);

  inline UserAccountLoginRequest& operator=(const UserAccountLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserAccountLoginRequest(UserAccountLoginRequest&& from) noexcept
    : UserAccountLoginRequest() {
    *this = ::std::move(from);
  }

  inline UserAccountLoginRequest& operator=(UserAccountLoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAccountLoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserAccountLoginRequest* internal_default_instance() {
    return reinterpret_cast<const UserAccountLoginRequest*>(
               &_UserAccountLoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UserAccountLoginRequest* other);
  friend void swap(UserAccountLoginRequest& a, UserAccountLoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserAccountLoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UserAccountLoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserAccountLoginRequest& from);
  void MergeFrom(const UserAccountLoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserAccountLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platform = 1;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // required string puid = 2;
  bool has_puid() const;
  void clear_puid();
  static const int kPuidFieldNumber = 2;
  const ::std::string& puid() const;
  void set_puid(const ::std::string& value);
  #if LANG_CXX11
  void set_puid(::std::string&& value);
  #endif
  void set_puid(const char* value);
  void set_puid(const char* value, size_t size);
  ::std::string* mutable_puid();
  ::std::string* release_puid();
  void set_allocated_puid(::std::string* puid);

  // @@protoc_insertion_point(class_scope:UserAccountLoginRequest)
 private:
  void set_has_platform();
  void clear_has_platform();
  void set_has_puid();
  void clear_has_puid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr puid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsUserAccountLoginRequestImpl();
};
// -------------------------------------------------------------------

class UserAccountLoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserAccountLoginResponse) */ {
 public:
  UserAccountLoginResponse();
  virtual ~UserAccountLoginResponse();

  UserAccountLoginResponse(const UserAccountLoginResponse& from);

  inline UserAccountLoginResponse& operator=(const UserAccountLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserAccountLoginResponse(UserAccountLoginResponse&& from) noexcept
    : UserAccountLoginResponse() {
    *this = ::std::move(from);
  }

  inline UserAccountLoginResponse& operator=(UserAccountLoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAccountLoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserAccountLoginResponse* internal_default_instance() {
    return reinterpret_cast<const UserAccountLoginResponse*>(
               &_UserAccountLoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UserAccountLoginResponse* other);
  friend void swap(UserAccountLoginResponse& a, UserAccountLoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserAccountLoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UserAccountLoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserAccountLoginResponse& from);
  void MergeFrom(const UserAccountLoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserAccountLoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:UserAccountLoginResponse)
 private:
  void set_has_playerid();
  void clear_has_playerid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 playerid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsUserAccountLoginResponseImpl();
};
// -------------------------------------------------------------------

class PlayerLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerLoginRequest) */ {
 public:
  PlayerLoginRequest();
  virtual ~PlayerLoginRequest();

  PlayerLoginRequest(const PlayerLoginRequest& from);

  inline PlayerLoginRequest& operator=(const PlayerLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginRequest(PlayerLoginRequest&& from) noexcept
    : PlayerLoginRequest() {
    *this = ::std::move(from);
  }

  inline PlayerLoginRequest& operator=(PlayerLoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLoginRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginRequest*>(
               &_PlayerLoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlayerLoginRequest* other);
  friend void swap(PlayerLoginRequest& a, PlayerLoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginRequest& from);
  void MergeFrom(const PlayerLoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PlayerLoginRequest)
 private:
  void set_has_playerid();
  void clear_has_playerid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 playerid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerLoginRequestImpl();
};
// -------------------------------------------------------------------

class PlayerLoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerLoginResponse) */ {
 public:
  PlayerLoginResponse();
  virtual ~PlayerLoginResponse();

  PlayerLoginResponse(const PlayerLoginResponse& from);

  inline PlayerLoginResponse& operator=(const PlayerLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginResponse(PlayerLoginResponse&& from) noexcept
    : PlayerLoginResponse() {
    *this = ::std::move(from);
  }

  inline PlayerLoginResponse& operator=(PlayerLoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLoginResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginResponse*>(
               &_PlayerLoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlayerLoginResponse* other);
  friend void swap(PlayerLoginResponse& a, PlayerLoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginResponse& from);
  void MergeFrom(const PlayerLoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sessionId = 1;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // required int64 systime = 2;
  bool has_systime() const;
  void clear_systime();
  static const int kSystimeFieldNumber = 2;
  ::google::protobuf::int64 systime() const;
  void set_systime(::google::protobuf::int64 value);

  // required int32 timeZoneOffset = 3;
  bool has_timezoneoffset() const;
  void clear_timezoneoffset();
  static const int kTimeZoneOffsetFieldNumber = 3;
  ::google::protobuf::int32 timezoneoffset() const;
  void set_timezoneoffset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerLoginResponse)
 private:
  void set_has_sessionid();
  void clear_has_sessionid();
  void set_has_systime();
  void clear_has_systime();
  void set_has_timezoneoffset();
  void clear_has_timezoneoffset();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::int64 systime_;
  ::google::protobuf::int32 timezoneoffset_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerLoginResponseImpl();
};
// -------------------------------------------------------------------

class PlayerReconnectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerReconnectRequest) */ {
 public:
  PlayerReconnectRequest();
  virtual ~PlayerReconnectRequest();

  PlayerReconnectRequest(const PlayerReconnectRequest& from);

  inline PlayerReconnectRequest& operator=(const PlayerReconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerReconnectRequest(PlayerReconnectRequest&& from) noexcept
    : PlayerReconnectRequest() {
    *this = ::std::move(from);
  }

  inline PlayerReconnectRequest& operator=(PlayerReconnectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReconnectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerReconnectRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerReconnectRequest*>(
               &_PlayerReconnectRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PlayerReconnectRequest* other);
  friend void swap(PlayerReconnectRequest& a, PlayerReconnectRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerReconnectRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerReconnectRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerReconnectRequest& from);
  void MergeFrom(const PlayerReconnectRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerReconnectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sessionId = 1;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // required int32 lastPushId = 2;
  bool has_lastpushid() const;
  void clear_lastpushid();
  static const int kLastPushIdFieldNumber = 2;
  ::google::protobuf::int32 lastpushid() const;
  void set_lastpushid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerReconnectRequest)
 private:
  void set_has_sessionid();
  void clear_has_sessionid();
  void set_has_lastpushid();
  void clear_has_lastpushid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::int32 lastpushid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerReconnectRequestImpl();
};
// -------------------------------------------------------------------

class PlayerReconnectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerReconnectResponse) */ {
 public:
  PlayerReconnectResponse();
  virtual ~PlayerReconnectResponse();

  PlayerReconnectResponse(const PlayerReconnectResponse& from);

  inline PlayerReconnectResponse& operator=(const PlayerReconnectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerReconnectResponse(PlayerReconnectResponse&& from) noexcept
    : PlayerReconnectResponse() {
    *this = ::std::move(from);
  }

  inline PlayerReconnectResponse& operator=(PlayerReconnectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReconnectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerReconnectResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerReconnectResponse*>(
               &_PlayerReconnectResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PlayerReconnectResponse* other);
  friend void swap(PlayerReconnectResponse& a, PlayerReconnectResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerReconnectResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerReconnectResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerReconnectResponse& from);
  void MergeFrom(const PlayerReconnectResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerReconnectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReconnectState state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::ReconnectState state() const;
  void set_state(::ReconnectState value);

  // @@protoc_insertion_point(class_scope:PlayerReconnectResponse)
 private:
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int state_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerReconnectResponseImpl();
};
// -------------------------------------------------------------------

class PlayerReloadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerReloadRequest) */ {
 public:
  PlayerReloadRequest();
  virtual ~PlayerReloadRequest();

  PlayerReloadRequest(const PlayerReloadRequest& from);

  inline PlayerReloadRequest& operator=(const PlayerReloadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerReloadRequest(PlayerReloadRequest&& from) noexcept
    : PlayerReloadRequest() {
    *this = ::std::move(from);
  }

  inline PlayerReloadRequest& operator=(PlayerReloadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReloadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerReloadRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerReloadRequest*>(
               &_PlayerReloadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PlayerReloadRequest* other);
  friend void swap(PlayerReloadRequest& a, PlayerReloadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerReloadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerReloadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerReloadRequest& from);
  void MergeFrom(const PlayerReloadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerReloadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PlayerReloadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerReloadRequestImpl();
};
// -------------------------------------------------------------------

class PlayerReloadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerReloadResponse) */ {
 public:
  PlayerReloadResponse();
  virtual ~PlayerReloadResponse();

  PlayerReloadResponse(const PlayerReloadResponse& from);

  inline PlayerReloadResponse& operator=(const PlayerReloadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerReloadResponse(PlayerReloadResponse&& from) noexcept
    : PlayerReloadResponse() {
    *this = ::std::move(from);
  }

  inline PlayerReloadResponse& operator=(PlayerReloadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerReloadResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerReloadResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerReloadResponse*>(
               &_PlayerReloadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(PlayerReloadResponse* other);
  friend void swap(PlayerReloadResponse& a, PlayerReloadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerReloadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerReloadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerReloadResponse& from);
  void MergeFrom(const PlayerReloadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerReloadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 systime = 1;
  bool has_systime() const;
  void clear_systime();
  static const int kSystimeFieldNumber = 1;
  ::google::protobuf::int64 systime() const;
  void set_systime(::google::protobuf::int64 value);

  // required int32 timeZoneOffset = 2;
  bool has_timezoneoffset() const;
  void clear_timezoneoffset();
  static const int kTimeZoneOffsetFieldNumber = 2;
  ::google::protobuf::int32 timezoneoffset() const;
  void set_timezoneoffset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerReloadResponse)
 private:
  void set_has_systime();
  void clear_has_systime();
  void set_has_timezoneoffset();
  void clear_has_timezoneoffset();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 systime_;
  ::google::protobuf::int32 timezoneoffset_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerReloadResponseImpl();
};
// -------------------------------------------------------------------

class PlayerHeartBeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerHeartBeatRequest) */ {
 public:
  PlayerHeartBeatRequest();
  virtual ~PlayerHeartBeatRequest();

  PlayerHeartBeatRequest(const PlayerHeartBeatRequest& from);

  inline PlayerHeartBeatRequest& operator=(const PlayerHeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerHeartBeatRequest(PlayerHeartBeatRequest&& from) noexcept
    : PlayerHeartBeatRequest() {
    *this = ::std::move(from);
  }

  inline PlayerHeartBeatRequest& operator=(PlayerHeartBeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHeartBeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerHeartBeatRequest* internal_default_instance() {
    return reinterpret_cast<const PlayerHeartBeatRequest*>(
               &_PlayerHeartBeatRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PlayerHeartBeatRequest* other);
  friend void swap(PlayerHeartBeatRequest& a, PlayerHeartBeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerHeartBeatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerHeartBeatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerHeartBeatRequest& from);
  void MergeFrom(const PlayerHeartBeatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerHeartBeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PlayerHeartBeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerHeartBeatRequestImpl();
};
// -------------------------------------------------------------------

class PlayerHeartBeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerHeartBeatResponse) */ {
 public:
  PlayerHeartBeatResponse();
  virtual ~PlayerHeartBeatResponse();

  PlayerHeartBeatResponse(const PlayerHeartBeatResponse& from);

  inline PlayerHeartBeatResponse& operator=(const PlayerHeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerHeartBeatResponse(PlayerHeartBeatResponse&& from) noexcept
    : PlayerHeartBeatResponse() {
    *this = ::std::move(from);
  }

  inline PlayerHeartBeatResponse& operator=(PlayerHeartBeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHeartBeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerHeartBeatResponse* internal_default_instance() {
    return reinterpret_cast<const PlayerHeartBeatResponse*>(
               &_PlayerHeartBeatResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(PlayerHeartBeatResponse* other);
  friend void swap(PlayerHeartBeatResponse& a, PlayerHeartBeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerHeartBeatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerHeartBeatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerHeartBeatResponse& from);
  void MergeFrom(const PlayerHeartBeatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerHeartBeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 systime = 1;
  bool has_systime() const;
  void clear_systime();
  static const int kSystimeFieldNumber = 1;
  ::google::protobuf::int64 systime() const;
  void set_systime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PlayerHeartBeatResponse)
 private:
  void set_has_systime();
  void clear_has_systime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 systime_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerHeartBeatResponseImpl();
};
// -------------------------------------------------------------------

class SetTalentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetTalentRequest) */ {
 public:
  SetTalentRequest();
  virtual ~SetTalentRequest();

  SetTalentRequest(const SetTalentRequest& from);

  inline SetTalentRequest& operator=(const SetTalentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetTalentRequest(SetTalentRequest&& from) noexcept
    : SetTalentRequest() {
    *this = ::std::move(from);
  }

  inline SetTalentRequest& operator=(SetTalentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTalentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetTalentRequest* internal_default_instance() {
    return reinterpret_cast<const SetTalentRequest*>(
               &_SetTalentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SetTalentRequest* other);
  friend void swap(SetTalentRequest& a, SetTalentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetTalentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetTalentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetTalentRequest& from);
  void MergeFrom(const SetTalentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetTalentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 talentId = 2;
  bool has_talentid() const;
  void clear_talentid();
  static const int kTalentIdFieldNumber = 2;
  ::google::protobuf::int32 talentid() const;
  void set_talentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetTalentRequest)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_talentid();
  void clear_has_talentid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 talentid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSetTalentRequestImpl();
};
// -------------------------------------------------------------------

class SetTalentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetTalentResponse) */ {
 public:
  SetTalentResponse();
  virtual ~SetTalentResponse();

  SetTalentResponse(const SetTalentResponse& from);

  inline SetTalentResponse& operator=(const SetTalentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetTalentResponse(SetTalentResponse&& from) noexcept
    : SetTalentResponse() {
    *this = ::std::move(from);
  }

  inline SetTalentResponse& operator=(SetTalentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTalentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetTalentResponse* internal_default_instance() {
    return reinterpret_cast<const SetTalentResponse*>(
               &_SetTalentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SetTalentResponse* other);
  friend void swap(SetTalentResponse& a, SetTalentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetTalentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetTalentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetTalentResponse& from);
  void MergeFrom(const SetTalentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetTalentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // required int32 talentId = 2;
  bool has_talentid() const;
  void clear_talentid();
  static const int kTalentIdFieldNumber = 2;
  ::google::protobuf::int32 talentid() const;
  void set_talentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetTalentResponse)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_talentid();
  void clear_has_talentid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 talentid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSetTalentResponseImpl();
};
// -------------------------------------------------------------------

class SetImageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetImageRequest) */ {
 public:
  SetImageRequest();
  virtual ~SetImageRequest();

  SetImageRequest(const SetImageRequest& from);

  inline SetImageRequest& operator=(const SetImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetImageRequest(SetImageRequest&& from) noexcept
    : SetImageRequest() {
    *this = ::std::move(from);
  }

  inline SetImageRequest& operator=(SetImageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetImageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetImageRequest* internal_default_instance() {
    return reinterpret_cast<const SetImageRequest*>(
               &_SetImageRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SetImageRequest* other);
  friend void swap(SetImageRequest& a, SetImageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetImageRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetImageRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetImageRequest& from);
  void MergeFrom(const SetImageRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetImageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 image = 1;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 1;
  ::google::protobuf::int32 image() const;
  void set_image(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetImageRequest)
 private:
  void set_has_image();
  void clear_has_image();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 image_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSetImageRequestImpl();
};
// -------------------------------------------------------------------

class SetImageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetImageResponse) */ {
 public:
  SetImageResponse();
  virtual ~SetImageResponse();

  SetImageResponse(const SetImageResponse& from);

  inline SetImageResponse& operator=(const SetImageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetImageResponse(SetImageResponse&& from) noexcept
    : SetImageResponse() {
    *this = ::std::move(from);
  }

  inline SetImageResponse& operator=(SetImageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetImageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetImageResponse* internal_default_instance() {
    return reinterpret_cast<const SetImageResponse*>(
               &_SetImageResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SetImageResponse* other);
  friend void swap(SetImageResponse& a, SetImageResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetImageResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetImageResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetImageResponse& from);
  void MergeFrom(const SetImageResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetImageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 image = 2;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 2;
  ::google::protobuf::int32 image() const;
  void set_image(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetImageResponse)
 private:
  void set_has_image();
  void clear_has_image();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 image_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSetImageResponseImpl();
};
// -------------------------------------------------------------------

class QueryLordInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryLordInfoRequest) */ {
 public:
  QueryLordInfoRequest();
  virtual ~QueryLordInfoRequest();

  QueryLordInfoRequest(const QueryLordInfoRequest& from);

  inline QueryLordInfoRequest& operator=(const QueryLordInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryLordInfoRequest(QueryLordInfoRequest&& from) noexcept
    : QueryLordInfoRequest() {
    *this = ::std::move(from);
  }

  inline QueryLordInfoRequest& operator=(QueryLordInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryLordInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryLordInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryLordInfoRequest*>(
               &_QueryLordInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(QueryLordInfoRequest* other);
  friend void swap(QueryLordInfoRequest& a, QueryLordInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryLordInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryLordInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryLordInfoRequest& from);
  void MergeFrom(const QueryLordInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryLordInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int64 playerid() const;
  void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:QueryLordInfoRequest)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 playerid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsQueryLordInfoRequestImpl();
};
// -------------------------------------------------------------------

class QueryLordInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:QueryLordInfoResponse) */ {
 public:
  QueryLordInfoResponse();
  virtual ~QueryLordInfoResponse();

  QueryLordInfoResponse(const QueryLordInfoResponse& from);

  inline QueryLordInfoResponse& operator=(const QueryLordInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryLordInfoResponse(QueryLordInfoResponse&& from) noexcept
    : QueryLordInfoResponse() {
    *this = ::std::move(from);
  }

  inline QueryLordInfoResponse& operator=(QueryLordInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryLordInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryLordInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryLordInfoResponse*>(
               &_QueryLordInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(QueryLordInfoResponse* other);
  friend void swap(QueryLordInfoResponse& a, QueryLordInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryLordInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryLordInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryLordInfoResponse& from);
  void MergeFrom(const QueryLordInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryLordInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EquipmentDTO equipmentlist = 9;
  int equipmentlist_size() const;
  void clear_equipmentlist();
  static const int kEquipmentlistFieldNumber = 9;
  const ::EquipmentDTO& equipmentlist(int index) const;
  ::EquipmentDTO* mutable_equipmentlist(int index);
  ::EquipmentDTO* add_equipmentlist();
  ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >*
      mutable_equipmentlist();
  const ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >&
      equipmentlist() const;

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string alliancename = 4;
  bool has_alliancename() const;
  void clear_alliancename();
  static const int kAlliancenameFieldNumber = 4;
  const ::std::string& alliancename() const;
  void set_alliancename(const ::std::string& value);
  #if LANG_CXX11
  void set_alliancename(::std::string&& value);
  #endif
  void set_alliancename(const char* value);
  void set_alliancename(const char* value, size_t size);
  ::std::string* mutable_alliancename();
  ::std::string* release_alliancename();
  void set_allocated_alliancename(::std::string* alliancename);

  // optional int64 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int64 playerid() const;
  void set_playerid(::google::protobuf::int64 value);

  // optional int32 allianceid = 3;
  bool has_allianceid() const;
  void clear_allianceid();
  static const int kAllianceidFieldNumber = 3;
  ::google::protobuf::int32 allianceid() const;
  void set_allianceid(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 5;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // optional int32 level = 6;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional bool isfriend = 7;
  bool has_isfriend() const;
  void clear_isfriend();
  static const int kIsfriendFieldNumber = 7;
  bool isfriend() const;
  void set_isfriend(bool value);

  // optional int32 image = 8;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 8;
  ::google::protobuf::int32 image() const;
  void set_image(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QueryLordInfoResponse)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_allianceid();
  void clear_has_allianceid();
  void set_has_alliancename();
  void clear_has_alliancename();
  void set_has_exp();
  void clear_has_exp();
  void set_has_level();
  void clear_has_level();
  void set_has_isfriend();
  void clear_has_isfriend();
  void set_has_image();
  void clear_has_image();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EquipmentDTO > equipmentlist_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr alliancename_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 allianceid_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 level_;
  bool isfriend_;
  ::google::protobuf::int32 image_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsQueryLordInfoResponseImpl();
};
// -------------------------------------------------------------------

class SetIconRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetIconRequest) */ {
 public:
  SetIconRequest();
  virtual ~SetIconRequest();

  SetIconRequest(const SetIconRequest& from);

  inline SetIconRequest& operator=(const SetIconRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetIconRequest(SetIconRequest&& from) noexcept
    : SetIconRequest() {
    *this = ::std::move(from);
  }

  inline SetIconRequest& operator=(SetIconRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetIconRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetIconRequest* internal_default_instance() {
    return reinterpret_cast<const SetIconRequest*>(
               &_SetIconRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(SetIconRequest* other);
  friend void swap(SetIconRequest& a, SetIconRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetIconRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetIconRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetIconRequest& from);
  void MergeFrom(const SetIconRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetIconRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string iconID = 1;
  bool has_iconid() const;
  void clear_iconid();
  static const int kIconIDFieldNumber = 1;
  const ::std::string& iconid() const;
  void set_iconid(const ::std::string& value);
  #if LANG_CXX11
  void set_iconid(::std::string&& value);
  #endif
  void set_iconid(const char* value);
  void set_iconid(const char* value, size_t size);
  ::std::string* mutable_iconid();
  ::std::string* release_iconid();
  void set_allocated_iconid(::std::string* iconid);

  // required int32 oper = 2;
  bool has_oper() const;
  void clear_oper();
  static const int kOperFieldNumber = 2;
  ::google::protobuf::int32 oper() const;
  void set_oper(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetIconRequest)
 private:
  void set_has_iconid();
  void clear_has_iconid();
  void set_has_oper();
  void clear_has_oper();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr iconid_;
  ::google::protobuf::int32 oper_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSetIconRequestImpl();
};
// -------------------------------------------------------------------

class SetIconResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetIconResponse) */ {
 public:
  SetIconResponse();
  virtual ~SetIconResponse();

  SetIconResponse(const SetIconResponse& from);

  inline SetIconResponse& operator=(const SetIconResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetIconResponse(SetIconResponse&& from) noexcept
    : SetIconResponse() {
    *this = ::std::move(from);
  }

  inline SetIconResponse& operator=(SetIconResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetIconResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetIconResponse* internal_default_instance() {
    return reinterpret_cast<const SetIconResponse*>(
               &_SetIconResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SetIconResponse* other);
  friend void swap(SetIconResponse& a, SetIconResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetIconResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetIconResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetIconResponse& from);
  void MergeFrom(const SetIconResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetIconResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string iconID = 2;
  bool has_iconid() const;
  void clear_iconid();
  static const int kIconIDFieldNumber = 2;
  const ::std::string& iconid() const;
  void set_iconid(const ::std::string& value);
  #if LANG_CXX11
  void set_iconid(::std::string&& value);
  #endif
  void set_iconid(const char* value);
  void set_iconid(const char* value, size_t size);
  ::std::string* mutable_iconid();
  ::std::string* release_iconid();
  void set_allocated_iconid(::std::string* iconid);

  // @@protoc_insertion_point(class_scope:SetIconResponse)
 private:
  void set_has_iconid();
  void clear_has_iconid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr iconid_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSetIconResponseImpl();
};
// -------------------------------------------------------------------

class ChangeNameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChangeNameRequest) */ {
 public:
  ChangeNameRequest();
  virtual ~ChangeNameRequest();

  ChangeNameRequest(const ChangeNameRequest& from);

  inline ChangeNameRequest& operator=(const ChangeNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeNameRequest(ChangeNameRequest&& from) noexcept
    : ChangeNameRequest() {
    *this = ::std::move(from);
  }

  inline ChangeNameRequest& operator=(ChangeNameRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNameRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeNameRequest* internal_default_instance() {
    return reinterpret_cast<const ChangeNameRequest*>(
               &_ChangeNameRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ChangeNameRequest* other);
  friend void swap(ChangeNameRequest& a, ChangeNameRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeNameRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeNameRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeNameRequest& from);
  void MergeFrom(const ChangeNameRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeNameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nickname = 1;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // required bool useItem = 2;
  bool has_useitem() const;
  void clear_useitem();
  static const int kUseItemFieldNumber = 2;
  bool useitem() const;
  void set_useitem(bool value);

  // @@protoc_insertion_point(class_scope:ChangeNameRequest)
 private:
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_useitem();
  void clear_has_useitem();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  bool useitem_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsChangeNameRequestImpl();
};
// -------------------------------------------------------------------

class ChangeNameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChangeNameResponse) */ {
 public:
  ChangeNameResponse();
  virtual ~ChangeNameResponse();

  ChangeNameResponse(const ChangeNameResponse& from);

  inline ChangeNameResponse& operator=(const ChangeNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeNameResponse(ChangeNameResponse&& from) noexcept
    : ChangeNameResponse() {
    *this = ::std::move(from);
  }

  inline ChangeNameResponse& operator=(ChangeNameResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNameResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeNameResponse* internal_default_instance() {
    return reinterpret_cast<const ChangeNameResponse*>(
               &_ChangeNameResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ChangeNameResponse* other);
  friend void swap(ChangeNameResponse& a, ChangeNameResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeNameResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeNameResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeNameResponse& from);
  void MergeFrom(const ChangeNameResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeNameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PropertyDTO reward = 2;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  const ::PropertyDTO& reward() const;
  ::PropertyDTO* release_reward();
  ::PropertyDTO* mutable_reward();
  void set_allocated_reward(::PropertyDTO* reward);

  // required bool isAvailable = 1;
  bool has_isavailable() const;
  void clear_isavailable();
  static const int kIsAvailableFieldNumber = 1;
  bool isavailable() const;
  void set_isavailable(bool value);

  // @@protoc_insertion_point(class_scope:ChangeNameResponse)
 private:
  void set_has_isavailable();
  void clear_has_isavailable();
  void set_has_reward();
  void clear_has_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PropertyDTO* reward_;
  bool isavailable_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsChangeNameResponseImpl();
};
// -------------------------------------------------------------------

class SetGuideRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetGuideRequest) */ {
 public:
  SetGuideRequest();
  virtual ~SetGuideRequest();

  SetGuideRequest(const SetGuideRequest& from);

  inline SetGuideRequest& operator=(const SetGuideRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGuideRequest(SetGuideRequest&& from) noexcept
    : SetGuideRequest() {
    *this = ::std::move(from);
  }

  inline SetGuideRequest& operator=(SetGuideRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGuideRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetGuideRequest* internal_default_instance() {
    return reinterpret_cast<const SetGuideRequest*>(
               &_SetGuideRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SetGuideRequest* other);
  friend void swap(SetGuideRequest& a, SetGuideRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGuideRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGuideRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGuideRequest& from);
  void MergeFrom(const SetGuideRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGuideRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetGuideRequest)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSetGuideRequestImpl();
};
// -------------------------------------------------------------------

class PlayerDataPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerDataPush) */ {
 public:
  PlayerDataPush();
  virtual ~PlayerDataPush();

  PlayerDataPush(const PlayerDataPush& from);

  inline PlayerDataPush& operator=(const PlayerDataPush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDataPush(PlayerDataPush&& from) noexcept
    : PlayerDataPush() {
    *this = ::std::move(from);
  }

  inline PlayerDataPush& operator=(PlayerDataPush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDataPush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerDataPush* internal_default_instance() {
    return reinterpret_cast<const PlayerDataPush*>(
               &_PlayerDataPush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PlayerDataPush* other);
  friend void swap(PlayerDataPush& a, PlayerDataPush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDataPush* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerDataPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerDataPush& from);
  void MergeFrom(const PlayerDataPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerDataPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PlayerDTO player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  const ::PlayerDTO& player() const;
  ::PlayerDTO* release_player();
  ::PlayerDTO* mutable_player();
  void set_allocated_player(::PlayerDTO* player);

  // @@protoc_insertion_point(class_scope:PlayerDataPush)
 private:
  void set_has_player();
  void clear_has_player();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerDTO* player_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerDataPushImpl();
};
// -------------------------------------------------------------------

class PlayerPropertyChangePush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerPropertyChangePush) */ {
 public:
  PlayerPropertyChangePush();
  virtual ~PlayerPropertyChangePush();

  PlayerPropertyChangePush(const PlayerPropertyChangePush& from);

  inline PlayerPropertyChangePush& operator=(const PlayerPropertyChangePush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPropertyChangePush(PlayerPropertyChangePush&& from) noexcept
    : PlayerPropertyChangePush() {
    *this = ::std::move(from);
  }

  inline PlayerPropertyChangePush& operator=(PlayerPropertyChangePush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropertyChangePush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerPropertyChangePush* internal_default_instance() {
    return reinterpret_cast<const PlayerPropertyChangePush*>(
               &_PlayerPropertyChangePush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(PlayerPropertyChangePush* other);
  friend void swap(PlayerPropertyChangePush& a, PlayerPropertyChangePush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPropertyChangePush* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPropertyChangePush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPropertyChangePush& from);
  void MergeFrom(const PlayerPropertyChangePush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPropertyChangePush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PropertyDTO properties = 1;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 1;
  const ::PropertyDTO& properties(int index) const;
  ::PropertyDTO* mutable_properties(int index);
  ::PropertyDTO* add_properties();
  ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
      mutable_properties();
  const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
      properties() const;

  // @@protoc_insertion_point(class_scope:PlayerPropertyChangePush)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PropertyDTO > properties_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerPropertyChangePushImpl();
};
// -------------------------------------------------------------------

class PlayerLevelUpPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerLevelUpPush) */ {
 public:
  PlayerLevelUpPush();
  virtual ~PlayerLevelUpPush();

  PlayerLevelUpPush(const PlayerLevelUpPush& from);

  inline PlayerLevelUpPush& operator=(const PlayerLevelUpPush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLevelUpPush(PlayerLevelUpPush&& from) noexcept
    : PlayerLevelUpPush() {
    *this = ::std::move(from);
  }

  inline PlayerLevelUpPush& operator=(PlayerLevelUpPush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLevelUpPush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLevelUpPush* internal_default_instance() {
    return reinterpret_cast<const PlayerLevelUpPush*>(
               &_PlayerLevelUpPush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(PlayerLevelUpPush* other);
  friend void swap(PlayerLevelUpPush& a, PlayerLevelUpPush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLevelUpPush* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLevelUpPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLevelUpPush& from);
  void MergeFrom(const PlayerLevelUpPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLevelUpPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerLevelUpPush)
 private:
  void set_has_level();
  void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 level_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerLevelUpPushImpl();
};
// -------------------------------------------------------------------

class PlayerProtectPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerProtectPush) */ {
 public:
  PlayerProtectPush();
  virtual ~PlayerProtectPush();

  PlayerProtectPush(const PlayerProtectPush& from);

  inline PlayerProtectPush& operator=(const PlayerProtectPush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerProtectPush(PlayerProtectPush&& from) noexcept
    : PlayerProtectPush() {
    *this = ::std::move(from);
  }

  inline PlayerProtectPush& operator=(PlayerProtectPush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerProtectPush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerProtectPush* internal_default_instance() {
    return reinterpret_cast<const PlayerProtectPush*>(
               &_PlayerProtectPush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(PlayerProtectPush* other);
  friend void swap(PlayerProtectPush& a, PlayerProtectPush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerProtectPush* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerProtectPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerProtectPush& from);
  void MergeFrom(const PlayerProtectPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerProtectPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bornProtectEndTime = 1;
  bool has_bornprotectendtime() const;
  void clear_bornprotectendtime();
  static const int kBornProtectEndTimeFieldNumber = 1;
  ::google::protobuf::int32 bornprotectendtime() const;
  void set_bornprotectendtime(::google::protobuf::int32 value);

  // required int32 atkProtectEndTime = 2;
  bool has_atkprotectendtime() const;
  void clear_atkprotectendtime();
  static const int kAtkProtectEndTimeFieldNumber = 2;
  ::google::protobuf::int32 atkprotectendtime() const;
  void set_atkprotectendtime(::google::protobuf::int32 value);

  // required int32 spyProtectEndTime = 3;
  bool has_spyprotectendtime() const;
  void clear_spyprotectendtime();
  static const int kSpyProtectEndTimeFieldNumber = 3;
  ::google::protobuf::int32 spyprotectendtime() const;
  void set_spyprotectendtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerProtectPush)
 private:
  void set_has_bornprotectendtime();
  void clear_has_bornprotectendtime();
  void set_has_atkprotectendtime();
  void clear_has_atkprotectendtime();
  void set_has_spyprotectendtime();
  void clear_has_spyprotectendtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 bornprotectendtime_;
  ::google::protobuf::int32 atkprotectendtime_;
  ::google::protobuf::int32 spyprotectendtime_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerProtectPushImpl();
};
// -------------------------------------------------------------------

class PlayerCount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerCount) */ {
 public:
  PlayerCount();
  virtual ~PlayerCount();

  PlayerCount(const PlayerCount& from);

  inline PlayerCount& operator=(const PlayerCount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCount(PlayerCount&& from) noexcept
    : PlayerCount() {
    *this = ::std::move(from);
  }

  inline PlayerCount& operator=(PlayerCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCount* internal_default_instance() {
    return reinterpret_cast<const PlayerCount*>(
               &_PlayerCount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(PlayerCount* other);
  friend void swap(PlayerCount& a, PlayerCount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCount* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCount& from);
  void MergeFrom(const PlayerCount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 point = 2;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 2;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // required int32 defCount = 3;
  bool has_defcount() const;
  void clear_defcount();
  static const int kDefCountFieldNumber = 3;
  ::google::protobuf::int32 defcount() const;
  void set_defcount(::google::protobuf::int32 value);

  // optional int32 addCount = 4;
  bool has_addcount() const;
  void clear_addcount();
  static const int kAddCountFieldNumber = 4;
  ::google::protobuf::int32 addcount() const;
  void set_addcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerCount)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_point();
  void clear_has_point();
  void set_has_defcount();
  void clear_has_defcount();
  void set_has_addcount();
  void clear_has_addcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 defcount_;
  ::google::protobuf::int32 addcount_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerCountImpl();
};
// -------------------------------------------------------------------

class PlayerCountPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerCountPush) */ {
 public:
  PlayerCountPush();
  virtual ~PlayerCountPush();

  PlayerCountPush(const PlayerCountPush& from);

  inline PlayerCountPush& operator=(const PlayerCountPush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCountPush(PlayerCountPush&& from) noexcept
    : PlayerCountPush() {
    *this = ::std::move(from);
  }

  inline PlayerCountPush& operator=(PlayerCountPush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCountPush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerCountPush* internal_default_instance() {
    return reinterpret_cast<const PlayerCountPush*>(
               &_PlayerCountPush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(PlayerCountPush* other);
  friend void swap(PlayerCountPush& a, PlayerCountPush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCountPush* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCountPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCountPush& from);
  void MergeFrom(const PlayerCountPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCountPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PlayerCount counts = 1;
  int counts_size() const;
  void clear_counts();
  static const int kCountsFieldNumber = 1;
  const ::PlayerCount& counts(int index) const;
  ::PlayerCount* mutable_counts(int index);
  ::PlayerCount* add_counts();
  ::google::protobuf::RepeatedPtrField< ::PlayerCount >*
      mutable_counts();
  const ::google::protobuf::RepeatedPtrField< ::PlayerCount >&
      counts() const;

  // @@protoc_insertion_point(class_scope:PlayerCountPush)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerCount > counts_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayerCountPushImpl();
};
// -------------------------------------------------------------------

class PlayeBattlePush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayeBattlePush) */ {
 public:
  PlayeBattlePush();
  virtual ~PlayeBattlePush();

  PlayeBattlePush(const PlayeBattlePush& from);

  inline PlayeBattlePush& operator=(const PlayeBattlePush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayeBattlePush(PlayeBattlePush&& from) noexcept
    : PlayeBattlePush() {
    *this = ::std::move(from);
  }

  inline PlayeBattlePush& operator=(PlayeBattlePush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayeBattlePush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayeBattlePush* internal_default_instance() {
    return reinterpret_cast<const PlayeBattlePush*>(
               &_PlayeBattlePush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(PlayeBattlePush* other);
  friend void swap(PlayeBattlePush& a, PlayeBattlePush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayeBattlePush* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayeBattlePush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayeBattlePush& from);
  void MergeFrom(const PlayeBattlePush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayeBattlePush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 battleValue = 1;
  bool has_battlevalue() const;
  void clear_battlevalue();
  static const int kBattleValueFieldNumber = 1;
  ::google::protobuf::int32 battlevalue() const;
  void set_battlevalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayeBattlePush)
 private:
  void set_has_battlevalue();
  void clear_has_battlevalue();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 battlevalue_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsPlayeBattlePushImpl();
};
// -------------------------------------------------------------------

class TalentPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TalentPush) */ {
 public:
  TalentPush();
  virtual ~TalentPush();

  TalentPush(const TalentPush& from);

  inline TalentPush& operator=(const TalentPush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TalentPush(TalentPush&& from) noexcept
    : TalentPush() {
    *this = ::std::move(from);
  }

  inline TalentPush& operator=(TalentPush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentPush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TalentPush* internal_default_instance() {
    return reinterpret_cast<const TalentPush*>(
               &_TalentPush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(TalentPush* other);
  friend void swap(TalentPush& a, TalentPush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TalentPush* New() const PROTOBUF_FINAL { return New(NULL); }

  TalentPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TalentPush& from);
  void MergeFrom(const TalentPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TalentPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 talentIds = 1;
  int talentids_size() const;
  void clear_talentids();
  static const int kTalentIdsFieldNumber = 1;
  ::google::protobuf::int32 talentids(int index) const;
  void set_talentids(int index, ::google::protobuf::int32 value);
  void add_talentids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      talentids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_talentids();

  // @@protoc_insertion_point(class_scope:TalentPush)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > talentids_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsTalentPushImpl();
};
// -------------------------------------------------------------------

class VipInfoPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VipInfoPush) */ {
 public:
  VipInfoPush();
  virtual ~VipInfoPush();

  VipInfoPush(const VipInfoPush& from);

  inline VipInfoPush& operator=(const VipInfoPush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VipInfoPush(VipInfoPush&& from) noexcept
    : VipInfoPush() {
    *this = ::std::move(from);
  }

  inline VipInfoPush& operator=(VipInfoPush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipInfoPush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VipInfoPush* internal_default_instance() {
    return reinterpret_cast<const VipInfoPush*>(
               &_VipInfoPush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(VipInfoPush* other);
  friend void swap(VipInfoPush& a, VipInfoPush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VipInfoPush* New() const PROTOBUF_FINAL { return New(NULL); }

  VipInfoPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VipInfoPush& from);
  void MergeFrom(const VipInfoPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VipInfoPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 lv = 1;
  bool has_lv() const;
  void clear_lv();
  static const int kLvFieldNumber = 1;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // required int32 exp = 2;
  bool has_exp() const;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // required int32 sign = 3;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 3;
  ::google::protobuf::int32 sign() const;
  void set_sign(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VipInfoPush)
 private:
  void set_has_lv();
  void clear_has_lv();
  void set_has_exp();
  void clear_has_exp();
  void set_has_sign();
  void clear_has_sign();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 sign_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsVipInfoPushImpl();
};
// -------------------------------------------------------------------

class VipActiveInfoPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VipActiveInfoPush) */ {
 public:
  VipActiveInfoPush();
  virtual ~VipActiveInfoPush();

  VipActiveInfoPush(const VipActiveInfoPush& from);

  inline VipActiveInfoPush& operator=(const VipActiveInfoPush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VipActiveInfoPush(VipActiveInfoPush&& from) noexcept
    : VipActiveInfoPush() {
    *this = ::std::move(from);
  }

  inline VipActiveInfoPush& operator=(VipActiveInfoPush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipActiveInfoPush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VipActiveInfoPush* internal_default_instance() {
    return reinterpret_cast<const VipActiveInfoPush*>(
               &_VipActiveInfoPush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(VipActiveInfoPush* other);
  friend void swap(VipActiveInfoPush& a, VipActiveInfoPush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VipActiveInfoPush* New() const PROTOBUF_FINAL { return New(NULL); }

  VipActiveInfoPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VipActiveInfoPush& from);
  void MergeFrom(const VipActiveInfoPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VipActiveInfoPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 activeEnd = 1;
  bool has_activeend() const;
  void clear_activeend();
  static const int kActiveEndFieldNumber = 1;
  ::google::protobuf::int32 activeend() const;
  void set_activeend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VipActiveInfoPush)
 private:
  void set_has_activeend();
  void clear_has_activeend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 activeend_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsVipActiveInfoPushImpl();
};
// -------------------------------------------------------------------

class SysTimePush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SysTimePush) */ {
 public:
  SysTimePush();
  virtual ~SysTimePush();

  SysTimePush(const SysTimePush& from);

  inline SysTimePush& operator=(const SysTimePush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SysTimePush(SysTimePush&& from) noexcept
    : SysTimePush() {
    *this = ::std::move(from);
  }

  inline SysTimePush& operator=(SysTimePush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysTimePush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SysTimePush* internal_default_instance() {
    return reinterpret_cast<const SysTimePush*>(
               &_SysTimePush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(SysTimePush* other);
  friend void swap(SysTimePush& a, SysTimePush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SysTimePush* New() const PROTOBUF_FINAL { return New(NULL); }

  SysTimePush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SysTimePush& from);
  void MergeFrom(const SysTimePush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SysTimePush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 currTime = 1;
  bool has_currtime() const;
  void clear_currtime();
  static const int kCurrTimeFieldNumber = 1;
  ::google::protobuf::int64 currtime() const;
  void set_currtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SysTimePush)
 private:
  void set_has_currtime();
  void clear_has_currtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 currtime_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsSysTimePushImpl();
};
// -------------------------------------------------------------------

class GuidePush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuidePush) */ {
 public:
  GuidePush();
  virtual ~GuidePush();

  GuidePush(const GuidePush& from);

  inline GuidePush& operator=(const GuidePush& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuidePush(GuidePush&& from) noexcept
    : GuidePush() {
    *this = ::std::move(from);
  }

  inline GuidePush& operator=(GuidePush&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuidePush& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuidePush* internal_default_instance() {
    return reinterpret_cast<const GuidePush*>(
               &_GuidePush_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(GuidePush* other);
  friend void swap(GuidePush& a, GuidePush& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuidePush* New() const PROTOBUF_FINAL { return New(NULL); }

  GuidePush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuidePush& from);
  void MergeFrom(const GuidePush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuidePush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GuideDTO guide = 1;
  bool has_guide() const;
  void clear_guide();
  static const int kGuideFieldNumber = 1;
  const ::GuideDTO& guide() const;
  ::GuideDTO* release_guide();
  ::GuideDTO* mutable_guide();
  void set_allocated_guide(::GuideDTO* guide);

  // @@protoc_insertion_point(class_scope:GuidePush)
 private:
  void set_has_guide();
  void clear_has_guide();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuideDTO* guide_;
  friend struct ::protobuf_player_2eproto::TableStruct;
  friend void ::protobuf_player_2eproto::InitDefaultsGuidePushImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerDTO

// required uint64 playerId = 1;
inline bool PlayerDTO::has_playerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerDTO::set_has_playerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerDTO::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerDTO::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 PlayerDTO::playerid() const {
  // @@protoc_insertion_point(field_get:PlayerDTO.playerId)
  return playerid_;
}
inline void PlayerDTO::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PlayerDTO.playerId)
}

// optional string name = 2;
inline bool PlayerDTO::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDTO::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerDTO::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerDTO::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PlayerDTO::name() const {
  // @@protoc_insertion_point(field_get:PlayerDTO.name)
  return name_.GetNoArena();
}
inline void PlayerDTO::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerDTO.name)
}
#if LANG_CXX11
inline void PlayerDTO::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerDTO.name)
}
#endif
inline void PlayerDTO::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerDTO.name)
}
inline void PlayerDTO::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerDTO.name)
}
inline ::std::string* PlayerDTO::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PlayerDTO.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerDTO::release_name() {
  // @@protoc_insertion_point(field_release:PlayerDTO.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerDTO::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PlayerDTO.name)
}

// required int32 level = 3;
inline bool PlayerDTO::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerDTO::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerDTO::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerDTO::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerDTO::level() const {
  // @@protoc_insertion_point(field_get:PlayerDTO.level)
  return level_;
}
inline void PlayerDTO::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerDTO.level)
}

// repeated .PropertyDTO properties = 4;
inline int PlayerDTO::properties_size() const {
  return properties_.size();
}
inline const ::PropertyDTO& PlayerDTO::properties(int index) const {
  // @@protoc_insertion_point(field_get:PlayerDTO.properties)
  return properties_.Get(index);
}
inline ::PropertyDTO* PlayerDTO::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:PlayerDTO.properties)
  return properties_.Mutable(index);
}
inline ::PropertyDTO* PlayerDTO::add_properties() {
  // @@protoc_insertion_point(field_add:PlayerDTO.properties)
  return properties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
PlayerDTO::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:PlayerDTO.properties)
  return &properties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
PlayerDTO::properties() const {
  // @@protoc_insertion_point(field_list:PlayerDTO.properties)
  return properties_;
}

// optional string language = 5;
inline bool PlayerDTO::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerDTO::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerDTO::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerDTO::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& PlayerDTO::language() const {
  // @@protoc_insertion_point(field_get:PlayerDTO.language)
  return language_.GetNoArena();
}
inline void PlayerDTO::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerDTO.language)
}
#if LANG_CXX11
inline void PlayerDTO::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerDTO.language)
}
#endif
inline void PlayerDTO::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerDTO.language)
}
inline void PlayerDTO::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerDTO.language)
}
inline ::std::string* PlayerDTO::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:PlayerDTO.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerDTO::release_language() {
  // @@protoc_insertion_point(field_release:PlayerDTO.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerDTO::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:PlayerDTO.language)
}

// required .PositionDTO mapGridPosition = 6;
inline bool PlayerDTO::has_mapgridposition() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerDTO::set_has_mapgridposition() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerDTO::clear_has_mapgridposition() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::PositionDTO& PlayerDTO::mapgridposition() const {
  const ::PositionDTO* p = mapgridposition_;
  // @@protoc_insertion_point(field_get:PlayerDTO.mapGridPosition)
  return p != NULL ? *p : *reinterpret_cast<const ::PositionDTO*>(
      &::_PositionDTO_default_instance_);
}
inline ::PositionDTO* PlayerDTO::release_mapgridposition() {
  // @@protoc_insertion_point(field_release:PlayerDTO.mapGridPosition)
  clear_has_mapgridposition();
  ::PositionDTO* temp = mapgridposition_;
  mapgridposition_ = NULL;
  return temp;
}
inline ::PositionDTO* PlayerDTO::mutable_mapgridposition() {
  set_has_mapgridposition();
  if (mapgridposition_ == NULL) {
    mapgridposition_ = new ::PositionDTO;
  }
  // @@protoc_insertion_point(field_mutable:PlayerDTO.mapGridPosition)
  return mapgridposition_;
}
inline void PlayerDTO::set_allocated_mapgridposition(::PositionDTO* mapgridposition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mapgridposition_);
  }
  if (mapgridposition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mapgridposition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mapgridposition, submessage_arena);
    }
    set_has_mapgridposition();
  } else {
    clear_has_mapgridposition();
  }
  mapgridposition_ = mapgridposition;
  // @@protoc_insertion_point(field_set_allocated:PlayerDTO.mapGridPosition)
}

// required bool hasChangedName = 7;
inline bool PlayerDTO::has_haschangedname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerDTO::set_has_haschangedname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerDTO::clear_has_haschangedname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerDTO::clear_haschangedname() {
  haschangedname_ = false;
  clear_has_haschangedname();
}
inline bool PlayerDTO::haschangedname() const {
  // @@protoc_insertion_point(field_get:PlayerDTO.hasChangedName)
  return haschangedname_;
}
inline void PlayerDTO::set_haschangedname(bool value) {
  set_has_haschangedname();
  haschangedname_ = value;
  // @@protoc_insertion_point(field_set:PlayerDTO.hasChangedName)
}

// required string icon = 8;
inline bool PlayerDTO::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerDTO::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerDTO::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerDTO::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
inline const ::std::string& PlayerDTO::icon() const {
  // @@protoc_insertion_point(field_get:PlayerDTO.icon)
  return icon_.GetNoArena();
}
inline void PlayerDTO::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerDTO.icon)
}
#if LANG_CXX11
inline void PlayerDTO::set_icon(::std::string&& value) {
  set_has_icon();
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerDTO.icon)
}
#endif
inline void PlayerDTO::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerDTO.icon)
}
inline void PlayerDTO::set_icon(const char* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerDTO.icon)
}
inline ::std::string* PlayerDTO::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:PlayerDTO.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerDTO::release_icon() {
  // @@protoc_insertion_point(field_release:PlayerDTO.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerDTO::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:PlayerDTO.icon)
}

// -------------------------------------------------------------------

// GuideDTO

// required int32 id = 2;
inline bool GuideDTO::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuideDTO::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuideDTO::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuideDTO::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GuideDTO::id() const {
  // @@protoc_insertion_point(field_get:GuideDTO.id)
  return id_;
}
inline void GuideDTO::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:GuideDTO.id)
}

// required bool jump = 3;
inline bool GuideDTO::has_jump() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuideDTO::set_has_jump() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuideDTO::clear_has_jump() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuideDTO::clear_jump() {
  jump_ = false;
  clear_has_jump();
}
inline bool GuideDTO::jump() const {
  // @@protoc_insertion_point(field_get:GuideDTO.jump)
  return jump_;
}
inline void GuideDTO::set_jump(bool value) {
  set_has_jump();
  jump_ = value;
  // @@protoc_insertion_point(field_set:GuideDTO.jump)
}

// -------------------------------------------------------------------

// UserAccountLoginRequest

// required string platform = 1;
inline bool UserAccountLoginRequest::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAccountLoginRequest::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAccountLoginRequest::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAccountLoginRequest::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform();
}
inline const ::std::string& UserAccountLoginRequest::platform() const {
  // @@protoc_insertion_point(field_get:UserAccountLoginRequest.platform)
  return platform_.GetNoArena();
}
inline void UserAccountLoginRequest::set_platform(const ::std::string& value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserAccountLoginRequest.platform)
}
#if LANG_CXX11
inline void UserAccountLoginRequest::set_platform(::std::string&& value) {
  set_has_platform();
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserAccountLoginRequest.platform)
}
#endif
inline void UserAccountLoginRequest::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserAccountLoginRequest.platform)
}
inline void UserAccountLoginRequest::set_platform(const char* value, size_t size) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserAccountLoginRequest.platform)
}
inline ::std::string* UserAccountLoginRequest::mutable_platform() {
  set_has_platform();
  // @@protoc_insertion_point(field_mutable:UserAccountLoginRequest.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserAccountLoginRequest::release_platform() {
  // @@protoc_insertion_point(field_release:UserAccountLoginRequest.platform)
  clear_has_platform();
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAccountLoginRequest::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:UserAccountLoginRequest.platform)
}

// required string puid = 2;
inline bool UserAccountLoginRequest::has_puid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAccountLoginRequest::set_has_puid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAccountLoginRequest::clear_has_puid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAccountLoginRequest::clear_puid() {
  puid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_puid();
}
inline const ::std::string& UserAccountLoginRequest::puid() const {
  // @@protoc_insertion_point(field_get:UserAccountLoginRequest.puid)
  return puid_.GetNoArena();
}
inline void UserAccountLoginRequest::set_puid(const ::std::string& value) {
  set_has_puid();
  puid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserAccountLoginRequest.puid)
}
#if LANG_CXX11
inline void UserAccountLoginRequest::set_puid(::std::string&& value) {
  set_has_puid();
  puid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserAccountLoginRequest.puid)
}
#endif
inline void UserAccountLoginRequest::set_puid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_puid();
  puid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserAccountLoginRequest.puid)
}
inline void UserAccountLoginRequest::set_puid(const char* value, size_t size) {
  set_has_puid();
  puid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserAccountLoginRequest.puid)
}
inline ::std::string* UserAccountLoginRequest::mutable_puid() {
  set_has_puid();
  // @@protoc_insertion_point(field_mutable:UserAccountLoginRequest.puid)
  return puid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserAccountLoginRequest::release_puid() {
  // @@protoc_insertion_point(field_release:UserAccountLoginRequest.puid)
  clear_has_puid();
  return puid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserAccountLoginRequest::set_allocated_puid(::std::string* puid) {
  if (puid != NULL) {
    set_has_puid();
  } else {
    clear_has_puid();
  }
  puid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), puid);
  // @@protoc_insertion_point(field_set_allocated:UserAccountLoginRequest.puid)
}

// -------------------------------------------------------------------

// UserAccountLoginResponse

// required uint64 playerId = 1;
inline bool UserAccountLoginResponse::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAccountLoginResponse::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAccountLoginResponse::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAccountLoginResponse::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 UserAccountLoginResponse::playerid() const {
  // @@protoc_insertion_point(field_get:UserAccountLoginResponse.playerId)
  return playerid_;
}
inline void UserAccountLoginResponse::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:UserAccountLoginResponse.playerId)
}

// -------------------------------------------------------------------

// PlayerLoginRequest

// required uint64 playerId = 1;
inline bool PlayerLoginRequest::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLoginRequest::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLoginRequest::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLoginRequest::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 PlayerLoginRequest::playerid() const {
  // @@protoc_insertion_point(field_get:PlayerLoginRequest.playerId)
  return playerid_;
}
inline void PlayerLoginRequest::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PlayerLoginRequest.playerId)
}

// -------------------------------------------------------------------

// PlayerLoginResponse

// required uint64 sessionId = 1;
inline bool PlayerLoginResponse::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLoginResponse::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLoginResponse::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLoginResponse::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 PlayerLoginResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:PlayerLoginResponse.sessionId)
  return sessionid_;
}
inline void PlayerLoginResponse::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:PlayerLoginResponse.sessionId)
}

// required int64 systime = 2;
inline bool PlayerLoginResponse::has_systime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLoginResponse::set_has_systime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerLoginResponse::clear_has_systime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerLoginResponse::clear_systime() {
  systime_ = GOOGLE_LONGLONG(0);
  clear_has_systime();
}
inline ::google::protobuf::int64 PlayerLoginResponse::systime() const {
  // @@protoc_insertion_point(field_get:PlayerLoginResponse.systime)
  return systime_;
}
inline void PlayerLoginResponse::set_systime(::google::protobuf::int64 value) {
  set_has_systime();
  systime_ = value;
  // @@protoc_insertion_point(field_set:PlayerLoginResponse.systime)
}

// required int32 timeZoneOffset = 3;
inline bool PlayerLoginResponse::has_timezoneoffset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerLoginResponse::set_has_timezoneoffset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerLoginResponse::clear_has_timezoneoffset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerLoginResponse::clear_timezoneoffset() {
  timezoneoffset_ = 0;
  clear_has_timezoneoffset();
}
inline ::google::protobuf::int32 PlayerLoginResponse::timezoneoffset() const {
  // @@protoc_insertion_point(field_get:PlayerLoginResponse.timeZoneOffset)
  return timezoneoffset_;
}
inline void PlayerLoginResponse::set_timezoneoffset(::google::protobuf::int32 value) {
  set_has_timezoneoffset();
  timezoneoffset_ = value;
  // @@protoc_insertion_point(field_set:PlayerLoginResponse.timeZoneOffset)
}

// -------------------------------------------------------------------

// PlayerReconnectRequest

// required uint64 sessionId = 1;
inline bool PlayerReconnectRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReconnectRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReconnectRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReconnectRequest::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 PlayerReconnectRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:PlayerReconnectRequest.sessionId)
  return sessionid_;
}
inline void PlayerReconnectRequest::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:PlayerReconnectRequest.sessionId)
}

// required int32 lastPushId = 2;
inline bool PlayerReconnectRequest::has_lastpushid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerReconnectRequest::set_has_lastpushid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerReconnectRequest::clear_has_lastpushid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerReconnectRequest::clear_lastpushid() {
  lastpushid_ = 0;
  clear_has_lastpushid();
}
inline ::google::protobuf::int32 PlayerReconnectRequest::lastpushid() const {
  // @@protoc_insertion_point(field_get:PlayerReconnectRequest.lastPushId)
  return lastpushid_;
}
inline void PlayerReconnectRequest::set_lastpushid(::google::protobuf::int32 value) {
  set_has_lastpushid();
  lastpushid_ = value;
  // @@protoc_insertion_point(field_set:PlayerReconnectRequest.lastPushId)
}

// -------------------------------------------------------------------

// PlayerReconnectResponse

// optional .ReconnectState state = 1;
inline bool PlayerReconnectResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReconnectResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReconnectResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReconnectResponse::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::ReconnectState PlayerReconnectResponse::state() const {
  // @@protoc_insertion_point(field_get:PlayerReconnectResponse.state)
  return static_cast< ::ReconnectState >(state_);
}
inline void PlayerReconnectResponse::set_state(::ReconnectState value) {
  assert(::ReconnectState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:PlayerReconnectResponse.state)
}

// -------------------------------------------------------------------

// PlayerReloadRequest

// -------------------------------------------------------------------

// PlayerReloadResponse

// required int64 systime = 1;
inline bool PlayerReloadResponse::has_systime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerReloadResponse::set_has_systime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerReloadResponse::clear_has_systime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerReloadResponse::clear_systime() {
  systime_ = GOOGLE_LONGLONG(0);
  clear_has_systime();
}
inline ::google::protobuf::int64 PlayerReloadResponse::systime() const {
  // @@protoc_insertion_point(field_get:PlayerReloadResponse.systime)
  return systime_;
}
inline void PlayerReloadResponse::set_systime(::google::protobuf::int64 value) {
  set_has_systime();
  systime_ = value;
  // @@protoc_insertion_point(field_set:PlayerReloadResponse.systime)
}

// required int32 timeZoneOffset = 2;
inline bool PlayerReloadResponse::has_timezoneoffset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerReloadResponse::set_has_timezoneoffset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerReloadResponse::clear_has_timezoneoffset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerReloadResponse::clear_timezoneoffset() {
  timezoneoffset_ = 0;
  clear_has_timezoneoffset();
}
inline ::google::protobuf::int32 PlayerReloadResponse::timezoneoffset() const {
  // @@protoc_insertion_point(field_get:PlayerReloadResponse.timeZoneOffset)
  return timezoneoffset_;
}
inline void PlayerReloadResponse::set_timezoneoffset(::google::protobuf::int32 value) {
  set_has_timezoneoffset();
  timezoneoffset_ = value;
  // @@protoc_insertion_point(field_set:PlayerReloadResponse.timeZoneOffset)
}

// -------------------------------------------------------------------

// PlayerHeartBeatRequest

// -------------------------------------------------------------------

// PlayerHeartBeatResponse

// required int64 systime = 1;
inline bool PlayerHeartBeatResponse::has_systime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerHeartBeatResponse::set_has_systime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerHeartBeatResponse::clear_has_systime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerHeartBeatResponse::clear_systime() {
  systime_ = GOOGLE_LONGLONG(0);
  clear_has_systime();
}
inline ::google::protobuf::int64 PlayerHeartBeatResponse::systime() const {
  // @@protoc_insertion_point(field_get:PlayerHeartBeatResponse.systime)
  return systime_;
}
inline void PlayerHeartBeatResponse::set_systime(::google::protobuf::int64 value) {
  set_has_systime();
  systime_ = value;
  // @@protoc_insertion_point(field_set:PlayerHeartBeatResponse.systime)
}

// -------------------------------------------------------------------

// SetTalentRequest

// required int32 level = 1;
inline bool SetTalentRequest::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTalentRequest::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTalentRequest::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTalentRequest::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SetTalentRequest::level() const {
  // @@protoc_insertion_point(field_get:SetTalentRequest.level)
  return level_;
}
inline void SetTalentRequest::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SetTalentRequest.level)
}

// required int32 talentId = 2;
inline bool SetTalentRequest::has_talentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTalentRequest::set_has_talentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTalentRequest::clear_has_talentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTalentRequest::clear_talentid() {
  talentid_ = 0;
  clear_has_talentid();
}
inline ::google::protobuf::int32 SetTalentRequest::talentid() const {
  // @@protoc_insertion_point(field_get:SetTalentRequest.talentId)
  return talentid_;
}
inline void SetTalentRequest::set_talentid(::google::protobuf::int32 value) {
  set_has_talentid();
  talentid_ = value;
  // @@protoc_insertion_point(field_set:SetTalentRequest.talentId)
}

// -------------------------------------------------------------------

// SetTalentResponse

// required int32 level = 1;
inline bool SetTalentResponse::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTalentResponse::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTalentResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTalentResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SetTalentResponse::level() const {
  // @@protoc_insertion_point(field_get:SetTalentResponse.level)
  return level_;
}
inline void SetTalentResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SetTalentResponse.level)
}

// required int32 talentId = 2;
inline bool SetTalentResponse::has_talentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetTalentResponse::set_has_talentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetTalentResponse::clear_has_talentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetTalentResponse::clear_talentid() {
  talentid_ = 0;
  clear_has_talentid();
}
inline ::google::protobuf::int32 SetTalentResponse::talentid() const {
  // @@protoc_insertion_point(field_get:SetTalentResponse.talentId)
  return talentid_;
}
inline void SetTalentResponse::set_talentid(::google::protobuf::int32 value) {
  set_has_talentid();
  talentid_ = value;
  // @@protoc_insertion_point(field_set:SetTalentResponse.talentId)
}

// -------------------------------------------------------------------

// SetImageRequest

// required int32 image = 1;
inline bool SetImageRequest::has_image() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetImageRequest::set_has_image() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetImageRequest::clear_has_image() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetImageRequest::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 SetImageRequest::image() const {
  // @@protoc_insertion_point(field_get:SetImageRequest.image)
  return image_;
}
inline void SetImageRequest::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:SetImageRequest.image)
}

// -------------------------------------------------------------------

// SetImageResponse

// optional int32 image = 2;
inline bool SetImageResponse::has_image() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetImageResponse::set_has_image() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetImageResponse::clear_has_image() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetImageResponse::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 SetImageResponse::image() const {
  // @@protoc_insertion_point(field_get:SetImageResponse.image)
  return image_;
}
inline void SetImageResponse::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:SetImageResponse.image)
}

// -------------------------------------------------------------------

// QueryLordInfoRequest

// optional int64 playerId = 1;
inline bool QueryLordInfoRequest::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryLordInfoRequest::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryLordInfoRequest::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryLordInfoRequest::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 QueryLordInfoRequest::playerid() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoRequest.playerId)
  return playerid_;
}
inline void QueryLordInfoRequest::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:QueryLordInfoRequest.playerId)
}

// optional string name = 2;
inline bool QueryLordInfoRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryLordInfoRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryLordInfoRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryLordInfoRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& QueryLordInfoRequest::name() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoRequest.name)
  return name_.GetNoArena();
}
inline void QueryLordInfoRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryLordInfoRequest.name)
}
#if LANG_CXX11
inline void QueryLordInfoRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QueryLordInfoRequest.name)
}
#endif
inline void QueryLordInfoRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryLordInfoRequest.name)
}
inline void QueryLordInfoRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryLordInfoRequest.name)
}
inline ::std::string* QueryLordInfoRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:QueryLordInfoRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryLordInfoRequest::release_name() {
  // @@protoc_insertion_point(field_release:QueryLordInfoRequest.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryLordInfoRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:QueryLordInfoRequest.name)
}

// -------------------------------------------------------------------

// QueryLordInfoResponse

// optional int64 playerId = 1;
inline bool QueryLordInfoResponse::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryLordInfoResponse::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryLordInfoResponse::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryLordInfoResponse::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 QueryLordInfoResponse::playerid() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.playerId)
  return playerid_;
}
inline void QueryLordInfoResponse::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.playerId)
}

// optional string nickname = 2;
inline bool QueryLordInfoResponse::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryLordInfoResponse::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryLordInfoResponse::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryLordInfoResponse::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& QueryLordInfoResponse::nickname() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.nickname)
  return nickname_.GetNoArena();
}
inline void QueryLordInfoResponse::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.nickname)
}
#if LANG_CXX11
inline void QueryLordInfoResponse::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QueryLordInfoResponse.nickname)
}
#endif
inline void QueryLordInfoResponse::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryLordInfoResponse.nickname)
}
inline void QueryLordInfoResponse::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryLordInfoResponse.nickname)
}
inline ::std::string* QueryLordInfoResponse::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:QueryLordInfoResponse.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryLordInfoResponse::release_nickname() {
  // @@protoc_insertion_point(field_release:QueryLordInfoResponse.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryLordInfoResponse::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:QueryLordInfoResponse.nickname)
}

// optional int32 allianceid = 3;
inline bool QueryLordInfoResponse::has_allianceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryLordInfoResponse::set_has_allianceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryLordInfoResponse::clear_has_allianceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryLordInfoResponse::clear_allianceid() {
  allianceid_ = 0;
  clear_has_allianceid();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::allianceid() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.allianceid)
  return allianceid_;
}
inline void QueryLordInfoResponse::set_allianceid(::google::protobuf::int32 value) {
  set_has_allianceid();
  allianceid_ = value;
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.allianceid)
}

// optional string alliancename = 4;
inline bool QueryLordInfoResponse::has_alliancename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryLordInfoResponse::set_has_alliancename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryLordInfoResponse::clear_has_alliancename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryLordInfoResponse::clear_alliancename() {
  alliancename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alliancename();
}
inline const ::std::string& QueryLordInfoResponse::alliancename() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.alliancename)
  return alliancename_.GetNoArena();
}
inline void QueryLordInfoResponse::set_alliancename(const ::std::string& value) {
  set_has_alliancename();
  alliancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.alliancename)
}
#if LANG_CXX11
inline void QueryLordInfoResponse::set_alliancename(::std::string&& value) {
  set_has_alliancename();
  alliancename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:QueryLordInfoResponse.alliancename)
}
#endif
inline void QueryLordInfoResponse::set_alliancename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alliancename();
  alliancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:QueryLordInfoResponse.alliancename)
}
inline void QueryLordInfoResponse::set_alliancename(const char* value, size_t size) {
  set_has_alliancename();
  alliancename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:QueryLordInfoResponse.alliancename)
}
inline ::std::string* QueryLordInfoResponse::mutable_alliancename() {
  set_has_alliancename();
  // @@protoc_insertion_point(field_mutable:QueryLordInfoResponse.alliancename)
  return alliancename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryLordInfoResponse::release_alliancename() {
  // @@protoc_insertion_point(field_release:QueryLordInfoResponse.alliancename)
  clear_has_alliancename();
  return alliancename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryLordInfoResponse::set_allocated_alliancename(::std::string* alliancename) {
  if (alliancename != NULL) {
    set_has_alliancename();
  } else {
    clear_has_alliancename();
  }
  alliancename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alliancename);
  // @@protoc_insertion_point(field_set_allocated:QueryLordInfoResponse.alliancename)
}

// optional int32 exp = 5;
inline bool QueryLordInfoResponse::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryLordInfoResponse::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryLordInfoResponse::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryLordInfoResponse::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::exp() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.exp)
  return exp_;
}
inline void QueryLordInfoResponse::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.exp)
}

// optional int32 level = 6;
inline bool QueryLordInfoResponse::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryLordInfoResponse::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryLordInfoResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryLordInfoResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::level() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.level)
  return level_;
}
inline void QueryLordInfoResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.level)
}

// optional bool isfriend = 7;
inline bool QueryLordInfoResponse::has_isfriend() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QueryLordInfoResponse::set_has_isfriend() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QueryLordInfoResponse::clear_has_isfriend() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QueryLordInfoResponse::clear_isfriend() {
  isfriend_ = false;
  clear_has_isfriend();
}
inline bool QueryLordInfoResponse::isfriend() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.isfriend)
  return isfriend_;
}
inline void QueryLordInfoResponse::set_isfriend(bool value) {
  set_has_isfriend();
  isfriend_ = value;
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.isfriend)
}

// optional int32 image = 8;
inline bool QueryLordInfoResponse::has_image() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QueryLordInfoResponse::set_has_image() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QueryLordInfoResponse::clear_has_image() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QueryLordInfoResponse::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 QueryLordInfoResponse::image() const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.image)
  return image_;
}
inline void QueryLordInfoResponse::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:QueryLordInfoResponse.image)
}

// repeated .EquipmentDTO equipmentlist = 9;
inline int QueryLordInfoResponse::equipmentlist_size() const {
  return equipmentlist_.size();
}
inline const ::EquipmentDTO& QueryLordInfoResponse::equipmentlist(int index) const {
  // @@protoc_insertion_point(field_get:QueryLordInfoResponse.equipmentlist)
  return equipmentlist_.Get(index);
}
inline ::EquipmentDTO* QueryLordInfoResponse::mutable_equipmentlist(int index) {
  // @@protoc_insertion_point(field_mutable:QueryLordInfoResponse.equipmentlist)
  return equipmentlist_.Mutable(index);
}
inline ::EquipmentDTO* QueryLordInfoResponse::add_equipmentlist() {
  // @@protoc_insertion_point(field_add:QueryLordInfoResponse.equipmentlist)
  return equipmentlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >*
QueryLordInfoResponse::mutable_equipmentlist() {
  // @@protoc_insertion_point(field_mutable_list:QueryLordInfoResponse.equipmentlist)
  return &equipmentlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentDTO >&
QueryLordInfoResponse::equipmentlist() const {
  // @@protoc_insertion_point(field_list:QueryLordInfoResponse.equipmentlist)
  return equipmentlist_;
}

// -------------------------------------------------------------------

// SetIconRequest

// required string iconID = 1;
inline bool SetIconRequest::has_iconid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetIconRequest::set_has_iconid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetIconRequest::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetIconRequest::clear_iconid() {
  iconid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconid();
}
inline const ::std::string& SetIconRequest::iconid() const {
  // @@protoc_insertion_point(field_get:SetIconRequest.iconID)
  return iconid_.GetNoArena();
}
inline void SetIconRequest::set_iconid(const ::std::string& value) {
  set_has_iconid();
  iconid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetIconRequest.iconID)
}
#if LANG_CXX11
inline void SetIconRequest::set_iconid(::std::string&& value) {
  set_has_iconid();
  iconid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetIconRequest.iconID)
}
#endif
inline void SetIconRequest::set_iconid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconid();
  iconid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetIconRequest.iconID)
}
inline void SetIconRequest::set_iconid(const char* value, size_t size) {
  set_has_iconid();
  iconid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetIconRequest.iconID)
}
inline ::std::string* SetIconRequest::mutable_iconid() {
  set_has_iconid();
  // @@protoc_insertion_point(field_mutable:SetIconRequest.iconID)
  return iconid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetIconRequest::release_iconid() {
  // @@protoc_insertion_point(field_release:SetIconRequest.iconID)
  clear_has_iconid();
  return iconid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetIconRequest::set_allocated_iconid(::std::string* iconid) {
  if (iconid != NULL) {
    set_has_iconid();
  } else {
    clear_has_iconid();
  }
  iconid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconid);
  // @@protoc_insertion_point(field_set_allocated:SetIconRequest.iconID)
}

// required int32 oper = 2;
inline bool SetIconRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetIconRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetIconRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetIconRequest::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::google::protobuf::int32 SetIconRequest::oper() const {
  // @@protoc_insertion_point(field_get:SetIconRequest.oper)
  return oper_;
}
inline void SetIconRequest::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:SetIconRequest.oper)
}

// -------------------------------------------------------------------

// SetIconResponse

// optional string iconID = 2;
inline bool SetIconResponse::has_iconid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetIconResponse::set_has_iconid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetIconResponse::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetIconResponse::clear_iconid() {
  iconid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconid();
}
inline const ::std::string& SetIconResponse::iconid() const {
  // @@protoc_insertion_point(field_get:SetIconResponse.iconID)
  return iconid_.GetNoArena();
}
inline void SetIconResponse::set_iconid(const ::std::string& value) {
  set_has_iconid();
  iconid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SetIconResponse.iconID)
}
#if LANG_CXX11
inline void SetIconResponse::set_iconid(::std::string&& value) {
  set_has_iconid();
  iconid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SetIconResponse.iconID)
}
#endif
inline void SetIconResponse::set_iconid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconid();
  iconid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SetIconResponse.iconID)
}
inline void SetIconResponse::set_iconid(const char* value, size_t size) {
  set_has_iconid();
  iconid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SetIconResponse.iconID)
}
inline ::std::string* SetIconResponse::mutable_iconid() {
  set_has_iconid();
  // @@protoc_insertion_point(field_mutable:SetIconResponse.iconID)
  return iconid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetIconResponse::release_iconid() {
  // @@protoc_insertion_point(field_release:SetIconResponse.iconID)
  clear_has_iconid();
  return iconid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetIconResponse::set_allocated_iconid(::std::string* iconid) {
  if (iconid != NULL) {
    set_has_iconid();
  } else {
    clear_has_iconid();
  }
  iconid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconid);
  // @@protoc_insertion_point(field_set_allocated:SetIconResponse.iconID)
}

// -------------------------------------------------------------------

// ChangeNameRequest

// required string nickname = 1;
inline bool ChangeNameRequest::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeNameRequest::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeNameRequest::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeNameRequest::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& ChangeNameRequest::nickname() const {
  // @@protoc_insertion_point(field_get:ChangeNameRequest.nickname)
  return nickname_.GetNoArena();
}
inline void ChangeNameRequest::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChangeNameRequest.nickname)
}
#if LANG_CXX11
inline void ChangeNameRequest::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChangeNameRequest.nickname)
}
#endif
inline void ChangeNameRequest::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChangeNameRequest.nickname)
}
inline void ChangeNameRequest::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChangeNameRequest.nickname)
}
inline ::std::string* ChangeNameRequest::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:ChangeNameRequest.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeNameRequest::release_nickname() {
  // @@protoc_insertion_point(field_release:ChangeNameRequest.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeNameRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:ChangeNameRequest.nickname)
}

// required bool useItem = 2;
inline bool ChangeNameRequest::has_useitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeNameRequest::set_has_useitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeNameRequest::clear_has_useitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeNameRequest::clear_useitem() {
  useitem_ = false;
  clear_has_useitem();
}
inline bool ChangeNameRequest::useitem() const {
  // @@protoc_insertion_point(field_get:ChangeNameRequest.useItem)
  return useitem_;
}
inline void ChangeNameRequest::set_useitem(bool value) {
  set_has_useitem();
  useitem_ = value;
  // @@protoc_insertion_point(field_set:ChangeNameRequest.useItem)
}

// -------------------------------------------------------------------

// ChangeNameResponse

// required bool isAvailable = 1;
inline bool ChangeNameResponse::has_isavailable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeNameResponse::set_has_isavailable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeNameResponse::clear_has_isavailable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeNameResponse::clear_isavailable() {
  isavailable_ = false;
  clear_has_isavailable();
}
inline bool ChangeNameResponse::isavailable() const {
  // @@protoc_insertion_point(field_get:ChangeNameResponse.isAvailable)
  return isavailable_;
}
inline void ChangeNameResponse::set_isavailable(bool value) {
  set_has_isavailable();
  isavailable_ = value;
  // @@protoc_insertion_point(field_set:ChangeNameResponse.isAvailable)
}

// optional .PropertyDTO reward = 2;
inline bool ChangeNameResponse::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeNameResponse::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeNameResponse::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::PropertyDTO& ChangeNameResponse::reward() const {
  const ::PropertyDTO* p = reward_;
  // @@protoc_insertion_point(field_get:ChangeNameResponse.reward)
  return p != NULL ? *p : *reinterpret_cast<const ::PropertyDTO*>(
      &::_PropertyDTO_default_instance_);
}
inline ::PropertyDTO* ChangeNameResponse::release_reward() {
  // @@protoc_insertion_point(field_release:ChangeNameResponse.reward)
  clear_has_reward();
  ::PropertyDTO* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline ::PropertyDTO* ChangeNameResponse::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) {
    reward_ = new ::PropertyDTO;
  }
  // @@protoc_insertion_point(field_mutable:ChangeNameResponse.reward)
  return reward_;
}
inline void ChangeNameResponse::set_allocated_reward(::PropertyDTO* reward) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reward_);
  }
  if (reward) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reward = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reward, submessage_arena);
    }
    set_has_reward();
  } else {
    clear_has_reward();
  }
  reward_ = reward;
  // @@protoc_insertion_point(field_set_allocated:ChangeNameResponse.reward)
}

// -------------------------------------------------------------------

// SetGuideRequest

// required int32 id = 1;
inline bool SetGuideRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGuideRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGuideRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGuideRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SetGuideRequest::id() const {
  // @@protoc_insertion_point(field_get:SetGuideRequest.id)
  return id_;
}
inline void SetGuideRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SetGuideRequest.id)
}

// -------------------------------------------------------------------

// PlayerDataPush

// required .PlayerDTO player = 1;
inline bool PlayerDataPush::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDataPush::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerDataPush::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerDataPush::clear_player() {
  if (player_ != NULL) player_->Clear();
  clear_has_player();
}
inline const ::PlayerDTO& PlayerDataPush::player() const {
  const ::PlayerDTO* p = player_;
  // @@protoc_insertion_point(field_get:PlayerDataPush.player)
  return p != NULL ? *p : *reinterpret_cast<const ::PlayerDTO*>(
      &::_PlayerDTO_default_instance_);
}
inline ::PlayerDTO* PlayerDataPush::release_player() {
  // @@protoc_insertion_point(field_release:PlayerDataPush.player)
  clear_has_player();
  ::PlayerDTO* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::PlayerDTO* PlayerDataPush::mutable_player() {
  set_has_player();
  if (player_ == NULL) {
    player_ = new ::PlayerDTO;
  }
  // @@protoc_insertion_point(field_mutable:PlayerDataPush.player)
  return player_;
}
inline void PlayerDataPush::set_allocated_player(::PlayerDTO* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete player_;
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    set_has_player();
  } else {
    clear_has_player();
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:PlayerDataPush.player)
}

// -------------------------------------------------------------------

// PlayerPropertyChangePush

// repeated .PropertyDTO properties = 1;
inline int PlayerPropertyChangePush::properties_size() const {
  return properties_.size();
}
inline const ::PropertyDTO& PlayerPropertyChangePush::properties(int index) const {
  // @@protoc_insertion_point(field_get:PlayerPropertyChangePush.properties)
  return properties_.Get(index);
}
inline ::PropertyDTO* PlayerPropertyChangePush::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:PlayerPropertyChangePush.properties)
  return properties_.Mutable(index);
}
inline ::PropertyDTO* PlayerPropertyChangePush::add_properties() {
  // @@protoc_insertion_point(field_add:PlayerPropertyChangePush.properties)
  return properties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PropertyDTO >*
PlayerPropertyChangePush::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:PlayerPropertyChangePush.properties)
  return &properties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PropertyDTO >&
PlayerPropertyChangePush::properties() const {
  // @@protoc_insertion_point(field_list:PlayerPropertyChangePush.properties)
  return properties_;
}

// -------------------------------------------------------------------

// PlayerLevelUpPush

// required int32 level = 1;
inline bool PlayerLevelUpPush::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLevelUpPush::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLevelUpPush::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLevelUpPush::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerLevelUpPush::level() const {
  // @@protoc_insertion_point(field_get:PlayerLevelUpPush.level)
  return level_;
}
inline void PlayerLevelUpPush::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerLevelUpPush.level)
}

// -------------------------------------------------------------------

// PlayerProtectPush

// required int32 bornProtectEndTime = 1;
inline bool PlayerProtectPush::has_bornprotectendtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerProtectPush::set_has_bornprotectendtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerProtectPush::clear_has_bornprotectendtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerProtectPush::clear_bornprotectendtime() {
  bornprotectendtime_ = 0;
  clear_has_bornprotectendtime();
}
inline ::google::protobuf::int32 PlayerProtectPush::bornprotectendtime() const {
  // @@protoc_insertion_point(field_get:PlayerProtectPush.bornProtectEndTime)
  return bornprotectendtime_;
}
inline void PlayerProtectPush::set_bornprotectendtime(::google::protobuf::int32 value) {
  set_has_bornprotectendtime();
  bornprotectendtime_ = value;
  // @@protoc_insertion_point(field_set:PlayerProtectPush.bornProtectEndTime)
}

// required int32 atkProtectEndTime = 2;
inline bool PlayerProtectPush::has_atkprotectendtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerProtectPush::set_has_atkprotectendtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerProtectPush::clear_has_atkprotectendtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerProtectPush::clear_atkprotectendtime() {
  atkprotectendtime_ = 0;
  clear_has_atkprotectendtime();
}
inline ::google::protobuf::int32 PlayerProtectPush::atkprotectendtime() const {
  // @@protoc_insertion_point(field_get:PlayerProtectPush.atkProtectEndTime)
  return atkprotectendtime_;
}
inline void PlayerProtectPush::set_atkprotectendtime(::google::protobuf::int32 value) {
  set_has_atkprotectendtime();
  atkprotectendtime_ = value;
  // @@protoc_insertion_point(field_set:PlayerProtectPush.atkProtectEndTime)
}

// required int32 spyProtectEndTime = 3;
inline bool PlayerProtectPush::has_spyprotectendtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerProtectPush::set_has_spyprotectendtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerProtectPush::clear_has_spyprotectendtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerProtectPush::clear_spyprotectendtime() {
  spyprotectendtime_ = 0;
  clear_has_spyprotectendtime();
}
inline ::google::protobuf::int32 PlayerProtectPush::spyprotectendtime() const {
  // @@protoc_insertion_point(field_get:PlayerProtectPush.spyProtectEndTime)
  return spyprotectendtime_;
}
inline void PlayerProtectPush::set_spyprotectendtime(::google::protobuf::int32 value) {
  set_has_spyprotectendtime();
  spyprotectendtime_ = value;
  // @@protoc_insertion_point(field_set:PlayerProtectPush.spyProtectEndTime)
}

// -------------------------------------------------------------------

// PlayerCount

// required int32 type = 1;
inline bool PlayerCount::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCount::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerCount::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerCount::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PlayerCount::type() const {
  // @@protoc_insertion_point(field_get:PlayerCount.type)
  return type_;
}
inline void PlayerCount::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:PlayerCount.type)
}

// required int32 point = 2;
inline bool PlayerCount::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCount::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerCount::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerCount::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 PlayerCount::point() const {
  // @@protoc_insertion_point(field_get:PlayerCount.point)
  return point_;
}
inline void PlayerCount::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:PlayerCount.point)
}

// required int32 defCount = 3;
inline bool PlayerCount::has_defcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerCount::set_has_defcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerCount::clear_has_defcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerCount::clear_defcount() {
  defcount_ = 0;
  clear_has_defcount();
}
inline ::google::protobuf::int32 PlayerCount::defcount() const {
  // @@protoc_insertion_point(field_get:PlayerCount.defCount)
  return defcount_;
}
inline void PlayerCount::set_defcount(::google::protobuf::int32 value) {
  set_has_defcount();
  defcount_ = value;
  // @@protoc_insertion_point(field_set:PlayerCount.defCount)
}

// optional int32 addCount = 4;
inline bool PlayerCount::has_addcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerCount::set_has_addcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerCount::clear_has_addcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerCount::clear_addcount() {
  addcount_ = 0;
  clear_has_addcount();
}
inline ::google::protobuf::int32 PlayerCount::addcount() const {
  // @@protoc_insertion_point(field_get:PlayerCount.addCount)
  return addcount_;
}
inline void PlayerCount::set_addcount(::google::protobuf::int32 value) {
  set_has_addcount();
  addcount_ = value;
  // @@protoc_insertion_point(field_set:PlayerCount.addCount)
}

// -------------------------------------------------------------------

// PlayerCountPush

// repeated .PlayerCount counts = 1;
inline int PlayerCountPush::counts_size() const {
  return counts_.size();
}
inline void PlayerCountPush::clear_counts() {
  counts_.Clear();
}
inline const ::PlayerCount& PlayerCountPush::counts(int index) const {
  // @@protoc_insertion_point(field_get:PlayerCountPush.counts)
  return counts_.Get(index);
}
inline ::PlayerCount* PlayerCountPush::mutable_counts(int index) {
  // @@protoc_insertion_point(field_mutable:PlayerCountPush.counts)
  return counts_.Mutable(index);
}
inline ::PlayerCount* PlayerCountPush::add_counts() {
  // @@protoc_insertion_point(field_add:PlayerCountPush.counts)
  return counts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerCount >*
PlayerCountPush::mutable_counts() {
  // @@protoc_insertion_point(field_mutable_list:PlayerCountPush.counts)
  return &counts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerCount >&
PlayerCountPush::counts() const {
  // @@protoc_insertion_point(field_list:PlayerCountPush.counts)
  return counts_;
}

// -------------------------------------------------------------------

// PlayeBattlePush

// required int32 battleValue = 1;
inline bool PlayeBattlePush::has_battlevalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayeBattlePush::set_has_battlevalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayeBattlePush::clear_has_battlevalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayeBattlePush::clear_battlevalue() {
  battlevalue_ = 0;
  clear_has_battlevalue();
}
inline ::google::protobuf::int32 PlayeBattlePush::battlevalue() const {
  // @@protoc_insertion_point(field_get:PlayeBattlePush.battleValue)
  return battlevalue_;
}
inline void PlayeBattlePush::set_battlevalue(::google::protobuf::int32 value) {
  set_has_battlevalue();
  battlevalue_ = value;
  // @@protoc_insertion_point(field_set:PlayeBattlePush.battleValue)
}

// -------------------------------------------------------------------

// TalentPush

// repeated int32 talentIds = 1;
inline int TalentPush::talentids_size() const {
  return talentids_.size();
}
inline void TalentPush::clear_talentids() {
  talentids_.Clear();
}
inline ::google::protobuf::int32 TalentPush::talentids(int index) const {
  // @@protoc_insertion_point(field_get:TalentPush.talentIds)
  return talentids_.Get(index);
}
inline void TalentPush::set_talentids(int index, ::google::protobuf::int32 value) {
  talentids_.Set(index, value);
  // @@protoc_insertion_point(field_set:TalentPush.talentIds)
}
inline void TalentPush::add_talentids(::google::protobuf::int32 value) {
  talentids_.Add(value);
  // @@protoc_insertion_point(field_add:TalentPush.talentIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TalentPush::talentids() const {
  // @@protoc_insertion_point(field_list:TalentPush.talentIds)
  return talentids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TalentPush::mutable_talentids() {
  // @@protoc_insertion_point(field_mutable_list:TalentPush.talentIds)
  return &talentids_;
}

// -------------------------------------------------------------------

// VipInfoPush

// required int32 lv = 1;
inline bool VipInfoPush::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipInfoPush::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipInfoPush::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipInfoPush::clear_lv() {
  lv_ = 0;
  clear_has_lv();
}
inline ::google::protobuf::int32 VipInfoPush::lv() const {
  // @@protoc_insertion_point(field_get:VipInfoPush.lv)
  return lv_;
}
inline void VipInfoPush::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:VipInfoPush.lv)
}

// required int32 exp = 2;
inline bool VipInfoPush::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipInfoPush::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipInfoPush::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipInfoPush::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 VipInfoPush::exp() const {
  // @@protoc_insertion_point(field_get:VipInfoPush.exp)
  return exp_;
}
inline void VipInfoPush::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:VipInfoPush.exp)
}

// required int32 sign = 3;
inline bool VipInfoPush::has_sign() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipInfoPush::set_has_sign() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipInfoPush::clear_has_sign() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipInfoPush::clear_sign() {
  sign_ = 0;
  clear_has_sign();
}
inline ::google::protobuf::int32 VipInfoPush::sign() const {
  // @@protoc_insertion_point(field_get:VipInfoPush.sign)
  return sign_;
}
inline void VipInfoPush::set_sign(::google::protobuf::int32 value) {
  set_has_sign();
  sign_ = value;
  // @@protoc_insertion_point(field_set:VipInfoPush.sign)
}

// -------------------------------------------------------------------

// VipActiveInfoPush

// required int32 activeEnd = 1;
inline bool VipActiveInfoPush::has_activeend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipActiveInfoPush::set_has_activeend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipActiveInfoPush::clear_has_activeend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipActiveInfoPush::clear_activeend() {
  activeend_ = 0;
  clear_has_activeend();
}
inline ::google::protobuf::int32 VipActiveInfoPush::activeend() const {
  // @@protoc_insertion_point(field_get:VipActiveInfoPush.activeEnd)
  return activeend_;
}
inline void VipActiveInfoPush::set_activeend(::google::protobuf::int32 value) {
  set_has_activeend();
  activeend_ = value;
  // @@protoc_insertion_point(field_set:VipActiveInfoPush.activeEnd)
}

// -------------------------------------------------------------------

// SysTimePush

// required int64 currTime = 1;
inline bool SysTimePush::has_currtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysTimePush::set_has_currtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysTimePush::clear_has_currtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysTimePush::clear_currtime() {
  currtime_ = GOOGLE_LONGLONG(0);
  clear_has_currtime();
}
inline ::google::protobuf::int64 SysTimePush::currtime() const {
  // @@protoc_insertion_point(field_get:SysTimePush.currTime)
  return currtime_;
}
inline void SysTimePush::set_currtime(::google::protobuf::int64 value) {
  set_has_currtime();
  currtime_ = value;
  // @@protoc_insertion_point(field_set:SysTimePush.currTime)
}

// -------------------------------------------------------------------

// GuidePush

// required .GuideDTO guide = 1;
inline bool GuidePush::has_guide() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuidePush::set_has_guide() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuidePush::clear_has_guide() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuidePush::clear_guide() {
  if (guide_ != NULL) guide_->Clear();
  clear_has_guide();
}
inline const ::GuideDTO& GuidePush::guide() const {
  const ::GuideDTO* p = guide_;
  // @@protoc_insertion_point(field_get:GuidePush.guide)
  return p != NULL ? *p : *reinterpret_cast<const ::GuideDTO*>(
      &::_GuideDTO_default_instance_);
}
inline ::GuideDTO* GuidePush::release_guide() {
  // @@protoc_insertion_point(field_release:GuidePush.guide)
  clear_has_guide();
  ::GuideDTO* temp = guide_;
  guide_ = NULL;
  return temp;
}
inline ::GuideDTO* GuidePush::mutable_guide() {
  set_has_guide();
  if (guide_ == NULL) {
    guide_ = new ::GuideDTO;
  }
  // @@protoc_insertion_point(field_mutable:GuidePush.guide)
  return guide_;
}
inline void GuidePush::set_allocated_guide(::GuideDTO* guide) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete guide_;
  }
  if (guide) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guide = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guide, submessage_arena);
    }
    set_has_guide();
  } else {
    clear_has_guide();
  }
  guide_ = guide;
  // @@protoc_insertion_point(field_set_allocated:GuidePush.guide)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PlayerCommandId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlayerCommandId>() {
  return ::PlayerCommandId_descriptor();
}
template <> struct is_proto_enum< ::ReconnectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ReconnectState>() {
  return ::ReconnectState_descriptor();
}
template <> struct is_proto_enum< ::PlayerPushId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlayerPushId>() {
  return ::PlayerPushId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_player_2eproto__INCLUDED
