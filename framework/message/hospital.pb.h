// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hospital.proto

#ifndef PROTOBUF_hospital_2eproto__INCLUDED
#define PROTOBUF_hospital_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_hospital_2eproto();
void protobuf_AssignDesc_hospital_2eproto();
void protobuf_ShutdownFile_hospital_2eproto();

class CureTimesDTO;
class RecvSoldierRequest;
class RecvSoldierResponse;
class CureSoldierRequest;
class CureSoldierResponse;
class HospitalInfoPush;

enum HospitalCommandId {
  HOSPITAL_RECV_SOLDIER = 1201,
  HOSPITAL_CURE_SOLDIER = 1202
};
bool HospitalCommandId_IsValid(int value);
const HospitalCommandId HospitalCommandId_MIN = HOSPITAL_RECV_SOLDIER;
const HospitalCommandId HospitalCommandId_MAX = HOSPITAL_CURE_SOLDIER;
const int HospitalCommandId_ARRAYSIZE = HospitalCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HospitalCommandId_descriptor();
inline const ::std::string& HospitalCommandId_Name(HospitalCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HospitalCommandId_descriptor(), value);
}
inline bool HospitalCommandId_Parse(
    const ::std::string& name, HospitalCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HospitalCommandId>(
    HospitalCommandId_descriptor(), name, value);
}
enum HospitalPushId {
  HOSPITAL_INFO_PUSH = 51201
};
bool HospitalPushId_IsValid(int value);
const HospitalPushId HospitalPushId_MIN = HOSPITAL_INFO_PUSH;
const HospitalPushId HospitalPushId_MAX = HOSPITAL_INFO_PUSH;
const int HospitalPushId_ARRAYSIZE = HospitalPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HospitalPushId_descriptor();
inline const ::std::string& HospitalPushId_Name(HospitalPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HospitalPushId_descriptor(), value);
}
inline bool HospitalPushId_Parse(
    const ::std::string& name, HospitalPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HospitalPushId>(
    HospitalPushId_descriptor(), name, value);
}
// ===================================================================

class CureTimesDTO : public ::google::protobuf::Message {
 public:
  CureTimesDTO();
  virtual ~CureTimesDTO();

  CureTimesDTO(const CureTimesDTO& from);

  inline CureTimesDTO& operator=(const CureTimesDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CureTimesDTO& default_instance();

  void Swap(CureTimesDTO* other);

  // implements Message ----------------------------------------------

  CureTimesDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CureTimesDTO& from);
  void MergeFrom(const CureTimesDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 soldierType = 1;
  inline bool has_soldiertype() const;
  inline void clear_soldiertype();
  static const int kSoldierTypeFieldNumber = 1;
  inline ::google::protobuf::int32 soldiertype() const;
  inline void set_soldiertype(::google::protobuf::int32 value);

  // required int32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::int32 times() const;
  inline void set_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.CureTimesDTO)
 private:
  inline void set_has_soldiertype();
  inline void clear_has_soldiertype();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 soldiertype_;
  ::google::protobuf::int32 times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hospital_2eproto();
  friend void protobuf_AssignDesc_hospital_2eproto();
  friend void protobuf_ShutdownFile_hospital_2eproto();

  void InitAsDefaultInstance();
  static CureTimesDTO* default_instance_;
};
// -------------------------------------------------------------------

class RecvSoldierRequest : public ::google::protobuf::Message {
 public:
  RecvSoldierRequest();
  virtual ~RecvSoldierRequest();

  RecvSoldierRequest(const RecvSoldierRequest& from);

  inline RecvSoldierRequest& operator=(const RecvSoldierRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvSoldierRequest& default_instance();

  void Swap(RecvSoldierRequest* other);

  // implements Message ----------------------------------------------

  RecvSoldierRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvSoldierRequest& from);
  void MergeFrom(const RecvSoldierRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:slg.protocol.RecvSoldierRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_hospital_2eproto();
  friend void protobuf_AssignDesc_hospital_2eproto();
  friend void protobuf_ShutdownFile_hospital_2eproto();

  void InitAsDefaultInstance();
  static RecvSoldierRequest* default_instance_;
};
// -------------------------------------------------------------------

class RecvSoldierResponse : public ::google::protobuf::Message {
 public:
  RecvSoldierResponse();
  virtual ~RecvSoldierResponse();

  RecvSoldierResponse(const RecvSoldierResponse& from);

  inline RecvSoldierResponse& operator=(const RecvSoldierResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvSoldierResponse& default_instance();

  void Swap(RecvSoldierResponse* other);

  // implements Message ----------------------------------------------

  RecvSoldierResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecvSoldierResponse& from);
  void MergeFrom(const RecvSoldierResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.SoldierDTO soldiers = 1;
  inline int soldiers_size() const;
  inline void clear_soldiers();
  static const int kSoldiersFieldNumber = 1;
  inline const ::slg::protocol::SoldierDTO& soldiers(int index) const;
  inline ::slg::protocol::SoldierDTO* mutable_soldiers(int index);
  inline ::slg::protocol::SoldierDTO* add_soldiers();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >&
      soldiers() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >*
      mutable_soldiers();

  // @@protoc_insertion_point(class_scope:slg.protocol.RecvSoldierResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO > soldiers_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hospital_2eproto();
  friend void protobuf_AssignDesc_hospital_2eproto();
  friend void protobuf_ShutdownFile_hospital_2eproto();

  void InitAsDefaultInstance();
  static RecvSoldierResponse* default_instance_;
};
// -------------------------------------------------------------------

class CureSoldierRequest : public ::google::protobuf::Message {
 public:
  CureSoldierRequest();
  virtual ~CureSoldierRequest();

  CureSoldierRequest(const CureSoldierRequest& from);

  inline CureSoldierRequest& operator=(const CureSoldierRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CureSoldierRequest& default_instance();

  void Swap(CureSoldierRequest* other);

  // implements Message ----------------------------------------------

  CureSoldierRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CureSoldierRequest& from);
  void MergeFrom(const CureSoldierRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 soldierType = 1;
  inline bool has_soldiertype() const;
  inline void clear_soldiertype();
  static const int kSoldierTypeFieldNumber = 1;
  inline ::google::protobuf::int32 soldiertype() const;
  inline void set_soldiertype(::google::protobuf::int32 value);

  // required bool oper = 2;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 2;
  inline bool oper() const;
  inline void set_oper(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.CureSoldierRequest)
 private:
  inline void set_has_soldiertype();
  inline void clear_has_soldiertype();
  inline void set_has_oper();
  inline void clear_has_oper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 soldiertype_;
  bool oper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_hospital_2eproto();
  friend void protobuf_AssignDesc_hospital_2eproto();
  friend void protobuf_ShutdownFile_hospital_2eproto();

  void InitAsDefaultInstance();
  static CureSoldierRequest* default_instance_;
};
// -------------------------------------------------------------------

class CureSoldierResponse : public ::google::protobuf::Message {
 public:
  CureSoldierResponse();
  virtual ~CureSoldierResponse();

  CureSoldierResponse(const CureSoldierResponse& from);

  inline CureSoldierResponse& operator=(const CureSoldierResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CureSoldierResponse& default_instance();

  void Swap(CureSoldierResponse* other);

  // implements Message ----------------------------------------------

  CureSoldierResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CureSoldierResponse& from);
  void MergeFrom(const CureSoldierResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 soldierType = 1;
  inline bool has_soldiertype() const;
  inline void clear_soldiertype();
  static const int kSoldierTypeFieldNumber = 1;
  inline ::google::protobuf::int32 soldiertype() const;
  inline void set_soldiertype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.CureSoldierResponse)
 private:
  inline void set_has_soldiertype();
  inline void clear_has_soldiertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 soldiertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_hospital_2eproto();
  friend void protobuf_AssignDesc_hospital_2eproto();
  friend void protobuf_ShutdownFile_hospital_2eproto();

  void InitAsDefaultInstance();
  static CureSoldierResponse* default_instance_;
};
// -------------------------------------------------------------------

class HospitalInfoPush : public ::google::protobuf::Message {
 public:
  HospitalInfoPush();
  virtual ~HospitalInfoPush();

  HospitalInfoPush(const HospitalInfoPush& from);

  inline HospitalInfoPush& operator=(const HospitalInfoPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HospitalInfoPush& default_instance();

  void Swap(HospitalInfoPush* other);

  // implements Message ----------------------------------------------

  HospitalInfoPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HospitalInfoPush& from);
  void MergeFrom(const HospitalInfoPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.LevelSoldierDTO woundedSoldiers = 1;
  inline int woundedsoldiers_size() const;
  inline void clear_woundedsoldiers();
  static const int kWoundedSoldiersFieldNumber = 1;
  inline const ::slg::protocol::LevelSoldierDTO& woundedsoldiers(int index) const;
  inline ::slg::protocol::LevelSoldierDTO* mutable_woundedsoldiers(int index);
  inline ::slg::protocol::LevelSoldierDTO* add_woundedsoldiers();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::LevelSoldierDTO >&
      woundedsoldiers() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::LevelSoldierDTO >*
      mutable_woundedsoldiers();

  // repeated .slg.protocol.SoldierDTO curedSoldiers = 2;
  inline int curedsoldiers_size() const;
  inline void clear_curedsoldiers();
  static const int kCuredSoldiersFieldNumber = 2;
  inline const ::slg::protocol::SoldierDTO& curedsoldiers(int index) const;
  inline ::slg::protocol::SoldierDTO* mutable_curedsoldiers(int index);
  inline ::slg::protocol::SoldierDTO* add_curedsoldiers();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >&
      curedsoldiers() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >*
      mutable_curedsoldiers();

  // repeated .slg.protocol.CureTimesDTO cureTimes = 3;
  inline int curetimes_size() const;
  inline void clear_curetimes();
  static const int kCureTimesFieldNumber = 3;
  inline const ::slg::protocol::CureTimesDTO& curetimes(int index) const;
  inline ::slg::protocol::CureTimesDTO* mutable_curetimes(int index);
  inline ::slg::protocol::CureTimesDTO* add_curetimes();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::CureTimesDTO >&
      curetimes() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::CureTimesDTO >*
      mutable_curetimes();

  // required int32 lastRecvTime = 4;
  inline bool has_lastrecvtime() const;
  inline void clear_lastrecvtime();
  static const int kLastRecvTimeFieldNumber = 4;
  inline ::google::protobuf::int32 lastrecvtime() const;
  inline void set_lastrecvtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.HospitalInfoPush)
 private:
  inline void set_has_lastrecvtime();
  inline void clear_has_lastrecvtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::LevelSoldierDTO > woundedsoldiers_;
  ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO > curedsoldiers_;
  ::google::protobuf::RepeatedPtrField< ::slg::protocol::CureTimesDTO > curetimes_;
  ::google::protobuf::int32 lastrecvtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_hospital_2eproto();
  friend void protobuf_AssignDesc_hospital_2eproto();
  friend void protobuf_ShutdownFile_hospital_2eproto();

  void InitAsDefaultInstance();
  static HospitalInfoPush* default_instance_;
};
// ===================================================================


// ===================================================================

// CureTimesDTO

// required int32 soldierType = 1;
inline bool CureTimesDTO::has_soldiertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CureTimesDTO::set_has_soldiertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CureTimesDTO::clear_has_soldiertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CureTimesDTO::clear_soldiertype() {
  soldiertype_ = 0;
  clear_has_soldiertype();
}
inline ::google::protobuf::int32 CureTimesDTO::soldiertype() const {
  return soldiertype_;
}
inline void CureTimesDTO::set_soldiertype(::google::protobuf::int32 value) {
  set_has_soldiertype();
  soldiertype_ = value;
}

// required int32 times = 2;
inline bool CureTimesDTO::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CureTimesDTO::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CureTimesDTO::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CureTimesDTO::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline ::google::protobuf::int32 CureTimesDTO::times() const {
  return times_;
}
inline void CureTimesDTO::set_times(::google::protobuf::int32 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// RecvSoldierRequest

// -------------------------------------------------------------------

// RecvSoldierResponse

// repeated .slg.protocol.SoldierDTO soldiers = 1;
inline int RecvSoldierResponse::soldiers_size() const {
  return soldiers_.size();
}
inline void RecvSoldierResponse::clear_soldiers() {
  soldiers_.Clear();
}
inline const ::slg::protocol::SoldierDTO& RecvSoldierResponse::soldiers(int index) const {
  return soldiers_.Get(index);
}
inline ::slg::protocol::SoldierDTO* RecvSoldierResponse::mutable_soldiers(int index) {
  return soldiers_.Mutable(index);
}
inline ::slg::protocol::SoldierDTO* RecvSoldierResponse::add_soldiers() {
  return soldiers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >&
RecvSoldierResponse::soldiers() const {
  return soldiers_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >*
RecvSoldierResponse::mutable_soldiers() {
  return &soldiers_;
}

// -------------------------------------------------------------------

// CureSoldierRequest

// required int32 soldierType = 1;
inline bool CureSoldierRequest::has_soldiertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CureSoldierRequest::set_has_soldiertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CureSoldierRequest::clear_has_soldiertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CureSoldierRequest::clear_soldiertype() {
  soldiertype_ = 0;
  clear_has_soldiertype();
}
inline ::google::protobuf::int32 CureSoldierRequest::soldiertype() const {
  return soldiertype_;
}
inline void CureSoldierRequest::set_soldiertype(::google::protobuf::int32 value) {
  set_has_soldiertype();
  soldiertype_ = value;
}

// required bool oper = 2;
inline bool CureSoldierRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CureSoldierRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CureSoldierRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CureSoldierRequest::clear_oper() {
  oper_ = false;
  clear_has_oper();
}
inline bool CureSoldierRequest::oper() const {
  return oper_;
}
inline void CureSoldierRequest::set_oper(bool value) {
  set_has_oper();
  oper_ = value;
}

// -------------------------------------------------------------------

// CureSoldierResponse

// required int32 soldierType = 1;
inline bool CureSoldierResponse::has_soldiertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CureSoldierResponse::set_has_soldiertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CureSoldierResponse::clear_has_soldiertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CureSoldierResponse::clear_soldiertype() {
  soldiertype_ = 0;
  clear_has_soldiertype();
}
inline ::google::protobuf::int32 CureSoldierResponse::soldiertype() const {
  return soldiertype_;
}
inline void CureSoldierResponse::set_soldiertype(::google::protobuf::int32 value) {
  set_has_soldiertype();
  soldiertype_ = value;
}

// -------------------------------------------------------------------

// HospitalInfoPush

// repeated .slg.protocol.LevelSoldierDTO woundedSoldiers = 1;
inline int HospitalInfoPush::woundedsoldiers_size() const {
  return woundedsoldiers_.size();
}
inline void HospitalInfoPush::clear_woundedsoldiers() {
  woundedsoldiers_.Clear();
}
inline const ::slg::protocol::LevelSoldierDTO& HospitalInfoPush::woundedsoldiers(int index) const {
  return woundedsoldiers_.Get(index);
}
inline ::slg::protocol::LevelSoldierDTO* HospitalInfoPush::mutable_woundedsoldiers(int index) {
  return woundedsoldiers_.Mutable(index);
}
inline ::slg::protocol::LevelSoldierDTO* HospitalInfoPush::add_woundedsoldiers() {
  return woundedsoldiers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::LevelSoldierDTO >&
HospitalInfoPush::woundedsoldiers() const {
  return woundedsoldiers_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::LevelSoldierDTO >*
HospitalInfoPush::mutable_woundedsoldiers() {
  return &woundedsoldiers_;
}

// repeated .slg.protocol.SoldierDTO curedSoldiers = 2;
inline int HospitalInfoPush::curedsoldiers_size() const {
  return curedsoldiers_.size();
}
inline void HospitalInfoPush::clear_curedsoldiers() {
  curedsoldiers_.Clear();
}
inline const ::slg::protocol::SoldierDTO& HospitalInfoPush::curedsoldiers(int index) const {
  return curedsoldiers_.Get(index);
}
inline ::slg::protocol::SoldierDTO* HospitalInfoPush::mutable_curedsoldiers(int index) {
  return curedsoldiers_.Mutable(index);
}
inline ::slg::protocol::SoldierDTO* HospitalInfoPush::add_curedsoldiers() {
  return curedsoldiers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >&
HospitalInfoPush::curedsoldiers() const {
  return curedsoldiers_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::SoldierDTO >*
HospitalInfoPush::mutable_curedsoldiers() {
  return &curedsoldiers_;
}

// repeated .slg.protocol.CureTimesDTO cureTimes = 3;
inline int HospitalInfoPush::curetimes_size() const {
  return curetimes_.size();
}
inline void HospitalInfoPush::clear_curetimes() {
  curetimes_.Clear();
}
inline const ::slg::protocol::CureTimesDTO& HospitalInfoPush::curetimes(int index) const {
  return curetimes_.Get(index);
}
inline ::slg::protocol::CureTimesDTO* HospitalInfoPush::mutable_curetimes(int index) {
  return curetimes_.Mutable(index);
}
inline ::slg::protocol::CureTimesDTO* HospitalInfoPush::add_curetimes() {
  return curetimes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::CureTimesDTO >&
HospitalInfoPush::curetimes() const {
  return curetimes_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::CureTimesDTO >*
HospitalInfoPush::mutable_curetimes() {
  return &curetimes_;
}

// required int32 lastRecvTime = 4;
inline bool HospitalInfoPush::has_lastrecvtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HospitalInfoPush::set_has_lastrecvtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HospitalInfoPush::clear_has_lastrecvtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HospitalInfoPush::clear_lastrecvtime() {
  lastrecvtime_ = 0;
  clear_has_lastrecvtime();
}
inline ::google::protobuf::int32 HospitalInfoPush::lastrecvtime() const {
  return lastrecvtime_;
}
inline void HospitalInfoPush::set_lastrecvtime(::google::protobuf::int32 value) {
  set_has_lastrecvtime();
  lastrecvtime_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::HospitalCommandId>() {
  return ::slg::protocol::HospitalCommandId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::HospitalPushId>() {
  return ::slg::protocol::HospitalPushId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hospital_2eproto__INCLUDED
