// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxymessage.proto

#ifndef PROTOBUF_proxymessage_2eproto__INCLUDED
#define PROTOBUF_proxymessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CProxyHead;
class CProxyHeadDefaultTypeInternal;
extern CProxyHeadDefaultTypeInternal _CProxyHead_default_instance_;

namespace protobuf_proxymessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proxymessage_2eproto

enum EProxyCmd {
  CMD_NULL = 0,
  CMD_REGIST = 1,
  CMD_KEEPALIVE = 2
};
bool EProxyCmd_IsValid(int value);
const EProxyCmd EProxyCmd_MIN = CMD_NULL;
const EProxyCmd EProxyCmd_MAX = CMD_KEEPALIVE;
const int EProxyCmd_ARRAYSIZE = EProxyCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* EProxyCmd_descriptor();
inline const ::std::string& EProxyCmd_Name(EProxyCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    EProxyCmd_descriptor(), value);
}
inline bool EProxyCmd_Parse(
    const ::std::string& name, EProxyCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EProxyCmd>(
    EProxyCmd_descriptor(), name, value);
}
// ===================================================================

class CProxyHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CProxyHead) */ {
 public:
  CProxyHead();
  virtual ~CProxyHead();

  CProxyHead(const CProxyHead& from);

  inline CProxyHead& operator=(const CProxyHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CProxyHead& default_instance();

  static inline const CProxyHead* internal_default_instance() {
    return reinterpret_cast<const CProxyHead*>(
               &_CProxyHead_default_instance_);
  }

  void Swap(CProxyHead* other);

  // implements Message ----------------------------------------------

  inline CProxyHead* New() const PROTOBUF_FINAL { return New(NULL); }

  CProxyHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CProxyHead& from);
  void MergeFrom(const CProxyHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CProxyHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 SrcFE = 1;
  bool has_srcfe() const;
  void clear_srcfe();
  static const int kSrcFEFieldNumber = 1;
  ::google::protobuf::uint32 srcfe() const;
  void set_srcfe(::google::protobuf::uint32 value);

  // required uint32 SrcID = 2;
  bool has_srcid() const;
  void clear_srcid();
  static const int kSrcIDFieldNumber = 2;
  ::google::protobuf::uint32 srcid() const;
  void set_srcid(::google::protobuf::uint32 value);

  // required uint32 DstFE = 3;
  bool has_dstfe() const;
  void clear_dstfe();
  static const int kDstFEFieldNumber = 3;
  ::google::protobuf::uint32 dstfe() const;
  void set_dstfe(::google::protobuf::uint32 value);

  // required uint32 DstID = 4;
  bool has_dstid() const;
  void clear_dstid();
  static const int kDstIDFieldNumber = 4;
  ::google::protobuf::uint32 dstid() const;
  void set_dstid(::google::protobuf::uint32 value);

  // required uint64 TimeStamp = 6;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 6;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // required .EProxyCmd OpFlag = 5 [default = CMD_NULL];
  bool has_opflag() const;
  void clear_opflag();
  static const int kOpFlagFieldNumber = 5;
  ::EProxyCmd opflag() const;
  void set_opflag(::EProxyCmd value);

  // @@protoc_insertion_point(class_scope:CProxyHead)
 private:
  void set_has_srcfe();
  void clear_has_srcfe();
  void set_has_srcid();
  void clear_has_srcid();
  void set_has_dstfe();
  void clear_has_dstfe();
  void set_has_dstid();
  void clear_has_dstid();
  void set_has_opflag();
  void clear_has_opflag();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 srcfe_;
  ::google::protobuf::uint32 srcid_;
  ::google::protobuf::uint32 dstfe_;
  ::google::protobuf::uint32 dstid_;
  ::google::protobuf::uint64 timestamp_;
  int opflag_;
  friend struct  protobuf_proxymessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CProxyHead

// required uint32 SrcFE = 1;
inline bool CProxyHead::has_srcfe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CProxyHead::set_has_srcfe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CProxyHead::clear_has_srcfe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CProxyHead::clear_srcfe() {
  srcfe_ = 0u;
  clear_has_srcfe();
}
inline ::google::protobuf::uint32 CProxyHead::srcfe() const {
  // @@protoc_insertion_point(field_get:CProxyHead.SrcFE)
  return srcfe_;
}
inline void CProxyHead::set_srcfe(::google::protobuf::uint32 value) {
  set_has_srcfe();
  srcfe_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.SrcFE)
}

// required uint32 SrcID = 2;
inline bool CProxyHead::has_srcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CProxyHead::set_has_srcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CProxyHead::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CProxyHead::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 CProxyHead::srcid() const {
  // @@protoc_insertion_point(field_get:CProxyHead.SrcID)
  return srcid_;
}
inline void CProxyHead::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.SrcID)
}

// required uint32 DstFE = 3;
inline bool CProxyHead::has_dstfe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CProxyHead::set_has_dstfe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CProxyHead::clear_has_dstfe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CProxyHead::clear_dstfe() {
  dstfe_ = 0u;
  clear_has_dstfe();
}
inline ::google::protobuf::uint32 CProxyHead::dstfe() const {
  // @@protoc_insertion_point(field_get:CProxyHead.DstFE)
  return dstfe_;
}
inline void CProxyHead::set_dstfe(::google::protobuf::uint32 value) {
  set_has_dstfe();
  dstfe_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.DstFE)
}

// required uint32 DstID = 4;
inline bool CProxyHead::has_dstid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CProxyHead::set_has_dstid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CProxyHead::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CProxyHead::clear_dstid() {
  dstid_ = 0u;
  clear_has_dstid();
}
inline ::google::protobuf::uint32 CProxyHead::dstid() const {
  // @@protoc_insertion_point(field_get:CProxyHead.DstID)
  return dstid_;
}
inline void CProxyHead::set_dstid(::google::protobuf::uint32 value) {
  set_has_dstid();
  dstid_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.DstID)
}

// required .EProxyCmd OpFlag = 5 [default = CMD_NULL];
inline bool CProxyHead::has_opflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CProxyHead::set_has_opflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CProxyHead::clear_has_opflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CProxyHead::clear_opflag() {
  opflag_ = 0;
  clear_has_opflag();
}
inline ::EProxyCmd CProxyHead::opflag() const {
  // @@protoc_insertion_point(field_get:CProxyHead.OpFlag)
  return static_cast< ::EProxyCmd >(opflag_);
}
inline void CProxyHead::set_opflag(::EProxyCmd value) {
  assert(::EProxyCmd_IsValid(value));
  set_has_opflag();
  opflag_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.OpFlag)
}

// required uint64 TimeStamp = 6;
inline bool CProxyHead::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CProxyHead::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CProxyHead::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CProxyHead::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 CProxyHead::timestamp() const {
  // @@protoc_insertion_point(field_get:CProxyHead.TimeStamp)
  return timestamp_;
}
inline void CProxyHead::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.TimeStamp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::EProxyCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EProxyCmd>() {
  return ::EProxyCmd_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proxymessage_2eproto__INCLUDED
