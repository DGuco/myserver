// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: building.proto

#ifndef PROTOBUF_building_2eproto__INCLUDED
#define PROTOBUF_building_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_building_2eproto();
void protobuf_AssignDesc_building_2eproto();
void protobuf_ShutdownFile_building_2eproto();

class BuildingDTO;
class BuildingQueueDTO;
class BuildingBuildRequest;
class BuildingBuildResponse;
class BuildingUpgradeRequest;
class BuildingUpgradeResponse;
class BuildingRemoveRequest;
class BuildingRemoveResponse;
class BuildingSwapRequest;
class BuildingSwapResponse;
class BuildingListPush;
class BuildingQueuePush;
class BuildingRemovePush;
class BuildingCompletePush;
class UnlockedAreaPush;

enum BuildingState {
  BUILDING_STATE_IDLE = 0,
  BUILDING_STATE_BUILDING = 1,
  BUILDING_STATE_UPGRADING = 2,
  BUILDING_STATE_REMOVING = 3,
  BUILDING_STATE_WORKING = 4
};
bool BuildingState_IsValid(int value);
const BuildingState BuildingState_MIN = BUILDING_STATE_IDLE;
const BuildingState BuildingState_MAX = BUILDING_STATE_WORKING;
const int BuildingState_ARRAYSIZE = BuildingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildingState_descriptor();
inline const ::std::string& BuildingState_Name(BuildingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildingState_descriptor(), value);
}
inline bool BuildingState_Parse(
    const ::std::string& name, BuildingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildingState>(
    BuildingState_descriptor(), name, value);
}
enum BuildingQueueType {
  BUILDING_QUEUE_TYPE_NORMAL = 1,
  BUILDING_QUEUE_TYPE_VIP = 2
};
bool BuildingQueueType_IsValid(int value);
const BuildingQueueType BuildingQueueType_MIN = BUILDING_QUEUE_TYPE_NORMAL;
const BuildingQueueType BuildingQueueType_MAX = BUILDING_QUEUE_TYPE_VIP;
const int BuildingQueueType_ARRAYSIZE = BuildingQueueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildingQueueType_descriptor();
inline const ::std::string& BuildingQueueType_Name(BuildingQueueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildingQueueType_descriptor(), value);
}
inline bool BuildingQueueType_Parse(
    const ::std::string& name, BuildingQueueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildingQueueType>(
    BuildingQueueType_descriptor(), name, value);
}
enum BuildingCommandId {
  BUILDING_BUILD = 201,
  BUILDING_UPGRADE = 202,
  BUILDING_REMOVE = 203,
  BUILDING_SWAP = 204
};
bool BuildingCommandId_IsValid(int value);
const BuildingCommandId BuildingCommandId_MIN = BUILDING_BUILD;
const BuildingCommandId BuildingCommandId_MAX = BUILDING_SWAP;
const int BuildingCommandId_ARRAYSIZE = BuildingCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildingCommandId_descriptor();
inline const ::std::string& BuildingCommandId_Name(BuildingCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildingCommandId_descriptor(), value);
}
inline bool BuildingCommandId_Parse(
    const ::std::string& name, BuildingCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildingCommandId>(
    BuildingCommandId_descriptor(), name, value);
}
enum BuildingPushId {
  BUILDING_QUEUE_PUSH = 50200,
  BUILDING_LIST_PUSH = 50201,
  BUILDING_REMOVE_PUSH = 50202,
  UNLOCKED_AREA_PUSH = 50203,
  BUILDING_COMPLETE_PUSH = 50204
};
bool BuildingPushId_IsValid(int value);
const BuildingPushId BuildingPushId_MIN = BUILDING_QUEUE_PUSH;
const BuildingPushId BuildingPushId_MAX = BUILDING_COMPLETE_PUSH;
const int BuildingPushId_ARRAYSIZE = BuildingPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildingPushId_descriptor();
inline const ::std::string& BuildingPushId_Name(BuildingPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildingPushId_descriptor(), value);
}
inline bool BuildingPushId_Parse(
    const ::std::string& name, BuildingPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildingPushId>(
    BuildingPushId_descriptor(), name, value);
}
enum BuildingCompleteType {
  BUILDING_COMPLETE_BUILD = 1,
  BUILDING_COMPLETE_UPGRADE = 2,
  BUILDING_COMPLETE_SWAP = 3
};
bool BuildingCompleteType_IsValid(int value);
const BuildingCompleteType BuildingCompleteType_MIN = BUILDING_COMPLETE_BUILD;
const BuildingCompleteType BuildingCompleteType_MAX = BUILDING_COMPLETE_SWAP;
const int BuildingCompleteType_ARRAYSIZE = BuildingCompleteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildingCompleteType_descriptor();
inline const ::std::string& BuildingCompleteType_Name(BuildingCompleteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildingCompleteType_descriptor(), value);
}
inline bool BuildingCompleteType_Parse(
    const ::std::string& name, BuildingCompleteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildingCompleteType>(
    BuildingCompleteType_descriptor(), name, value);
}
// ===================================================================

class BuildingDTO : public ::google::protobuf::Message {
 public:
  BuildingDTO();
  virtual ~BuildingDTO();

  BuildingDTO(const BuildingDTO& from);

  inline BuildingDTO& operator=(const BuildingDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingDTO& default_instance();

  void Swap(BuildingDTO* other);

  // implements Message ----------------------------------------------

  BuildingDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingDTO& from);
  void MergeFrom(const BuildingDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 gridId = 4;
  inline bool has_gridid() const;
  inline void clear_gridid();
  static const int kGridIdFieldNumber = 4;
  inline ::google::protobuf::int32 gridid() const;
  inline void set_gridid(::google::protobuf::int32 value);

  // required .slg.protocol.BuildingState state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::slg::protocol::BuildingState state() const;
  inline void set_state(::slg::protocol::BuildingState value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingDTO)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_gridid();
  inline void clear_has_gridid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 gridid_;
  int state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingDTO* default_instance_;
};
// -------------------------------------------------------------------

class BuildingQueueDTO : public ::google::protobuf::Message {
 public:
  BuildingQueueDTO();
  virtual ~BuildingQueueDTO();

  BuildingQueueDTO(const BuildingQueueDTO& from);

  inline BuildingQueueDTO& operator=(const BuildingQueueDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingQueueDTO& default_instance();

  void Swap(BuildingQueueDTO* other);

  // implements Message ----------------------------------------------

  BuildingQueueDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingQueueDTO& from);
  void MergeFrom(const BuildingQueueDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 timerTaskId = 1;
  inline bool has_timertaskid() const;
  inline void clear_timertaskid();
  static const int kTimerTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 timertaskid() const;
  inline void set_timertaskid(::google::protobuf::int32 value);

  // required .slg.protocol.BuildingQueueType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::slg::protocol::BuildingQueueType type() const;
  inline void set_type(::slg::protocol::BuildingQueueType value);

  // optional int32 endTime = 3;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingQueueDTO)
 private:
  inline void set_has_timertaskid();
  inline void clear_has_timertaskid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 timertaskid_;
  int type_;
  ::google::protobuf::int32 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingQueueDTO* default_instance_;
};
// -------------------------------------------------------------------

class BuildingBuildRequest : public ::google::protobuf::Message {
 public:
  BuildingBuildRequest();
  virtual ~BuildingBuildRequest();

  BuildingBuildRequest(const BuildingBuildRequest& from);

  inline BuildingBuildRequest& operator=(const BuildingBuildRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingBuildRequest& default_instance();

  void Swap(BuildingBuildRequest* other);

  // implements Message ----------------------------------------------

  BuildingBuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingBuildRequest& from);
  void MergeFrom(const BuildingBuildRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingType = 1;
  inline bool has_buildingtype() const;
  inline void clear_buildingtype();
  static const int kBuildingTypeFieldNumber = 1;
  inline ::google::protobuf::int32 buildingtype() const;
  inline void set_buildingtype(::google::protobuf::int32 value);

  // required int32 gridId = 2;
  inline bool has_gridid() const;
  inline void clear_gridid();
  static const int kGridIdFieldNumber = 2;
  inline ::google::protobuf::int32 gridid() const;
  inline void set_gridid(::google::protobuf::int32 value);

  // required bool oper = 3;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 3;
  inline bool oper() const;
  inline void set_oper(bool value);

  // required bool quick = 4;
  inline bool has_quick() const;
  inline void clear_quick();
  static const int kQuickFieldNumber = 4;
  inline bool quick() const;
  inline void set_quick(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingBuildRequest)
 private:
  inline void set_has_buildingtype();
  inline void clear_has_buildingtype();
  inline void set_has_gridid();
  inline void clear_has_gridid();
  inline void set_has_oper();
  inline void clear_has_oper();
  inline void set_has_quick();
  inline void clear_has_quick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingtype_;
  ::google::protobuf::int32 gridid_;
  bool oper_;
  bool quick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingBuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuildingBuildResponse : public ::google::protobuf::Message {
 public:
  BuildingBuildResponse();
  virtual ~BuildingBuildResponse();

  BuildingBuildResponse(const BuildingBuildResponse& from);

  inline BuildingBuildResponse& operator=(const BuildingBuildResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingBuildResponse& default_instance();

  void Swap(BuildingBuildResponse* other);

  // implements Message ----------------------------------------------

  BuildingBuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingBuildResponse& from);
  void MergeFrom(const BuildingBuildResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingId = 1;
  inline bool has_buildingid() const;
  inline void clear_buildingid();
  static const int kBuildingIdFieldNumber = 1;
  inline ::google::protobuf::int32 buildingid() const;
  inline void set_buildingid(::google::protobuf::int32 value);

  // required bool quick = 2;
  inline bool has_quick() const;
  inline void clear_quick();
  static const int kQuickFieldNumber = 2;
  inline bool quick() const;
  inline void set_quick(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingBuildResponse)
 private:
  inline void set_has_buildingid();
  inline void clear_has_buildingid();
  inline void set_has_quick();
  inline void clear_has_quick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingid_;
  bool quick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingBuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class BuildingUpgradeRequest : public ::google::protobuf::Message {
 public:
  BuildingUpgradeRequest();
  virtual ~BuildingUpgradeRequest();

  BuildingUpgradeRequest(const BuildingUpgradeRequest& from);

  inline BuildingUpgradeRequest& operator=(const BuildingUpgradeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingUpgradeRequest& default_instance();

  void Swap(BuildingUpgradeRequest* other);

  // implements Message ----------------------------------------------

  BuildingUpgradeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingUpgradeRequest& from);
  void MergeFrom(const BuildingUpgradeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingId = 1;
  inline bool has_buildingid() const;
  inline void clear_buildingid();
  static const int kBuildingIdFieldNumber = 1;
  inline ::google::protobuf::int32 buildingid() const;
  inline void set_buildingid(::google::protobuf::int32 value);

  // required bool oper = 2;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 2;
  inline bool oper() const;
  inline void set_oper(bool value);

  // required bool quick = 3;
  inline bool has_quick() const;
  inline void clear_quick();
  static const int kQuickFieldNumber = 3;
  inline bool quick() const;
  inline void set_quick(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingUpgradeRequest)
 private:
  inline void set_has_buildingid();
  inline void clear_has_buildingid();
  inline void set_has_oper();
  inline void clear_has_oper();
  inline void set_has_quick();
  inline void clear_has_quick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingid_;
  bool oper_;
  bool quick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingUpgradeRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuildingUpgradeResponse : public ::google::protobuf::Message {
 public:
  BuildingUpgradeResponse();
  virtual ~BuildingUpgradeResponse();

  BuildingUpgradeResponse(const BuildingUpgradeResponse& from);

  inline BuildingUpgradeResponse& operator=(const BuildingUpgradeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingUpgradeResponse& default_instance();

  void Swap(BuildingUpgradeResponse* other);

  // implements Message ----------------------------------------------

  BuildingUpgradeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingUpgradeResponse& from);
  void MergeFrom(const BuildingUpgradeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingId = 1;
  inline bool has_buildingid() const;
  inline void clear_buildingid();
  static const int kBuildingIdFieldNumber = 1;
  inline ::google::protobuf::int32 buildingid() const;
  inline void set_buildingid(::google::protobuf::int32 value);

  // required bool quick = 2;
  inline bool has_quick() const;
  inline void clear_quick();
  static const int kQuickFieldNumber = 2;
  inline bool quick() const;
  inline void set_quick(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingUpgradeResponse)
 private:
  inline void set_has_buildingid();
  inline void clear_has_buildingid();
  inline void set_has_quick();
  inline void clear_has_quick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingid_;
  bool quick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingUpgradeResponse* default_instance_;
};
// -------------------------------------------------------------------

class BuildingRemoveRequest : public ::google::protobuf::Message {
 public:
  BuildingRemoveRequest();
  virtual ~BuildingRemoveRequest();

  BuildingRemoveRequest(const BuildingRemoveRequest& from);

  inline BuildingRemoveRequest& operator=(const BuildingRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingRemoveRequest& default_instance();

  void Swap(BuildingRemoveRequest* other);

  // implements Message ----------------------------------------------

  BuildingRemoveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingRemoveRequest& from);
  void MergeFrom(const BuildingRemoveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingId = 1;
  inline bool has_buildingid() const;
  inline void clear_buildingid();
  static const int kBuildingIdFieldNumber = 1;
  inline ::google::protobuf::int32 buildingid() const;
  inline void set_buildingid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingRemoveRequest)
 private:
  inline void set_has_buildingid();
  inline void clear_has_buildingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingRemoveRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuildingRemoveResponse : public ::google::protobuf::Message {
 public:
  BuildingRemoveResponse();
  virtual ~BuildingRemoveResponse();

  BuildingRemoveResponse(const BuildingRemoveResponse& from);

  inline BuildingRemoveResponse& operator=(const BuildingRemoveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingRemoveResponse& default_instance();

  void Swap(BuildingRemoveResponse* other);

  // implements Message ----------------------------------------------

  BuildingRemoveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingRemoveResponse& from);
  void MergeFrom(const BuildingRemoveResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingId = 1;
  inline bool has_buildingid() const;
  inline void clear_buildingid();
  static const int kBuildingIdFieldNumber = 1;
  inline ::google::protobuf::int32 buildingid() const;
  inline void set_buildingid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingRemoveResponse)
 private:
  inline void set_has_buildingid();
  inline void clear_has_buildingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingRemoveResponse* default_instance_;
};
// -------------------------------------------------------------------

class BuildingSwapRequest : public ::google::protobuf::Message {
 public:
  BuildingSwapRequest();
  virtual ~BuildingSwapRequest();

  BuildingSwapRequest(const BuildingSwapRequest& from);

  inline BuildingSwapRequest& operator=(const BuildingSwapRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingSwapRequest& default_instance();

  void Swap(BuildingSwapRequest* other);

  // implements Message ----------------------------------------------

  BuildingSwapRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingSwapRequest& from);
  void MergeFrom(const BuildingSwapRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingIdFrom = 1;
  inline bool has_buildingidfrom() const;
  inline void clear_buildingidfrom();
  static const int kBuildingIdFromFieldNumber = 1;
  inline ::google::protobuf::int32 buildingidfrom() const;
  inline void set_buildingidfrom(::google::protobuf::int32 value);

  // required int32 buildingIdTo = 2;
  inline bool has_buildingidto() const;
  inline void clear_buildingidto();
  static const int kBuildingIdToFieldNumber = 2;
  inline ::google::protobuf::int32 buildingidto() const;
  inline void set_buildingidto(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingSwapRequest)
 private:
  inline void set_has_buildingidfrom();
  inline void clear_has_buildingidfrom();
  inline void set_has_buildingidto();
  inline void clear_has_buildingidto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingidfrom_;
  ::google::protobuf::int32 buildingidto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingSwapRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuildingSwapResponse : public ::google::protobuf::Message {
 public:
  BuildingSwapResponse();
  virtual ~BuildingSwapResponse();

  BuildingSwapResponse(const BuildingSwapResponse& from);

  inline BuildingSwapResponse& operator=(const BuildingSwapResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingSwapResponse& default_instance();

  void Swap(BuildingSwapResponse* other);

  // implements Message ----------------------------------------------

  BuildingSwapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingSwapResponse& from);
  void MergeFrom(const BuildingSwapResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingIdFrom = 1;
  inline bool has_buildingidfrom() const;
  inline void clear_buildingidfrom();
  static const int kBuildingIdFromFieldNumber = 1;
  inline ::google::protobuf::int32 buildingidfrom() const;
  inline void set_buildingidfrom(::google::protobuf::int32 value);

  // required int32 buildingIdTo = 2;
  inline bool has_buildingidto() const;
  inline void clear_buildingidto();
  static const int kBuildingIdToFieldNumber = 2;
  inline ::google::protobuf::int32 buildingidto() const;
  inline void set_buildingidto(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingSwapResponse)
 private:
  inline void set_has_buildingidfrom();
  inline void clear_has_buildingidfrom();
  inline void set_has_buildingidto();
  inline void clear_has_buildingidto();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingidfrom_;
  ::google::protobuf::int32 buildingidto_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingSwapResponse* default_instance_;
};
// -------------------------------------------------------------------

class BuildingListPush : public ::google::protobuf::Message {
 public:
  BuildingListPush();
  virtual ~BuildingListPush();

  BuildingListPush(const BuildingListPush& from);

  inline BuildingListPush& operator=(const BuildingListPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingListPush& default_instance();

  void Swap(BuildingListPush* other);

  // implements Message ----------------------------------------------

  BuildingListPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingListPush& from);
  void MergeFrom(const BuildingListPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.BuildingDTO buildings = 1;
  inline int buildings_size() const;
  inline void clear_buildings();
  static const int kBuildingsFieldNumber = 1;
  inline const ::slg::protocol::BuildingDTO& buildings(int index) const;
  inline ::slg::protocol::BuildingDTO* mutable_buildings(int index);
  inline ::slg::protocol::BuildingDTO* add_buildings();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >&
      buildings() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >*
      mutable_buildings();

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingListPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO > buildings_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingListPush* default_instance_;
};
// -------------------------------------------------------------------

class BuildingQueuePush : public ::google::protobuf::Message {
 public:
  BuildingQueuePush();
  virtual ~BuildingQueuePush();

  BuildingQueuePush(const BuildingQueuePush& from);

  inline BuildingQueuePush& operator=(const BuildingQueuePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingQueuePush& default_instance();

  void Swap(BuildingQueuePush* other);

  // implements Message ----------------------------------------------

  BuildingQueuePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingQueuePush& from);
  void MergeFrom(const BuildingQueuePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.BuildingQueueDTO buildingQueues = 1;
  inline int buildingqueues_size() const;
  inline void clear_buildingqueues();
  static const int kBuildingQueuesFieldNumber = 1;
  inline const ::slg::protocol::BuildingQueueDTO& buildingqueues(int index) const;
  inline ::slg::protocol::BuildingQueueDTO* mutable_buildingqueues(int index);
  inline ::slg::protocol::BuildingQueueDTO* add_buildingqueues();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingQueueDTO >&
      buildingqueues() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingQueueDTO >*
      mutable_buildingqueues();

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingQueuePush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingQueueDTO > buildingqueues_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingQueuePush* default_instance_;
};
// -------------------------------------------------------------------

class BuildingRemovePush : public ::google::protobuf::Message {
 public:
  BuildingRemovePush();
  virtual ~BuildingRemovePush();

  BuildingRemovePush(const BuildingRemovePush& from);

  inline BuildingRemovePush& operator=(const BuildingRemovePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingRemovePush& default_instance();

  void Swap(BuildingRemovePush* other);

  // implements Message ----------------------------------------------

  BuildingRemovePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingRemovePush& from);
  void MergeFrom(const BuildingRemovePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buildingId = 1;
  inline bool has_buildingid() const;
  inline void clear_buildingid();
  static const int kBuildingIdFieldNumber = 1;
  inline ::google::protobuf::int32 buildingid() const;
  inline void set_buildingid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingRemovePush)
 private:
  inline void set_has_buildingid();
  inline void clear_has_buildingid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buildingid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingRemovePush* default_instance_;
};
// -------------------------------------------------------------------

class BuildingCompletePush : public ::google::protobuf::Message {
 public:
  BuildingCompletePush();
  virtual ~BuildingCompletePush();

  BuildingCompletePush(const BuildingCompletePush& from);

  inline BuildingCompletePush& operator=(const BuildingCompletePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingCompletePush& default_instance();

  void Swap(BuildingCompletePush* other);

  // implements Message ----------------------------------------------

  BuildingCompletePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingCompletePush& from);
  void MergeFrom(const BuildingCompletePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.BuildingDTO building = 1;
  inline int building_size() const;
  inline void clear_building();
  static const int kBuildingFieldNumber = 1;
  inline const ::slg::protocol::BuildingDTO& building(int index) const;
  inline ::slg::protocol::BuildingDTO* mutable_building(int index);
  inline ::slg::protocol::BuildingDTO* add_building();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >&
      building() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >*
      mutable_building();

  // required .slg.protocol.BuildingCompleteType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::slg::protocol::BuildingCompleteType type() const;
  inline void set_type(::slg::protocol::BuildingCompleteType value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuildingCompletePush)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO > building_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static BuildingCompletePush* default_instance_;
};
// -------------------------------------------------------------------

class UnlockedAreaPush : public ::google::protobuf::Message {
 public:
  UnlockedAreaPush();
  virtual ~UnlockedAreaPush();

  UnlockedAreaPush(const UnlockedAreaPush& from);

  inline UnlockedAreaPush& operator=(const UnlockedAreaPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockedAreaPush& default_instance();

  void Swap(UnlockedAreaPush* other);

  // implements Message ----------------------------------------------

  UnlockedAreaPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlockedAreaPush& from);
  void MergeFrom(const UnlockedAreaPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 areaId = 1;
  inline int areaid_size() const;
  inline void clear_areaid();
  static const int kAreaIdFieldNumber = 1;
  inline ::google::protobuf::int32 areaid(int index) const;
  inline void set_areaid(int index, ::google::protobuf::int32 value);
  inline void add_areaid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      areaid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_areaid();

  // @@protoc_insertion_point(class_scope:slg.protocol.UnlockedAreaPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_building_2eproto();
  friend void protobuf_AssignDesc_building_2eproto();
  friend void protobuf_ShutdownFile_building_2eproto();

  void InitAsDefaultInstance();
  static UnlockedAreaPush* default_instance_;
};
// ===================================================================


// ===================================================================

// BuildingDTO

// required int32 id = 1;
inline bool BuildingDTO::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingDTO::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingDTO::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingDTO::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BuildingDTO::id() const {
  return id_;
}
inline void BuildingDTO::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 type = 2;
inline bool BuildingDTO::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingDTO::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingDTO::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingDTO::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BuildingDTO::type() const {
  return type_;
}
inline void BuildingDTO::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 level = 3;
inline bool BuildingDTO::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingDTO::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingDTO::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingDTO::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 BuildingDTO::level() const {
  return level_;
}
inline void BuildingDTO::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 gridId = 4;
inline bool BuildingDTO::has_gridid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildingDTO::set_has_gridid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildingDTO::clear_has_gridid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildingDTO::clear_gridid() {
  gridid_ = 0;
  clear_has_gridid();
}
inline ::google::protobuf::int32 BuildingDTO::gridid() const {
  return gridid_;
}
inline void BuildingDTO::set_gridid(::google::protobuf::int32 value) {
  set_has_gridid();
  gridid_ = value;
}

// required .slg.protocol.BuildingState state = 5;
inline bool BuildingDTO::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuildingDTO::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuildingDTO::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuildingDTO::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::slg::protocol::BuildingState BuildingDTO::state() const {
  return static_cast< ::slg::protocol::BuildingState >(state_);
}
inline void BuildingDTO::set_state(::slg::protocol::BuildingState value) {
  assert(::slg::protocol::BuildingState_IsValid(value));
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// BuildingQueueDTO

// optional int32 timerTaskId = 1;
inline bool BuildingQueueDTO::has_timertaskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingQueueDTO::set_has_timertaskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingQueueDTO::clear_has_timertaskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingQueueDTO::clear_timertaskid() {
  timertaskid_ = 0;
  clear_has_timertaskid();
}
inline ::google::protobuf::int32 BuildingQueueDTO::timertaskid() const {
  return timertaskid_;
}
inline void BuildingQueueDTO::set_timertaskid(::google::protobuf::int32 value) {
  set_has_timertaskid();
  timertaskid_ = value;
}

// required .slg.protocol.BuildingQueueType type = 2;
inline bool BuildingQueueDTO::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingQueueDTO::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingQueueDTO::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingQueueDTO::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::slg::protocol::BuildingQueueType BuildingQueueDTO::type() const {
  return static_cast< ::slg::protocol::BuildingQueueType >(type_);
}
inline void BuildingQueueDTO::set_type(::slg::protocol::BuildingQueueType value) {
  assert(::slg::protocol::BuildingQueueType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 endTime = 3;
inline bool BuildingQueueDTO::has_endtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingQueueDTO::set_has_endtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingQueueDTO::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingQueueDTO::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 BuildingQueueDTO::endtime() const {
  return endtime_;
}
inline void BuildingQueueDTO::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// BuildingBuildRequest

// required int32 buildingType = 1;
inline bool BuildingBuildRequest::has_buildingtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingBuildRequest::set_has_buildingtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingBuildRequest::clear_has_buildingtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingBuildRequest::clear_buildingtype() {
  buildingtype_ = 0;
  clear_has_buildingtype();
}
inline ::google::protobuf::int32 BuildingBuildRequest::buildingtype() const {
  return buildingtype_;
}
inline void BuildingBuildRequest::set_buildingtype(::google::protobuf::int32 value) {
  set_has_buildingtype();
  buildingtype_ = value;
}

// required int32 gridId = 2;
inline bool BuildingBuildRequest::has_gridid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingBuildRequest::set_has_gridid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingBuildRequest::clear_has_gridid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingBuildRequest::clear_gridid() {
  gridid_ = 0;
  clear_has_gridid();
}
inline ::google::protobuf::int32 BuildingBuildRequest::gridid() const {
  return gridid_;
}
inline void BuildingBuildRequest::set_gridid(::google::protobuf::int32 value) {
  set_has_gridid();
  gridid_ = value;
}

// required bool oper = 3;
inline bool BuildingBuildRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingBuildRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingBuildRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingBuildRequest::clear_oper() {
  oper_ = false;
  clear_has_oper();
}
inline bool BuildingBuildRequest::oper() const {
  return oper_;
}
inline void BuildingBuildRequest::set_oper(bool value) {
  set_has_oper();
  oper_ = value;
}

// required bool quick = 4;
inline bool BuildingBuildRequest::has_quick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildingBuildRequest::set_has_quick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildingBuildRequest::clear_has_quick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildingBuildRequest::clear_quick() {
  quick_ = false;
  clear_has_quick();
}
inline bool BuildingBuildRequest::quick() const {
  return quick_;
}
inline void BuildingBuildRequest::set_quick(bool value) {
  set_has_quick();
  quick_ = value;
}

// -------------------------------------------------------------------

// BuildingBuildResponse

// required int32 buildingId = 1;
inline bool BuildingBuildResponse::has_buildingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingBuildResponse::set_has_buildingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingBuildResponse::clear_has_buildingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingBuildResponse::clear_buildingid() {
  buildingid_ = 0;
  clear_has_buildingid();
}
inline ::google::protobuf::int32 BuildingBuildResponse::buildingid() const {
  return buildingid_;
}
inline void BuildingBuildResponse::set_buildingid(::google::protobuf::int32 value) {
  set_has_buildingid();
  buildingid_ = value;
}

// required bool quick = 2;
inline bool BuildingBuildResponse::has_quick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingBuildResponse::set_has_quick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingBuildResponse::clear_has_quick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingBuildResponse::clear_quick() {
  quick_ = false;
  clear_has_quick();
}
inline bool BuildingBuildResponse::quick() const {
  return quick_;
}
inline void BuildingBuildResponse::set_quick(bool value) {
  set_has_quick();
  quick_ = value;
}

// -------------------------------------------------------------------

// BuildingUpgradeRequest

// required int32 buildingId = 1;
inline bool BuildingUpgradeRequest::has_buildingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingUpgradeRequest::set_has_buildingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingUpgradeRequest::clear_has_buildingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingUpgradeRequest::clear_buildingid() {
  buildingid_ = 0;
  clear_has_buildingid();
}
inline ::google::protobuf::int32 BuildingUpgradeRequest::buildingid() const {
  return buildingid_;
}
inline void BuildingUpgradeRequest::set_buildingid(::google::protobuf::int32 value) {
  set_has_buildingid();
  buildingid_ = value;
}

// required bool oper = 2;
inline bool BuildingUpgradeRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingUpgradeRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingUpgradeRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingUpgradeRequest::clear_oper() {
  oper_ = false;
  clear_has_oper();
}
inline bool BuildingUpgradeRequest::oper() const {
  return oper_;
}
inline void BuildingUpgradeRequest::set_oper(bool value) {
  set_has_oper();
  oper_ = value;
}

// required bool quick = 3;
inline bool BuildingUpgradeRequest::has_quick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingUpgradeRequest::set_has_quick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingUpgradeRequest::clear_has_quick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingUpgradeRequest::clear_quick() {
  quick_ = false;
  clear_has_quick();
}
inline bool BuildingUpgradeRequest::quick() const {
  return quick_;
}
inline void BuildingUpgradeRequest::set_quick(bool value) {
  set_has_quick();
  quick_ = value;
}

// -------------------------------------------------------------------

// BuildingUpgradeResponse

// required int32 buildingId = 1;
inline bool BuildingUpgradeResponse::has_buildingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingUpgradeResponse::set_has_buildingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingUpgradeResponse::clear_has_buildingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingUpgradeResponse::clear_buildingid() {
  buildingid_ = 0;
  clear_has_buildingid();
}
inline ::google::protobuf::int32 BuildingUpgradeResponse::buildingid() const {
  return buildingid_;
}
inline void BuildingUpgradeResponse::set_buildingid(::google::protobuf::int32 value) {
  set_has_buildingid();
  buildingid_ = value;
}

// required bool quick = 2;
inline bool BuildingUpgradeResponse::has_quick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingUpgradeResponse::set_has_quick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingUpgradeResponse::clear_has_quick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingUpgradeResponse::clear_quick() {
  quick_ = false;
  clear_has_quick();
}
inline bool BuildingUpgradeResponse::quick() const {
  return quick_;
}
inline void BuildingUpgradeResponse::set_quick(bool value) {
  set_has_quick();
  quick_ = value;
}

// -------------------------------------------------------------------

// BuildingRemoveRequest

// required int32 buildingId = 1;
inline bool BuildingRemoveRequest::has_buildingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingRemoveRequest::set_has_buildingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingRemoveRequest::clear_has_buildingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingRemoveRequest::clear_buildingid() {
  buildingid_ = 0;
  clear_has_buildingid();
}
inline ::google::protobuf::int32 BuildingRemoveRequest::buildingid() const {
  return buildingid_;
}
inline void BuildingRemoveRequest::set_buildingid(::google::protobuf::int32 value) {
  set_has_buildingid();
  buildingid_ = value;
}

// -------------------------------------------------------------------

// BuildingRemoveResponse

// required int32 buildingId = 1;
inline bool BuildingRemoveResponse::has_buildingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingRemoveResponse::set_has_buildingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingRemoveResponse::clear_has_buildingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingRemoveResponse::clear_buildingid() {
  buildingid_ = 0;
  clear_has_buildingid();
}
inline ::google::protobuf::int32 BuildingRemoveResponse::buildingid() const {
  return buildingid_;
}
inline void BuildingRemoveResponse::set_buildingid(::google::protobuf::int32 value) {
  set_has_buildingid();
  buildingid_ = value;
}

// -------------------------------------------------------------------

// BuildingSwapRequest

// required int32 buildingIdFrom = 1;
inline bool BuildingSwapRequest::has_buildingidfrom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingSwapRequest::set_has_buildingidfrom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingSwapRequest::clear_has_buildingidfrom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingSwapRequest::clear_buildingidfrom() {
  buildingidfrom_ = 0;
  clear_has_buildingidfrom();
}
inline ::google::protobuf::int32 BuildingSwapRequest::buildingidfrom() const {
  return buildingidfrom_;
}
inline void BuildingSwapRequest::set_buildingidfrom(::google::protobuf::int32 value) {
  set_has_buildingidfrom();
  buildingidfrom_ = value;
}

// required int32 buildingIdTo = 2;
inline bool BuildingSwapRequest::has_buildingidto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingSwapRequest::set_has_buildingidto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingSwapRequest::clear_has_buildingidto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingSwapRequest::clear_buildingidto() {
  buildingidto_ = 0;
  clear_has_buildingidto();
}
inline ::google::protobuf::int32 BuildingSwapRequest::buildingidto() const {
  return buildingidto_;
}
inline void BuildingSwapRequest::set_buildingidto(::google::protobuf::int32 value) {
  set_has_buildingidto();
  buildingidto_ = value;
}

// -------------------------------------------------------------------

// BuildingSwapResponse

// required int32 buildingIdFrom = 1;
inline bool BuildingSwapResponse::has_buildingidfrom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingSwapResponse::set_has_buildingidfrom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingSwapResponse::clear_has_buildingidfrom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingSwapResponse::clear_buildingidfrom() {
  buildingidfrom_ = 0;
  clear_has_buildingidfrom();
}
inline ::google::protobuf::int32 BuildingSwapResponse::buildingidfrom() const {
  return buildingidfrom_;
}
inline void BuildingSwapResponse::set_buildingidfrom(::google::protobuf::int32 value) {
  set_has_buildingidfrom();
  buildingidfrom_ = value;
}

// required int32 buildingIdTo = 2;
inline bool BuildingSwapResponse::has_buildingidto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingSwapResponse::set_has_buildingidto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingSwapResponse::clear_has_buildingidto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingSwapResponse::clear_buildingidto() {
  buildingidto_ = 0;
  clear_has_buildingidto();
}
inline ::google::protobuf::int32 BuildingSwapResponse::buildingidto() const {
  return buildingidto_;
}
inline void BuildingSwapResponse::set_buildingidto(::google::protobuf::int32 value) {
  set_has_buildingidto();
  buildingidto_ = value;
}

// -------------------------------------------------------------------

// BuildingListPush

// repeated .slg.protocol.BuildingDTO buildings = 1;
inline int BuildingListPush::buildings_size() const {
  return buildings_.size();
}
inline void BuildingListPush::clear_buildings() {
  buildings_.Clear();
}
inline const ::slg::protocol::BuildingDTO& BuildingListPush::buildings(int index) const {
  return buildings_.Get(index);
}
inline ::slg::protocol::BuildingDTO* BuildingListPush::mutable_buildings(int index) {
  return buildings_.Mutable(index);
}
inline ::slg::protocol::BuildingDTO* BuildingListPush::add_buildings() {
  return buildings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >&
BuildingListPush::buildings() const {
  return buildings_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >*
BuildingListPush::mutable_buildings() {
  return &buildings_;
}

// -------------------------------------------------------------------

// BuildingQueuePush

// repeated .slg.protocol.BuildingQueueDTO buildingQueues = 1;
inline int BuildingQueuePush::buildingqueues_size() const {
  return buildingqueues_.size();
}
inline void BuildingQueuePush::clear_buildingqueues() {
  buildingqueues_.Clear();
}
inline const ::slg::protocol::BuildingQueueDTO& BuildingQueuePush::buildingqueues(int index) const {
  return buildingqueues_.Get(index);
}
inline ::slg::protocol::BuildingQueueDTO* BuildingQueuePush::mutable_buildingqueues(int index) {
  return buildingqueues_.Mutable(index);
}
inline ::slg::protocol::BuildingQueueDTO* BuildingQueuePush::add_buildingqueues() {
  return buildingqueues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingQueueDTO >&
BuildingQueuePush::buildingqueues() const {
  return buildingqueues_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingQueueDTO >*
BuildingQueuePush::mutable_buildingqueues() {
  return &buildingqueues_;
}

// -------------------------------------------------------------------

// BuildingRemovePush

// required int32 buildingId = 1;
inline bool BuildingRemovePush::has_buildingid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingRemovePush::set_has_buildingid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingRemovePush::clear_has_buildingid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingRemovePush::clear_buildingid() {
  buildingid_ = 0;
  clear_has_buildingid();
}
inline ::google::protobuf::int32 BuildingRemovePush::buildingid() const {
  return buildingid_;
}
inline void BuildingRemovePush::set_buildingid(::google::protobuf::int32 value) {
  set_has_buildingid();
  buildingid_ = value;
}

// -------------------------------------------------------------------

// BuildingCompletePush

// repeated .slg.protocol.BuildingDTO building = 1;
inline int BuildingCompletePush::building_size() const {
  return building_.size();
}
inline void BuildingCompletePush::clear_building() {
  building_.Clear();
}
inline const ::slg::protocol::BuildingDTO& BuildingCompletePush::building(int index) const {
  return building_.Get(index);
}
inline ::slg::protocol::BuildingDTO* BuildingCompletePush::mutable_building(int index) {
  return building_.Mutable(index);
}
inline ::slg::protocol::BuildingDTO* BuildingCompletePush::add_building() {
  return building_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >&
BuildingCompletePush::building() const {
  return building_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::BuildingDTO >*
BuildingCompletePush::mutable_building() {
  return &building_;
}

// required .slg.protocol.BuildingCompleteType type = 2;
inline bool BuildingCompletePush::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingCompletePush::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingCompletePush::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingCompletePush::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::slg::protocol::BuildingCompleteType BuildingCompletePush::type() const {
  return static_cast< ::slg::protocol::BuildingCompleteType >(type_);
}
inline void BuildingCompletePush::set_type(::slg::protocol::BuildingCompleteType value) {
  assert(::slg::protocol::BuildingCompleteType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// UnlockedAreaPush

// repeated int32 areaId = 1;
inline int UnlockedAreaPush::areaid_size() const {
  return areaid_.size();
}
inline void UnlockedAreaPush::clear_areaid() {
  areaid_.Clear();
}
inline ::google::protobuf::int32 UnlockedAreaPush::areaid(int index) const {
  return areaid_.Get(index);
}
inline void UnlockedAreaPush::set_areaid(int index, ::google::protobuf::int32 value) {
  areaid_.Set(index, value);
}
inline void UnlockedAreaPush::add_areaid(::google::protobuf::int32 value) {
  areaid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UnlockedAreaPush::areaid() const {
  return areaid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UnlockedAreaPush::mutable_areaid() {
  return &areaid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::BuildingState>() {
  return ::slg::protocol::BuildingState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::BuildingQueueType>() {
  return ::slg::protocol::BuildingQueueType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::BuildingCommandId>() {
  return ::slg::protocol::BuildingCommandId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::BuildingPushId>() {
  return ::slg::protocol::BuildingPushId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::BuildingCompleteType>() {
  return ::slg::protocol::BuildingCompleteType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_building_2eproto__INCLUDED
