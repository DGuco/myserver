// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coremessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "coremessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgLoginHallRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLoginHallRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgLoginHallRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgLoginHallResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLoginHallResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgLoginHallResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgLeaveHallRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLeaveHallRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgLeaveHallRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgLeaveHallResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgLeaveHallResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgLeaveHallResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgSystemErrorResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgSystemErrorResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgSystemErrorResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgTestRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgTestRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgTestRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgTestResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgTestResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgTestResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgExchangeResourceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgExchangeResourceRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgExchangeResourceRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgExchangeResourceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgExchangeResourceResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgExchangeResourceResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgRenameRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRenameRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgRenameRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgRenameResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgRenameResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgRenameResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgChangeHeadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgChangeHeadRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgChangeHeadRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgChangeHeadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgChangeHeadResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgChangeHeadResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgUpdateResourceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgUpdateResourceResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgUpdateResourceResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgAlmsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgAlmsResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgAlmsResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgBackHallOKRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgBackHallOKRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgBackHallOKRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgDataStatisticsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgDataStatisticsRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgDataStatisticsRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsg8BallDataStatisticsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsg8BallDataStatisticsResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsg8BallDataStatisticsResponse_Msg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_coremessage_2eproto() {
  protobuf_AddDesc_coremessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "coremessage.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgLoginHallRequest_descriptor_ = file->message_type(0);
  static const int CMsgLoginHallRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallRequest, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallRequest, pfrom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallRequest, session_),
  };
  CMsgLoginHallRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLoginHallRequest_descriptor_,
      CMsgLoginHallRequest::default_instance_,
      CMsgLoginHallRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLoginHallRequest));
  CMsgLoginHallRequest_Msg_descriptor_ = CMsgLoginHallRequest_descriptor_->enum_type(0);
  CMsgLoginHallResponse_descriptor_ = file->message_type(1);
  static const int CMsgLoginHallResponse_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, resources_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, hasfirstchangename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, headid_),
  };
  CMsgLoginHallResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLoginHallResponse_descriptor_,
      CMsgLoginHallResponse::default_instance_,
      CMsgLoginHallResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLoginHallResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLoginHallResponse));
  CMsgLoginHallResponse_Msg_descriptor_ = CMsgLoginHallResponse_descriptor_->enum_type(0);
  CMsgLeaveHallRequest_descriptor_ = file->message_type(2);
  static const int CMsgLeaveHallRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLeaveHallRequest, leavetype_),
  };
  CMsgLeaveHallRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLeaveHallRequest_descriptor_,
      CMsgLeaveHallRequest::default_instance_,
      CMsgLeaveHallRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLeaveHallRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLeaveHallRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLeaveHallRequest));
  CMsgLeaveHallRequest_Msg_descriptor_ = CMsgLeaveHallRequest_descriptor_->enum_type(0);
  CMsgLeaveHallResponse_descriptor_ = file->message_type(3);
  static const int CMsgLeaveHallResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLeaveHallResponse, leavetype_),
  };
  CMsgLeaveHallResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgLeaveHallResponse_descriptor_,
      CMsgLeaveHallResponse::default_instance_,
      CMsgLeaveHallResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLeaveHallResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLeaveHallResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgLeaveHallResponse));
  CMsgLeaveHallResponse_Msg_descriptor_ = CMsgLeaveHallResponse_descriptor_->enum_type(0);
  CMsgSystemErrorResponse_descriptor_ = file->message_type(4);
  static const int CMsgSystemErrorResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSystemErrorResponse, result_),
  };
  CMsgSystemErrorResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgSystemErrorResponse_descriptor_,
      CMsgSystemErrorResponse::default_instance_,
      CMsgSystemErrorResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSystemErrorResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSystemErrorResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgSystemErrorResponse));
  CMsgSystemErrorResponse_Msg_descriptor_ = CMsgSystemErrorResponse_descriptor_->enum_type(0);
  CMsgTestRequest_descriptor_ = file->message_type(5);
  static const int CMsgTestRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestRequest, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestRequest, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestRequest, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestRequest, name_),
  };
  CMsgTestRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgTestRequest_descriptor_,
      CMsgTestRequest::default_instance_,
      CMsgTestRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgTestRequest));
  CMsgTestRequest_Msg_descriptor_ = CMsgTestRequest_descriptor_->enum_type(0);
  CMsgTestResponse_descriptor_ = file->message_type(6);
  static const int CMsgTestResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestResponse, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestResponse, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestResponse, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestResponse, name_),
  };
  CMsgTestResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgTestResponse_descriptor_,
      CMsgTestResponse::default_instance_,
      CMsgTestResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTestResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgTestResponse));
  CMsgTestResponse_Msg_descriptor_ = CMsgTestResponse_descriptor_->enum_type(0);
  CMsgExchangeResourceRequest_descriptor_ = file->message_type(7);
  static const int CMsgExchangeResourceRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExchangeResourceRequest, id_),
  };
  CMsgExchangeResourceRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgExchangeResourceRequest_descriptor_,
      CMsgExchangeResourceRequest::default_instance_,
      CMsgExchangeResourceRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExchangeResourceRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExchangeResourceRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgExchangeResourceRequest));
  CMsgExchangeResourceRequest_Msg_descriptor_ = CMsgExchangeResourceRequest_descriptor_->enum_type(0);
  CMsgExchangeResourceResponse_descriptor_ = file->message_type(8);
  static const int CMsgExchangeResourceResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExchangeResourceResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExchangeResourceResponse, resources_),
  };
  CMsgExchangeResourceResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgExchangeResourceResponse_descriptor_,
      CMsgExchangeResourceResponse::default_instance_,
      CMsgExchangeResourceResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExchangeResourceResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExchangeResourceResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgExchangeResourceResponse));
  CMsgExchangeResourceResponse_Msg_descriptor_ = CMsgExchangeResourceResponse_descriptor_->enum_type(0);
  CMsgRenameRequest_descriptor_ = file->message_type(9);
  static const int CMsgRenameRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRenameRequest, rolename_),
  };
  CMsgRenameRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRenameRequest_descriptor_,
      CMsgRenameRequest::default_instance_,
      CMsgRenameRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRenameRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRenameRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRenameRequest));
  CMsgRenameRequest_Msg_descriptor_ = CMsgRenameRequest_descriptor_->enum_type(0);
  CMsgRenameResponse_descriptor_ = file->message_type(10);
  static const int CMsgRenameResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRenameResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRenameResponse, rolename_),
  };
  CMsgRenameResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgRenameResponse_descriptor_,
      CMsgRenameResponse::default_instance_,
      CMsgRenameResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRenameResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRenameResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgRenameResponse));
  CMsgRenameResponse_Msg_descriptor_ = CMsgRenameResponse_descriptor_->enum_type(0);
  CMsgChangeHeadRequest_descriptor_ = file->message_type(11);
  static const int CMsgChangeHeadRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgChangeHeadRequest, headid_),
  };
  CMsgChangeHeadRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgChangeHeadRequest_descriptor_,
      CMsgChangeHeadRequest::default_instance_,
      CMsgChangeHeadRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgChangeHeadRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgChangeHeadRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgChangeHeadRequest));
  CMsgChangeHeadRequest_Msg_descriptor_ = CMsgChangeHeadRequest_descriptor_->enum_type(0);
  CMsgChangeHeadResponse_descriptor_ = file->message_type(12);
  static const int CMsgChangeHeadResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgChangeHeadResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgChangeHeadResponse, headid_),
  };
  CMsgChangeHeadResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgChangeHeadResponse_descriptor_,
      CMsgChangeHeadResponse::default_instance_,
      CMsgChangeHeadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgChangeHeadResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgChangeHeadResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgChangeHeadResponse));
  CMsgChangeHeadResponse_Msg_descriptor_ = CMsgChangeHeadResponse_descriptor_->enum_type(0);
  CMsgUpdateResourceResponse_descriptor_ = file->message_type(13);
  static const int CMsgUpdateResourceResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUpdateResourceResponse, resources_),
  };
  CMsgUpdateResourceResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgUpdateResourceResponse_descriptor_,
      CMsgUpdateResourceResponse::default_instance_,
      CMsgUpdateResourceResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUpdateResourceResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUpdateResourceResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgUpdateResourceResponse));
  CMsgUpdateResourceResponse_Msg_descriptor_ = CMsgUpdateResourceResponse_descriptor_->enum_type(0);
  CMsgAlmsResponse_descriptor_ = file->message_type(14);
  static const int CMsgAlmsResponse_offsets_[1] = {
  };
  CMsgAlmsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgAlmsResponse_descriptor_,
      CMsgAlmsResponse::default_instance_,
      CMsgAlmsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAlmsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAlmsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgAlmsResponse));
  CMsgAlmsResponse_Msg_descriptor_ = CMsgAlmsResponse_descriptor_->enum_type(0);
  CMsgBackHallOKRequest_descriptor_ = file->message_type(15);
  static const int CMsgBackHallOKRequest_offsets_[1] = {
  };
  CMsgBackHallOKRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgBackHallOKRequest_descriptor_,
      CMsgBackHallOKRequest::default_instance_,
      CMsgBackHallOKRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBackHallOKRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBackHallOKRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgBackHallOKRequest));
  CMsgBackHallOKRequest_Msg_descriptor_ = CMsgBackHallOKRequest_descriptor_->enum_type(0);
  CMsgDataStatisticsRequest_descriptor_ = file->message_type(16);
  static const int CMsgDataStatisticsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDataStatisticsRequest, type_),
  };
  CMsgDataStatisticsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgDataStatisticsRequest_descriptor_,
      CMsgDataStatisticsRequest::default_instance_,
      CMsgDataStatisticsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDataStatisticsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDataStatisticsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgDataStatisticsRequest));
  CMsgDataStatisticsRequest_Msg_descriptor_ = CMsgDataStatisticsRequest_descriptor_->enum_type(0);
  CMsg8BallDataStatisticsResponse_descriptor_ = file->message_type(17);
  static const int CMsg8BallDataStatisticsResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, lose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, escape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, winningstreak_),
  };
  CMsg8BallDataStatisticsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsg8BallDataStatisticsResponse_descriptor_,
      CMsg8BallDataStatisticsResponse::default_instance_,
      CMsg8BallDataStatisticsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg8BallDataStatisticsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsg8BallDataStatisticsResponse));
  CMsg8BallDataStatisticsResponse_Msg_descriptor_ = CMsg8BallDataStatisticsResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_coremessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLoginHallRequest_descriptor_, &CMsgLoginHallRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLoginHallResponse_descriptor_, &CMsgLoginHallResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLeaveHallRequest_descriptor_, &CMsgLeaveHallRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgLeaveHallResponse_descriptor_, &CMsgLeaveHallResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgSystemErrorResponse_descriptor_, &CMsgSystemErrorResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgTestRequest_descriptor_, &CMsgTestRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgTestResponse_descriptor_, &CMsgTestResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgExchangeResourceRequest_descriptor_, &CMsgExchangeResourceRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgExchangeResourceResponse_descriptor_, &CMsgExchangeResourceResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRenameRequest_descriptor_, &CMsgRenameRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgRenameResponse_descriptor_, &CMsgRenameResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgChangeHeadRequest_descriptor_, &CMsgChangeHeadRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgChangeHeadResponse_descriptor_, &CMsgChangeHeadResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgUpdateResourceResponse_descriptor_, &CMsgUpdateResourceResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgAlmsResponse_descriptor_, &CMsgAlmsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgBackHallOKRequest_descriptor_, &CMsgBackHallOKRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgDataStatisticsRequest_descriptor_, &CMsgDataStatisticsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsg8BallDataStatisticsResponse_descriptor_, &CMsg8BallDataStatisticsResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_coremessage_2eproto() {
  delete CMsgLoginHallRequest::default_instance_;
  delete CMsgLoginHallRequest_reflection_;
  delete CMsgLoginHallResponse::default_instance_;
  delete CMsgLoginHallResponse_reflection_;
  delete CMsgLeaveHallRequest::default_instance_;
  delete CMsgLeaveHallRequest_reflection_;
  delete CMsgLeaveHallResponse::default_instance_;
  delete CMsgLeaveHallResponse_reflection_;
  delete CMsgSystemErrorResponse::default_instance_;
  delete CMsgSystemErrorResponse_reflection_;
  delete CMsgTestRequest::default_instance_;
  delete CMsgTestRequest_reflection_;
  delete CMsgTestResponse::default_instance_;
  delete CMsgTestResponse_reflection_;
  delete CMsgExchangeResourceRequest::default_instance_;
  delete CMsgExchangeResourceRequest_reflection_;
  delete CMsgExchangeResourceResponse::default_instance_;
  delete CMsgExchangeResourceResponse_reflection_;
  delete CMsgRenameRequest::default_instance_;
  delete CMsgRenameRequest_reflection_;
  delete CMsgRenameResponse::default_instance_;
  delete CMsgRenameResponse_reflection_;
  delete CMsgChangeHeadRequest::default_instance_;
  delete CMsgChangeHeadRequest_reflection_;
  delete CMsgChangeHeadResponse::default_instance_;
  delete CMsgChangeHeadResponse_reflection_;
  delete CMsgUpdateResourceResponse::default_instance_;
  delete CMsgUpdateResourceResponse_reflection_;
  delete CMsgAlmsResponse::default_instance_;
  delete CMsgAlmsResponse_reflection_;
  delete CMsgBackHallOKRequest::default_instance_;
  delete CMsgBackHallOKRequest_reflection_;
  delete CMsgDataStatisticsRequest::default_instance_;
  delete CMsgDataStatisticsRequest_reflection_;
  delete CMsg8BallDataStatisticsResponse::default_instance_;
  delete CMsg8BallDataStatisticsResponse_reflection_;
}

void protobuf_AddDesc_coremessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_resourcemessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021coremessage.proto\032\025resourcemessage.pro"
    "to\"k\n\024CMsgLoginHallRequest\022\017\n\007Account\030\001 "
    "\002(\t\022\020\n\010Password\030\002 \001(\t\022\r\n\005PFrom\030\003 \001(\005\022\017\n\007"
    "Session\030\004 \002(\t\"\020\n\003Msg\022\t\n\005MsgID\020\001\"\377\001\n\025CMsg"
    "LoginHallResponse\022\016\n\006Result\030\001 \002(\005\022\020\n\010Ent"
    "ityID\030\002 \002(\005\022\016\n\006RoleID\030\003 \002(\003\022\020\n\010RoleName\030"
    "\004 \002(\t\022$\n\tresources\030\005 \003(\0132\021.PBUpdateResou"
    "rce\022&\n\004data\030\006 \003(\0132\030.PBGagaleType1SingleI"
    "nfo\022\026\n\005Items\030\007 \003(\0132\007.PBItem\022\032\n\022HasFirstC"
    "hangeName\030\010 \002(\010\022\016\n\006headid\030\t \002(\005\"\020\n\003Msg\022\t"
    "\n\005MsgID\020\002\";\n\024CMsgLeaveHallRequest\022\021\n\tLea"
    "veType\030\001 \002(\005\"\020\n\003Msg\022\t\n\005MsgID\020\003\"<\n\025CMsgLe"
    "aveHallResponse\022\021\n\tLeaveType\030\001 \002(\005\"\020\n\003Ms"
    "g\022\t\n\005MsgID\020\004\";\n\027CMsgSystemErrorResponse\022"
    "\016\n\006Result\030\001 \002(\005\"\020\n\003Msg\022\t\n\005MsgID\020\005\"f\n\017CMs"
    "gTestRequest\022\020\n\010EntityID\030\001 \001(\005\022\016\n\006RoleID"
    "\030\002 \001(\003\022\021\n\tTimeStamp\030\003 \001(\003\022\014\n\004Name\030\004 \001(\t\""
    "\020\n\003Msg\022\t\n\005MsgID\020\006\"g\n\020CMsgTestResponse\022\020\n"
    "\010EntityID\030\001 \001(\005\022\016\n\006RoleID\030\002 \001(\003\022\021\n\tTimeS"
    "tamp\030\003 \001(\003\022\014\n\004Name\030\004 \001(\t\"\020\n\003Msg\022\t\n\005MsgID"
    "\020\007\";\n\033CMsgExchangeResourceRequest\022\n\n\002id\030"
    "\001 \002(\005\"\020\n\003Msg\022\t\n\005MsgID\020\010\"f\n\034CMsgExchangeR"
    "esourceResponse\022\016\n\006result\030\001 \002(\005\022$\n\tresou"
    "rces\030\002 \003(\0132\021.PBUpdateResource\"\020\n\003Msg\022\t\n\005"
    "MsgID\020\t\"7\n\021CMsgRenameRequest\022\020\n\010RoleName"
    "\030\001 \002(\t\"\020\n\003Msg\022\t\n\005MsgID\020\n\"H\n\022CMsgRenameRe"
    "sponse\022\016\n\006Result\030\001 \002(\005\022\020\n\010rolename\030\002 \002(\t"
    "\"\020\n\003Msg\022\t\n\005MsgID\020\013\"9\n\025CMsgChangeHeadRequ"
    "est\022\016\n\006HeadId\030\001 \002(\005\"\020\n\003Msg\022\t\n\005MsgID\020\014\"J\n"
    "\026CMsgChangeHeadResponse\022\016\n\006Result\030\001 \002(\005\022"
    "\016\n\006headid\030\002 \002(\005\"\020\n\003Msg\022\t\n\005MsgID\020\r\"T\n\032CMs"
    "gUpdateResourceResponse\022$\n\tresources\030\001 \003"
    "(\0132\021.PBUpdateResource\"\020\n\003Msg\022\t\n\005MsgID\020\016\""
    "$\n\020CMsgAlmsResponse\"\020\n\003Msg\022\t\n\005MsgID\020\017\")\n"
    "\025CMsgBackHallOKRequest\"\020\n\003Msg\022\t\n\005MsgID\020\020"
    "\"Q\n\031CMsgDataStatisticsRequest\022\"\n\004type\030\001 "
    "\002(\0162\024.EDataStatisticsType\"\020\n\003Msg\022\t\n\005MsgI"
    "D\020\021\"\251\001\n\037CMsg8BallDataStatisticsResponse\022"
    "\016\n\006result\030\001 \002(\005\022\"\n\004type\030\002 \002(\0162\024.EDataSta"
    "tisticsType\022\013\n\003win\030\003 \002(\005\022\014\n\004lose\030\004 \002(\005\022\016"
    "\n\006escape\030\005 \002(\005\022\025\n\rwinningstreak\030\006 \002(\005\"\020\n"
    "\003Msg\022\t\n\005MsgID\020\022B\002H\001", 1659);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "coremessage.proto", &protobuf_RegisterTypes);
  CMsgLoginHallRequest::default_instance_ = new CMsgLoginHallRequest();
  CMsgLoginHallResponse::default_instance_ = new CMsgLoginHallResponse();
  CMsgLeaveHallRequest::default_instance_ = new CMsgLeaveHallRequest();
  CMsgLeaveHallResponse::default_instance_ = new CMsgLeaveHallResponse();
  CMsgSystemErrorResponse::default_instance_ = new CMsgSystemErrorResponse();
  CMsgTestRequest::default_instance_ = new CMsgTestRequest();
  CMsgTestResponse::default_instance_ = new CMsgTestResponse();
  CMsgExchangeResourceRequest::default_instance_ = new CMsgExchangeResourceRequest();
  CMsgExchangeResourceResponse::default_instance_ = new CMsgExchangeResourceResponse();
  CMsgRenameRequest::default_instance_ = new CMsgRenameRequest();
  CMsgRenameResponse::default_instance_ = new CMsgRenameResponse();
  CMsgChangeHeadRequest::default_instance_ = new CMsgChangeHeadRequest();
  CMsgChangeHeadResponse::default_instance_ = new CMsgChangeHeadResponse();
  CMsgUpdateResourceResponse::default_instance_ = new CMsgUpdateResourceResponse();
  CMsgAlmsResponse::default_instance_ = new CMsgAlmsResponse();
  CMsgBackHallOKRequest::default_instance_ = new CMsgBackHallOKRequest();
  CMsgDataStatisticsRequest::default_instance_ = new CMsgDataStatisticsRequest();
  CMsg8BallDataStatisticsResponse::default_instance_ = new CMsg8BallDataStatisticsResponse();
  CMsgLoginHallRequest::default_instance_->InitAsDefaultInstance();
  CMsgLoginHallResponse::default_instance_->InitAsDefaultInstance();
  CMsgLeaveHallRequest::default_instance_->InitAsDefaultInstance();
  CMsgLeaveHallResponse::default_instance_->InitAsDefaultInstance();
  CMsgSystemErrorResponse::default_instance_->InitAsDefaultInstance();
  CMsgTestRequest::default_instance_->InitAsDefaultInstance();
  CMsgTestResponse::default_instance_->InitAsDefaultInstance();
  CMsgExchangeResourceRequest::default_instance_->InitAsDefaultInstance();
  CMsgExchangeResourceResponse::default_instance_->InitAsDefaultInstance();
  CMsgRenameRequest::default_instance_->InitAsDefaultInstance();
  CMsgRenameResponse::default_instance_->InitAsDefaultInstance();
  CMsgChangeHeadRequest::default_instance_->InitAsDefaultInstance();
  CMsgChangeHeadResponse::default_instance_->InitAsDefaultInstance();
  CMsgUpdateResourceResponse::default_instance_->InitAsDefaultInstance();
  CMsgAlmsResponse::default_instance_->InitAsDefaultInstance();
  CMsgBackHallOKRequest::default_instance_->InitAsDefaultInstance();
  CMsgDataStatisticsRequest::default_instance_->InitAsDefaultInstance();
  CMsg8BallDataStatisticsResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_coremessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_coremessage_2eproto {
  StaticDescriptorInitializer_coremessage_2eproto() {
    protobuf_AddDesc_coremessage_2eproto();
  }
} static_descriptor_initializer_coremessage_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgLoginHallRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLoginHallRequest_Msg_descriptor_;
}
bool CMsgLoginHallRequest_Msg_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgLoginHallRequest_Msg CMsgLoginHallRequest::MsgID;
const CMsgLoginHallRequest_Msg CMsgLoginHallRequest::Msg_MIN;
const CMsgLoginHallRequest_Msg CMsgLoginHallRequest::Msg_MAX;
const int CMsgLoginHallRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgLoginHallRequest::kAccountFieldNumber;
const int CMsgLoginHallRequest::kPasswordFieldNumber;
const int CMsgLoginHallRequest::kPFromFieldNumber;
const int CMsgLoginHallRequest::kSessionFieldNumber;
#endif  // !_MSC_VER

CMsgLoginHallRequest::CMsgLoginHallRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgLoginHallRequest::InitAsDefaultInstance() {
}

CMsgLoginHallRequest::CMsgLoginHallRequest(const CMsgLoginHallRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgLoginHallRequest::SharedCtor() {
  _cached_size_ = 0;
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pfrom_ = 0;
  session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLoginHallRequest::~CMsgLoginHallRequest() {
  SharedDtor();
}

void CMsgLoginHallRequest::SharedDtor() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    delete session_;
  }
  if (this != default_instance_) {
  }
}

void CMsgLoginHallRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLoginHallRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLoginHallRequest_descriptor_;
}

const CMsgLoginHallRequest& CMsgLoginHallRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgLoginHallRequest* CMsgLoginHallRequest::default_instance_ = NULL;

CMsgLoginHallRequest* CMsgLoginHallRequest::New() const {
  return new CMsgLoginHallRequest;
}

void CMsgLoginHallRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::kEmptyString) {
        password_->clear();
      }
    }
    pfrom_ = 0;
    if (has_session()) {
      if (session_ != &::google::protobuf::internal::kEmptyString) {
        session_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLoginHallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Password;
        break;
      }

      // optional string Password = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_PFrom;
        break;
      }

      // optional int32 PFrom = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_PFrom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pfrom_)));
          set_has_pfrom();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Session;
        break;
      }

      // required string Session = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Session:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->session().data(), this->session().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgLoginHallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string Account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->account(), output);
  }

  // optional string Password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->password(), output);
  }

  // optional int32 PFrom = 3;
  if (has_pfrom()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pfrom(), output);
  }

  // required string Session = 4;
  if (has_session()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->session(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgLoginHallRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string Account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string Password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional int32 PFrom = 3;
  if (has_pfrom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pfrom(), target);
  }

  // required string Session = 4;
  if (has_session()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->session(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgLoginHallRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string Password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional int32 PFrom = 3;
    if (has_pfrom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pfrom());
    }

    // required string Session = 4;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLoginHallRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLoginHallRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLoginHallRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLoginHallRequest::MergeFrom(const CMsgLoginHallRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
    if (from.has_pfrom()) {
      set_pfrom(from.pfrom());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLoginHallRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLoginHallRequest::CopyFrom(const CMsgLoginHallRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLoginHallRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  return true;
}

void CMsgLoginHallRequest::Swap(CMsgLoginHallRequest* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(password_, other->password_);
    std::swap(pfrom_, other->pfrom_);
    std::swap(session_, other->session_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLoginHallRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLoginHallRequest_descriptor_;
  metadata.reflection = CMsgLoginHallRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgLoginHallResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLoginHallResponse_Msg_descriptor_;
}
bool CMsgLoginHallResponse_Msg_IsValid(int value) {
  switch(value) {
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgLoginHallResponse_Msg CMsgLoginHallResponse::MsgID;
const CMsgLoginHallResponse_Msg CMsgLoginHallResponse::Msg_MIN;
const CMsgLoginHallResponse_Msg CMsgLoginHallResponse::Msg_MAX;
const int CMsgLoginHallResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgLoginHallResponse::kResultFieldNumber;
const int CMsgLoginHallResponse::kEntityIDFieldNumber;
const int CMsgLoginHallResponse::kRoleIDFieldNumber;
const int CMsgLoginHallResponse::kRoleNameFieldNumber;
const int CMsgLoginHallResponse::kResourcesFieldNumber;
const int CMsgLoginHallResponse::kDataFieldNumber;
const int CMsgLoginHallResponse::kItemsFieldNumber;
const int CMsgLoginHallResponse::kHasFirstChangeNameFieldNumber;
const int CMsgLoginHallResponse::kHeadidFieldNumber;
#endif  // !_MSC_VER

CMsgLoginHallResponse::CMsgLoginHallResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgLoginHallResponse::InitAsDefaultInstance() {
}

CMsgLoginHallResponse::CMsgLoginHallResponse(const CMsgLoginHallResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgLoginHallResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  entityid_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
  rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  hasfirstchangename_ = false;
  headid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLoginHallResponse::~CMsgLoginHallResponse() {
  SharedDtor();
}

void CMsgLoginHallResponse::SharedDtor() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

void CMsgLoginHallResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLoginHallResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLoginHallResponse_descriptor_;
}

const CMsgLoginHallResponse& CMsgLoginHallResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgLoginHallResponse* CMsgLoginHallResponse::default_instance_ = NULL;

CMsgLoginHallResponse* CMsgLoginHallResponse::New() const {
  return new CMsgLoginHallResponse;
}

void CMsgLoginHallResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    entityid_ = 0;
    roleid_ = GOOGLE_LONGLONG(0);
    if (has_rolename()) {
      if (rolename_ != &::google::protobuf::internal::kEmptyString) {
        rolename_->clear();
      }
    }
    hasfirstchangename_ = false;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    headid_ = 0;
  }
  resources_.Clear();
  data_.Clear();
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLoginHallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_EntityID;
        break;
      }

      // required int32 EntityID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_EntityID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entityid_)));
          set_has_entityid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_RoleID;
        break;
      }

      // required int64 RoleID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_RoleName;
        break;
      }

      // required string RoleName = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_RoleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_resources;
        break;
      }

      // repeated .PBUpdateResource resources = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_resources;
        if (input->ExpectTag(50)) goto parse_data;
        break;
      }

      // repeated .PBGagaleType1SingleInfo data = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_data;
        if (input->ExpectTag(58)) goto parse_Items;
        break;
      }

      // repeated .PBItem Items = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_Items;
        if (input->ExpectTag(64)) goto parse_HasFirstChangeName;
        break;
      }

      // required bool HasFirstChangeName = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_HasFirstChangeName:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasfirstchangename_)));
          set_has_hasfirstchangename();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_headid;
        break;
      }

      // required int32 headid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_headid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &headid_)));
          set_has_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgLoginHallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required int32 EntityID = 2;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entityid(), output);
  }

  // required int64 RoleID = 3;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->roleid(), output);
  }

  // required string RoleName = 4;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->rolename(), output);
  }

  // repeated .PBUpdateResource resources = 5;
  for (int i = 0; i < this->resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->resources(i), output);
  }

  // repeated .PBGagaleType1SingleInfo data = 6;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->data(i), output);
  }

  // repeated .PBItem Items = 7;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->items(i), output);
  }

  // required bool HasFirstChangeName = 8;
  if (has_hasfirstchangename()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->hasfirstchangename(), output);
  }

  // required int32 headid = 9;
  if (has_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->headid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgLoginHallResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required int32 EntityID = 2;
  if (has_entityid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entityid(), target);
  }

  // required int64 RoleID = 3;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->roleid(), target);
  }

  // required string RoleName = 4;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rolename(), target);
  }

  // repeated .PBUpdateResource resources = 5;
  for (int i = 0; i < this->resources_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->resources(i), target);
  }

  // repeated .PBGagaleType1SingleInfo data = 6;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->data(i), target);
  }

  // repeated .PBItem Items = 7;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->items(i), target);
  }

  // required bool HasFirstChangeName = 8;
  if (has_hasfirstchangename()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->hasfirstchangename(), target);
  }

  // required int32 headid = 9;
  if (has_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->headid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgLoginHallResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required int32 EntityID = 2;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entityid());
    }

    // required int64 RoleID = 3;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

    // required string RoleName = 4;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // required bool HasFirstChangeName = 8;
    if (has_hasfirstchangename()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 headid = 9;
    if (has_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->headid());
    }

  }
  // repeated .PBUpdateResource resources = 5;
  total_size += 1 * this->resources_size();
  for (int i = 0; i < this->resources_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources(i));
  }

  // repeated .PBGagaleType1SingleInfo data = 6;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  // repeated .PBItem Items = 7;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLoginHallResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLoginHallResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLoginHallResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLoginHallResponse::MergeFrom(const CMsgLoginHallResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  resources_.MergeFrom(from.resources_);
  data_.MergeFrom(from.data_);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_rolename()) {
      set_rolename(from.rolename());
    }
    if (from.has_hasfirstchangename()) {
      set_hasfirstchangename(from.hasfirstchangename());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_headid()) {
      set_headid(from.headid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLoginHallResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLoginHallResponse::CopyFrom(const CMsgLoginHallResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLoginHallResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000018f) != 0x0000018f) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgLoginHallResponse::Swap(CMsgLoginHallResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(entityid_, other->entityid_);
    std::swap(roleid_, other->roleid_);
    std::swap(rolename_, other->rolename_);
    resources_.Swap(&other->resources_);
    data_.Swap(&other->data_);
    items_.Swap(&other->items_);
    std::swap(hasfirstchangename_, other->hasfirstchangename_);
    std::swap(headid_, other->headid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLoginHallResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLoginHallResponse_descriptor_;
  metadata.reflection = CMsgLoginHallResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgLeaveHallRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLeaveHallRequest_Msg_descriptor_;
}
bool CMsgLeaveHallRequest_Msg_IsValid(int value) {
  switch(value) {
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgLeaveHallRequest_Msg CMsgLeaveHallRequest::MsgID;
const CMsgLeaveHallRequest_Msg CMsgLeaveHallRequest::Msg_MIN;
const CMsgLeaveHallRequest_Msg CMsgLeaveHallRequest::Msg_MAX;
const int CMsgLeaveHallRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgLeaveHallRequest::kLeaveTypeFieldNumber;
#endif  // !_MSC_VER

CMsgLeaveHallRequest::CMsgLeaveHallRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgLeaveHallRequest::InitAsDefaultInstance() {
}

CMsgLeaveHallRequest::CMsgLeaveHallRequest(const CMsgLeaveHallRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgLeaveHallRequest::SharedCtor() {
  _cached_size_ = 0;
  leavetype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLeaveHallRequest::~CMsgLeaveHallRequest() {
  SharedDtor();
}

void CMsgLeaveHallRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgLeaveHallRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLeaveHallRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLeaveHallRequest_descriptor_;
}

const CMsgLeaveHallRequest& CMsgLeaveHallRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgLeaveHallRequest* CMsgLeaveHallRequest::default_instance_ = NULL;

CMsgLeaveHallRequest* CMsgLeaveHallRequest::New() const {
  return new CMsgLeaveHallRequest;
}

void CMsgLeaveHallRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    leavetype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLeaveHallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 LeaveType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leavetype_)));
          set_has_leavetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgLeaveHallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 LeaveType = 1;
  if (has_leavetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->leavetype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgLeaveHallRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 LeaveType = 1;
  if (has_leavetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->leavetype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgLeaveHallRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 LeaveType = 1;
    if (has_leavetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leavetype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLeaveHallRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLeaveHallRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLeaveHallRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLeaveHallRequest::MergeFrom(const CMsgLeaveHallRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leavetype()) {
      set_leavetype(from.leavetype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLeaveHallRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLeaveHallRequest::CopyFrom(const CMsgLeaveHallRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLeaveHallRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgLeaveHallRequest::Swap(CMsgLeaveHallRequest* other) {
  if (other != this) {
    std::swap(leavetype_, other->leavetype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLeaveHallRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLeaveHallRequest_descriptor_;
  metadata.reflection = CMsgLeaveHallRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgLeaveHallResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLeaveHallResponse_Msg_descriptor_;
}
bool CMsgLeaveHallResponse_Msg_IsValid(int value) {
  switch(value) {
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgLeaveHallResponse_Msg CMsgLeaveHallResponse::MsgID;
const CMsgLeaveHallResponse_Msg CMsgLeaveHallResponse::Msg_MIN;
const CMsgLeaveHallResponse_Msg CMsgLeaveHallResponse::Msg_MAX;
const int CMsgLeaveHallResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgLeaveHallResponse::kLeaveTypeFieldNumber;
#endif  // !_MSC_VER

CMsgLeaveHallResponse::CMsgLeaveHallResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgLeaveHallResponse::InitAsDefaultInstance() {
}

CMsgLeaveHallResponse::CMsgLeaveHallResponse(const CMsgLeaveHallResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgLeaveHallResponse::SharedCtor() {
  _cached_size_ = 0;
  leavetype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgLeaveHallResponse::~CMsgLeaveHallResponse() {
  SharedDtor();
}

void CMsgLeaveHallResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgLeaveHallResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLeaveHallResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgLeaveHallResponse_descriptor_;
}

const CMsgLeaveHallResponse& CMsgLeaveHallResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgLeaveHallResponse* CMsgLeaveHallResponse::default_instance_ = NULL;

CMsgLeaveHallResponse* CMsgLeaveHallResponse::New() const {
  return new CMsgLeaveHallResponse;
}

void CMsgLeaveHallResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    leavetype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgLeaveHallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 LeaveType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leavetype_)));
          set_has_leavetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgLeaveHallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 LeaveType = 1;
  if (has_leavetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->leavetype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgLeaveHallResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 LeaveType = 1;
  if (has_leavetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->leavetype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgLeaveHallResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 LeaveType = 1;
    if (has_leavetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leavetype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLeaveHallResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgLeaveHallResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgLeaveHallResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgLeaveHallResponse::MergeFrom(const CMsgLeaveHallResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leavetype()) {
      set_leavetype(from.leavetype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgLeaveHallResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLeaveHallResponse::CopyFrom(const CMsgLeaveHallResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLeaveHallResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgLeaveHallResponse::Swap(CMsgLeaveHallResponse* other) {
  if (other != this) {
    std::swap(leavetype_, other->leavetype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgLeaveHallResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgLeaveHallResponse_descriptor_;
  metadata.reflection = CMsgLeaveHallResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgSystemErrorResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSystemErrorResponse_Msg_descriptor_;
}
bool CMsgSystemErrorResponse_Msg_IsValid(int value) {
  switch(value) {
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgSystemErrorResponse_Msg CMsgSystemErrorResponse::MsgID;
const CMsgSystemErrorResponse_Msg CMsgSystemErrorResponse::Msg_MIN;
const CMsgSystemErrorResponse_Msg CMsgSystemErrorResponse::Msg_MAX;
const int CMsgSystemErrorResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgSystemErrorResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CMsgSystemErrorResponse::CMsgSystemErrorResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgSystemErrorResponse::InitAsDefaultInstance() {
}

CMsgSystemErrorResponse::CMsgSystemErrorResponse(const CMsgSystemErrorResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgSystemErrorResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgSystemErrorResponse::~CMsgSystemErrorResponse() {
  SharedDtor();
}

void CMsgSystemErrorResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgSystemErrorResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSystemErrorResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgSystemErrorResponse_descriptor_;
}

const CMsgSystemErrorResponse& CMsgSystemErrorResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgSystemErrorResponse* CMsgSystemErrorResponse::default_instance_ = NULL;

CMsgSystemErrorResponse* CMsgSystemErrorResponse::New() const {
  return new CMsgSystemErrorResponse;
}

void CMsgSystemErrorResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgSystemErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgSystemErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgSystemErrorResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgSystemErrorResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSystemErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgSystemErrorResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgSystemErrorResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgSystemErrorResponse::MergeFrom(const CMsgSystemErrorResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgSystemErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSystemErrorResponse::CopyFrom(const CMsgSystemErrorResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSystemErrorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgSystemErrorResponse::Swap(CMsgSystemErrorResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgSystemErrorResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgSystemErrorResponse_descriptor_;
  metadata.reflection = CMsgSystemErrorResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgTestRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgTestRequest_Msg_descriptor_;
}
bool CMsgTestRequest_Msg_IsValid(int value) {
  switch(value) {
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgTestRequest_Msg CMsgTestRequest::MsgID;
const CMsgTestRequest_Msg CMsgTestRequest::Msg_MIN;
const CMsgTestRequest_Msg CMsgTestRequest::Msg_MAX;
const int CMsgTestRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgTestRequest::kEntityIDFieldNumber;
const int CMsgTestRequest::kRoleIDFieldNumber;
const int CMsgTestRequest::kTimeStampFieldNumber;
const int CMsgTestRequest::kNameFieldNumber;
#endif  // !_MSC_VER

CMsgTestRequest::CMsgTestRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgTestRequest::InitAsDefaultInstance() {
}

CMsgTestRequest::CMsgTestRequest(const CMsgTestRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgTestRequest::SharedCtor() {
  _cached_size_ = 0;
  entityid_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
  timestamp_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgTestRequest::~CMsgTestRequest() {
  SharedDtor();
}

void CMsgTestRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgTestRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgTestRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgTestRequest_descriptor_;
}

const CMsgTestRequest& CMsgTestRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgTestRequest* CMsgTestRequest::default_instance_ = NULL;

CMsgTestRequest* CMsgTestRequest::New() const {
  return new CMsgTestRequest;
}

void CMsgTestRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    entityid_ = 0;
    roleid_ = GOOGLE_LONGLONG(0);
    timestamp_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgTestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 EntityID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entityid_)));
          set_has_entityid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional int64 RoleID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_TimeStamp;
        break;
      }

      // optional int64 TimeStamp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_TimeStamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Name;
        break;
      }

      // optional string Name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgTestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 EntityID = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entityid(), output);
  }

  // optional int64 RoleID = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // optional int64 TimeStamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp(), output);
  }

  // optional string Name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgTestRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 EntityID = 1;
  if (has_entityid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entityid(), target);
  }

  // optional int64 RoleID = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // optional int64 TimeStamp = 3;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp(), target);
  }

  // optional string Name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgTestRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 EntityID = 1;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entityid());
    }

    // optional int64 RoleID = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

    // optional int64 TimeStamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional string Name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgTestRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgTestRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgTestRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgTestRequest::MergeFrom(const CMsgTestRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgTestRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTestRequest::CopyFrom(const CMsgTestRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTestRequest::IsInitialized() const {

  return true;
}

void CMsgTestRequest::Swap(CMsgTestRequest* other) {
  if (other != this) {
    std::swap(entityid_, other->entityid_);
    std::swap(roleid_, other->roleid_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgTestRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgTestRequest_descriptor_;
  metadata.reflection = CMsgTestRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgTestResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgTestResponse_Msg_descriptor_;
}
bool CMsgTestResponse_Msg_IsValid(int value) {
  switch(value) {
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgTestResponse_Msg CMsgTestResponse::MsgID;
const CMsgTestResponse_Msg CMsgTestResponse::Msg_MIN;
const CMsgTestResponse_Msg CMsgTestResponse::Msg_MAX;
const int CMsgTestResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgTestResponse::kEntityIDFieldNumber;
const int CMsgTestResponse::kRoleIDFieldNumber;
const int CMsgTestResponse::kTimeStampFieldNumber;
const int CMsgTestResponse::kNameFieldNumber;
#endif  // !_MSC_VER

CMsgTestResponse::CMsgTestResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgTestResponse::InitAsDefaultInstance() {
}

CMsgTestResponse::CMsgTestResponse(const CMsgTestResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgTestResponse::SharedCtor() {
  _cached_size_ = 0;
  entityid_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
  timestamp_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgTestResponse::~CMsgTestResponse() {
  SharedDtor();
}

void CMsgTestResponse::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void CMsgTestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgTestResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgTestResponse_descriptor_;
}

const CMsgTestResponse& CMsgTestResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgTestResponse* CMsgTestResponse::default_instance_ = NULL;

CMsgTestResponse* CMsgTestResponse::New() const {
  return new CMsgTestResponse;
}

void CMsgTestResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    entityid_ = 0;
    roleid_ = GOOGLE_LONGLONG(0);
    timestamp_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgTestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 EntityID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entityid_)));
          set_has_entityid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional int64 RoleID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_TimeStamp;
        break;
      }

      // optional int64 TimeStamp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_TimeStamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Name;
        break;
      }

      // optional string Name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgTestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 EntityID = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entityid(), output);
  }

  // optional int64 RoleID = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // optional int64 TimeStamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timestamp(), output);
  }

  // optional string Name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgTestResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 EntityID = 1;
  if (has_entityid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entityid(), target);
  }

  // optional int64 RoleID = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // optional int64 TimeStamp = 3;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timestamp(), target);
  }

  // optional string Name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgTestResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 EntityID = 1;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entityid());
    }

    // optional int64 RoleID = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

    // optional int64 TimeStamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional string Name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgTestResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgTestResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgTestResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgTestResponse::MergeFrom(const CMsgTestResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgTestResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTestResponse::CopyFrom(const CMsgTestResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTestResponse::IsInitialized() const {

  return true;
}

void CMsgTestResponse::Swap(CMsgTestResponse* other) {
  if (other != this) {
    std::swap(entityid_, other->entityid_);
    std::swap(roleid_, other->roleid_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgTestResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgTestResponse_descriptor_;
  metadata.reflection = CMsgTestResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgExchangeResourceRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExchangeResourceRequest_Msg_descriptor_;
}
bool CMsgExchangeResourceRequest_Msg_IsValid(int value) {
  switch(value) {
    case 8:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgExchangeResourceRequest_Msg CMsgExchangeResourceRequest::MsgID;
const CMsgExchangeResourceRequest_Msg CMsgExchangeResourceRequest::Msg_MIN;
const CMsgExchangeResourceRequest_Msg CMsgExchangeResourceRequest::Msg_MAX;
const int CMsgExchangeResourceRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgExchangeResourceRequest::kIdFieldNumber;
#endif  // !_MSC_VER

CMsgExchangeResourceRequest::CMsgExchangeResourceRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgExchangeResourceRequest::InitAsDefaultInstance() {
}

CMsgExchangeResourceRequest::CMsgExchangeResourceRequest(const CMsgExchangeResourceRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgExchangeResourceRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgExchangeResourceRequest::~CMsgExchangeResourceRequest() {
  SharedDtor();
}

void CMsgExchangeResourceRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgExchangeResourceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgExchangeResourceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExchangeResourceRequest_descriptor_;
}

const CMsgExchangeResourceRequest& CMsgExchangeResourceRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgExchangeResourceRequest* CMsgExchangeResourceRequest::default_instance_ = NULL;

CMsgExchangeResourceRequest* CMsgExchangeResourceRequest::New() const {
  return new CMsgExchangeResourceRequest;
}

void CMsgExchangeResourceRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgExchangeResourceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgExchangeResourceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgExchangeResourceRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgExchangeResourceRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgExchangeResourceRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgExchangeResourceRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgExchangeResourceRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgExchangeResourceRequest::MergeFrom(const CMsgExchangeResourceRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgExchangeResourceRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgExchangeResourceRequest::CopyFrom(const CMsgExchangeResourceRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgExchangeResourceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgExchangeResourceRequest::Swap(CMsgExchangeResourceRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgExchangeResourceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgExchangeResourceRequest_descriptor_;
  metadata.reflection = CMsgExchangeResourceRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgExchangeResourceResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExchangeResourceResponse_Msg_descriptor_;
}
bool CMsgExchangeResourceResponse_Msg_IsValid(int value) {
  switch(value) {
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgExchangeResourceResponse_Msg CMsgExchangeResourceResponse::MsgID;
const CMsgExchangeResourceResponse_Msg CMsgExchangeResourceResponse::Msg_MIN;
const CMsgExchangeResourceResponse_Msg CMsgExchangeResourceResponse::Msg_MAX;
const int CMsgExchangeResourceResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgExchangeResourceResponse::kResultFieldNumber;
const int CMsgExchangeResourceResponse::kResourcesFieldNumber;
#endif  // !_MSC_VER

CMsgExchangeResourceResponse::CMsgExchangeResourceResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgExchangeResourceResponse::InitAsDefaultInstance() {
}

CMsgExchangeResourceResponse::CMsgExchangeResourceResponse(const CMsgExchangeResourceResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgExchangeResourceResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgExchangeResourceResponse::~CMsgExchangeResourceResponse() {
  SharedDtor();
}

void CMsgExchangeResourceResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgExchangeResourceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgExchangeResourceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExchangeResourceResponse_descriptor_;
}

const CMsgExchangeResourceResponse& CMsgExchangeResourceResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgExchangeResourceResponse* CMsgExchangeResourceResponse::default_instance_ = NULL;

CMsgExchangeResourceResponse* CMsgExchangeResourceResponse::New() const {
  return new CMsgExchangeResourceResponse;
}

void CMsgExchangeResourceResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  resources_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgExchangeResourceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resources;
        break;
      }

      // repeated .PBUpdateResource resources = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resources;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgExchangeResourceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBUpdateResource resources = 2;
  for (int i = 0; i < this->resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resources(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgExchangeResourceResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBUpdateResource resources = 2;
  for (int i = 0; i < this->resources_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resources(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgExchangeResourceResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBUpdateResource resources = 2;
  total_size += 1 * this->resources_size();
  for (int i = 0; i < this->resources_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgExchangeResourceResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgExchangeResourceResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgExchangeResourceResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgExchangeResourceResponse::MergeFrom(const CMsgExchangeResourceResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  resources_.MergeFrom(from.resources_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgExchangeResourceResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgExchangeResourceResponse::CopyFrom(const CMsgExchangeResourceResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgExchangeResourceResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgExchangeResourceResponse::Swap(CMsgExchangeResourceResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    resources_.Swap(&other->resources_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgExchangeResourceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgExchangeResourceResponse_descriptor_;
  metadata.reflection = CMsgExchangeResourceResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgRenameRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRenameRequest_Msg_descriptor_;
}
bool CMsgRenameRequest_Msg_IsValid(int value) {
  switch(value) {
    case 10:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgRenameRequest_Msg CMsgRenameRequest::MsgID;
const CMsgRenameRequest_Msg CMsgRenameRequest::Msg_MIN;
const CMsgRenameRequest_Msg CMsgRenameRequest::Msg_MAX;
const int CMsgRenameRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgRenameRequest::kRoleNameFieldNumber;
#endif  // !_MSC_VER

CMsgRenameRequest::CMsgRenameRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgRenameRequest::InitAsDefaultInstance() {
}

CMsgRenameRequest::CMsgRenameRequest(const CMsgRenameRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgRenameRequest::SharedCtor() {
  _cached_size_ = 0;
  rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRenameRequest::~CMsgRenameRequest() {
  SharedDtor();
}

void CMsgRenameRequest::SharedDtor() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

void CMsgRenameRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRenameRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRenameRequest_descriptor_;
}

const CMsgRenameRequest& CMsgRenameRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgRenameRequest* CMsgRenameRequest::default_instance_ = NULL;

CMsgRenameRequest* CMsgRenameRequest::New() const {
  return new CMsgRenameRequest;
}

void CMsgRenameRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rolename()) {
      if (rolename_ != &::google::protobuf::internal::kEmptyString) {
        rolename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRenameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string RoleName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgRenameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string RoleName = 1;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->rolename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgRenameRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string RoleName = 1;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rolename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgRenameRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string RoleName = 1;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRenameRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRenameRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRenameRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRenameRequest::MergeFrom(const CMsgRenameRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rolename()) {
      set_rolename(from.rolename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRenameRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRenameRequest::CopyFrom(const CMsgRenameRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRenameRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgRenameRequest::Swap(CMsgRenameRequest* other) {
  if (other != this) {
    std::swap(rolename_, other->rolename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRenameRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRenameRequest_descriptor_;
  metadata.reflection = CMsgRenameRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgRenameResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRenameResponse_Msg_descriptor_;
}
bool CMsgRenameResponse_Msg_IsValid(int value) {
  switch(value) {
    case 11:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgRenameResponse_Msg CMsgRenameResponse::MsgID;
const CMsgRenameResponse_Msg CMsgRenameResponse::Msg_MIN;
const CMsgRenameResponse_Msg CMsgRenameResponse::Msg_MAX;
const int CMsgRenameResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgRenameResponse::kResultFieldNumber;
const int CMsgRenameResponse::kRolenameFieldNumber;
#endif  // !_MSC_VER

CMsgRenameResponse::CMsgRenameResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgRenameResponse::InitAsDefaultInstance() {
}

CMsgRenameResponse::CMsgRenameResponse(const CMsgRenameResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgRenameResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRenameResponse::~CMsgRenameResponse() {
  SharedDtor();
}

void CMsgRenameResponse::SharedDtor() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

void CMsgRenameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRenameResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgRenameResponse_descriptor_;
}

const CMsgRenameResponse& CMsgRenameResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgRenameResponse* CMsgRenameResponse::default_instance_ = NULL;

CMsgRenameResponse* CMsgRenameResponse::New() const {
  return new CMsgRenameResponse;
}

void CMsgRenameResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_rolename()) {
      if (rolename_ != &::google::protobuf::internal::kEmptyString) {
        rolename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgRenameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rolename;
        break;
      }

      // required string rolename = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgRenameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required string rolename = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->rolename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgRenameResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required string rolename = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgRenameResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required string rolename = 2;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRenameResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgRenameResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgRenameResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgRenameResponse::MergeFrom(const CMsgRenameResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_rolename()) {
      set_rolename(from.rolename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgRenameResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRenameResponse::CopyFrom(const CMsgRenameResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRenameResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CMsgRenameResponse::Swap(CMsgRenameResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(rolename_, other->rolename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgRenameResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgRenameResponse_descriptor_;
  metadata.reflection = CMsgRenameResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgChangeHeadRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgChangeHeadRequest_Msg_descriptor_;
}
bool CMsgChangeHeadRequest_Msg_IsValid(int value) {
  switch(value) {
    case 12:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgChangeHeadRequest_Msg CMsgChangeHeadRequest::MsgID;
const CMsgChangeHeadRequest_Msg CMsgChangeHeadRequest::Msg_MIN;
const CMsgChangeHeadRequest_Msg CMsgChangeHeadRequest::Msg_MAX;
const int CMsgChangeHeadRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgChangeHeadRequest::kHeadIdFieldNumber;
#endif  // !_MSC_VER

CMsgChangeHeadRequest::CMsgChangeHeadRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgChangeHeadRequest::InitAsDefaultInstance() {
}

CMsgChangeHeadRequest::CMsgChangeHeadRequest(const CMsgChangeHeadRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgChangeHeadRequest::SharedCtor() {
  _cached_size_ = 0;
  headid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgChangeHeadRequest::~CMsgChangeHeadRequest() {
  SharedDtor();
}

void CMsgChangeHeadRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgChangeHeadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgChangeHeadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgChangeHeadRequest_descriptor_;
}

const CMsgChangeHeadRequest& CMsgChangeHeadRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgChangeHeadRequest* CMsgChangeHeadRequest::default_instance_ = NULL;

CMsgChangeHeadRequest* CMsgChangeHeadRequest::New() const {
  return new CMsgChangeHeadRequest;
}

void CMsgChangeHeadRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    headid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgChangeHeadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 HeadId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &headid_)));
          set_has_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgChangeHeadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 HeadId = 1;
  if (has_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->headid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgChangeHeadRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 HeadId = 1;
  if (has_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->headid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgChangeHeadRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 HeadId = 1;
    if (has_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->headid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgChangeHeadRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgChangeHeadRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgChangeHeadRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgChangeHeadRequest::MergeFrom(const CMsgChangeHeadRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headid()) {
      set_headid(from.headid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgChangeHeadRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgChangeHeadRequest::CopyFrom(const CMsgChangeHeadRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgChangeHeadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgChangeHeadRequest::Swap(CMsgChangeHeadRequest* other) {
  if (other != this) {
    std::swap(headid_, other->headid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgChangeHeadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgChangeHeadRequest_descriptor_;
  metadata.reflection = CMsgChangeHeadRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgChangeHeadResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgChangeHeadResponse_Msg_descriptor_;
}
bool CMsgChangeHeadResponse_Msg_IsValid(int value) {
  switch(value) {
    case 13:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgChangeHeadResponse_Msg CMsgChangeHeadResponse::MsgID;
const CMsgChangeHeadResponse_Msg CMsgChangeHeadResponse::Msg_MIN;
const CMsgChangeHeadResponse_Msg CMsgChangeHeadResponse::Msg_MAX;
const int CMsgChangeHeadResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgChangeHeadResponse::kResultFieldNumber;
const int CMsgChangeHeadResponse::kHeadidFieldNumber;
#endif  // !_MSC_VER

CMsgChangeHeadResponse::CMsgChangeHeadResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgChangeHeadResponse::InitAsDefaultInstance() {
}

CMsgChangeHeadResponse::CMsgChangeHeadResponse(const CMsgChangeHeadResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgChangeHeadResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  headid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgChangeHeadResponse::~CMsgChangeHeadResponse() {
  SharedDtor();
}

void CMsgChangeHeadResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgChangeHeadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgChangeHeadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgChangeHeadResponse_descriptor_;
}

const CMsgChangeHeadResponse& CMsgChangeHeadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgChangeHeadResponse* CMsgChangeHeadResponse::default_instance_ = NULL;

CMsgChangeHeadResponse* CMsgChangeHeadResponse::New() const {
  return new CMsgChangeHeadResponse;
}

void CMsgChangeHeadResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    headid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgChangeHeadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_headid;
        break;
      }

      // required int32 headid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_headid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &headid_)));
          set_has_headid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgChangeHeadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required int32 headid = 2;
  if (has_headid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->headid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgChangeHeadResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required int32 headid = 2;
  if (has_headid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->headid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgChangeHeadResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required int32 headid = 2;
    if (has_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->headid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgChangeHeadResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgChangeHeadResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgChangeHeadResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgChangeHeadResponse::MergeFrom(const CMsgChangeHeadResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_headid()) {
      set_headid(from.headid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgChangeHeadResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgChangeHeadResponse::CopyFrom(const CMsgChangeHeadResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgChangeHeadResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CMsgChangeHeadResponse::Swap(CMsgChangeHeadResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(headid_, other->headid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgChangeHeadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgChangeHeadResponse_descriptor_;
  metadata.reflection = CMsgChangeHeadResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgUpdateResourceResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgUpdateResourceResponse_Msg_descriptor_;
}
bool CMsgUpdateResourceResponse_Msg_IsValid(int value) {
  switch(value) {
    case 14:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgUpdateResourceResponse_Msg CMsgUpdateResourceResponse::MsgID;
const CMsgUpdateResourceResponse_Msg CMsgUpdateResourceResponse::Msg_MIN;
const CMsgUpdateResourceResponse_Msg CMsgUpdateResourceResponse::Msg_MAX;
const int CMsgUpdateResourceResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgUpdateResourceResponse::kResourcesFieldNumber;
#endif  // !_MSC_VER

CMsgUpdateResourceResponse::CMsgUpdateResourceResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgUpdateResourceResponse::InitAsDefaultInstance() {
}

CMsgUpdateResourceResponse::CMsgUpdateResourceResponse(const CMsgUpdateResourceResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgUpdateResourceResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgUpdateResourceResponse::~CMsgUpdateResourceResponse() {
  SharedDtor();
}

void CMsgUpdateResourceResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgUpdateResourceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUpdateResourceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgUpdateResourceResponse_descriptor_;
}

const CMsgUpdateResourceResponse& CMsgUpdateResourceResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgUpdateResourceResponse* CMsgUpdateResourceResponse::default_instance_ = NULL;

CMsgUpdateResourceResponse* CMsgUpdateResourceResponse::New() const {
  return new CMsgUpdateResourceResponse;
}

void CMsgUpdateResourceResponse::Clear() {
  resources_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgUpdateResourceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBUpdateResource resources = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_resources;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgUpdateResourceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBUpdateResource resources = 1;
  for (int i = 0; i < this->resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resources(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgUpdateResourceResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBUpdateResource resources = 1;
  for (int i = 0; i < this->resources_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resources(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgUpdateResourceResponse::ByteSize() const {
  int total_size = 0;

  // repeated .PBUpdateResource resources = 1;
  total_size += 1 * this->resources_size();
  for (int i = 0; i < this->resources_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUpdateResourceResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgUpdateResourceResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgUpdateResourceResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgUpdateResourceResponse::MergeFrom(const CMsgUpdateResourceResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  resources_.MergeFrom(from.resources_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgUpdateResourceResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUpdateResourceResponse::CopyFrom(const CMsgUpdateResourceResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUpdateResourceResponse::IsInitialized() const {

  return true;
}

void CMsgUpdateResourceResponse::Swap(CMsgUpdateResourceResponse* other) {
  if (other != this) {
    resources_.Swap(&other->resources_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgUpdateResourceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgUpdateResourceResponse_descriptor_;
  metadata.reflection = CMsgUpdateResourceResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgAlmsResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAlmsResponse_Msg_descriptor_;
}
bool CMsgAlmsResponse_Msg_IsValid(int value) {
  switch(value) {
    case 15:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgAlmsResponse_Msg CMsgAlmsResponse::MsgID;
const CMsgAlmsResponse_Msg CMsgAlmsResponse::Msg_MIN;
const CMsgAlmsResponse_Msg CMsgAlmsResponse::Msg_MAX;
const int CMsgAlmsResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgAlmsResponse::CMsgAlmsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgAlmsResponse::InitAsDefaultInstance() {
}

CMsgAlmsResponse::CMsgAlmsResponse(const CMsgAlmsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgAlmsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgAlmsResponse::~CMsgAlmsResponse() {
  SharedDtor();
}

void CMsgAlmsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgAlmsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAlmsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgAlmsResponse_descriptor_;
}

const CMsgAlmsResponse& CMsgAlmsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgAlmsResponse* CMsgAlmsResponse::default_instance_ = NULL;

CMsgAlmsResponse* CMsgAlmsResponse::New() const {
  return new CMsgAlmsResponse;
}

void CMsgAlmsResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgAlmsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgAlmsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgAlmsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgAlmsResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAlmsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgAlmsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgAlmsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgAlmsResponse::MergeFrom(const CMsgAlmsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgAlmsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAlmsResponse::CopyFrom(const CMsgAlmsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAlmsResponse::IsInitialized() const {

  return true;
}

void CMsgAlmsResponse::Swap(CMsgAlmsResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgAlmsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgAlmsResponse_descriptor_;
  metadata.reflection = CMsgAlmsResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgBackHallOKRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBackHallOKRequest_Msg_descriptor_;
}
bool CMsgBackHallOKRequest_Msg_IsValid(int value) {
  switch(value) {
    case 16:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgBackHallOKRequest_Msg CMsgBackHallOKRequest::MsgID;
const CMsgBackHallOKRequest_Msg CMsgBackHallOKRequest::Msg_MIN;
const CMsgBackHallOKRequest_Msg CMsgBackHallOKRequest::Msg_MAX;
const int CMsgBackHallOKRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgBackHallOKRequest::CMsgBackHallOKRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgBackHallOKRequest::InitAsDefaultInstance() {
}

CMsgBackHallOKRequest::CMsgBackHallOKRequest(const CMsgBackHallOKRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgBackHallOKRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgBackHallOKRequest::~CMsgBackHallOKRequest() {
  SharedDtor();
}

void CMsgBackHallOKRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgBackHallOKRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgBackHallOKRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBackHallOKRequest_descriptor_;
}

const CMsgBackHallOKRequest& CMsgBackHallOKRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgBackHallOKRequest* CMsgBackHallOKRequest::default_instance_ = NULL;

CMsgBackHallOKRequest* CMsgBackHallOKRequest::New() const {
  return new CMsgBackHallOKRequest;
}

void CMsgBackHallOKRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgBackHallOKRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgBackHallOKRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgBackHallOKRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgBackHallOKRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgBackHallOKRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgBackHallOKRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgBackHallOKRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgBackHallOKRequest::MergeFrom(const CMsgBackHallOKRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgBackHallOKRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBackHallOKRequest::CopyFrom(const CMsgBackHallOKRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBackHallOKRequest::IsInitialized() const {

  return true;
}

void CMsgBackHallOKRequest::Swap(CMsgBackHallOKRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgBackHallOKRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgBackHallOKRequest_descriptor_;
  metadata.reflection = CMsgBackHallOKRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgDataStatisticsRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDataStatisticsRequest_Msg_descriptor_;
}
bool CMsgDataStatisticsRequest_Msg_IsValid(int value) {
  switch(value) {
    case 17:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgDataStatisticsRequest_Msg CMsgDataStatisticsRequest::MsgID;
const CMsgDataStatisticsRequest_Msg CMsgDataStatisticsRequest::Msg_MIN;
const CMsgDataStatisticsRequest_Msg CMsgDataStatisticsRequest::Msg_MAX;
const int CMsgDataStatisticsRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgDataStatisticsRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

CMsgDataStatisticsRequest::CMsgDataStatisticsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgDataStatisticsRequest::InitAsDefaultInstance() {
}

CMsgDataStatisticsRequest::CMsgDataStatisticsRequest(const CMsgDataStatisticsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgDataStatisticsRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgDataStatisticsRequest::~CMsgDataStatisticsRequest() {
  SharedDtor();
}

void CMsgDataStatisticsRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgDataStatisticsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDataStatisticsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgDataStatisticsRequest_descriptor_;
}

const CMsgDataStatisticsRequest& CMsgDataStatisticsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsgDataStatisticsRequest* CMsgDataStatisticsRequest::default_instance_ = NULL;

CMsgDataStatisticsRequest* CMsgDataStatisticsRequest::New() const {
  return new CMsgDataStatisticsRequest;
}

void CMsgDataStatisticsRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgDataStatisticsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .EDataStatisticsType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EDataStatisticsType_IsValid(value)) {
            set_type(static_cast< ::EDataStatisticsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgDataStatisticsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .EDataStatisticsType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgDataStatisticsRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .EDataStatisticsType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgDataStatisticsRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .EDataStatisticsType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDataStatisticsRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgDataStatisticsRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgDataStatisticsRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgDataStatisticsRequest::MergeFrom(const CMsgDataStatisticsRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgDataStatisticsRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDataStatisticsRequest::CopyFrom(const CMsgDataStatisticsRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDataStatisticsRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgDataStatisticsRequest::Swap(CMsgDataStatisticsRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgDataStatisticsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgDataStatisticsRequest_descriptor_;
  metadata.reflection = CMsgDataStatisticsRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsg8BallDataStatisticsResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsg8BallDataStatisticsResponse_Msg_descriptor_;
}
bool CMsg8BallDataStatisticsResponse_Msg_IsValid(int value) {
  switch(value) {
    case 18:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsg8BallDataStatisticsResponse_Msg CMsg8BallDataStatisticsResponse::MsgID;
const CMsg8BallDataStatisticsResponse_Msg CMsg8BallDataStatisticsResponse::Msg_MIN;
const CMsg8BallDataStatisticsResponse_Msg CMsg8BallDataStatisticsResponse::Msg_MAX;
const int CMsg8BallDataStatisticsResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsg8BallDataStatisticsResponse::kResultFieldNumber;
const int CMsg8BallDataStatisticsResponse::kTypeFieldNumber;
const int CMsg8BallDataStatisticsResponse::kWinFieldNumber;
const int CMsg8BallDataStatisticsResponse::kLoseFieldNumber;
const int CMsg8BallDataStatisticsResponse::kEscapeFieldNumber;
const int CMsg8BallDataStatisticsResponse::kWinningstreakFieldNumber;
#endif  // !_MSC_VER

CMsg8BallDataStatisticsResponse::CMsg8BallDataStatisticsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsg8BallDataStatisticsResponse::InitAsDefaultInstance() {
}

CMsg8BallDataStatisticsResponse::CMsg8BallDataStatisticsResponse(const CMsg8BallDataStatisticsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsg8BallDataStatisticsResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  type_ = 0;
  win_ = 0;
  lose_ = 0;
  escape_ = 0;
  winningstreak_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsg8BallDataStatisticsResponse::~CMsg8BallDataStatisticsResponse() {
  SharedDtor();
}

void CMsg8BallDataStatisticsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsg8BallDataStatisticsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsg8BallDataStatisticsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsg8BallDataStatisticsResponse_descriptor_;
}

const CMsg8BallDataStatisticsResponse& CMsg8BallDataStatisticsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_coremessage_2eproto();
  return *default_instance_;
}

CMsg8BallDataStatisticsResponse* CMsg8BallDataStatisticsResponse::default_instance_ = NULL;

CMsg8BallDataStatisticsResponse* CMsg8BallDataStatisticsResponse::New() const {
  return new CMsg8BallDataStatisticsResponse;
}

void CMsg8BallDataStatisticsResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    type_ = 0;
    win_ = 0;
    lose_ = 0;
    escape_ = 0;
    winningstreak_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsg8BallDataStatisticsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .EDataStatisticsType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EDataStatisticsType_IsValid(value)) {
            set_type(static_cast< ::EDataStatisticsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_win;
        break;
      }

      // required int32 win = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_)));
          set_has_win();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lose;
        break;
      }

      // required int32 lose = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lose_)));
          set_has_lose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_escape;
        break;
      }

      // required int32 escape = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_escape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escape_)));
          set_has_escape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_winningstreak;
        break;
      }

      // required int32 winningstreak = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_winningstreak:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &winningstreak_)));
          set_has_winningstreak();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsg8BallDataStatisticsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required .EDataStatisticsType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required int32 win = 3;
  if (has_win()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->win(), output);
  }

  // required int32 lose = 4;
  if (has_lose()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->lose(), output);
  }

  // required int32 escape = 5;
  if (has_escape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->escape(), output);
  }

  // required int32 winningstreak = 6;
  if (has_winningstreak()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->winningstreak(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsg8BallDataStatisticsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required .EDataStatisticsType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required int32 win = 3;
  if (has_win()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->win(), target);
  }

  // required int32 lose = 4;
  if (has_lose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->lose(), target);
  }

  // required int32 escape = 5;
  if (has_escape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->escape(), target);
  }

  // required int32 winningstreak = 6;
  if (has_winningstreak()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->winningstreak(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsg8BallDataStatisticsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required .EDataStatisticsType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // required int32 win = 3;
    if (has_win()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win());
    }

    // required int32 lose = 4;
    if (has_lose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lose());
    }

    // required int32 escape = 5;
    if (has_escape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escape());
    }

    // required int32 winningstreak = 6;
    if (has_winningstreak()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->winningstreak());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsg8BallDataStatisticsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsg8BallDataStatisticsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsg8BallDataStatisticsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsg8BallDataStatisticsResponse::MergeFrom(const CMsg8BallDataStatisticsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_win()) {
      set_win(from.win());
    }
    if (from.has_lose()) {
      set_lose(from.lose());
    }
    if (from.has_escape()) {
      set_escape(from.escape());
    }
    if (from.has_winningstreak()) {
      set_winningstreak(from.winningstreak());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsg8BallDataStatisticsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsg8BallDataStatisticsResponse::CopyFrom(const CMsg8BallDataStatisticsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsg8BallDataStatisticsResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void CMsg8BallDataStatisticsResponse::Swap(CMsg8BallDataStatisticsResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(type_, other->type_);
    std::swap(win_, other->win_);
    std::swap(lose_, other->lose_);
    std::swap(escape_, other->escape_);
    std::swap(winningstreak_, other->winningstreak_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsg8BallDataStatisticsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsg8BallDataStatisticsResponse_descriptor_;
  metadata.reflection = CMsg8BallDataStatisticsResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
