// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbmessage.proto

#ifndef PROTOBUF_dbmessage_2eproto__INCLUDED
#define PROTOBUF_dbmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "resourcemessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dbmessage_2eproto();
void protobuf_AssignDesc_dbmessage_2eproto();
void protobuf_ShutdownFile_dbmessage_2eproto();

class CMsgExecuteSqlRequest;
class CMsgExecuteSqlResponse;
class PBDataItem;
class PBDataItemList;
class PBGagaleType1DataInfo;
class PBGagaleType2DataInfo;
class PBGagaleType3DataInfo;
class PBDataGagaleType1List;
class PBDataGagaleType2List;
class PBDataGagaleType3List;
class PBData8BallStatistics;
class PBSaveRoleData;

enum CMsgExecuteSqlRequest_Msg {
  CMsgExecuteSqlRequest_Msg_MsgID = 65537
};
bool CMsgExecuteSqlRequest_Msg_IsValid(int value);
const CMsgExecuteSqlRequest_Msg CMsgExecuteSqlRequest_Msg_Msg_MIN = CMsgExecuteSqlRequest_Msg_MsgID;
const CMsgExecuteSqlRequest_Msg CMsgExecuteSqlRequest_Msg_Msg_MAX = CMsgExecuteSqlRequest_Msg_MsgID;
const int CMsgExecuteSqlRequest_Msg_Msg_ARRAYSIZE = CMsgExecuteSqlRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgExecuteSqlRequest_Msg_descriptor();
inline const ::std::string& CMsgExecuteSqlRequest_Msg_Name(CMsgExecuteSqlRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgExecuteSqlRequest_Msg_descriptor(), value);
}
inline bool CMsgExecuteSqlRequest_Msg_Parse(
    const ::std::string& name, CMsgExecuteSqlRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgExecuteSqlRequest_Msg>(
    CMsgExecuteSqlRequest_Msg_descriptor(), name, value);
}
enum CMsgExecuteSqlResponse_Msg {
  CMsgExecuteSqlResponse_Msg_MsgID = 65538
};
bool CMsgExecuteSqlResponse_Msg_IsValid(int value);
const CMsgExecuteSqlResponse_Msg CMsgExecuteSqlResponse_Msg_Msg_MIN = CMsgExecuteSqlResponse_Msg_MsgID;
const CMsgExecuteSqlResponse_Msg CMsgExecuteSqlResponse_Msg_Msg_MAX = CMsgExecuteSqlResponse_Msg_MsgID;
const int CMsgExecuteSqlResponse_Msg_Msg_ARRAYSIZE = CMsgExecuteSqlResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgExecuteSqlResponse_Msg_descriptor();
inline const ::std::string& CMsgExecuteSqlResponse_Msg_Name(CMsgExecuteSqlResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgExecuteSqlResponse_Msg_descriptor(), value);
}
inline bool CMsgExecuteSqlResponse_Msg_Parse(
    const ::std::string& name, CMsgExecuteSqlResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgExecuteSqlResponse_Msg>(
    CMsgExecuteSqlResponse_Msg_descriptor(), name, value);
}
enum SQLTYPE {
  SELECT = 1,
  INSERT = 2,
  UPDATE = 3,
  DELETE = 4,
  CALL = 5
};
bool SQLTYPE_IsValid(int value);
const SQLTYPE SQLTYPE_MIN = SELECT;
const SQLTYPE SQLTYPE_MAX = CALL;
const int SQLTYPE_ARRAYSIZE = SQLTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SQLTYPE_descriptor();
inline const ::std::string& SQLTYPE_Name(SQLTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SQLTYPE_descriptor(), value);
}
inline bool SQLTYPE_Parse(
    const ::std::string& name, SQLTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SQLTYPE>(
    SQLTYPE_descriptor(), name, value);
}
enum CALLBACK {
  MUSTCALLBACK = 1,
  NOTCALLBACK = 2
};
bool CALLBACK_IsValid(int value);
const CALLBACK CALLBACK_MIN = MUSTCALLBACK;
const CALLBACK CALLBACK_MAX = NOTCALLBACK;
const int CALLBACK_ARRAYSIZE = CALLBACK_MAX + 1;

const ::google::protobuf::EnumDescriptor* CALLBACK_descriptor();
inline const ::std::string& CALLBACK_Name(CALLBACK value) {
  return ::google::protobuf::internal::NameOfEnum(
    CALLBACK_descriptor(), value);
}
inline bool CALLBACK_Parse(
    const ::std::string& name, CALLBACK* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CALLBACK>(
    CALLBACK_descriptor(), name, value);
}
enum BLOB {
  HASBLOB = 1,
  NONEBLOB = 2
};
bool BLOB_IsValid(int value);
const BLOB BLOB_MIN = HASBLOB;
const BLOB BLOB_MAX = NONEBLOB;
const int BLOB_ARRAYSIZE = BLOB_MAX + 1;

const ::google::protobuf::EnumDescriptor* BLOB_descriptor();
inline const ::std::string& BLOB_Name(BLOB value) {
  return ::google::protobuf::internal::NameOfEnum(
    BLOB_descriptor(), value);
}
inline bool BLOB_Parse(
    const ::std::string& name, BLOB* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BLOB>(
    BLOB_descriptor(), name, value);
}
// ===================================================================

class CMsgExecuteSqlRequest : public ::google::protobuf::Message {
 public:
  CMsgExecuteSqlRequest();
  virtual ~CMsgExecuteSqlRequest();

  CMsgExecuteSqlRequest(const CMsgExecuteSqlRequest& from);

  inline CMsgExecuteSqlRequest& operator=(const CMsgExecuteSqlRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExecuteSqlRequest& default_instance();

  void Swap(CMsgExecuteSqlRequest* other);

  // implements Message ----------------------------------------------

  CMsgExecuteSqlRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgExecuteSqlRequest& from);
  void MergeFrom(const CMsgExecuteSqlRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgExecuteSqlRequest_Msg Msg;
  static const Msg MsgID = CMsgExecuteSqlRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgExecuteSqlRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgExecuteSqlRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgExecuteSqlRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgExecuteSqlRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgExecuteSqlRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgExecuteSqlRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgExecuteSqlRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 LogicType = 1;
  inline bool has_logictype() const;
  inline void clear_logictype();
  static const int kLogicTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 logictype() const;
  inline void set_logictype(::google::protobuf::uint32 value);

  // optional uint32 SessionID = 2 [default = 0];
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);

  // optional uint64 TimeStamp = 3 [default = 0];
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // optional uint64 TeamID = 4 [default = 0];
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional .SQLTYPE SqlType = 5 [default = SELECT];
  inline bool has_sqltype() const;
  inline void clear_sqltype();
  static const int kSqlTypeFieldNumber = 5;
  inline ::SQLTYPE sqltype() const;
  inline void set_sqltype(::SQLTYPE value);

  // optional .CALLBACK Callback = 6 [default = MUSTCALLBACK];
  inline bool has_callback() const;
  inline void clear_callback();
  static const int kCallbackFieldNumber = 6;
  inline ::CALLBACK callback() const;
  inline void set_callback(::CALLBACK value);

  // optional string Sql = 7;
  inline bool has_sql() const;
  inline void clear_sql();
  static const int kSqlFieldNumber = 7;
  inline const ::std::string& sql() const;
  inline void set_sql(const ::std::string& value);
  inline void set_sql(const char* value);
  inline void set_sql(const char* value, size_t size);
  inline ::std::string* mutable_sql();
  inline ::std::string* release_sql();
  inline void set_allocated_sql(::std::string* sql);

  // optional uint32 BufSize = 8 [default = 0];
  inline bool has_bufsize() const;
  inline void clear_bufsize();
  static const int kBufSizeFieldNumber = 8;
  inline ::google::protobuf::uint32 bufsize() const;
  inline void set_bufsize(::google::protobuf::uint32 value);

  // optional bytes Buffer = 9;
  inline bool has_buffer() const;
  inline void clear_buffer();
  static const int kBufferFieldNumber = 9;
  inline const ::std::string& buffer() const;
  inline void set_buffer(const ::std::string& value);
  inline void set_buffer(const char* value);
  inline void set_buffer(const void* value, size_t size);
  inline ::std::string* mutable_buffer();
  inline ::std::string* release_buffer();
  inline void set_allocated_buffer(::std::string* buffer);

  // optional string SQLWhere = 10;
  inline bool has_sqlwhere() const;
  inline void clear_sqlwhere();
  static const int kSQLWhereFieldNumber = 10;
  inline const ::std::string& sqlwhere() const;
  inline void set_sqlwhere(const ::std::string& value);
  inline void set_sqlwhere(const char* value);
  inline void set_sqlwhere(const char* value, size_t size);
  inline ::std::string* mutable_sqlwhere();
  inline ::std::string* release_sqlwhere();
  inline void set_allocated_sqlwhere(::std::string* sqlwhere);

  // optional uint32 OutNumber = 11 [default = 0];
  inline bool has_outnumber() const;
  inline void clear_outnumber();
  static const int kOutNumberFieldNumber = 11;
  inline ::google::protobuf::uint32 outnumber() const;
  inline void set_outnumber(::google::protobuf::uint32 value);

  // optional .BLOB HasBlob = 12;
  inline bool has_hasblob() const;
  inline void clear_hasblob();
  static const int kHasBlobFieldNumber = 12;
  inline ::BLOB hasblob() const;
  inline void set_hasblob(::BLOB value);

  // @@protoc_insertion_point(class_scope:CMsgExecuteSqlRequest)
 private:
  inline void set_has_logictype();
  inline void clear_has_logictype();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_sqltype();
  inline void clear_has_sqltype();
  inline void set_has_callback();
  inline void clear_has_callback();
  inline void set_has_sql();
  inline void clear_has_sql();
  inline void set_has_bufsize();
  inline void clear_has_bufsize();
  inline void set_has_buffer();
  inline void clear_has_buffer();
  inline void set_has_sqlwhere();
  inline void clear_has_sqlwhere();
  inline void set_has_outnumber();
  inline void clear_has_outnumber();
  inline void set_has_hasblob();
  inline void clear_has_hasblob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 logictype_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint64 teamid_;
  int sqltype_;
  int callback_;
  ::std::string* sql_;
  ::std::string* buffer_;
  ::google::protobuf::uint32 bufsize_;
  ::google::protobuf::uint32 outnumber_;
  ::std::string* sqlwhere_;
  int hasblob_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgExecuteSqlRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgExecuteSqlResponse : public ::google::protobuf::Message {
 public:
  CMsgExecuteSqlResponse();
  virtual ~CMsgExecuteSqlResponse();

  CMsgExecuteSqlResponse(const CMsgExecuteSqlResponse& from);

  inline CMsgExecuteSqlResponse& operator=(const CMsgExecuteSqlResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExecuteSqlResponse& default_instance();

  void Swap(CMsgExecuteSqlResponse* other);

  // implements Message ----------------------------------------------

  CMsgExecuteSqlResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgExecuteSqlResponse& from);
  void MergeFrom(const CMsgExecuteSqlResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgExecuteSqlResponse_Msg Msg;
  static const Msg MsgID = CMsgExecuteSqlResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgExecuteSqlResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgExecuteSqlResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgExecuteSqlResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgExecuteSqlResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgExecuteSqlResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgExecuteSqlResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgExecuteSqlResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 LogicType = 1;
  inline bool has_logictype() const;
  inline void clear_logictype();
  static const int kLogicTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 logictype() const;
  inline void set_logictype(::google::protobuf::uint32 value);

  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);

  // optional uint64 TimeStamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // optional uint64 TeamID = 4;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 4;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);

  // optional uint32 ResultCode = 5;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 5;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);

  // optional uint32 RowCount = 6 [default = 0];
  inline bool has_rowcount() const;
  inline void clear_rowcount();
  static const int kRowCountFieldNumber = 6;
  inline ::google::protobuf::uint32 rowcount() const;
  inline void set_rowcount(::google::protobuf::uint32 value);

  // optional uint32 ColCount = 7 [default = 0];
  inline bool has_colcount() const;
  inline void clear_colcount();
  static const int kColCountFieldNumber = 7;
  inline ::google::protobuf::uint32 colcount() const;
  inline void set_colcount(::google::protobuf::uint32 value);

  // repeated bytes FieldValue = 8;
  inline int fieldvalue_size() const;
  inline void clear_fieldvalue();
  static const int kFieldValueFieldNumber = 8;
  inline const ::std::string& fieldvalue(int index) const;
  inline ::std::string* mutable_fieldvalue(int index);
  inline void set_fieldvalue(int index, const ::std::string& value);
  inline void set_fieldvalue(int index, const char* value);
  inline void set_fieldvalue(int index, const void* value, size_t size);
  inline ::std::string* add_fieldvalue();
  inline void add_fieldvalue(const ::std::string& value);
  inline void add_fieldvalue(const char* value);
  inline void add_fieldvalue(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& fieldvalue() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fieldvalue();

  // repeated uint32 FieldValueLen = 9;
  inline int fieldvaluelen_size() const;
  inline void clear_fieldvaluelen();
  static const int kFieldValueLenFieldNumber = 9;
  inline ::google::protobuf::uint32 fieldvaluelen(int index) const;
  inline void set_fieldvaluelen(int index, ::google::protobuf::uint32 value);
  inline void add_fieldvaluelen(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fieldvaluelen() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fieldvaluelen();

  // @@protoc_insertion_point(class_scope:CMsgExecuteSqlResponse)
 private:
  inline void set_has_logictype();
  inline void clear_has_logictype();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_resultcode();
  inline void clear_has_resultcode();
  inline void set_has_rowcount();
  inline void clear_has_rowcount();
  inline void set_has_colcount();
  inline void clear_has_colcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 logictype_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 resultcode_;
  ::google::protobuf::uint32 rowcount_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fieldvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fieldvaluelen_;
  ::google::protobuf::uint32 colcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgExecuteSqlResponse* default_instance_;
};
// -------------------------------------------------------------------

class PBDataItem : public ::google::protobuf::Message {
 public:
  PBDataItem();
  virtual ~PBDataItem();

  PBDataItem(const PBDataItem& from);

  inline PBDataItem& operator=(const PBDataItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDataItem& default_instance();

  void Swap(PBDataItem* other);

  // implements Message ----------------------------------------------

  PBDataItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDataItem& from);
  void MergeFrom(const PBDataItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::int32 tempid() const;
  inline void set_tempid(::google::protobuf::int32 value);

  // optional int32 Num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 EndTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // optional int32 ItemType = 5;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 5;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBDataItem)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tempid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 endtime_;
  ::google::protobuf::int32 itemtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBDataItem* default_instance_;
};
// -------------------------------------------------------------------

class PBDataItemList : public ::google::protobuf::Message {
 public:
  PBDataItemList();
  virtual ~PBDataItemList();

  PBDataItemList(const PBDataItemList& from);

  inline PBDataItemList& operator=(const PBDataItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDataItemList& default_instance();

  void Swap(PBDataItemList* other);

  // implements Message ----------------------------------------------

  PBDataItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDataItemList& from);
  void MergeFrom(const PBDataItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBDataItem Items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::PBDataItem& items(int index) const;
  inline ::PBDataItem* mutable_items(int index);
  inline ::PBDataItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::PBDataItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDataItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:PBDataItemList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBDataItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBDataItemList* default_instance_;
};
// -------------------------------------------------------------------

class PBGagaleType1DataInfo : public ::google::protobuf::Message {
 public:
  PBGagaleType1DataInfo();
  virtual ~PBGagaleType1DataInfo();

  PBGagaleType1DataInfo(const PBGagaleType1DataInfo& from);

  inline PBGagaleType1DataInfo& operator=(const PBGagaleType1DataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGagaleType1DataInfo& default_instance();

  void Swap(PBGagaleType1DataInfo* other);

  // implements Message ----------------------------------------------

  PBGagaleType1DataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGagaleType1DataInfo& from);
  void MergeFrom(const PBGagaleType1DataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional .eGagaleDisplay display = 3;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 3;
  inline ::eGagaleDisplay display() const;
  inline void set_display(::eGagaleDisplay value);

  // optional int32 isbig = 4;
  inline bool has_isbig() const;
  inline void clear_isbig();
  static const int kIsbigFieldNumber = 4;
  inline ::google::protobuf::int32 isbig() const;
  inline void set_isbig(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBGagaleType1DataInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_isbig();
  inline void clear_has_isbig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 gold_;
  int display_;
  ::google::protobuf::int32 isbig_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBGagaleType1DataInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBGagaleType2DataInfo : public ::google::protobuf::Message {
 public:
  PBGagaleType2DataInfo();
  virtual ~PBGagaleType2DataInfo();

  PBGagaleType2DataInfo(const PBGagaleType2DataInfo& from);

  inline PBGagaleType2DataInfo& operator=(const PBGagaleType2DataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGagaleType2DataInfo& default_instance();

  void Swap(PBGagaleType2DataInfo* other);

  // implements Message ----------------------------------------------

  PBGagaleType2DataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGagaleType2DataInfo& from);
  void MergeFrom(const PBGagaleType2DataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional int32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional .eGagaleDisplay display = 3;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 3;
  inline ::eGagaleDisplay display() const;
  inline void set_display(::eGagaleDisplay value);

  // optional int32 isbig = 6;
  inline bool has_isbig() const;
  inline void clear_isbig();
  static const int kIsbigFieldNumber = 6;
  inline ::google::protobuf::int32 isbig() const;
  inline void set_isbig(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBGagaleType2DataInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_isbig();
  inline void clear_has_isbig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 gold_;
  int display_;
  ::google::protobuf::int32 isbig_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBGagaleType2DataInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBGagaleType3DataInfo : public ::google::protobuf::Message {
 public:
  PBGagaleType3DataInfo();
  virtual ~PBGagaleType3DataInfo();

  PBGagaleType3DataInfo(const PBGagaleType3DataInfo& from);

  inline PBGagaleType3DataInfo& operator=(const PBGagaleType3DataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGagaleType3DataInfo& default_instance();

  void Swap(PBGagaleType3DataInfo* other);

  // implements Message ----------------------------------------------

  PBGagaleType3DataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGagaleType3DataInfo& from);
  void MergeFrom(const PBGagaleType3DataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional .EResourceType rewardtype = 2;
  inline bool has_rewardtype() const;
  inline void clear_rewardtype();
  static const int kRewardtypeFieldNumber = 2;
  inline ::EResourceType rewardtype() const;
  inline void set_rewardtype(::EResourceType value);

  // optional int32 rewardnum = 3;
  inline bool has_rewardnum() const;
  inline void clear_rewardnum();
  static const int kRewardnumFieldNumber = 3;
  inline ::google::protobuf::int32 rewardnum() const;
  inline void set_rewardnum(::google::protobuf::int32 value);

  // optional .eGagaleDisplay display = 4;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 4;
  inline ::eGagaleDisplay display() const;
  inline void set_display(::eGagaleDisplay value);

  // optional int32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 isbig = 6;
  inline bool has_isbig() const;
  inline void clear_isbig();
  static const int kIsbigFieldNumber = 6;
  inline ::google::protobuf::int32 isbig() const;
  inline void set_isbig(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBGagaleType3DataInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_rewardtype();
  inline void clear_has_rewardtype();
  inline void set_has_rewardnum();
  inline void clear_has_rewardnum();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_isbig();
  inline void clear_has_isbig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  int rewardtype_;
  ::google::protobuf::int32 rewardnum_;
  int display_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 isbig_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBGagaleType3DataInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBDataGagaleType1List : public ::google::protobuf::Message {
 public:
  PBDataGagaleType1List();
  virtual ~PBDataGagaleType1List();

  PBDataGagaleType1List(const PBDataGagaleType1List& from);

  inline PBDataGagaleType1List& operator=(const PBDataGagaleType1List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDataGagaleType1List& default_instance();

  void Swap(PBDataGagaleType1List* other);

  // implements Message ----------------------------------------------

  PBDataGagaleType1List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDataGagaleType1List& from);
  void MergeFrom(const PBDataGagaleType1List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGagaleType1DataInfo Duiduipeng = 1;
  inline int duiduipeng_size() const;
  inline void clear_duiduipeng();
  static const int kDuiduipengFieldNumber = 1;
  inline const ::PBGagaleType1DataInfo& duiduipeng(int index) const;
  inline ::PBGagaleType1DataInfo* mutable_duiduipeng(int index);
  inline ::PBGagaleType1DataInfo* add_duiduipeng();
  inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType1DataInfo >&
      duiduipeng() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType1DataInfo >*
      mutable_duiduipeng();

  // @@protoc_insertion_point(class_scope:PBDataGagaleType1List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBGagaleType1DataInfo > duiduipeng_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBDataGagaleType1List* default_instance_;
};
// -------------------------------------------------------------------

class PBDataGagaleType2List : public ::google::protobuf::Message {
 public:
  PBDataGagaleType2List();
  virtual ~PBDataGagaleType2List();

  PBDataGagaleType2List(const PBDataGagaleType2List& from);

  inline PBDataGagaleType2List& operator=(const PBDataGagaleType2List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDataGagaleType2List& default_instance();

  void Swap(PBDataGagaleType2List* other);

  // implements Message ----------------------------------------------

  PBDataGagaleType2List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDataGagaleType2List& from);
  void MergeFrom(const PBDataGagaleType2List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGagaleType2DataInfo Sinuoke = 1;
  inline int sinuoke_size() const;
  inline void clear_sinuoke();
  static const int kSinuokeFieldNumber = 1;
  inline const ::PBGagaleType2DataInfo& sinuoke(int index) const;
  inline ::PBGagaleType2DataInfo* mutable_sinuoke(int index);
  inline ::PBGagaleType2DataInfo* add_sinuoke();
  inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType2DataInfo >&
      sinuoke() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType2DataInfo >*
      mutable_sinuoke();

  // @@protoc_insertion_point(class_scope:PBDataGagaleType2List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBGagaleType2DataInfo > sinuoke_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBDataGagaleType2List* default_instance_;
};
// -------------------------------------------------------------------

class PBDataGagaleType3List : public ::google::protobuf::Message {
 public:
  PBDataGagaleType3List();
  virtual ~PBDataGagaleType3List();

  PBDataGagaleType3List(const PBDataGagaleType3List& from);

  inline PBDataGagaleType3List& operator=(const PBDataGagaleType3List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDataGagaleType3List& default_instance();

  void Swap(PBDataGagaleType3List* other);

  // implements Message ----------------------------------------------

  PBDataGagaleType3List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDataGagaleType3List& from);
  void MergeFrom(const PBDataGagaleType3List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBGagaleType3DataInfo Dayingjia = 1;
  inline int dayingjia_size() const;
  inline void clear_dayingjia();
  static const int kDayingjiaFieldNumber = 1;
  inline const ::PBGagaleType3DataInfo& dayingjia(int index) const;
  inline ::PBGagaleType3DataInfo* mutable_dayingjia(int index);
  inline ::PBGagaleType3DataInfo* add_dayingjia();
  inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType3DataInfo >&
      dayingjia() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType3DataInfo >*
      mutable_dayingjia();

  // @@protoc_insertion_point(class_scope:PBDataGagaleType3List)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBGagaleType3DataInfo > dayingjia_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBDataGagaleType3List* default_instance_;
};
// -------------------------------------------------------------------

class PBData8BallStatistics : public ::google::protobuf::Message {
 public:
  PBData8BallStatistics();
  virtual ~PBData8BallStatistics();

  PBData8BallStatistics(const PBData8BallStatistics& from);

  inline PBData8BallStatistics& operator=(const PBData8BallStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBData8BallStatistics& default_instance();

  void Swap(PBData8BallStatistics* other);

  // implements Message ----------------------------------------------

  PBData8BallStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBData8BallStatistics& from);
  void MergeFrom(const PBData8BallStatistics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 win = 1;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 1;
  inline ::google::protobuf::int32 win() const;
  inline void set_win(::google::protobuf::int32 value);

  // optional int32 lose = 2;
  inline bool has_lose() const;
  inline void clear_lose();
  static const int kLoseFieldNumber = 2;
  inline ::google::protobuf::int32 lose() const;
  inline void set_lose(::google::protobuf::int32 value);

  // optional int32 escape = 3;
  inline bool has_escape() const;
  inline void clear_escape();
  static const int kEscapeFieldNumber = 3;
  inline ::google::protobuf::int32 escape() const;
  inline void set_escape(::google::protobuf::int32 value);

  // optional int32 winningstreak = 4;
  inline bool has_winningstreak() const;
  inline void clear_winningstreak();
  static const int kWinningstreakFieldNumber = 4;
  inline ::google::protobuf::int32 winningstreak() const;
  inline void set_winningstreak(::google::protobuf::int32 value);

  // optional int32 maxwinningstreak = 5;
  inline bool has_maxwinningstreak() const;
  inline void clear_maxwinningstreak();
  static const int kMaxwinningstreakFieldNumber = 5;
  inline ::google::protobuf::int32 maxwinningstreak() const;
  inline void set_maxwinningstreak(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBData8BallStatistics)
 private:
  inline void set_has_win();
  inline void clear_has_win();
  inline void set_has_lose();
  inline void clear_has_lose();
  inline void set_has_escape();
  inline void clear_has_escape();
  inline void set_has_winningstreak();
  inline void clear_has_winningstreak();
  inline void set_has_maxwinningstreak();
  inline void clear_has_maxwinningstreak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 win_;
  ::google::protobuf::int32 lose_;
  ::google::protobuf::int32 escape_;
  ::google::protobuf::int32 winningstreak_;
  ::google::protobuf::int32 maxwinningstreak_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBData8BallStatistics* default_instance_;
};
// -------------------------------------------------------------------

class PBSaveRoleData : public ::google::protobuf::Message {
 public:
  PBSaveRoleData();
  virtual ~PBSaveRoleData();

  PBSaveRoleData(const PBSaveRoleData& from);

  inline PBSaveRoleData& operator=(const PBSaveRoleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSaveRoleData& default_instance();

  void Swap(PBSaveRoleData* other);

  // implements Message ----------------------------------------------

  PBSaveRoleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSaveRoleData& from);
  void MergeFrom(const PBSaveRoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PBDataItemList itemlist = 1;
  inline bool has_itemlist() const;
  inline void clear_itemlist();
  static const int kItemlistFieldNumber = 1;
  inline const ::PBDataItemList& itemlist() const;
  inline ::PBDataItemList* mutable_itemlist();
  inline ::PBDataItemList* release_itemlist();
  inline void set_allocated_itemlist(::PBDataItemList* itemlist);

  // optional bool hasrename = 2;
  inline bool has_hasrename() const;
  inline void clear_hasrename();
  static const int kHasrenameFieldNumber = 2;
  inline bool hasrename() const;
  inline void set_hasrename(bool value);

  // optional .PBDataGagaleType1List duiduipenglist = 3;
  inline bool has_duiduipenglist() const;
  inline void clear_duiduipenglist();
  static const int kDuiduipenglistFieldNumber = 3;
  inline const ::PBDataGagaleType1List& duiduipenglist() const;
  inline ::PBDataGagaleType1List* mutable_duiduipenglist();
  inline ::PBDataGagaleType1List* release_duiduipenglist();
  inline void set_allocated_duiduipenglist(::PBDataGagaleType1List* duiduipenglist);

  // optional .PBData8BallStatistics ball8_1v1 = 4;
  inline bool has_ball8_1v1() const;
  inline void clear_ball8_1v1();
  static const int kBall81V1FieldNumber = 4;
  inline const ::PBData8BallStatistics& ball8_1v1() const;
  inline ::PBData8BallStatistics* mutable_ball8_1v1();
  inline ::PBData8BallStatistics* release_ball8_1v1();
  inline void set_allocated_ball8_1v1(::PBData8BallStatistics* ball8_1v1);

  // optional .PBData8BallStatistics ball8_3p = 5;
  inline bool has_ball8_3p() const;
  inline void clear_ball8_3p();
  static const int kBall83PFieldNumber = 5;
  inline const ::PBData8BallStatistics& ball8_3p() const;
  inline ::PBData8BallStatistics* mutable_ball8_3p();
  inline ::PBData8BallStatistics* release_ball8_3p();
  inline void set_allocated_ball8_3p(::PBData8BallStatistics* ball8_3p);

  // optional .PBDataGagaleType2List sinuokelist = 6;
  inline bool has_sinuokelist() const;
  inline void clear_sinuokelist();
  static const int kSinuokelistFieldNumber = 6;
  inline const ::PBDataGagaleType2List& sinuokelist() const;
  inline ::PBDataGagaleType2List* mutable_sinuokelist();
  inline ::PBDataGagaleType2List* release_sinuokelist();
  inline void set_allocated_sinuokelist(::PBDataGagaleType2List* sinuokelist);

  // optional .PBDataGagaleType3List dayingjialist = 7;
  inline bool has_dayingjialist() const;
  inline void clear_dayingjialist();
  static const int kDayingjialistFieldNumber = 7;
  inline const ::PBDataGagaleType3List& dayingjialist() const;
  inline ::PBDataGagaleType3List* mutable_dayingjialist();
  inline ::PBDataGagaleType3List* release_dayingjialist();
  inline void set_allocated_dayingjialist(::PBDataGagaleType3List* dayingjialist);

  // @@protoc_insertion_point(class_scope:PBSaveRoleData)
 private:
  inline void set_has_itemlist();
  inline void clear_has_itemlist();
  inline void set_has_hasrename();
  inline void clear_has_hasrename();
  inline void set_has_duiduipenglist();
  inline void clear_has_duiduipenglist();
  inline void set_has_ball8_1v1();
  inline void clear_has_ball8_1v1();
  inline void set_has_ball8_3p();
  inline void clear_has_ball8_3p();
  inline void set_has_sinuokelist();
  inline void clear_has_sinuokelist();
  inline void set_has_dayingjialist();
  inline void clear_has_dayingjialist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBDataItemList* itemlist_;
  ::PBDataGagaleType1List* duiduipenglist_;
  ::PBData8BallStatistics* ball8_1v1_;
  ::PBData8BallStatistics* ball8_3p_;
  ::PBDataGagaleType2List* sinuokelist_;
  ::PBDataGagaleType3List* dayingjialist_;
  bool hasrename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dbmessage_2eproto();
  friend void protobuf_AssignDesc_dbmessage_2eproto();
  friend void protobuf_ShutdownFile_dbmessage_2eproto();

  void InitAsDefaultInstance();
  static PBSaveRoleData* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgExecuteSqlRequest

// optional uint32 LogicType = 1;
inline bool CMsgExecuteSqlRequest::has_logictype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_logictype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExecuteSqlRequest::clear_has_logictype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExecuteSqlRequest::clear_logictype() {
  logictype_ = 0u;
  clear_has_logictype();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlRequest::logictype() const {
  return logictype_;
}
inline void CMsgExecuteSqlRequest::set_logictype(::google::protobuf::uint32 value) {
  set_has_logictype();
  logictype_ = value;
}

// optional uint32 SessionID = 2 [default = 0];
inline bool CMsgExecuteSqlRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgExecuteSqlRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgExecuteSqlRequest::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlRequest::sessionid() const {
  return sessionid_;
}
inline void CMsgExecuteSqlRequest::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// optional uint64 TimeStamp = 3 [default = 0];
inline bool CMsgExecuteSqlRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgExecuteSqlRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgExecuteSqlRequest::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 CMsgExecuteSqlRequest::timestamp() const {
  return timestamp_;
}
inline void CMsgExecuteSqlRequest::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional uint64 TeamID = 4 [default = 0];
inline bool CMsgExecuteSqlRequest::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgExecuteSqlRequest::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgExecuteSqlRequest::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 CMsgExecuteSqlRequest::teamid() const {
  return teamid_;
}
inline void CMsgExecuteSqlRequest::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional .SQLTYPE SqlType = 5 [default = SELECT];
inline bool CMsgExecuteSqlRequest::has_sqltype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_sqltype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgExecuteSqlRequest::clear_has_sqltype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgExecuteSqlRequest::clear_sqltype() {
  sqltype_ = 1;
  clear_has_sqltype();
}
inline ::SQLTYPE CMsgExecuteSqlRequest::sqltype() const {
  return static_cast< ::SQLTYPE >(sqltype_);
}
inline void CMsgExecuteSqlRequest::set_sqltype(::SQLTYPE value) {
  assert(::SQLTYPE_IsValid(value));
  set_has_sqltype();
  sqltype_ = value;
}

// optional .CALLBACK Callback = 6 [default = MUSTCALLBACK];
inline bool CMsgExecuteSqlRequest::has_callback() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_callback() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgExecuteSqlRequest::clear_has_callback() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgExecuteSqlRequest::clear_callback() {
  callback_ = 1;
  clear_has_callback();
}
inline ::CALLBACK CMsgExecuteSqlRequest::callback() const {
  return static_cast< ::CALLBACK >(callback_);
}
inline void CMsgExecuteSqlRequest::set_callback(::CALLBACK value) {
  assert(::CALLBACK_IsValid(value));
  set_has_callback();
  callback_ = value;
}

// optional string Sql = 7;
inline bool CMsgExecuteSqlRequest::has_sql() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_sql() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgExecuteSqlRequest::clear_has_sql() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgExecuteSqlRequest::clear_sql() {
  if (sql_ != &::google::protobuf::internal::kEmptyString) {
    sql_->clear();
  }
  clear_has_sql();
}
inline const ::std::string& CMsgExecuteSqlRequest::sql() const {
  return *sql_;
}
inline void CMsgExecuteSqlRequest::set_sql(const ::std::string& value) {
  set_has_sql();
  if (sql_ == &::google::protobuf::internal::kEmptyString) {
    sql_ = new ::std::string;
  }
  sql_->assign(value);
}
inline void CMsgExecuteSqlRequest::set_sql(const char* value) {
  set_has_sql();
  if (sql_ == &::google::protobuf::internal::kEmptyString) {
    sql_ = new ::std::string;
  }
  sql_->assign(value);
}
inline void CMsgExecuteSqlRequest::set_sql(const char* value, size_t size) {
  set_has_sql();
  if (sql_ == &::google::protobuf::internal::kEmptyString) {
    sql_ = new ::std::string;
  }
  sql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgExecuteSqlRequest::mutable_sql() {
  set_has_sql();
  if (sql_ == &::google::protobuf::internal::kEmptyString) {
    sql_ = new ::std::string;
  }
  return sql_;
}
inline ::std::string* CMsgExecuteSqlRequest::release_sql() {
  clear_has_sql();
  if (sql_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sql_;
    sql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgExecuteSqlRequest::set_allocated_sql(::std::string* sql) {
  if (sql_ != &::google::protobuf::internal::kEmptyString) {
    delete sql_;
  }
  if (sql) {
    set_has_sql();
    sql_ = sql;
  } else {
    clear_has_sql();
    sql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 BufSize = 8 [default = 0];
inline bool CMsgExecuteSqlRequest::has_bufsize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_bufsize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgExecuteSqlRequest::clear_has_bufsize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgExecuteSqlRequest::clear_bufsize() {
  bufsize_ = 0u;
  clear_has_bufsize();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlRequest::bufsize() const {
  return bufsize_;
}
inline void CMsgExecuteSqlRequest::set_bufsize(::google::protobuf::uint32 value) {
  set_has_bufsize();
  bufsize_ = value;
}

// optional bytes Buffer = 9;
inline bool CMsgExecuteSqlRequest::has_buffer() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_buffer() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgExecuteSqlRequest::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgExecuteSqlRequest::clear_buffer() {
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    buffer_->clear();
  }
  clear_has_buffer();
}
inline const ::std::string& CMsgExecuteSqlRequest::buffer() const {
  return *buffer_;
}
inline void CMsgExecuteSqlRequest::set_buffer(const ::std::string& value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void CMsgExecuteSqlRequest::set_buffer(const char* value) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void CMsgExecuteSqlRequest::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgExecuteSqlRequest::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    buffer_ = new ::std::string;
  }
  return buffer_;
}
inline ::std::string* CMsgExecuteSqlRequest::release_buffer() {
  clear_has_buffer();
  if (buffer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = buffer_;
    buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgExecuteSqlRequest::set_allocated_buffer(::std::string* buffer) {
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    delete buffer_;
  }
  if (buffer) {
    set_has_buffer();
    buffer_ = buffer;
  } else {
    clear_has_buffer();
    buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string SQLWhere = 10;
inline bool CMsgExecuteSqlRequest::has_sqlwhere() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_sqlwhere() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgExecuteSqlRequest::clear_has_sqlwhere() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgExecuteSqlRequest::clear_sqlwhere() {
  if (sqlwhere_ != &::google::protobuf::internal::kEmptyString) {
    sqlwhere_->clear();
  }
  clear_has_sqlwhere();
}
inline const ::std::string& CMsgExecuteSqlRequest::sqlwhere() const {
  return *sqlwhere_;
}
inline void CMsgExecuteSqlRequest::set_sqlwhere(const ::std::string& value) {
  set_has_sqlwhere();
  if (sqlwhere_ == &::google::protobuf::internal::kEmptyString) {
    sqlwhere_ = new ::std::string;
  }
  sqlwhere_->assign(value);
}
inline void CMsgExecuteSqlRequest::set_sqlwhere(const char* value) {
  set_has_sqlwhere();
  if (sqlwhere_ == &::google::protobuf::internal::kEmptyString) {
    sqlwhere_ = new ::std::string;
  }
  sqlwhere_->assign(value);
}
inline void CMsgExecuteSqlRequest::set_sqlwhere(const char* value, size_t size) {
  set_has_sqlwhere();
  if (sqlwhere_ == &::google::protobuf::internal::kEmptyString) {
    sqlwhere_ = new ::std::string;
  }
  sqlwhere_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgExecuteSqlRequest::mutable_sqlwhere() {
  set_has_sqlwhere();
  if (sqlwhere_ == &::google::protobuf::internal::kEmptyString) {
    sqlwhere_ = new ::std::string;
  }
  return sqlwhere_;
}
inline ::std::string* CMsgExecuteSqlRequest::release_sqlwhere() {
  clear_has_sqlwhere();
  if (sqlwhere_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sqlwhere_;
    sqlwhere_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgExecuteSqlRequest::set_allocated_sqlwhere(::std::string* sqlwhere) {
  if (sqlwhere_ != &::google::protobuf::internal::kEmptyString) {
    delete sqlwhere_;
  }
  if (sqlwhere) {
    set_has_sqlwhere();
    sqlwhere_ = sqlwhere;
  } else {
    clear_has_sqlwhere();
    sqlwhere_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 OutNumber = 11 [default = 0];
inline bool CMsgExecuteSqlRequest::has_outnumber() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_outnumber() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgExecuteSqlRequest::clear_has_outnumber() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgExecuteSqlRequest::clear_outnumber() {
  outnumber_ = 0u;
  clear_has_outnumber();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlRequest::outnumber() const {
  return outnumber_;
}
inline void CMsgExecuteSqlRequest::set_outnumber(::google::protobuf::uint32 value) {
  set_has_outnumber();
  outnumber_ = value;
}

// optional .BLOB HasBlob = 12;
inline bool CMsgExecuteSqlRequest::has_hasblob() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgExecuteSqlRequest::set_has_hasblob() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgExecuteSqlRequest::clear_has_hasblob() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgExecuteSqlRequest::clear_hasblob() {
  hasblob_ = 1;
  clear_has_hasblob();
}
inline ::BLOB CMsgExecuteSqlRequest::hasblob() const {
  return static_cast< ::BLOB >(hasblob_);
}
inline void CMsgExecuteSqlRequest::set_hasblob(::BLOB value) {
  assert(::BLOB_IsValid(value));
  set_has_hasblob();
  hasblob_ = value;
}

// -------------------------------------------------------------------

// CMsgExecuteSqlResponse

// optional uint32 LogicType = 1;
inline bool CMsgExecuteSqlResponse::has_logictype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExecuteSqlResponse::set_has_logictype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExecuteSqlResponse::clear_has_logictype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExecuteSqlResponse::clear_logictype() {
  logictype_ = 0u;
  clear_has_logictype();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlResponse::logictype() const {
  return logictype_;
}
inline void CMsgExecuteSqlResponse::set_logictype(::google::protobuf::uint32 value) {
  set_has_logictype();
  logictype_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMsgExecuteSqlResponse::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgExecuteSqlResponse::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgExecuteSqlResponse::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgExecuteSqlResponse::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlResponse::sessionid() const {
  return sessionid_;
}
inline void CMsgExecuteSqlResponse::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// optional uint64 TimeStamp = 3;
inline bool CMsgExecuteSqlResponse::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgExecuteSqlResponse::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgExecuteSqlResponse::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgExecuteSqlResponse::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 CMsgExecuteSqlResponse::timestamp() const {
  return timestamp_;
}
inline void CMsgExecuteSqlResponse::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional uint64 TeamID = 4;
inline bool CMsgExecuteSqlResponse::has_teamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgExecuteSqlResponse::set_has_teamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgExecuteSqlResponse::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgExecuteSqlResponse::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 CMsgExecuteSqlResponse::teamid() const {
  return teamid_;
}
inline void CMsgExecuteSqlResponse::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint32 ResultCode = 5;
inline bool CMsgExecuteSqlResponse::has_resultcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgExecuteSqlResponse::set_has_resultcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgExecuteSqlResponse::clear_has_resultcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgExecuteSqlResponse::clear_resultcode() {
  resultcode_ = 0u;
  clear_has_resultcode();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlResponse::resultcode() const {
  return resultcode_;
}
inline void CMsgExecuteSqlResponse::set_resultcode(::google::protobuf::uint32 value) {
  set_has_resultcode();
  resultcode_ = value;
}

// optional uint32 RowCount = 6 [default = 0];
inline bool CMsgExecuteSqlResponse::has_rowcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgExecuteSqlResponse::set_has_rowcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgExecuteSqlResponse::clear_has_rowcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgExecuteSqlResponse::clear_rowcount() {
  rowcount_ = 0u;
  clear_has_rowcount();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlResponse::rowcount() const {
  return rowcount_;
}
inline void CMsgExecuteSqlResponse::set_rowcount(::google::protobuf::uint32 value) {
  set_has_rowcount();
  rowcount_ = value;
}

// optional uint32 ColCount = 7 [default = 0];
inline bool CMsgExecuteSqlResponse::has_colcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgExecuteSqlResponse::set_has_colcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgExecuteSqlResponse::clear_has_colcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgExecuteSqlResponse::clear_colcount() {
  colcount_ = 0u;
  clear_has_colcount();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlResponse::colcount() const {
  return colcount_;
}
inline void CMsgExecuteSqlResponse::set_colcount(::google::protobuf::uint32 value) {
  set_has_colcount();
  colcount_ = value;
}

// repeated bytes FieldValue = 8;
inline int CMsgExecuteSqlResponse::fieldvalue_size() const {
  return fieldvalue_.size();
}
inline void CMsgExecuteSqlResponse::clear_fieldvalue() {
  fieldvalue_.Clear();
}
inline const ::std::string& CMsgExecuteSqlResponse::fieldvalue(int index) const {
  return fieldvalue_.Get(index);
}
inline ::std::string* CMsgExecuteSqlResponse::mutable_fieldvalue(int index) {
  return fieldvalue_.Mutable(index);
}
inline void CMsgExecuteSqlResponse::set_fieldvalue(int index, const ::std::string& value) {
  fieldvalue_.Mutable(index)->assign(value);
}
inline void CMsgExecuteSqlResponse::set_fieldvalue(int index, const char* value) {
  fieldvalue_.Mutable(index)->assign(value);
}
inline void CMsgExecuteSqlResponse::set_fieldvalue(int index, const void* value, size_t size) {
  fieldvalue_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgExecuteSqlResponse::add_fieldvalue() {
  return fieldvalue_.Add();
}
inline void CMsgExecuteSqlResponse::add_fieldvalue(const ::std::string& value) {
  fieldvalue_.Add()->assign(value);
}
inline void CMsgExecuteSqlResponse::add_fieldvalue(const char* value) {
  fieldvalue_.Add()->assign(value);
}
inline void CMsgExecuteSqlResponse::add_fieldvalue(const void* value, size_t size) {
  fieldvalue_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgExecuteSqlResponse::fieldvalue() const {
  return fieldvalue_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgExecuteSqlResponse::mutable_fieldvalue() {
  return &fieldvalue_;
}

// repeated uint32 FieldValueLen = 9;
inline int CMsgExecuteSqlResponse::fieldvaluelen_size() const {
  return fieldvaluelen_.size();
}
inline void CMsgExecuteSqlResponse::clear_fieldvaluelen() {
  fieldvaluelen_.Clear();
}
inline ::google::protobuf::uint32 CMsgExecuteSqlResponse::fieldvaluelen(int index) const {
  return fieldvaluelen_.Get(index);
}
inline void CMsgExecuteSqlResponse::set_fieldvaluelen(int index, ::google::protobuf::uint32 value) {
  fieldvaluelen_.Set(index, value);
}
inline void CMsgExecuteSqlResponse::add_fieldvaluelen(::google::protobuf::uint32 value) {
  fieldvaluelen_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgExecuteSqlResponse::fieldvaluelen() const {
  return fieldvaluelen_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgExecuteSqlResponse::mutable_fieldvaluelen() {
  return &fieldvaluelen_;
}

// -------------------------------------------------------------------

// PBDataItem

// optional int32 TempID = 1;
inline bool PBDataItem::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDataItem::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDataItem::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDataItem::clear_tempid() {
  tempid_ = 0;
  clear_has_tempid();
}
inline ::google::protobuf::int32 PBDataItem::tempid() const {
  return tempid_;
}
inline void PBDataItem::set_tempid(::google::protobuf::int32 value) {
  set_has_tempid();
  tempid_ = value;
}

// optional int32 Num = 2;
inline bool PBDataItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDataItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDataItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDataItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBDataItem::num() const {
  return num_;
}
inline void PBDataItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 Status = 3;
inline bool PBDataItem::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBDataItem::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBDataItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBDataItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PBDataItem::status() const {
  return status_;
}
inline void PBDataItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 EndTime = 4;
inline bool PBDataItem::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBDataItem::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBDataItem::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBDataItem::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 PBDataItem::endtime() const {
  return endtime_;
}
inline void PBDataItem::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional int32 ItemType = 5;
inline bool PBDataItem::has_itemtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBDataItem::set_has_itemtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBDataItem::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBDataItem::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 PBDataItem::itemtype() const {
  return itemtype_;
}
inline void PBDataItem::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// -------------------------------------------------------------------

// PBDataItemList

// repeated .PBDataItem Items = 1;
inline int PBDataItemList::items_size() const {
  return items_.size();
}
inline void PBDataItemList::clear_items() {
  items_.Clear();
}
inline const ::PBDataItem& PBDataItemList::items(int index) const {
  return items_.Get(index);
}
inline ::PBDataItem* PBDataItemList::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::PBDataItem* PBDataItemList::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDataItem >&
PBDataItemList::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDataItem >*
PBDataItemList::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// PBGagaleType1DataInfo

// optional int32 num = 1;
inline bool PBGagaleType1DataInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGagaleType1DataInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGagaleType1DataInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGagaleType1DataInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBGagaleType1DataInfo::num() const {
  return num_;
}
inline void PBGagaleType1DataInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 gold = 2;
inline bool PBGagaleType1DataInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGagaleType1DataInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGagaleType1DataInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGagaleType1DataInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 PBGagaleType1DataInfo::gold() const {
  return gold_;
}
inline void PBGagaleType1DataInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional .eGagaleDisplay display = 3;
inline bool PBGagaleType1DataInfo::has_display() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGagaleType1DataInfo::set_has_display() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGagaleType1DataInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGagaleType1DataInfo::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::eGagaleDisplay PBGagaleType1DataInfo::display() const {
  return static_cast< ::eGagaleDisplay >(display_);
}
inline void PBGagaleType1DataInfo::set_display(::eGagaleDisplay value) {
  assert(::eGagaleDisplay_IsValid(value));
  set_has_display();
  display_ = value;
}

// optional int32 isbig = 4;
inline bool PBGagaleType1DataInfo::has_isbig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGagaleType1DataInfo::set_has_isbig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGagaleType1DataInfo::clear_has_isbig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGagaleType1DataInfo::clear_isbig() {
  isbig_ = 0;
  clear_has_isbig();
}
inline ::google::protobuf::int32 PBGagaleType1DataInfo::isbig() const {
  return isbig_;
}
inline void PBGagaleType1DataInfo::set_isbig(::google::protobuf::int32 value) {
  set_has_isbig();
  isbig_ = value;
}

// -------------------------------------------------------------------

// PBGagaleType2DataInfo

// optional int32 num = 1;
inline bool PBGagaleType2DataInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGagaleType2DataInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGagaleType2DataInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGagaleType2DataInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBGagaleType2DataInfo::num() const {
  return num_;
}
inline void PBGagaleType2DataInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional int32 gold = 2;
inline bool PBGagaleType2DataInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGagaleType2DataInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGagaleType2DataInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGagaleType2DataInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 PBGagaleType2DataInfo::gold() const {
  return gold_;
}
inline void PBGagaleType2DataInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional .eGagaleDisplay display = 3;
inline bool PBGagaleType2DataInfo::has_display() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGagaleType2DataInfo::set_has_display() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGagaleType2DataInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGagaleType2DataInfo::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::eGagaleDisplay PBGagaleType2DataInfo::display() const {
  return static_cast< ::eGagaleDisplay >(display_);
}
inline void PBGagaleType2DataInfo::set_display(::eGagaleDisplay value) {
  assert(::eGagaleDisplay_IsValid(value));
  set_has_display();
  display_ = value;
}

// optional int32 isbig = 6;
inline bool PBGagaleType2DataInfo::has_isbig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGagaleType2DataInfo::set_has_isbig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGagaleType2DataInfo::clear_has_isbig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGagaleType2DataInfo::clear_isbig() {
  isbig_ = 0;
  clear_has_isbig();
}
inline ::google::protobuf::int32 PBGagaleType2DataInfo::isbig() const {
  return isbig_;
}
inline void PBGagaleType2DataInfo::set_isbig(::google::protobuf::int32 value) {
  set_has_isbig();
  isbig_ = value;
}

// -------------------------------------------------------------------

// PBGagaleType3DataInfo

// optional int32 num = 1;
inline bool PBGagaleType3DataInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGagaleType3DataInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGagaleType3DataInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGagaleType3DataInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBGagaleType3DataInfo::num() const {
  return num_;
}
inline void PBGagaleType3DataInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// optional .EResourceType rewardtype = 2;
inline bool PBGagaleType3DataInfo::has_rewardtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGagaleType3DataInfo::set_has_rewardtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGagaleType3DataInfo::clear_has_rewardtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGagaleType3DataInfo::clear_rewardtype() {
  rewardtype_ = 0;
  clear_has_rewardtype();
}
inline ::EResourceType PBGagaleType3DataInfo::rewardtype() const {
  return static_cast< ::EResourceType >(rewardtype_);
}
inline void PBGagaleType3DataInfo::set_rewardtype(::EResourceType value) {
  assert(::EResourceType_IsValid(value));
  set_has_rewardtype();
  rewardtype_ = value;
}

// optional int32 rewardnum = 3;
inline bool PBGagaleType3DataInfo::has_rewardnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGagaleType3DataInfo::set_has_rewardnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGagaleType3DataInfo::clear_has_rewardnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGagaleType3DataInfo::clear_rewardnum() {
  rewardnum_ = 0;
  clear_has_rewardnum();
}
inline ::google::protobuf::int32 PBGagaleType3DataInfo::rewardnum() const {
  return rewardnum_;
}
inline void PBGagaleType3DataInfo::set_rewardnum(::google::protobuf::int32 value) {
  set_has_rewardnum();
  rewardnum_ = value;
}

// optional .eGagaleDisplay display = 4;
inline bool PBGagaleType3DataInfo::has_display() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGagaleType3DataInfo::set_has_display() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGagaleType3DataInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGagaleType3DataInfo::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::eGagaleDisplay PBGagaleType3DataInfo::display() const {
  return static_cast< ::eGagaleDisplay >(display_);
}
inline void PBGagaleType3DataInfo::set_display(::eGagaleDisplay value) {
  assert(::eGagaleDisplay_IsValid(value));
  set_has_display();
  display_ = value;
}

// optional int32 state = 5;
inline bool PBGagaleType3DataInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBGagaleType3DataInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBGagaleType3DataInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBGagaleType3DataInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 PBGagaleType3DataInfo::state() const {
  return state_;
}
inline void PBGagaleType3DataInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 isbig = 6;
inline bool PBGagaleType3DataInfo::has_isbig() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBGagaleType3DataInfo::set_has_isbig() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBGagaleType3DataInfo::clear_has_isbig() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBGagaleType3DataInfo::clear_isbig() {
  isbig_ = 0;
  clear_has_isbig();
}
inline ::google::protobuf::int32 PBGagaleType3DataInfo::isbig() const {
  return isbig_;
}
inline void PBGagaleType3DataInfo::set_isbig(::google::protobuf::int32 value) {
  set_has_isbig();
  isbig_ = value;
}

// -------------------------------------------------------------------

// PBDataGagaleType1List

// repeated .PBGagaleType1DataInfo Duiduipeng = 1;
inline int PBDataGagaleType1List::duiduipeng_size() const {
  return duiduipeng_.size();
}
inline void PBDataGagaleType1List::clear_duiduipeng() {
  duiduipeng_.Clear();
}
inline const ::PBGagaleType1DataInfo& PBDataGagaleType1List::duiduipeng(int index) const {
  return duiduipeng_.Get(index);
}
inline ::PBGagaleType1DataInfo* PBDataGagaleType1List::mutable_duiduipeng(int index) {
  return duiduipeng_.Mutable(index);
}
inline ::PBGagaleType1DataInfo* PBDataGagaleType1List::add_duiduipeng() {
  return duiduipeng_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType1DataInfo >&
PBDataGagaleType1List::duiduipeng() const {
  return duiduipeng_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType1DataInfo >*
PBDataGagaleType1List::mutable_duiduipeng() {
  return &duiduipeng_;
}

// -------------------------------------------------------------------

// PBDataGagaleType2List

// repeated .PBGagaleType2DataInfo Sinuoke = 1;
inline int PBDataGagaleType2List::sinuoke_size() const {
  return sinuoke_.size();
}
inline void PBDataGagaleType2List::clear_sinuoke() {
  sinuoke_.Clear();
}
inline const ::PBGagaleType2DataInfo& PBDataGagaleType2List::sinuoke(int index) const {
  return sinuoke_.Get(index);
}
inline ::PBGagaleType2DataInfo* PBDataGagaleType2List::mutable_sinuoke(int index) {
  return sinuoke_.Mutable(index);
}
inline ::PBGagaleType2DataInfo* PBDataGagaleType2List::add_sinuoke() {
  return sinuoke_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType2DataInfo >&
PBDataGagaleType2List::sinuoke() const {
  return sinuoke_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType2DataInfo >*
PBDataGagaleType2List::mutable_sinuoke() {
  return &sinuoke_;
}

// -------------------------------------------------------------------

// PBDataGagaleType3List

// repeated .PBGagaleType3DataInfo Dayingjia = 1;
inline int PBDataGagaleType3List::dayingjia_size() const {
  return dayingjia_.size();
}
inline void PBDataGagaleType3List::clear_dayingjia() {
  dayingjia_.Clear();
}
inline const ::PBGagaleType3DataInfo& PBDataGagaleType3List::dayingjia(int index) const {
  return dayingjia_.Get(index);
}
inline ::PBGagaleType3DataInfo* PBDataGagaleType3List::mutable_dayingjia(int index) {
  return dayingjia_.Mutable(index);
}
inline ::PBGagaleType3DataInfo* PBDataGagaleType3List::add_dayingjia() {
  return dayingjia_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType3DataInfo >&
PBDataGagaleType3List::dayingjia() const {
  return dayingjia_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType3DataInfo >*
PBDataGagaleType3List::mutable_dayingjia() {
  return &dayingjia_;
}

// -------------------------------------------------------------------

// PBData8BallStatistics

// optional int32 win = 1;
inline bool PBData8BallStatistics::has_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBData8BallStatistics::set_has_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBData8BallStatistics::clear_has_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBData8BallStatistics::clear_win() {
  win_ = 0;
  clear_has_win();
}
inline ::google::protobuf::int32 PBData8BallStatistics::win() const {
  return win_;
}
inline void PBData8BallStatistics::set_win(::google::protobuf::int32 value) {
  set_has_win();
  win_ = value;
}

// optional int32 lose = 2;
inline bool PBData8BallStatistics::has_lose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBData8BallStatistics::set_has_lose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBData8BallStatistics::clear_has_lose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBData8BallStatistics::clear_lose() {
  lose_ = 0;
  clear_has_lose();
}
inline ::google::protobuf::int32 PBData8BallStatistics::lose() const {
  return lose_;
}
inline void PBData8BallStatistics::set_lose(::google::protobuf::int32 value) {
  set_has_lose();
  lose_ = value;
}

// optional int32 escape = 3;
inline bool PBData8BallStatistics::has_escape() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBData8BallStatistics::set_has_escape() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBData8BallStatistics::clear_has_escape() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBData8BallStatistics::clear_escape() {
  escape_ = 0;
  clear_has_escape();
}
inline ::google::protobuf::int32 PBData8BallStatistics::escape() const {
  return escape_;
}
inline void PBData8BallStatistics::set_escape(::google::protobuf::int32 value) {
  set_has_escape();
  escape_ = value;
}

// optional int32 winningstreak = 4;
inline bool PBData8BallStatistics::has_winningstreak() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBData8BallStatistics::set_has_winningstreak() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBData8BallStatistics::clear_has_winningstreak() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBData8BallStatistics::clear_winningstreak() {
  winningstreak_ = 0;
  clear_has_winningstreak();
}
inline ::google::protobuf::int32 PBData8BallStatistics::winningstreak() const {
  return winningstreak_;
}
inline void PBData8BallStatistics::set_winningstreak(::google::protobuf::int32 value) {
  set_has_winningstreak();
  winningstreak_ = value;
}

// optional int32 maxwinningstreak = 5;
inline bool PBData8BallStatistics::has_maxwinningstreak() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBData8BallStatistics::set_has_maxwinningstreak() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBData8BallStatistics::clear_has_maxwinningstreak() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBData8BallStatistics::clear_maxwinningstreak() {
  maxwinningstreak_ = 0;
  clear_has_maxwinningstreak();
}
inline ::google::protobuf::int32 PBData8BallStatistics::maxwinningstreak() const {
  return maxwinningstreak_;
}
inline void PBData8BallStatistics::set_maxwinningstreak(::google::protobuf::int32 value) {
  set_has_maxwinningstreak();
  maxwinningstreak_ = value;
}

// -------------------------------------------------------------------

// PBSaveRoleData

// optional .PBDataItemList itemlist = 1;
inline bool PBSaveRoleData::has_itemlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSaveRoleData::set_has_itemlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSaveRoleData::clear_has_itemlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSaveRoleData::clear_itemlist() {
  if (itemlist_ != NULL) itemlist_->::PBDataItemList::Clear();
  clear_has_itemlist();
}
inline const ::PBDataItemList& PBSaveRoleData::itemlist() const {
  return itemlist_ != NULL ? *itemlist_ : *default_instance_->itemlist_;
}
inline ::PBDataItemList* PBSaveRoleData::mutable_itemlist() {
  set_has_itemlist();
  if (itemlist_ == NULL) itemlist_ = new ::PBDataItemList;
  return itemlist_;
}
inline ::PBDataItemList* PBSaveRoleData::release_itemlist() {
  clear_has_itemlist();
  ::PBDataItemList* temp = itemlist_;
  itemlist_ = NULL;
  return temp;
}
inline void PBSaveRoleData::set_allocated_itemlist(::PBDataItemList* itemlist) {
  delete itemlist_;
  itemlist_ = itemlist;
  if (itemlist) {
    set_has_itemlist();
  } else {
    clear_has_itemlist();
  }
}

// optional bool hasrename = 2;
inline bool PBSaveRoleData::has_hasrename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSaveRoleData::set_has_hasrename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSaveRoleData::clear_has_hasrename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSaveRoleData::clear_hasrename() {
  hasrename_ = false;
  clear_has_hasrename();
}
inline bool PBSaveRoleData::hasrename() const {
  return hasrename_;
}
inline void PBSaveRoleData::set_hasrename(bool value) {
  set_has_hasrename();
  hasrename_ = value;
}

// optional .PBDataGagaleType1List duiduipenglist = 3;
inline bool PBSaveRoleData::has_duiduipenglist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSaveRoleData::set_has_duiduipenglist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSaveRoleData::clear_has_duiduipenglist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSaveRoleData::clear_duiduipenglist() {
  if (duiduipenglist_ != NULL) duiduipenglist_->::PBDataGagaleType1List::Clear();
  clear_has_duiduipenglist();
}
inline const ::PBDataGagaleType1List& PBSaveRoleData::duiduipenglist() const {
  return duiduipenglist_ != NULL ? *duiduipenglist_ : *default_instance_->duiduipenglist_;
}
inline ::PBDataGagaleType1List* PBSaveRoleData::mutable_duiduipenglist() {
  set_has_duiduipenglist();
  if (duiduipenglist_ == NULL) duiduipenglist_ = new ::PBDataGagaleType1List;
  return duiduipenglist_;
}
inline ::PBDataGagaleType1List* PBSaveRoleData::release_duiduipenglist() {
  clear_has_duiduipenglist();
  ::PBDataGagaleType1List* temp = duiduipenglist_;
  duiduipenglist_ = NULL;
  return temp;
}
inline void PBSaveRoleData::set_allocated_duiduipenglist(::PBDataGagaleType1List* duiduipenglist) {
  delete duiduipenglist_;
  duiduipenglist_ = duiduipenglist;
  if (duiduipenglist) {
    set_has_duiduipenglist();
  } else {
    clear_has_duiduipenglist();
  }
}

// optional .PBData8BallStatistics ball8_1v1 = 4;
inline bool PBSaveRoleData::has_ball8_1v1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBSaveRoleData::set_has_ball8_1v1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBSaveRoleData::clear_has_ball8_1v1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBSaveRoleData::clear_ball8_1v1() {
  if (ball8_1v1_ != NULL) ball8_1v1_->::PBData8BallStatistics::Clear();
  clear_has_ball8_1v1();
}
inline const ::PBData8BallStatistics& PBSaveRoleData::ball8_1v1() const {
  return ball8_1v1_ != NULL ? *ball8_1v1_ : *default_instance_->ball8_1v1_;
}
inline ::PBData8BallStatistics* PBSaveRoleData::mutable_ball8_1v1() {
  set_has_ball8_1v1();
  if (ball8_1v1_ == NULL) ball8_1v1_ = new ::PBData8BallStatistics;
  return ball8_1v1_;
}
inline ::PBData8BallStatistics* PBSaveRoleData::release_ball8_1v1() {
  clear_has_ball8_1v1();
  ::PBData8BallStatistics* temp = ball8_1v1_;
  ball8_1v1_ = NULL;
  return temp;
}
inline void PBSaveRoleData::set_allocated_ball8_1v1(::PBData8BallStatistics* ball8_1v1) {
  delete ball8_1v1_;
  ball8_1v1_ = ball8_1v1;
  if (ball8_1v1) {
    set_has_ball8_1v1();
  } else {
    clear_has_ball8_1v1();
  }
}

// optional .PBData8BallStatistics ball8_3p = 5;
inline bool PBSaveRoleData::has_ball8_3p() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBSaveRoleData::set_has_ball8_3p() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBSaveRoleData::clear_has_ball8_3p() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBSaveRoleData::clear_ball8_3p() {
  if (ball8_3p_ != NULL) ball8_3p_->::PBData8BallStatistics::Clear();
  clear_has_ball8_3p();
}
inline const ::PBData8BallStatistics& PBSaveRoleData::ball8_3p() const {
  return ball8_3p_ != NULL ? *ball8_3p_ : *default_instance_->ball8_3p_;
}
inline ::PBData8BallStatistics* PBSaveRoleData::mutable_ball8_3p() {
  set_has_ball8_3p();
  if (ball8_3p_ == NULL) ball8_3p_ = new ::PBData8BallStatistics;
  return ball8_3p_;
}
inline ::PBData8BallStatistics* PBSaveRoleData::release_ball8_3p() {
  clear_has_ball8_3p();
  ::PBData8BallStatistics* temp = ball8_3p_;
  ball8_3p_ = NULL;
  return temp;
}
inline void PBSaveRoleData::set_allocated_ball8_3p(::PBData8BallStatistics* ball8_3p) {
  delete ball8_3p_;
  ball8_3p_ = ball8_3p;
  if (ball8_3p) {
    set_has_ball8_3p();
  } else {
    clear_has_ball8_3p();
  }
}

// optional .PBDataGagaleType2List sinuokelist = 6;
inline bool PBSaveRoleData::has_sinuokelist() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBSaveRoleData::set_has_sinuokelist() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBSaveRoleData::clear_has_sinuokelist() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBSaveRoleData::clear_sinuokelist() {
  if (sinuokelist_ != NULL) sinuokelist_->::PBDataGagaleType2List::Clear();
  clear_has_sinuokelist();
}
inline const ::PBDataGagaleType2List& PBSaveRoleData::sinuokelist() const {
  return sinuokelist_ != NULL ? *sinuokelist_ : *default_instance_->sinuokelist_;
}
inline ::PBDataGagaleType2List* PBSaveRoleData::mutable_sinuokelist() {
  set_has_sinuokelist();
  if (sinuokelist_ == NULL) sinuokelist_ = new ::PBDataGagaleType2List;
  return sinuokelist_;
}
inline ::PBDataGagaleType2List* PBSaveRoleData::release_sinuokelist() {
  clear_has_sinuokelist();
  ::PBDataGagaleType2List* temp = sinuokelist_;
  sinuokelist_ = NULL;
  return temp;
}
inline void PBSaveRoleData::set_allocated_sinuokelist(::PBDataGagaleType2List* sinuokelist) {
  delete sinuokelist_;
  sinuokelist_ = sinuokelist;
  if (sinuokelist) {
    set_has_sinuokelist();
  } else {
    clear_has_sinuokelist();
  }
}

// optional .PBDataGagaleType3List dayingjialist = 7;
inline bool PBSaveRoleData::has_dayingjialist() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBSaveRoleData::set_has_dayingjialist() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBSaveRoleData::clear_has_dayingjialist() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBSaveRoleData::clear_dayingjialist() {
  if (dayingjialist_ != NULL) dayingjialist_->::PBDataGagaleType3List::Clear();
  clear_has_dayingjialist();
}
inline const ::PBDataGagaleType3List& PBSaveRoleData::dayingjialist() const {
  return dayingjialist_ != NULL ? *dayingjialist_ : *default_instance_->dayingjialist_;
}
inline ::PBDataGagaleType3List* PBSaveRoleData::mutable_dayingjialist() {
  set_has_dayingjialist();
  if (dayingjialist_ == NULL) dayingjialist_ = new ::PBDataGagaleType3List;
  return dayingjialist_;
}
inline ::PBDataGagaleType3List* PBSaveRoleData::release_dayingjialist() {
  clear_has_dayingjialist();
  ::PBDataGagaleType3List* temp = dayingjialist_;
  dayingjialist_ = NULL;
  return temp;
}
inline void PBSaveRoleData::set_allocated_dayingjialist(::PBDataGagaleType3List* dayingjialist) {
  delete dayingjialist_;
  dayingjialist_ = dayingjialist;
  if (dayingjialist) {
    set_has_dayingjialist();
  } else {
    clear_has_dayingjialist();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgExecuteSqlRequest_Msg>() {
  return ::CMsgExecuteSqlRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgExecuteSqlResponse_Msg>() {
  return ::CMsgExecuteSqlResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SQLTYPE>() {
  return ::SQLTYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CALLBACK>() {
  return ::CALLBACK_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BLOB>() {
  return ::BLOB_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dbmessage_2eproto__INCLUDED
