// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resourcemessage.proto

#ifndef PROTOBUF_resourcemessage_2eproto__INCLUDED
#define PROTOBUF_resourcemessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_resourcemessage_2eproto();
void protobuf_AssignDesc_resourcemessage_2eproto();
void protobuf_ShutdownFile_resourcemessage_2eproto();

class PB8BallDataStatistics;
class PBOrderGoldData;
class PBEightBallStatus;
class PBSingleBall;
class PBBalls;
class PB8BallGroup;
class PBKickBallInfo;
class PB8BallEndResult;
class PBItem;
class PBItemList;
class PBUpdateResource;
class PBLuckey28EndGame;
class PBLucky28RoleInfo;
class PBLucky28RoundInfo;
class PBLucky28BallList;
class PBGagaleType1SingleInfo;
class PBGagaleType2SingleInfo;
class PBGagaleType3SingleInfo;

enum EDataStatisticsType {
  EDataStatisticsType_8Ball1v1 = 0,
  EDataStatisticsType_8Ball3P = 1
};
bool EDataStatisticsType_IsValid(int value);
const EDataStatisticsType EDataStatisticsType_MIN = EDataStatisticsType_8Ball1v1;
const EDataStatisticsType EDataStatisticsType_MAX = EDataStatisticsType_8Ball3P;
const int EDataStatisticsType_ARRAYSIZE = EDataStatisticsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDataStatisticsType_descriptor();
inline const ::std::string& EDataStatisticsType_Name(EDataStatisticsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDataStatisticsType_descriptor(), value);
}
inline bool EDataStatisticsType_Parse(
    const ::std::string& name, EDataStatisticsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDataStatisticsType>(
    EDataStatisticsType_descriptor(), name, value);
}
enum EOrderType {
  EOrderType_Gold = 0
};
bool EOrderType_IsValid(int value);
const EOrderType EOrderType_MIN = EOrderType_Gold;
const EOrderType EOrderType_MAX = EOrderType_Gold;
const int EOrderType_ARRAYSIZE = EOrderType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EOrderType_descriptor();
inline const ::std::string& EOrderType_Name(EOrderType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EOrderType_descriptor(), value);
}
inline bool EOrderType_Parse(
    const ::std::string& name, EOrderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EOrderType>(
    EOrderType_descriptor(), name, value);
}
enum ELeaveRoomType {
  ELeaveRoomType_NotMatch = 0,
  ELeaveRoomType_Match = 1
};
bool ELeaveRoomType_IsValid(int value);
const ELeaveRoomType ELeaveRoomType_MIN = ELeaveRoomType_NotMatch;
const ELeaveRoomType ELeaveRoomType_MAX = ELeaveRoomType_Match;
const int ELeaveRoomType_ARRAYSIZE = ELeaveRoomType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ELeaveRoomType_descriptor();
inline const ::std::string& ELeaveRoomType_Name(ELeaveRoomType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ELeaveRoomType_descriptor(), value);
}
inline bool ELeaveRoomType_Parse(
    const ::std::string& name, ELeaveRoomType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ELeaveRoomType>(
    ELeaveRoomType_descriptor(), name, value);
}
enum EGoRoomType {
  EGoRoomType_Hall = 0,
  EGoRoomType_Room = 1
};
bool EGoRoomType_IsValid(int value);
const EGoRoomType EGoRoomType_MIN = EGoRoomType_Hall;
const EGoRoomType EGoRoomType_MAX = EGoRoomType_Room;
const int EGoRoomType_ARRAYSIZE = EGoRoomType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGoRoomType_descriptor();
inline const ::std::string& EGoRoomType_Name(EGoRoomType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGoRoomType_descriptor(), value);
}
inline bool EGoRoomType_Parse(
    const ::std::string& name, EGoRoomType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGoRoomType>(
    EGoRoomType_descriptor(), name, value);
}
enum EResourceType {
  EResourceType_Invalid = 0,
  EResourceType_Diamond = 1,
  EResourceType_Gold = 2,
  EResourceType_RMB = 3
};
bool EResourceType_IsValid(int value);
const EResourceType EResourceType_MIN = EResourceType_Invalid;
const EResourceType EResourceType_MAX = EResourceType_RMB;
const int EResourceType_ARRAYSIZE = EResourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EResourceType_descriptor();
inline const ::std::string& EResourceType_Name(EResourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EResourceType_descriptor(), value);
}
inline bool EResourceType_Parse(
    const ::std::string& name, EResourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EResourceType>(
    EResourceType_descriptor(), name, value);
}
enum EItemShopType {
  EItemShopType_Invalid = 0,
  EItemShopType_BallGun = 1,
  EItemShopType_BallDesk = 2,
  EItemShopType_BallItem = 3
};
bool EItemShopType_IsValid(int value);
const EItemShopType EItemShopType_MIN = EItemShopType_Invalid;
const EItemShopType EItemShopType_MAX = EItemShopType_BallItem;
const int EItemShopType_ARRAYSIZE = EItemShopType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EItemShopType_descriptor();
inline const ::std::string& EItemShopType_Name(EItemShopType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EItemShopType_descriptor(), value);
}
inline bool EItemShopType_Parse(
    const ::std::string& name, EItemShopType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EItemShopType>(
    EItemShopType_descriptor(), name, value);
}
enum eEightBallStatus {
  eEightBallStatus_StartKick = 0,
  eEightBallStatus_Wait = 1,
  eEightBallStatus_Kick = 2,
  eEightBallStatus_StartGame = 3,
  eEightBallStatus_RoundEnd = 4,
  eEightBallStatus_Leave = 5,
  eEightBallStatus_Giveup = 6,
  eEightBallStatus_EndGame = 7,
  eEightBallStatus_WaitJoin = 8,
  eEightBallStatus_Join = 9
};
bool eEightBallStatus_IsValid(int value);
const eEightBallStatus eEightBallStatus_MIN = eEightBallStatus_StartKick;
const eEightBallStatus eEightBallStatus_MAX = eEightBallStatus_Join;
const int eEightBallStatus_ARRAYSIZE = eEightBallStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* eEightBallStatus_descriptor();
inline const ::std::string& eEightBallStatus_Name(eEightBallStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    eEightBallStatus_descriptor(), value);
}
inline bool eEightBallStatus_Parse(
    const ::std::string& name, eEightBallStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eEightBallStatus>(
    eEightBallStatus_descriptor(), name, value);
}
enum eBallType {
  eBallType_Write = 0,
  eBallType_One = 1,
  eBallType_Two = 2,
  eBallType_Three = 3,
  eBallType_Four = 4,
  eBallType_Five = 5,
  eBallType_Six = 6,
  eBallType_Seven = 7,
  eBallType_Eight = 8,
  eBallType_Nine = 9,
  eBallType_Ten = 10,
  eBallType_Eleven = 11,
  eBallType_Twelve = 12,
  eBallType_Thirteen = 13,
  eBallType_FourTeen = 14,
  eBallType_FifTeen = 15
};
bool eBallType_IsValid(int value);
const eBallType eBallType_MIN = eBallType_Write;
const eBallType eBallType_MAX = eBallType_FifTeen;
const int eBallType_ARRAYSIZE = eBallType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eBallType_descriptor();
inline const ::std::string& eBallType_Name(eBallType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eBallType_descriptor(), value);
}
inline bool eBallType_Parse(
    const ::std::string& name, eBallType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eBallType>(
    eBallType_descriptor(), name, value);
}
enum eBallResult {
  eBallResult_Pot = 0,
  eBallResult_Unpot = 1,
  eBallResult_Foul = 2,
  eBallResult_End = 3,
  eBallResult_None = 4
};
bool eBallResult_IsValid(int value);
const eBallResult eBallResult_MIN = eBallResult_Pot;
const eBallResult eBallResult_MAX = eBallResult_None;
const int eBallResult_ARRAYSIZE = eBallResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* eBallResult_descriptor();
inline const ::std::string& eBallResult_Name(eBallResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    eBallResult_descriptor(), value);
}
inline bool eBallResult_Parse(
    const ::std::string& name, eBallResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eBallResult>(
    eBallResult_descriptor(), name, value);
}
enum EIsPocket {
  EIsPocket_No = 0,
  EIsPocket_Yes = 1
};
bool EIsPocket_IsValid(int value);
const EIsPocket EIsPocket_MIN = EIsPocket_No;
const EIsPocket EIsPocket_MAX = EIsPocket_Yes;
const int EIsPocket_ARRAYSIZE = EIsPocket_MAX + 1;

const ::google::protobuf::EnumDescriptor* EIsPocket_descriptor();
inline const ::std::string& EIsPocket_Name(EIsPocket value) {
  return ::google::protobuf::internal::NameOfEnum(
    EIsPocket_descriptor(), value);
}
inline bool EIsPocket_Parse(
    const ::std::string& name, EIsPocket* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EIsPocket>(
    EIsPocket_descriptor(), name, value);
}
enum enRoomType {
  RT_INVALID = 0,
  RT_8BALL_1V1_LV1 = 1,
  RT_8BALL_1V1_LV2 = 2,
  RT_8BALL_1V1_LV3 = 3,
  RT_8BALL_1V1_LV4 = 4,
  RT_LUCKY28_LV1 = 5,
  RT_LUCKY28_LV2 = 6,
  RT_LUCKY28_LV3 = 7,
  RT_LUCKY28_LV4 = 8,
  RT_8BALL_3P_LV1 = 9,
  RT_8BALL_3P_LV2 = 10,
  RT_8BALL_3P_LV3 = 11,
  RT_8BALL_3P_LV4 = 12,
  RT_ROOMTYPE_NUM = 13
};
bool enRoomType_IsValid(int value);
const enRoomType enRoomType_MIN = RT_INVALID;
const enRoomType enRoomType_MAX = RT_ROOMTYPE_NUM;
const int enRoomType_ARRAYSIZE = enRoomType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enRoomType_descriptor();
inline const ::std::string& enRoomType_Name(enRoomType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enRoomType_descriptor(), value);
}
inline bool enRoomType_Parse(
    const ::std::string& name, enRoomType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enRoomType>(
    enRoomType_descriptor(), name, value);
}
enum eLucky28Status {
  eLucky28Status_StartGame = 0,
  eLucky28Status_Wait = 1,
  eLucky28Status_Shot = 2,
  eLucky28Status_EndGame = 3,
  eLucky28Status_WaitJoin = 4,
  eLucky28Status_Prepare = 5,
  eLucky28Status_Giveup = 6,
  eLucky28Status_Leave = 7
};
bool eLucky28Status_IsValid(int value);
const eLucky28Status eLucky28Status_MIN = eLucky28Status_StartGame;
const eLucky28Status eLucky28Status_MAX = eLucky28Status_Leave;
const int eLucky28Status_ARRAYSIZE = eLucky28Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* eLucky28Status_descriptor();
inline const ::std::string& eLucky28Status_Name(eLucky28Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    eLucky28Status_descriptor(), value);
}
inline bool eLucky28Status_Parse(
    const ::std::string& name, eLucky28Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eLucky28Status>(
    eLucky28Status_descriptor(), name, value);
}
enum eLucky28BetType {
  eLucky28BetType_None = 0,
  eLucky28BetType_Shot1 = 1,
  eLucky28BetType_Shot2 = 2,
  eLucky28BetType_Shot3 = 3,
  eLucky28BetType_Shot4 = 4,
  eLucky28BetType_Shot5 = 5
};
bool eLucky28BetType_IsValid(int value);
const eLucky28BetType eLucky28BetType_MIN = eLucky28BetType_None;
const eLucky28BetType eLucky28BetType_MAX = eLucky28BetType_Shot5;
const int eLucky28BetType_ARRAYSIZE = eLucky28BetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eLucky28BetType_descriptor();
inline const ::std::string& eLucky28BetType_Name(eLucky28BetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eLucky28BetType_descriptor(), value);
}
inline bool eLucky28BetType_Parse(
    const ::std::string& name, eLucky28BetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eLucky28BetType>(
    eLucky28BetType_descriptor(), name, value);
}
enum eLucky28ShotType {
  eLucky28ShotType_GiveUp = 1,
  eLucky28ShotType_Yes = 2,
  eLucky28ShotType_No = 3
};
bool eLucky28ShotType_IsValid(int value);
const eLucky28ShotType eLucky28ShotType_MIN = eLucky28ShotType_GiveUp;
const eLucky28ShotType eLucky28ShotType_MAX = eLucky28ShotType_No;
const int eLucky28ShotType_ARRAYSIZE = eLucky28ShotType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eLucky28ShotType_descriptor();
inline const ::std::string& eLucky28ShotType_Name(eLucky28ShotType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eLucky28ShotType_descriptor(), value);
}
inline bool eLucky28ShotType_Parse(
    const ::std::string& name, eLucky28ShotType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eLucky28ShotType>(
    eLucky28ShotType_descriptor(), name, value);
}
enum EGameResult {
  EGameResult_Succeed = 0,
  EGameResult_Failure = 1,
  EGameResult_Draw = 2,
  EGameResult_Escape = 3
};
bool EGameResult_IsValid(int value);
const EGameResult EGameResult_MIN = EGameResult_Succeed;
const EGameResult EGameResult_MAX = EGameResult_Escape;
const int EGameResult_ARRAYSIZE = EGameResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGameResult_descriptor();
inline const ::std::string& EGameResult_Name(EGameResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGameResult_descriptor(), value);
}
inline bool EGameResult_Parse(
    const ::std::string& name, EGameResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGameResult>(
    EGameResult_descriptor(), name, value);
}
enum eGagaleDisplay {
  eGagaleDisplay_NotDisplay = 0,
  eGagaleDisplay_Display = 1
};
bool eGagaleDisplay_IsValid(int value);
const eGagaleDisplay eGagaleDisplay_MIN = eGagaleDisplay_NotDisplay;
const eGagaleDisplay eGagaleDisplay_MAX = eGagaleDisplay_Display;
const int eGagaleDisplay_ARRAYSIZE = eGagaleDisplay_MAX + 1;

const ::google::protobuf::EnumDescriptor* eGagaleDisplay_descriptor();
inline const ::std::string& eGagaleDisplay_Name(eGagaleDisplay value) {
  return ::google::protobuf::internal::NameOfEnum(
    eGagaleDisplay_descriptor(), value);
}
inline bool eGagaleDisplay_Parse(
    const ::std::string& name, eGagaleDisplay* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eGagaleDisplay>(
    eGagaleDisplay_descriptor(), name, value);
}
// ===================================================================

class PB8BallDataStatistics : public ::google::protobuf::Message {
 public:
  PB8BallDataStatistics();
  virtual ~PB8BallDataStatistics();

  PB8BallDataStatistics(const PB8BallDataStatistics& from);

  inline PB8BallDataStatistics& operator=(const PB8BallDataStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB8BallDataStatistics& default_instance();

  void Swap(PB8BallDataStatistics* other);

  // implements Message ----------------------------------------------

  PB8BallDataStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB8BallDataStatistics& from);
  void MergeFrom(const PB8BallDataStatistics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required .EGameResult result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::EGameResult result() const;
  inline void set_result(::EGameResult value);

  // @@protoc_insertion_point(class_scope:PB8BallDataStatistics)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PB8BallDataStatistics* default_instance_;
};
// -------------------------------------------------------------------

class PBOrderGoldData : public ::google::protobuf::Message {
 public:
  PBOrderGoldData();
  virtual ~PBOrderGoldData();

  PBOrderGoldData(const PBOrderGoldData& from);

  inline PBOrderGoldData& operator=(const PBOrderGoldData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOrderGoldData& default_instance();

  void Swap(PBOrderGoldData* other);

  // implements Message ----------------------------------------------

  PBOrderGoldData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOrderGoldData& from);
  void MergeFrom(const PBOrderGoldData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // optional string rolename = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional int32 headid = 3;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 3;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // optional int64 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PBOrderGoldData)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::std::string* rolename_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 headid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBOrderGoldData* default_instance_;
};
// -------------------------------------------------------------------

class PBEightBallStatus : public ::google::protobuf::Message {
 public:
  PBEightBallStatus();
  virtual ~PBEightBallStatus();

  PBEightBallStatus(const PBEightBallStatus& from);

  inline PBEightBallStatus& operator=(const PBEightBallStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEightBallStatus& default_instance();

  void Swap(PBEightBallStatus* other);

  // implements Message ----------------------------------------------

  PBEightBallStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEightBallStatus& from);
  void MergeFrom(const PBEightBallStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBEightBallStatus)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBEightBallStatus* default_instance_;
};
// -------------------------------------------------------------------

class PBSingleBall : public ::google::protobuf::Message {
 public:
  PBSingleBall();
  virtual ~PBSingleBall();

  PBSingleBall(const PBSingleBall& from);

  inline PBSingleBall& operator=(const PBSingleBall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSingleBall& default_instance();

  void Swap(PBSingleBall* other);

  // implements Message ----------------------------------------------

  PBSingleBall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSingleBall& from);
  void MergeFrom(const PBSingleBall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 BallType = 1;
  inline bool has_balltype() const;
  inline void clear_balltype();
  static const int kBallTypeFieldNumber = 1;
  inline ::google::protobuf::int32 balltype() const;
  inline void set_balltype(::google::protobuf::int32 value);

  // required int32 PositionX = 2;
  inline bool has_positionx() const;
  inline void clear_positionx();
  static const int kPositionXFieldNumber = 2;
  inline ::google::protobuf::int32 positionx() const;
  inline void set_positionx(::google::protobuf::int32 value);

  // required int32 PositionY = 3;
  inline bool has_positiony() const;
  inline void clear_positiony();
  static const int kPositionYFieldNumber = 3;
  inline ::google::protobuf::int32 positiony() const;
  inline void set_positiony(::google::protobuf::int32 value);

  // required int32 IsPocket = 4;
  inline bool has_ispocket() const;
  inline void clear_ispocket();
  static const int kIsPocketFieldNumber = 4;
  inline ::google::protobuf::int32 ispocket() const;
  inline void set_ispocket(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBSingleBall)
 private:
  inline void set_has_balltype();
  inline void clear_has_balltype();
  inline void set_has_positionx();
  inline void clear_has_positionx();
  inline void set_has_positiony();
  inline void clear_has_positiony();
  inline void set_has_ispocket();
  inline void clear_has_ispocket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 balltype_;
  ::google::protobuf::int32 positionx_;
  ::google::protobuf::int32 positiony_;
  ::google::protobuf::int32 ispocket_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBSingleBall* default_instance_;
};
// -------------------------------------------------------------------

class PBBalls : public ::google::protobuf::Message {
 public:
  PBBalls();
  virtual ~PBBalls();

  PBBalls(const PBBalls& from);

  inline PBBalls& operator=(const PBBalls& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBalls& default_instance();

  void Swap(PBBalls* other);

  // implements Message ----------------------------------------------

  PBBalls* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBalls& from);
  void MergeFrom(const PBBalls& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBSingleBall BallList = 1;
  inline int balllist_size() const;
  inline void clear_balllist();
  static const int kBallListFieldNumber = 1;
  inline const ::PBSingleBall& balllist(int index) const;
  inline ::PBSingleBall* mutable_balllist(int index);
  inline ::PBSingleBall* add_balllist();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSingleBall >&
      balllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSingleBall >*
      mutable_balllist();

  // @@protoc_insertion_point(class_scope:PBBalls)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBSingleBall > balllist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBBalls* default_instance_;
};
// -------------------------------------------------------------------

class PB8BallGroup : public ::google::protobuf::Message {
 public:
  PB8BallGroup();
  virtual ~PB8BallGroup();

  PB8BallGroup(const PB8BallGroup& from);

  inline PB8BallGroup& operator=(const PB8BallGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB8BallGroup& default_instance();

  void Swap(PB8BallGroup* other);

  // implements Message ----------------------------------------------

  PB8BallGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB8BallGroup& from);
  void MergeFrom(const PB8BallGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required .eEightBallStatus status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::eEightBallStatus status() const;
  inline void set_status(::eEightBallStatus value);

  // repeated int32 balllist = 3;
  inline int balllist_size() const;
  inline void clear_balllist();
  static const int kBalllistFieldNumber = 3;
  inline ::google::protobuf::int32 balllist(int index) const;
  inline void set_balllist(int index, ::google::protobuf::int32 value);
  inline void add_balllist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      balllist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_balllist();

  // @@protoc_insertion_point(class_scope:PB8BallGroup)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > balllist_;
  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PB8BallGroup* default_instance_;
};
// -------------------------------------------------------------------

class PBKickBallInfo : public ::google::protobuf::Message {
 public:
  PBKickBallInfo();
  virtual ~PBKickBallInfo();

  PBKickBallInfo(const PBKickBallInfo& from);

  inline PBKickBallInfo& operator=(const PBKickBallInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBKickBallInfo& default_instance();

  void Swap(PBKickBallInfo* other);

  // implements Message ----------------------------------------------

  PBKickBallInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBKickBallInfo& from);
  void MergeFrom(const PBKickBallInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 angle = 1;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 1;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);

  // required int32 power = 2;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 2;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // required int32 kickpointX = 3;
  inline bool has_kickpointx() const;
  inline void clear_kickpointx();
  static const int kKickpointXFieldNumber = 3;
  inline ::google::protobuf::int32 kickpointx() const;
  inline void set_kickpointx(::google::protobuf::int32 value);

  // required int32 kickpointY = 4;
  inline bool has_kickpointy() const;
  inline void clear_kickpointy();
  static const int kKickpointYFieldNumber = 4;
  inline ::google::protobuf::int32 kickpointy() const;
  inline void set_kickpointy(::google::protobuf::int32 value);

  // required .PBSingleBall writeball = 5;
  inline bool has_writeball() const;
  inline void clear_writeball();
  static const int kWriteballFieldNumber = 5;
  inline const ::PBSingleBall& writeball() const;
  inline ::PBSingleBall* mutable_writeball();
  inline ::PBSingleBall* release_writeball();
  inline void set_allocated_writeball(::PBSingleBall* writeball);

  // repeated int32 startrand = 6;
  inline int startrand_size() const;
  inline void clear_startrand();
  static const int kStartrandFieldNumber = 6;
  inline ::google::protobuf::int32 startrand(int index) const;
  inline void set_startrand(int index, ::google::protobuf::int32 value);
  inline void add_startrand(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      startrand() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_startrand();

  // @@protoc_insertion_point(class_scope:PBKickBallInfo)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_kickpointx();
  inline void clear_has_kickpointx();
  inline void set_has_kickpointy();
  inline void clear_has_kickpointy();
  inline void set_has_writeball();
  inline void clear_has_writeball();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 angle_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 kickpointx_;
  ::google::protobuf::int32 kickpointy_;
  ::PBSingleBall* writeball_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > startrand_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBKickBallInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB8BallEndResult : public ::google::protobuf::Message {
 public:
  PB8BallEndResult();
  virtual ~PB8BallEndResult();

  PB8BallEndResult(const PB8BallEndResult& from);

  inline PB8BallEndResult& operator=(const PB8BallEndResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB8BallEndResult& default_instance();

  void Swap(PB8BallEndResult* other);

  // implements Message ----------------------------------------------

  PB8BallEndResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB8BallEndResult& from);
  void MergeFrom(const PB8BallEndResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int64 betgold = 3;
  inline bool has_betgold() const;
  inline void clear_betgold();
  static const int kBetgoldFieldNumber = 3;
  inline ::google::protobuf::int64 betgold() const;
  inline void set_betgold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PB8BallEndResult)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_betgold();
  inline void clear_has_betgold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int64 betgold_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PB8BallEndResult* default_instance_;
};
// -------------------------------------------------------------------

class PBItem : public ::google::protobuf::Message {
 public:
  PBItem();
  virtual ~PBItem();

  PBItem(const PBItem& from);

  inline PBItem& operator=(const PBItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItem& default_instance();

  void Swap(PBItem* other);

  // implements Message ----------------------------------------------

  PBItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItem& from);
  void MergeFrom(const PBItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ArraryIndex = 1;
  inline bool has_arraryindex() const;
  inline void clear_arraryindex();
  static const int kArraryIndexFieldNumber = 1;
  inline ::google::protobuf::int32 arraryindex() const;
  inline void set_arraryindex(::google::protobuf::int32 value);

  // required int32 TempID = 2;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 2;
  inline ::google::protobuf::int32 tempid() const;
  inline void set_tempid(::google::protobuf::int32 value);

  // required int32 Num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 Status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required int32 EndTime = 5;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 5;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBItem)
 private:
  inline void set_has_arraryindex();
  inline void clear_has_arraryindex();
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 arraryindex_;
  ::google::protobuf::int32 tempid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 endtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBItem* default_instance_;
};
// -------------------------------------------------------------------

class PBItemList : public ::google::protobuf::Message {
 public:
  PBItemList();
  virtual ~PBItemList();

  PBItemList(const PBItemList& from);

  inline PBItemList& operator=(const PBItemList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemList& default_instance();

  void Swap(PBItemList* other);

  // implements Message ----------------------------------------------

  PBItemList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemList& from);
  void MergeFrom(const PBItemList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBItem Items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::PBItem& items(int index) const;
  inline ::PBItem* mutable_items(int index);
  inline ::PBItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:PBItemList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBItemList* default_instance_;
};
// -------------------------------------------------------------------

class PBUpdateResource : public ::google::protobuf::Message {
 public:
  PBUpdateResource();
  virtual ~PBUpdateResource();

  PBUpdateResource(const PBUpdateResource& from);

  inline PBUpdateResource& operator=(const PBUpdateResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBUpdateResource& default_instance();

  void Swap(PBUpdateResource* other);

  // implements Message ----------------------------------------------

  PBUpdateResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBUpdateResource& from);
  void MergeFrom(const PBUpdateResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EResourceType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::EResourceType type() const;
  inline void set_type(::EResourceType value);

  // optional int64 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PBUpdateResource)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 num_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBUpdateResource* default_instance_;
};
// -------------------------------------------------------------------

class PBLuckey28EndGame : public ::google::protobuf::Message {
 public:
  PBLuckey28EndGame();
  virtual ~PBLuckey28EndGame();

  PBLuckey28EndGame(const PBLuckey28EndGame& from);

  inline PBLuckey28EndGame& operator=(const PBLuckey28EndGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLuckey28EndGame& default_instance();

  void Swap(PBLuckey28EndGame* other);

  // implements Message ----------------------------------------------

  PBLuckey28EndGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLuckey28EndGame& from);
  void MergeFrom(const PBLuckey28EndGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required .EGameResult result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::EGameResult result() const;
  inline void set_result(::EGameResult value);

  // required int64 addgold = 3;
  inline bool has_addgold() const;
  inline void clear_addgold();
  static const int kAddgoldFieldNumber = 3;
  inline ::google::protobuf::int64 addgold() const;
  inline void set_addgold(::google::protobuf::int64 value);

  // required int64 totalgold = 4;
  inline bool has_totalgold() const;
  inline void clear_totalgold();
  static const int kTotalgoldFieldNumber = 4;
  inline ::google::protobuf::int64 totalgold() const;
  inline void set_totalgold(::google::protobuf::int64 value);

  // repeated int32 balllist = 5;
  inline int balllist_size() const;
  inline void clear_balllist();
  static const int kBalllistFieldNumber = 5;
  inline ::google::protobuf::int32 balllist(int index) const;
  inline void set_balllist(int index, ::google::protobuf::int32 value);
  inline void add_balllist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      balllist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_balllist();

  // @@protoc_insertion_point(class_scope:PBLuckey28EndGame)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_addgold();
  inline void clear_has_addgold();
  inline void set_has_totalgold();
  inline void clear_has_totalgold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int64 addgold_;
  ::google::protobuf::int64 totalgold_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > balllist_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBLuckey28EndGame* default_instance_;
};
// -------------------------------------------------------------------

class PBLucky28RoleInfo : public ::google::protobuf::Message {
 public:
  PBLucky28RoleInfo();
  virtual ~PBLucky28RoleInfo();

  PBLucky28RoleInfo(const PBLucky28RoleInfo& from);

  inline PBLucky28RoleInfo& operator=(const PBLucky28RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLucky28RoleInfo& default_instance();

  void Swap(PBLucky28RoleInfo* other);

  // implements Message ----------------------------------------------

  PBLucky28RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLucky28RoleInfo& from);
  void MergeFrom(const PBLucky28RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // repeated int32 balllist = 2;
  inline int balllist_size() const;
  inline void clear_balllist();
  static const int kBalllistFieldNumber = 2;
  inline ::google::protobuf::int32 balllist(int index) const;
  inline void set_balllist(int index, ::google::protobuf::int32 value);
  inline void add_balllist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      balllist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_balllist();

  // required int64 betgold = 3;
  inline bool has_betgold() const;
  inline void clear_betgold();
  static const int kBetgoldFieldNumber = 3;
  inline ::google::protobuf::int64 betgold() const;
  inline void set_betgold(::google::protobuf::int64 value);

  // required int64 remaingold = 4;
  inline bool has_remaingold() const;
  inline void clear_remaingold();
  static const int kRemaingoldFieldNumber = 4;
  inline ::google::protobuf::int64 remaingold() const;
  inline void set_remaingold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PBLucky28RoleInfo)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_betgold();
  inline void clear_has_betgold();
  inline void set_has_remaingold();
  inline void clear_has_remaingold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > balllist_;
  ::google::protobuf::int64 betgold_;
  ::google::protobuf::int64 remaingold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBLucky28RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBLucky28RoundInfo : public ::google::protobuf::Message {
 public:
  PBLucky28RoundInfo();
  virtual ~PBLucky28RoundInfo();

  PBLucky28RoundInfo(const PBLucky28RoundInfo& from);

  inline PBLucky28RoundInfo& operator=(const PBLucky28RoundInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLucky28RoundInfo& default_instance();

  void Swap(PBLucky28RoundInfo* other);

  // implements Message ----------------------------------------------

  PBLucky28RoundInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLucky28RoundInfo& from);
  void MergeFrom(const PBLucky28RoundInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 leftballlist = 1;
  inline int leftballlist_size() const;
  inline void clear_leftballlist();
  static const int kLeftballlistFieldNumber = 1;
  inline ::google::protobuf::int32 leftballlist(int index) const;
  inline void set_leftballlist(int index, ::google::protobuf::int32 value);
  inline void add_leftballlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      leftballlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_leftballlist();

  // repeated .PBLucky28RoleInfo roleinfos = 2;
  inline int roleinfos_size() const;
  inline void clear_roleinfos();
  static const int kRoleinfosFieldNumber = 2;
  inline const ::PBLucky28RoleInfo& roleinfos(int index) const;
  inline ::PBLucky28RoleInfo* mutable_roleinfos(int index);
  inline ::PBLucky28RoleInfo* add_roleinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::PBLucky28RoleInfo >&
      roleinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLucky28RoleInfo >*
      mutable_roleinfos();

  // @@protoc_insertion_point(class_scope:PBLucky28RoundInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > leftballlist_;
  ::google::protobuf::RepeatedPtrField< ::PBLucky28RoleInfo > roleinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBLucky28RoundInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBLucky28BallList : public ::google::protobuf::Message {
 public:
  PBLucky28BallList();
  virtual ~PBLucky28BallList();

  PBLucky28BallList(const PBLucky28BallList& from);

  inline PBLucky28BallList& operator=(const PBLucky28BallList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLucky28BallList& default_instance();

  void Swap(PBLucky28BallList* other);

  // implements Message ----------------------------------------------

  PBLucky28BallList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLucky28BallList& from);
  void MergeFrom(const PBLucky28BallList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 leftballlist = 1;
  inline int leftballlist_size() const;
  inline void clear_leftballlist();
  static const int kLeftballlistFieldNumber = 1;
  inline ::google::protobuf::int32 leftballlist(int index) const;
  inline void set_leftballlist(int index, ::google::protobuf::int32 value);
  inline void add_leftballlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      leftballlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_leftballlist();

  // @@protoc_insertion_point(class_scope:PBLucky28BallList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > leftballlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBLucky28BallList* default_instance_;
};
// -------------------------------------------------------------------

class PBGagaleType1SingleInfo : public ::google::protobuf::Message {
 public:
  PBGagaleType1SingleInfo();
  virtual ~PBGagaleType1SingleInfo();

  PBGagaleType1SingleInfo(const PBGagaleType1SingleInfo& from);

  inline PBGagaleType1SingleInfo& operator=(const PBGagaleType1SingleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGagaleType1SingleInfo& default_instance();

  void Swap(PBGagaleType1SingleInfo* other);

  // implements Message ----------------------------------------------

  PBGagaleType1SingleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGagaleType1SingleInfo& from);
  void MergeFrom(const PBGagaleType1SingleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // required .eGagaleDisplay display = 3;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 3;
  inline ::eGagaleDisplay display() const;
  inline void set_display(::eGagaleDisplay value);

  // required int32 isbig = 4;
  inline bool has_isbig() const;
  inline void clear_isbig();
  static const int kIsbigFieldNumber = 4;
  inline ::google::protobuf::int32 isbig() const;
  inline void set_isbig(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBGagaleType1SingleInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_isbig();
  inline void clear_has_isbig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 gold_;
  int display_;
  ::google::protobuf::int32 isbig_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBGagaleType1SingleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBGagaleType2SingleInfo : public ::google::protobuf::Message {
 public:
  PBGagaleType2SingleInfo();
  virtual ~PBGagaleType2SingleInfo();

  PBGagaleType2SingleInfo(const PBGagaleType2SingleInfo& from);

  inline PBGagaleType2SingleInfo& operator=(const PBGagaleType2SingleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGagaleType2SingleInfo& default_instance();

  void Swap(PBGagaleType2SingleInfo* other);

  // implements Message ----------------------------------------------

  PBGagaleType2SingleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGagaleType2SingleInfo& from);
  void MergeFrom(const PBGagaleType2SingleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required int32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // required .eGagaleDisplay display = 3;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 3;
  inline ::eGagaleDisplay display() const;
  inline void set_display(::eGagaleDisplay value);

  // required int32 isbig = 4;
  inline bool has_isbig() const;
  inline void clear_isbig();
  static const int kIsbigFieldNumber = 4;
  inline ::google::protobuf::int32 isbig() const;
  inline void set_isbig(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBGagaleType2SingleInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_isbig();
  inline void clear_has_isbig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 gold_;
  int display_;
  ::google::protobuf::int32 isbig_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBGagaleType2SingleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBGagaleType3SingleInfo : public ::google::protobuf::Message {
 public:
  PBGagaleType3SingleInfo();
  virtual ~PBGagaleType3SingleInfo();

  PBGagaleType3SingleInfo(const PBGagaleType3SingleInfo& from);

  inline PBGagaleType3SingleInfo& operator=(const PBGagaleType3SingleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGagaleType3SingleInfo& default_instance();

  void Swap(PBGagaleType3SingleInfo* other);

  // implements Message ----------------------------------------------

  PBGagaleType3SingleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGagaleType3SingleInfo& from);
  void MergeFrom(const PBGagaleType3SingleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // required .EResourceType rewardtype = 2;
  inline bool has_rewardtype() const;
  inline void clear_rewardtype();
  static const int kRewardtypeFieldNumber = 2;
  inline ::EResourceType rewardtype() const;
  inline void set_rewardtype(::EResourceType value);

  // required int32 rewardnum = 3;
  inline bool has_rewardnum() const;
  inline void clear_rewardnum();
  static const int kRewardnumFieldNumber = 3;
  inline ::google::protobuf::int32 rewardnum() const;
  inline void set_rewardnum(::google::protobuf::int32 value);

  // required .eGagaleDisplay display = 4;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 4;
  inline ::eGagaleDisplay display() const;
  inline void set_display(::eGagaleDisplay value);

  // required int32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // required int32 isbig = 6;
  inline bool has_isbig() const;
  inline void clear_isbig();
  static const int kIsbigFieldNumber = 6;
  inline ::google::protobuf::int32 isbig() const;
  inline void set_isbig(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBGagaleType3SingleInfo)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_rewardtype();
  inline void clear_has_rewardtype();
  inline void set_has_rewardnum();
  inline void clear_has_rewardnum();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_isbig();
  inline void clear_has_isbig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;
  int rewardtype_;
  ::google::protobuf::int32 rewardnum_;
  int display_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 isbig_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_resourcemessage_2eproto();
  friend void protobuf_AssignDesc_resourcemessage_2eproto();
  friend void protobuf_ShutdownFile_resourcemessage_2eproto();

  void InitAsDefaultInstance();
  static PBGagaleType3SingleInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// PB8BallDataStatistics

// required int64 roleid = 1;
inline bool PB8BallDataStatistics::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB8BallDataStatistics::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB8BallDataStatistics::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB8BallDataStatistics::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PB8BallDataStatistics::roleid() const {
  return roleid_;
}
inline void PB8BallDataStatistics::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required .EGameResult result = 2;
inline bool PB8BallDataStatistics::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB8BallDataStatistics::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB8BallDataStatistics::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB8BallDataStatistics::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::EGameResult PB8BallDataStatistics::result() const {
  return static_cast< ::EGameResult >(result_);
}
inline void PB8BallDataStatistics::set_result(::EGameResult value) {
  assert(::EGameResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// PBOrderGoldData

// optional int64 roleid = 1;
inline bool PBOrderGoldData::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBOrderGoldData::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBOrderGoldData::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBOrderGoldData::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PBOrderGoldData::roleid() const {
  return roleid_;
}
inline void PBOrderGoldData::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional string rolename = 2;
inline bool PBOrderGoldData::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBOrderGoldData::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBOrderGoldData::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBOrderGoldData::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& PBOrderGoldData::rolename() const {
  return *rolename_;
}
inline void PBOrderGoldData::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void PBOrderGoldData::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void PBOrderGoldData::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBOrderGoldData::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* PBOrderGoldData::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PBOrderGoldData::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 headid = 3;
inline bool PBOrderGoldData::has_headid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBOrderGoldData::set_has_headid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBOrderGoldData::clear_has_headid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBOrderGoldData::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 PBOrderGoldData::headid() const {
  return headid_;
}
inline void PBOrderGoldData::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
}

// optional int64 gold = 4;
inline bool PBOrderGoldData::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBOrderGoldData::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBOrderGoldData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBOrderGoldData::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 PBOrderGoldData::gold() const {
  return gold_;
}
inline void PBOrderGoldData::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// PBEightBallStatus

// required int64 roleid = 1;
inline bool PBEightBallStatus::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEightBallStatus::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEightBallStatus::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEightBallStatus::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PBEightBallStatus::roleid() const {
  return roleid_;
}
inline void PBEightBallStatus::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 status = 2;
inline bool PBEightBallStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEightBallStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEightBallStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEightBallStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PBEightBallStatus::status() const {
  return status_;
}
inline void PBEightBallStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// PBSingleBall

// required int32 BallType = 1;
inline bool PBSingleBall::has_balltype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSingleBall::set_has_balltype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSingleBall::clear_has_balltype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSingleBall::clear_balltype() {
  balltype_ = 0;
  clear_has_balltype();
}
inline ::google::protobuf::int32 PBSingleBall::balltype() const {
  return balltype_;
}
inline void PBSingleBall::set_balltype(::google::protobuf::int32 value) {
  set_has_balltype();
  balltype_ = value;
}

// required int32 PositionX = 2;
inline bool PBSingleBall::has_positionx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSingleBall::set_has_positionx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSingleBall::clear_has_positionx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSingleBall::clear_positionx() {
  positionx_ = 0;
  clear_has_positionx();
}
inline ::google::protobuf::int32 PBSingleBall::positionx() const {
  return positionx_;
}
inline void PBSingleBall::set_positionx(::google::protobuf::int32 value) {
  set_has_positionx();
  positionx_ = value;
}

// required int32 PositionY = 3;
inline bool PBSingleBall::has_positiony() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSingleBall::set_has_positiony() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSingleBall::clear_has_positiony() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSingleBall::clear_positiony() {
  positiony_ = 0;
  clear_has_positiony();
}
inline ::google::protobuf::int32 PBSingleBall::positiony() const {
  return positiony_;
}
inline void PBSingleBall::set_positiony(::google::protobuf::int32 value) {
  set_has_positiony();
  positiony_ = value;
}

// required int32 IsPocket = 4;
inline bool PBSingleBall::has_ispocket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBSingleBall::set_has_ispocket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBSingleBall::clear_has_ispocket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBSingleBall::clear_ispocket() {
  ispocket_ = 0;
  clear_has_ispocket();
}
inline ::google::protobuf::int32 PBSingleBall::ispocket() const {
  return ispocket_;
}
inline void PBSingleBall::set_ispocket(::google::protobuf::int32 value) {
  set_has_ispocket();
  ispocket_ = value;
}

// -------------------------------------------------------------------

// PBBalls

// repeated .PBSingleBall BallList = 1;
inline int PBBalls::balllist_size() const {
  return balllist_.size();
}
inline void PBBalls::clear_balllist() {
  balllist_.Clear();
}
inline const ::PBSingleBall& PBBalls::balllist(int index) const {
  return balllist_.Get(index);
}
inline ::PBSingleBall* PBBalls::mutable_balllist(int index) {
  return balllist_.Mutable(index);
}
inline ::PBSingleBall* PBBalls::add_balllist() {
  return balllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSingleBall >&
PBBalls::balllist() const {
  return balllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSingleBall >*
PBBalls::mutable_balllist() {
  return &balllist_;
}

// -------------------------------------------------------------------

// PB8BallGroup

// required int64 roleid = 1;
inline bool PB8BallGroup::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB8BallGroup::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB8BallGroup::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB8BallGroup::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PB8BallGroup::roleid() const {
  return roleid_;
}
inline void PB8BallGroup::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required .eEightBallStatus status = 2;
inline bool PB8BallGroup::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB8BallGroup::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB8BallGroup::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB8BallGroup::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::eEightBallStatus PB8BallGroup::status() const {
  return static_cast< ::eEightBallStatus >(status_);
}
inline void PB8BallGroup::set_status(::eEightBallStatus value) {
  assert(::eEightBallStatus_IsValid(value));
  set_has_status();
  status_ = value;
}

// repeated int32 balllist = 3;
inline int PB8BallGroup::balllist_size() const {
  return balllist_.size();
}
inline void PB8BallGroup::clear_balllist() {
  balllist_.Clear();
}
inline ::google::protobuf::int32 PB8BallGroup::balllist(int index) const {
  return balllist_.Get(index);
}
inline void PB8BallGroup::set_balllist(int index, ::google::protobuf::int32 value) {
  balllist_.Set(index, value);
}
inline void PB8BallGroup::add_balllist(::google::protobuf::int32 value) {
  balllist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB8BallGroup::balllist() const {
  return balllist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB8BallGroup::mutable_balllist() {
  return &balllist_;
}

// -------------------------------------------------------------------

// PBKickBallInfo

// required int32 angle = 1;
inline bool PBKickBallInfo::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBKickBallInfo::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBKickBallInfo::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBKickBallInfo::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::google::protobuf::int32 PBKickBallInfo::angle() const {
  return angle_;
}
inline void PBKickBallInfo::set_angle(::google::protobuf::int32 value) {
  set_has_angle();
  angle_ = value;
}

// required int32 power = 2;
inline bool PBKickBallInfo::has_power() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBKickBallInfo::set_has_power() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBKickBallInfo::clear_has_power() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBKickBallInfo::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 PBKickBallInfo::power() const {
  return power_;
}
inline void PBKickBallInfo::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// required int32 kickpointX = 3;
inline bool PBKickBallInfo::has_kickpointx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBKickBallInfo::set_has_kickpointx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBKickBallInfo::clear_has_kickpointx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBKickBallInfo::clear_kickpointx() {
  kickpointx_ = 0;
  clear_has_kickpointx();
}
inline ::google::protobuf::int32 PBKickBallInfo::kickpointx() const {
  return kickpointx_;
}
inline void PBKickBallInfo::set_kickpointx(::google::protobuf::int32 value) {
  set_has_kickpointx();
  kickpointx_ = value;
}

// required int32 kickpointY = 4;
inline bool PBKickBallInfo::has_kickpointy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBKickBallInfo::set_has_kickpointy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBKickBallInfo::clear_has_kickpointy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBKickBallInfo::clear_kickpointy() {
  kickpointy_ = 0;
  clear_has_kickpointy();
}
inline ::google::protobuf::int32 PBKickBallInfo::kickpointy() const {
  return kickpointy_;
}
inline void PBKickBallInfo::set_kickpointy(::google::protobuf::int32 value) {
  set_has_kickpointy();
  kickpointy_ = value;
}

// required .PBSingleBall writeball = 5;
inline bool PBKickBallInfo::has_writeball() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBKickBallInfo::set_has_writeball() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBKickBallInfo::clear_has_writeball() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBKickBallInfo::clear_writeball() {
  if (writeball_ != NULL) writeball_->::PBSingleBall::Clear();
  clear_has_writeball();
}
inline const ::PBSingleBall& PBKickBallInfo::writeball() const {
  return writeball_ != NULL ? *writeball_ : *default_instance_->writeball_;
}
inline ::PBSingleBall* PBKickBallInfo::mutable_writeball() {
  set_has_writeball();
  if (writeball_ == NULL) writeball_ = new ::PBSingleBall;
  return writeball_;
}
inline ::PBSingleBall* PBKickBallInfo::release_writeball() {
  clear_has_writeball();
  ::PBSingleBall* temp = writeball_;
  writeball_ = NULL;
  return temp;
}
inline void PBKickBallInfo::set_allocated_writeball(::PBSingleBall* writeball) {
  delete writeball_;
  writeball_ = writeball;
  if (writeball) {
    set_has_writeball();
  } else {
    clear_has_writeball();
  }
}

// repeated int32 startrand = 6;
inline int PBKickBallInfo::startrand_size() const {
  return startrand_.size();
}
inline void PBKickBallInfo::clear_startrand() {
  startrand_.Clear();
}
inline ::google::protobuf::int32 PBKickBallInfo::startrand(int index) const {
  return startrand_.Get(index);
}
inline void PBKickBallInfo::set_startrand(int index, ::google::protobuf::int32 value) {
  startrand_.Set(index, value);
}
inline void PBKickBallInfo::add_startrand(::google::protobuf::int32 value) {
  startrand_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBKickBallInfo::startrand() const {
  return startrand_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBKickBallInfo::mutable_startrand() {
  return &startrand_;
}

// -------------------------------------------------------------------

// PB8BallEndResult

// required int64 roleid = 1;
inline bool PB8BallEndResult::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB8BallEndResult::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB8BallEndResult::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB8BallEndResult::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PB8BallEndResult::roleid() const {
  return roleid_;
}
inline void PB8BallEndResult::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 result = 2;
inline bool PB8BallEndResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB8BallEndResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB8BallEndResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB8BallEndResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 PB8BallEndResult::result() const {
  return result_;
}
inline void PB8BallEndResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int64 betgold = 3;
inline bool PB8BallEndResult::has_betgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB8BallEndResult::set_has_betgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB8BallEndResult::clear_has_betgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB8BallEndResult::clear_betgold() {
  betgold_ = GOOGLE_LONGLONG(0);
  clear_has_betgold();
}
inline ::google::protobuf::int64 PB8BallEndResult::betgold() const {
  return betgold_;
}
inline void PB8BallEndResult::set_betgold(::google::protobuf::int64 value) {
  set_has_betgold();
  betgold_ = value;
}

// -------------------------------------------------------------------

// PBItem

// required int32 ArraryIndex = 1;
inline bool PBItem::has_arraryindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBItem::set_has_arraryindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBItem::clear_has_arraryindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBItem::clear_arraryindex() {
  arraryindex_ = 0;
  clear_has_arraryindex();
}
inline ::google::protobuf::int32 PBItem::arraryindex() const {
  return arraryindex_;
}
inline void PBItem::set_arraryindex(::google::protobuf::int32 value) {
  set_has_arraryindex();
  arraryindex_ = value;
}

// required int32 TempID = 2;
inline bool PBItem::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBItem::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBItem::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBItem::clear_tempid() {
  tempid_ = 0;
  clear_has_tempid();
}
inline ::google::protobuf::int32 PBItem::tempid() const {
  return tempid_;
}
inline void PBItem::set_tempid(::google::protobuf::int32 value) {
  set_has_tempid();
  tempid_ = value;
}

// required int32 Num = 3;
inline bool PBItem::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBItem::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBItem::num() const {
  return num_;
}
inline void PBItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 Status = 4;
inline bool PBItem::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBItem::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PBItem::status() const {
  return status_;
}
inline void PBItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required int32 EndTime = 5;
inline bool PBItem::has_endtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBItem::set_has_endtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBItem::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBItem::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 PBItem::endtime() const {
  return endtime_;
}
inline void PBItem::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
}

// -------------------------------------------------------------------

// PBItemList

// repeated .PBItem Items = 1;
inline int PBItemList::items_size() const {
  return items_.size();
}
inline void PBItemList::clear_items() {
  items_.Clear();
}
inline const ::PBItem& PBItemList::items(int index) const {
  return items_.Get(index);
}
inline ::PBItem* PBItemList::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::PBItem* PBItemList::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
PBItemList::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
PBItemList::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// PBUpdateResource

// optional .EResourceType type = 1;
inline bool PBUpdateResource::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBUpdateResource::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBUpdateResource::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBUpdateResource::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::EResourceType PBUpdateResource::type() const {
  return static_cast< ::EResourceType >(type_);
}
inline void PBUpdateResource::set_type(::EResourceType value) {
  assert(::EResourceType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int64 num = 2;
inline bool PBUpdateResource::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBUpdateResource::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBUpdateResource::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBUpdateResource::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 PBUpdateResource::num() const {
  return num_;
}
inline void PBUpdateResource::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// PBLuckey28EndGame

// required int64 roleid = 1;
inline bool PBLuckey28EndGame::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLuckey28EndGame::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLuckey28EndGame::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLuckey28EndGame::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PBLuckey28EndGame::roleid() const {
  return roleid_;
}
inline void PBLuckey28EndGame::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required .EGameResult result = 2;
inline bool PBLuckey28EndGame::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBLuckey28EndGame::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBLuckey28EndGame::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBLuckey28EndGame::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::EGameResult PBLuckey28EndGame::result() const {
  return static_cast< ::EGameResult >(result_);
}
inline void PBLuckey28EndGame::set_result(::EGameResult value) {
  assert(::EGameResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// required int64 addgold = 3;
inline bool PBLuckey28EndGame::has_addgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBLuckey28EndGame::set_has_addgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBLuckey28EndGame::clear_has_addgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBLuckey28EndGame::clear_addgold() {
  addgold_ = GOOGLE_LONGLONG(0);
  clear_has_addgold();
}
inline ::google::protobuf::int64 PBLuckey28EndGame::addgold() const {
  return addgold_;
}
inline void PBLuckey28EndGame::set_addgold(::google::protobuf::int64 value) {
  set_has_addgold();
  addgold_ = value;
}

// required int64 totalgold = 4;
inline bool PBLuckey28EndGame::has_totalgold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBLuckey28EndGame::set_has_totalgold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBLuckey28EndGame::clear_has_totalgold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBLuckey28EndGame::clear_totalgold() {
  totalgold_ = GOOGLE_LONGLONG(0);
  clear_has_totalgold();
}
inline ::google::protobuf::int64 PBLuckey28EndGame::totalgold() const {
  return totalgold_;
}
inline void PBLuckey28EndGame::set_totalgold(::google::protobuf::int64 value) {
  set_has_totalgold();
  totalgold_ = value;
}

// repeated int32 balllist = 5;
inline int PBLuckey28EndGame::balllist_size() const {
  return balllist_.size();
}
inline void PBLuckey28EndGame::clear_balllist() {
  balllist_.Clear();
}
inline ::google::protobuf::int32 PBLuckey28EndGame::balllist(int index) const {
  return balllist_.Get(index);
}
inline void PBLuckey28EndGame::set_balllist(int index, ::google::protobuf::int32 value) {
  balllist_.Set(index, value);
}
inline void PBLuckey28EndGame::add_balllist(::google::protobuf::int32 value) {
  balllist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBLuckey28EndGame::balllist() const {
  return balllist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBLuckey28EndGame::mutable_balllist() {
  return &balllist_;
}

// -------------------------------------------------------------------

// PBLucky28RoleInfo

// required int64 roleid = 1;
inline bool PBLucky28RoleInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLucky28RoleInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLucky28RoleInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLucky28RoleInfo::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PBLucky28RoleInfo::roleid() const {
  return roleid_;
}
inline void PBLucky28RoleInfo::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// repeated int32 balllist = 2;
inline int PBLucky28RoleInfo::balllist_size() const {
  return balllist_.size();
}
inline void PBLucky28RoleInfo::clear_balllist() {
  balllist_.Clear();
}
inline ::google::protobuf::int32 PBLucky28RoleInfo::balllist(int index) const {
  return balllist_.Get(index);
}
inline void PBLucky28RoleInfo::set_balllist(int index, ::google::protobuf::int32 value) {
  balllist_.Set(index, value);
}
inline void PBLucky28RoleInfo::add_balllist(::google::protobuf::int32 value) {
  balllist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBLucky28RoleInfo::balllist() const {
  return balllist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBLucky28RoleInfo::mutable_balllist() {
  return &balllist_;
}

// required int64 betgold = 3;
inline bool PBLucky28RoleInfo::has_betgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBLucky28RoleInfo::set_has_betgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBLucky28RoleInfo::clear_has_betgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBLucky28RoleInfo::clear_betgold() {
  betgold_ = GOOGLE_LONGLONG(0);
  clear_has_betgold();
}
inline ::google::protobuf::int64 PBLucky28RoleInfo::betgold() const {
  return betgold_;
}
inline void PBLucky28RoleInfo::set_betgold(::google::protobuf::int64 value) {
  set_has_betgold();
  betgold_ = value;
}

// required int64 remaingold = 4;
inline bool PBLucky28RoleInfo::has_remaingold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBLucky28RoleInfo::set_has_remaingold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBLucky28RoleInfo::clear_has_remaingold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBLucky28RoleInfo::clear_remaingold() {
  remaingold_ = GOOGLE_LONGLONG(0);
  clear_has_remaingold();
}
inline ::google::protobuf::int64 PBLucky28RoleInfo::remaingold() const {
  return remaingold_;
}
inline void PBLucky28RoleInfo::set_remaingold(::google::protobuf::int64 value) {
  set_has_remaingold();
  remaingold_ = value;
}

// -------------------------------------------------------------------

// PBLucky28RoundInfo

// repeated int32 leftballlist = 1;
inline int PBLucky28RoundInfo::leftballlist_size() const {
  return leftballlist_.size();
}
inline void PBLucky28RoundInfo::clear_leftballlist() {
  leftballlist_.Clear();
}
inline ::google::protobuf::int32 PBLucky28RoundInfo::leftballlist(int index) const {
  return leftballlist_.Get(index);
}
inline void PBLucky28RoundInfo::set_leftballlist(int index, ::google::protobuf::int32 value) {
  leftballlist_.Set(index, value);
}
inline void PBLucky28RoundInfo::add_leftballlist(::google::protobuf::int32 value) {
  leftballlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBLucky28RoundInfo::leftballlist() const {
  return leftballlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBLucky28RoundInfo::mutable_leftballlist() {
  return &leftballlist_;
}

// repeated .PBLucky28RoleInfo roleinfos = 2;
inline int PBLucky28RoundInfo::roleinfos_size() const {
  return roleinfos_.size();
}
inline void PBLucky28RoundInfo::clear_roleinfos() {
  roleinfos_.Clear();
}
inline const ::PBLucky28RoleInfo& PBLucky28RoundInfo::roleinfos(int index) const {
  return roleinfos_.Get(index);
}
inline ::PBLucky28RoleInfo* PBLucky28RoundInfo::mutable_roleinfos(int index) {
  return roleinfos_.Mutable(index);
}
inline ::PBLucky28RoleInfo* PBLucky28RoundInfo::add_roleinfos() {
  return roleinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLucky28RoleInfo >&
PBLucky28RoundInfo::roleinfos() const {
  return roleinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLucky28RoleInfo >*
PBLucky28RoundInfo::mutable_roleinfos() {
  return &roleinfos_;
}

// -------------------------------------------------------------------

// PBLucky28BallList

// repeated int32 leftballlist = 1;
inline int PBLucky28BallList::leftballlist_size() const {
  return leftballlist_.size();
}
inline void PBLucky28BallList::clear_leftballlist() {
  leftballlist_.Clear();
}
inline ::google::protobuf::int32 PBLucky28BallList::leftballlist(int index) const {
  return leftballlist_.Get(index);
}
inline void PBLucky28BallList::set_leftballlist(int index, ::google::protobuf::int32 value) {
  leftballlist_.Set(index, value);
}
inline void PBLucky28BallList::add_leftballlist(::google::protobuf::int32 value) {
  leftballlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBLucky28BallList::leftballlist() const {
  return leftballlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBLucky28BallList::mutable_leftballlist() {
  return &leftballlist_;
}

// -------------------------------------------------------------------

// PBGagaleType1SingleInfo

// required int32 num = 1;
inline bool PBGagaleType1SingleInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGagaleType1SingleInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGagaleType1SingleInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGagaleType1SingleInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBGagaleType1SingleInfo::num() const {
  return num_;
}
inline void PBGagaleType1SingleInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 gold = 2;
inline bool PBGagaleType1SingleInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGagaleType1SingleInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGagaleType1SingleInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGagaleType1SingleInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 PBGagaleType1SingleInfo::gold() const {
  return gold_;
}
inline void PBGagaleType1SingleInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// required .eGagaleDisplay display = 3;
inline bool PBGagaleType1SingleInfo::has_display() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGagaleType1SingleInfo::set_has_display() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGagaleType1SingleInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGagaleType1SingleInfo::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::eGagaleDisplay PBGagaleType1SingleInfo::display() const {
  return static_cast< ::eGagaleDisplay >(display_);
}
inline void PBGagaleType1SingleInfo::set_display(::eGagaleDisplay value) {
  assert(::eGagaleDisplay_IsValid(value));
  set_has_display();
  display_ = value;
}

// required int32 isbig = 4;
inline bool PBGagaleType1SingleInfo::has_isbig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGagaleType1SingleInfo::set_has_isbig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGagaleType1SingleInfo::clear_has_isbig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGagaleType1SingleInfo::clear_isbig() {
  isbig_ = 0;
  clear_has_isbig();
}
inline ::google::protobuf::int32 PBGagaleType1SingleInfo::isbig() const {
  return isbig_;
}
inline void PBGagaleType1SingleInfo::set_isbig(::google::protobuf::int32 value) {
  set_has_isbig();
  isbig_ = value;
}

// -------------------------------------------------------------------

// PBGagaleType2SingleInfo

// required int32 num = 1;
inline bool PBGagaleType2SingleInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGagaleType2SingleInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGagaleType2SingleInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGagaleType2SingleInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBGagaleType2SingleInfo::num() const {
  return num_;
}
inline void PBGagaleType2SingleInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required int32 gold = 2;
inline bool PBGagaleType2SingleInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGagaleType2SingleInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGagaleType2SingleInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGagaleType2SingleInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 PBGagaleType2SingleInfo::gold() const {
  return gold_;
}
inline void PBGagaleType2SingleInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// required .eGagaleDisplay display = 3;
inline bool PBGagaleType2SingleInfo::has_display() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGagaleType2SingleInfo::set_has_display() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGagaleType2SingleInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGagaleType2SingleInfo::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::eGagaleDisplay PBGagaleType2SingleInfo::display() const {
  return static_cast< ::eGagaleDisplay >(display_);
}
inline void PBGagaleType2SingleInfo::set_display(::eGagaleDisplay value) {
  assert(::eGagaleDisplay_IsValid(value));
  set_has_display();
  display_ = value;
}

// required int32 isbig = 4;
inline bool PBGagaleType2SingleInfo::has_isbig() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGagaleType2SingleInfo::set_has_isbig() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGagaleType2SingleInfo::clear_has_isbig() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGagaleType2SingleInfo::clear_isbig() {
  isbig_ = 0;
  clear_has_isbig();
}
inline ::google::protobuf::int32 PBGagaleType2SingleInfo::isbig() const {
  return isbig_;
}
inline void PBGagaleType2SingleInfo::set_isbig(::google::protobuf::int32 value) {
  set_has_isbig();
  isbig_ = value;
}

// -------------------------------------------------------------------

// PBGagaleType3SingleInfo

// required int32 num = 1;
inline bool PBGagaleType3SingleInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGagaleType3SingleInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGagaleType3SingleInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGagaleType3SingleInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 PBGagaleType3SingleInfo::num() const {
  return num_;
}
inline void PBGagaleType3SingleInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// required .EResourceType rewardtype = 2;
inline bool PBGagaleType3SingleInfo::has_rewardtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGagaleType3SingleInfo::set_has_rewardtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGagaleType3SingleInfo::clear_has_rewardtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGagaleType3SingleInfo::clear_rewardtype() {
  rewardtype_ = 0;
  clear_has_rewardtype();
}
inline ::EResourceType PBGagaleType3SingleInfo::rewardtype() const {
  return static_cast< ::EResourceType >(rewardtype_);
}
inline void PBGagaleType3SingleInfo::set_rewardtype(::EResourceType value) {
  assert(::EResourceType_IsValid(value));
  set_has_rewardtype();
  rewardtype_ = value;
}

// required int32 rewardnum = 3;
inline bool PBGagaleType3SingleInfo::has_rewardnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGagaleType3SingleInfo::set_has_rewardnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGagaleType3SingleInfo::clear_has_rewardnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGagaleType3SingleInfo::clear_rewardnum() {
  rewardnum_ = 0;
  clear_has_rewardnum();
}
inline ::google::protobuf::int32 PBGagaleType3SingleInfo::rewardnum() const {
  return rewardnum_;
}
inline void PBGagaleType3SingleInfo::set_rewardnum(::google::protobuf::int32 value) {
  set_has_rewardnum();
  rewardnum_ = value;
}

// required .eGagaleDisplay display = 4;
inline bool PBGagaleType3SingleInfo::has_display() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGagaleType3SingleInfo::set_has_display() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGagaleType3SingleInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGagaleType3SingleInfo::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::eGagaleDisplay PBGagaleType3SingleInfo::display() const {
  return static_cast< ::eGagaleDisplay >(display_);
}
inline void PBGagaleType3SingleInfo::set_display(::eGagaleDisplay value) {
  assert(::eGagaleDisplay_IsValid(value));
  set_has_display();
  display_ = value;
}

// required int32 state = 5;
inline bool PBGagaleType3SingleInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBGagaleType3SingleInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBGagaleType3SingleInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBGagaleType3SingleInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 PBGagaleType3SingleInfo::state() const {
  return state_;
}
inline void PBGagaleType3SingleInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// required int32 isbig = 6;
inline bool PBGagaleType3SingleInfo::has_isbig() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBGagaleType3SingleInfo::set_has_isbig() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBGagaleType3SingleInfo::clear_has_isbig() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBGagaleType3SingleInfo::clear_isbig() {
  isbig_ = 0;
  clear_has_isbig();
}
inline ::google::protobuf::int32 PBGagaleType3SingleInfo::isbig() const {
  return isbig_;
}
inline void PBGagaleType3SingleInfo::set_isbig(::google::protobuf::int32 value) {
  set_has_isbig();
  isbig_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EDataStatisticsType>() {
  return ::EDataStatisticsType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EOrderType>() {
  return ::EOrderType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ELeaveRoomType>() {
  return ::ELeaveRoomType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGoRoomType>() {
  return ::EGoRoomType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EResourceType>() {
  return ::EResourceType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EItemShopType>() {
  return ::EItemShopType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eEightBallStatus>() {
  return ::eEightBallStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eBallType>() {
  return ::eBallType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eBallResult>() {
  return ::eBallResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EIsPocket>() {
  return ::EIsPocket_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enRoomType>() {
  return ::enRoomType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eLucky28Status>() {
  return ::eLucky28Status_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eLucky28BetType>() {
  return ::eLucky28BetType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eLucky28ShotType>() {
  return ::eLucky28ShotType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGameResult>() {
  return ::EGameResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eGagaleDisplay>() {
  return ::eGagaleDisplay_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_resourcemessage_2eproto__INCLUDED
