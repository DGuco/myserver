// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: template.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "template.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBTempChongzhi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTempChongzhi_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateChongzhi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateChongzhi_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTempItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTempItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBBall1v1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBall1v1_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateBall1v1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateBall1v1_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGlobalInt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGlobalInt_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateGlobalInt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateGlobalInt_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBShop_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateShop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateShop_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTempLucky28_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTempLucky28_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateLucky28_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateLucky28_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTempScratch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTempScratch_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateScratch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateScratch_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTempScratchReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTempScratchReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateScratchReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateScratchReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBSlotsBet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBSlotsBet_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateSlotsBet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateSlotsBet_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBSlotsReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBSlotsReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateSlotsReward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateSlotsReward_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBSlotsRate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBSlotsRate_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplateSlotsRate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplateSlotsRate_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTemp8Ball3P_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTemp8Ball3P_reflection_ = NULL;
const ::google::protobuf::Descriptor* CTemplate8Ball3P_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CTemplate8Ball3P_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_template_2eproto() {
  protobuf_AddDesc_template_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "template.proto");
  GOOGLE_CHECK(file != NULL);
  PBTempChongzhi_descriptor_ = file->message_type(0);
  static const int PBTempChongzhi_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempChongzhi, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempChongzhi, qxiaohaotype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempChongzhi, qxiaohao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempChongzhi, qduihuantype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempChongzhi, qduihuan_),
  };
  PBTempChongzhi_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTempChongzhi_descriptor_,
      PBTempChongzhi::default_instance_,
      PBTempChongzhi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempChongzhi, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempChongzhi, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTempChongzhi));
  CTemplateChongzhi_descriptor_ = file->message_type(1);
  static const int CTemplateChongzhi_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateChongzhi, tempchongzhi_),
  };
  CTemplateChongzhi_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateChongzhi_descriptor_,
      CTemplateChongzhi::default_instance_,
      CTemplateChongzhi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateChongzhi, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateChongzhi, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateChongzhi));
  CTemplateItem_descriptor_ = file->message_type(2);
  static const int CTemplateItem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateItem, tempitem_),
  };
  CTemplateItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateItem_descriptor_,
      CTemplateItem::default_instance_,
      CTemplateItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateItem));
  PBTempItem_descriptor_ = file->message_type(3);
  static const int PBTempItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, qtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, qsubset1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, qsubset2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, qsubset3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, qifsell_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, qpinji_),
  };
  PBTempItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTempItem_descriptor_,
      PBTempItem::default_instance_,
      PBTempItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTempItem));
  PBBall1v1_descriptor_ = file->message_type(4);
  static const int PBBall1v1_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qbettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qmingold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qmaxgold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qrecyclerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qhittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qwaittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qallinmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qwinpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qlosepoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, qradiotimes_),
  };
  PBBall1v1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBBall1v1_descriptor_,
      PBBall1v1::default_instance_,
      PBBall1v1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBall1v1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBBall1v1));
  CTemplateBall1v1_descriptor_ = file->message_type(5);
  static const int CTemplateBall1v1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateBall1v1, tempball1v1_),
  };
  CTemplateBall1v1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateBall1v1_descriptor_,
      CTemplateBall1v1::default_instance_,
      CTemplateBall1v1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateBall1v1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateBall1v1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateBall1v1));
  PBGlobalInt_descriptor_ = file->message_type(6);
  static const int PBGlobalInt_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalInt, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalInt, qmorengan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalInt, qmorenzhuo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalInt, qmaxpuke_),
  };
  PBGlobalInt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBGlobalInt_descriptor_,
      PBGlobalInt::default_instance_,
      PBGlobalInt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalInt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalInt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBGlobalInt));
  CTemplateGlobalInt_descriptor_ = file->message_type(7);
  static const int CTemplateGlobalInt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateGlobalInt, tempglobalint_),
  };
  CTemplateGlobalInt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateGlobalInt_descriptor_,
      CTemplateGlobalInt::default_instance_,
      CTemplateGlobalInt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateGlobalInt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateGlobalInt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateGlobalInt));
  PBShop_descriptor_ = file->message_type(8);
  static const int PBShop_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qmoneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qsellday1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qsellday2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qsellday3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qsalenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qsalestartday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qdaynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qlimitnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qprice2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, qprice3_),
  };
  PBShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBShop_descriptor_,
      PBShop::default_instance_,
      PBShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBShop));
  CTemplateShop_descriptor_ = file->message_type(9);
  static const int CTemplateShop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateShop, tempshangcheng_),
  };
  CTemplateShop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateShop_descriptor_,
      CTemplateShop::default_instance_,
      CTemplateShop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateShop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateShop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateShop));
  PBTempLucky28_descriptor_ = file->message_type(10);
  static const int PBTempLucky28_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qbettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qmingold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qmaxgold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qbetgold1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qbetgold2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qbetgold3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qbetgold4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qbetgold5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qmaxround_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qrecyclerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qturntime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, qradiotimes_),
  };
  PBTempLucky28_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTempLucky28_descriptor_,
      PBTempLucky28::default_instance_,
      PBTempLucky28_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempLucky28, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTempLucky28));
  CTemplateLucky28_descriptor_ = file->message_type(11);
  static const int CTemplateLucky28_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateLucky28, templucky28_),
  };
  CTemplateLucky28_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateLucky28_descriptor_,
      CTemplateLucky28::default_instance_,
      CTemplateLucky28_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateLucky28, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateLucky28, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateLucky28));
  PBTempScratch_descriptor_ = file->message_type(12);
  static const int PBTempScratch_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qscratchtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qcost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qhitrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qrewardcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qrewardmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qrewardmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qscratchmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qscratchmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qradiotimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qline1min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qline1max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qline2min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qline2max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, qhitrate1_),
  };
  PBTempScratch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTempScratch_descriptor_,
      PBTempScratch::default_instance_,
      PBTempScratch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTempScratch));
  CTemplateScratch_descriptor_ = file->message_type(13);
  static const int CTemplateScratch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateScratch, tempscratch_),
  };
  CTemplateScratch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateScratch_descriptor_,
      CTemplateScratch::default_instance_,
      CTemplateScratch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateScratch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateScratch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateScratch));
  PBTempScratchReward_descriptor_ = file->message_type(14);
  static const int PBTempScratchReward_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, qrewardorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, qgetrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, qreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, qisbroadcase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, qcurrencytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, qquality_),
  };
  PBTempScratchReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTempScratchReward_descriptor_,
      PBTempScratchReward::default_instance_,
      PBTempScratchReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTempScratchReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTempScratchReward));
  CTemplateScratchReward_descriptor_ = file->message_type(15);
  static const int CTemplateScratchReward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateScratchReward, tempscratchreward_),
  };
  CTemplateScratchReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateScratchReward_descriptor_,
      CTemplateScratchReward::default_instance_,
      CTemplateScratchReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateScratchReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateScratchReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateScratchReward));
  PBSlotsBet_descriptor_ = file->message_type(16);
  static const int PBSlotsBet_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsBet, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsBet, qbet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsBet, qproportion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsBet, qguarantee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsBet, qmin_),
  };
  PBSlotsBet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBSlotsBet_descriptor_,
      PBSlotsBet::default_instance_,
      PBSlotsBet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsBet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsBet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBSlotsBet));
  CTemplateSlotsBet_descriptor_ = file->message_type(17);
  static const int CTemplateSlotsBet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsBet, tempslotsbet_),
  };
  CTemplateSlotsBet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateSlotsBet_descriptor_,
      CTemplateSlotsBet::default_instance_,
      CTemplateSlotsBet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsBet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsBet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateSlotsBet));
  PBSlotsReward_descriptor_ = file->message_type(18);
  static const int PBSlotsReward_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsReward, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsReward, qtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsReward, qmultiple_),
  };
  PBSlotsReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBSlotsReward_descriptor_,
      PBSlotsReward::default_instance_,
      PBSlotsReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBSlotsReward));
  CTemplateSlotsReward_descriptor_ = file->message_type(19);
  static const int CTemplateSlotsReward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsReward, tempslotsreward_),
  };
  CTemplateSlotsReward_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateSlotsReward_descriptor_,
      CTemplateSlotsReward::default_instance_,
      CTemplateSlotsReward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsReward, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsReward, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateSlotsReward));
  PBSlotsRate_descriptor_ = file->message_type(20);
  static const int PBSlotsRate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsRate, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsRate, qball_),
  };
  PBSlotsRate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBSlotsRate_descriptor_,
      PBSlotsRate::default_instance_,
      PBSlotsRate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsRate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSlotsRate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBSlotsRate));
  CTemplateSlotsRate_descriptor_ = file->message_type(21);
  static const int CTemplateSlotsRate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsRate, tempslotsrate_),
  };
  CTemplateSlotsRate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplateSlotsRate_descriptor_,
      CTemplateSlotsRate::default_instance_,
      CTemplateSlotsRate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsRate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplateSlotsRate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplateSlotsRate));
  PBTemp8Ball3P_descriptor_ = file->message_type(22);
  static const int PBTemp8Ball3P_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qbettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qmingold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qmaxgold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qwingold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qhittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qwaittime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qwinpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, qlosepoint_),
  };
  PBTemp8Ball3P_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBTemp8Ball3P_descriptor_,
      PBTemp8Ball3P::default_instance_,
      PBTemp8Ball3P_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTemp8Ball3P, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBTemp8Ball3P));
  CTemplate8Ball3P_descriptor_ = file->message_type(23);
  static const int CTemplate8Ball3P_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplate8Ball3P, tempball3p_),
  };
  CTemplate8Ball3P_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CTemplate8Ball3P_descriptor_,
      CTemplate8Ball3P::default_instance_,
      CTemplate8Ball3P_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplate8Ball3P, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CTemplate8Ball3P, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CTemplate8Ball3P));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_template_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTempChongzhi_descriptor_, &PBTempChongzhi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateChongzhi_descriptor_, &CTemplateChongzhi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateItem_descriptor_, &CTemplateItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTempItem_descriptor_, &PBTempItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBBall1v1_descriptor_, &PBBall1v1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateBall1v1_descriptor_, &CTemplateBall1v1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBGlobalInt_descriptor_, &PBGlobalInt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateGlobalInt_descriptor_, &CTemplateGlobalInt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBShop_descriptor_, &PBShop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateShop_descriptor_, &CTemplateShop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTempLucky28_descriptor_, &PBTempLucky28::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateLucky28_descriptor_, &CTemplateLucky28::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTempScratch_descriptor_, &PBTempScratch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateScratch_descriptor_, &CTemplateScratch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTempScratchReward_descriptor_, &PBTempScratchReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateScratchReward_descriptor_, &CTemplateScratchReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBSlotsBet_descriptor_, &PBSlotsBet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateSlotsBet_descriptor_, &CTemplateSlotsBet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBSlotsReward_descriptor_, &PBSlotsReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateSlotsReward_descriptor_, &CTemplateSlotsReward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBSlotsRate_descriptor_, &PBSlotsRate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplateSlotsRate_descriptor_, &CTemplateSlotsRate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBTemp8Ball3P_descriptor_, &PBTemp8Ball3P::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CTemplate8Ball3P_descriptor_, &CTemplate8Ball3P::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_template_2eproto() {
  delete PBTempChongzhi::default_instance_;
  delete PBTempChongzhi_reflection_;
  delete CTemplateChongzhi::default_instance_;
  delete CTemplateChongzhi_reflection_;
  delete CTemplateItem::default_instance_;
  delete CTemplateItem_reflection_;
  delete PBTempItem::default_instance_;
  delete PBTempItem_reflection_;
  delete PBBall1v1::default_instance_;
  delete PBBall1v1_reflection_;
  delete CTemplateBall1v1::default_instance_;
  delete CTemplateBall1v1_reflection_;
  delete PBGlobalInt::default_instance_;
  delete PBGlobalInt_reflection_;
  delete CTemplateGlobalInt::default_instance_;
  delete CTemplateGlobalInt_reflection_;
  delete PBShop::default_instance_;
  delete PBShop_reflection_;
  delete CTemplateShop::default_instance_;
  delete CTemplateShop_reflection_;
  delete PBTempLucky28::default_instance_;
  delete PBTempLucky28_reflection_;
  delete CTemplateLucky28::default_instance_;
  delete CTemplateLucky28_reflection_;
  delete PBTempScratch::default_instance_;
  delete PBTempScratch_reflection_;
  delete CTemplateScratch::default_instance_;
  delete CTemplateScratch_reflection_;
  delete PBTempScratchReward::default_instance_;
  delete PBTempScratchReward_reflection_;
  delete CTemplateScratchReward::default_instance_;
  delete CTemplateScratchReward_reflection_;
  delete PBSlotsBet::default_instance_;
  delete PBSlotsBet_reflection_;
  delete CTemplateSlotsBet::default_instance_;
  delete CTemplateSlotsBet_reflection_;
  delete PBSlotsReward::default_instance_;
  delete PBSlotsReward_reflection_;
  delete CTemplateSlotsReward::default_instance_;
  delete CTemplateSlotsReward_reflection_;
  delete PBSlotsRate::default_instance_;
  delete PBSlotsRate_reflection_;
  delete CTemplateSlotsRate::default_instance_;
  delete CTemplateSlotsRate_reflection_;
  delete PBTemp8Ball3P::default_instance_;
  delete PBTemp8Ball3P_reflection_;
  delete CTemplate8Ball3P::default_instance_;
  delete CTemplate8Ball3P_reflection_;
}

void protobuf_AddDesc_template_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_resourcemessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016template.proto\032\025resourcemessage.proto\""
    "m\n\016PBTempChongzhi\022\013\n\003qid\030\001 \002(\005\022\024\n\014qxiaoh"
    "aotype\030\002 \002(\005\022\020\n\010qxiaohao\030\003 \002(\005\022\024\n\014qduihu"
    "antype\030\004 \002(\005\022\020\n\010qduihuan\030\005 \002(\005\":\n\021CTempl"
    "ateChongzhi\022%\n\014TempChongzhi\030\001 \003(\0132\017.PBTe"
    "mpChongzhi\".\n\rCTemplateItem\022\035\n\010TempItem\030"
    "\001 \003(\0132\013.PBTempItem\"\177\n\nPBTempItem\022\013\n\003qid\030"
    "\001 \002(\005\022\r\n\005qType\030\002 \002(\005\022\020\n\010qSubset1\030\003 \002(\005\022\020"
    "\n\010qSubset2\030\004 \002(\005\022\020\n\010qSubset3\030\005 \002(\005\022\017\n\007qi"
    "fsell\030\006 \002(\005\022\016\n\006qPinJi\030\007 \002(\005\"\330\001\n\tPBBall1v"
    "1\022\013\n\003qid\030\001 \002(\005\022\020\n\010qbettype\030\002 \002(\005\022\020\n\010qmin"
    "gold\030\003 \002(\005\022\020\n\010qmaxgold\030\004 \002(\005\022\024\n\014qrecycle"
    "rate\030\005 \002(\005\022\020\n\010qhittime\030\006 \002(\005\022\021\n\tqwaittim"
    "e\030\007 \002(\005\022\021\n\tqallinmax\030\010 \002(\005\022\021\n\tqwinpoint\030"
    "\t \002(\005\022\022\n\nqlosepoint\030\n \002(\005\022\023\n\013qradiotimes"
    "\030\013 \002(\005\"3\n\020CTemplateBall1v1\022\037\n\013TempBall1v"
    "1\030\001 \003(\0132\n.PBBall1v1\"S\n\013PBGlobalInt\022\013\n\003qi"
    "d\030\001 \002(\005\022\021\n\tqmorengan\030\002 \002(\005\022\022\n\nqmorenzhuo"
    "\030\003 \002(\005\022\020\n\010qmaxpuke\030\004 \002(\005\"9\n\022CTemplateGlo"
    "balInt\022#\n\rTempGlobalint\030\001 \002(\0132\014.PBGlobal"
    "Int\"\362\001\n\006PBShop\022\013\n\003qid\030\001 \002(\005\022\017\n\007qitemid\030\002"
    " \002(\005\022\022\n\nqmoneytype\030\003 \002(\005\022\016\n\006qprice\030\004 \002(\005"
    "\022\021\n\tqsellday1\030\005 \002(\005\022\021\n\tqsellday2\030\006 \002(\005\022\021"
    "\n\tqsellday3\030\007 \002(\005\022\020\n\010qsalenum\030\010 \002(\005\022\025\n\rq"
    "salestartday\030\t \002(\005\022\017\n\007qdaynum\030\n \002(\005\022\021\n\tq"
    "limitnum\030\013 \002(\005\022\017\n\007qprice2\030\014 \002(\005\022\017\n\007qpric"
    "e3\030\r \002(\005\"0\n\rCTemplateShop\022\037\n\016TempShangch"
    "eng\030\001 \003(\0132\007.PBShop\"\202\002\n\rPBTempLucky28\022\013\n\003"
    "qid\030\001 \002(\005\022\020\n\010qbettype\030\002 \002(\005\022\020\n\010qmingold\030"
    "\003 \002(\005\022\020\n\010qmaxgold\030\004 \002(\005\022\021\n\tqbetgold1\030\005 \002"
    "(\005\022\021\n\tqbetgold2\030\006 \002(\005\022\021\n\tqbetgold3\030\007 \002(\005"
    "\022\021\n\tqbetgold4\030\010 \002(\005\022\021\n\tqbetgold5\030\t \002(\005\022\021"
    "\n\tqmaxround\030\n \002(\005\022\024\n\014qrecyclerate\030\013 \002(\005\022"
    "\021\n\tqturntime\030\014 \002(\005\022\023\n\013qradiotimes\030\r \002(\005\""
    "7\n\020CTemplateLucky28\022#\n\013Templucky28\030\001 \003(\013"
    "2\016.PBTempLucky28\"\257\002\n\rPBTempScratch\022\013\n\003qi"
    "d\030\001 \002(\005\022\024\n\014qscratchtype\030\002 \002(\005\022\r\n\005qcost\030\003"
    " \002(\005\022\020\n\010qhitrate\030\004 \002(\005\022\024\n\014qrewardcount\030\005"
    " \002(\005\022\022\n\nqrewardmin\030\006 \002(\005\022\022\n\nqrewardmax\030\007"
    " \002(\005\022\023\n\013qscratchmin\030\010 \002(\005\022\023\n\013qscratchmax"
    "\030\t \002(\005\022\023\n\013qradiotimes\030\n \002(\005\022\021\n\tqline1min"
    "\030\014 \002(\005\022\021\n\tqline1max\030\r \002(\005\022\021\n\tqline2min\030\016"
    " \002(\005\022\021\n\tqline2max\030\017 \002(\005\022\021\n\tqhitrate1\030\020 \002"
    "(\005\"7\n\020CTemplateScratch\022#\n\013Tempscratch\030\001 "
    "\003(\0132\016.PBTempScratch\"\232\001\n\023PBTempScratchRew"
    "ard\022\013\n\003qid\030\001 \002(\005\022\024\n\014qrewardorder\030\002 \002(\005\022\020"
    "\n\010qgetrate\030\003 \002(\005\022\017\n\007qreward\030\004 \002(\005\022\024\n\014qis"
    "broadcase\030\005 \002(\005\022\025\n\rqcurrencytype\030\006 \002(\005\022\020"
    "\n\010qquality\030\007 \002(\005\"I\n\026CTemplateScratchRewa"
    "rd\022/\n\021Tempscratchreward\030\001 \003(\0132\024.PBTempSc"
    "ratchReward\"^\n\nPBSlotsBet\022\013\n\003qid\030\001 \002(\005\022\014"
    "\n\004qbet\030\002 \002(\005\022\023\n\013qproportion\030\003 \002(\005\022\022\n\nqgu"
    "arantee\030\004 \002(\005\022\014\n\004qmin\030\005 \002(\005\"6\n\021CTemplate"
    "SlotsBet\022!\n\014Tempslotsbet\030\001 \003(\0132\013.PBSlots"
    "Bet\">\n\rPBSlotsReward\022\013\n\003qid\030\001 \002(\005\022\r\n\005qty"
    "pe\030\002 \002(\005\022\021\n\tqmultiple\030\003 \002(\002\"\?\n\024CTemplate"
    "SlotsReward\022\'\n\017Tempslotsreward\030\001 \003(\0132\016.P"
    "BSlotsReward\")\n\013PBSlotsRate\022\013\n\003qid\030\001 \002(\005"
    "\022\r\n\005qball\030\002 \003(\005\"9\n\022CTemplateSlotsRate\022#\n"
    "\rTempslotsrate\030\001 \003(\0132\014.PBSlotsRate\"\260\001\n\rP"
    "BTemp8Ball3P\022\013\n\003qid\030\001 \002(\005\022\020\n\010qbettype\030\002 "
    "\002(\005\022\020\n\010qmingold\030\003 \002(\005\022\020\n\010qmaxgold\030\004 \002(\005\022"
    "\020\n\010qwingold\030\005 \002(\005\022\020\n\010qhittime\030\006 \002(\005\022\021\n\tq"
    "waittime\030\007 \002(\005\022\021\n\tqwinpoint\030\010 \002(\005\022\022\n\nqlo"
    "sepoint\030\t \002(\005\"6\n\020CTemplate8Ball3P\022\"\n\nTem"
    "pBall3p\030\001 \003(\0132\016.PBTemp8Ball3PB\002H\001", 2633);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "template.proto", &protobuf_RegisterTypes);
  PBTempChongzhi::default_instance_ = new PBTempChongzhi();
  CTemplateChongzhi::default_instance_ = new CTemplateChongzhi();
  CTemplateItem::default_instance_ = new CTemplateItem();
  PBTempItem::default_instance_ = new PBTempItem();
  PBBall1v1::default_instance_ = new PBBall1v1();
  CTemplateBall1v1::default_instance_ = new CTemplateBall1v1();
  PBGlobalInt::default_instance_ = new PBGlobalInt();
  CTemplateGlobalInt::default_instance_ = new CTemplateGlobalInt();
  PBShop::default_instance_ = new PBShop();
  CTemplateShop::default_instance_ = new CTemplateShop();
  PBTempLucky28::default_instance_ = new PBTempLucky28();
  CTemplateLucky28::default_instance_ = new CTemplateLucky28();
  PBTempScratch::default_instance_ = new PBTempScratch();
  CTemplateScratch::default_instance_ = new CTemplateScratch();
  PBTempScratchReward::default_instance_ = new PBTempScratchReward();
  CTemplateScratchReward::default_instance_ = new CTemplateScratchReward();
  PBSlotsBet::default_instance_ = new PBSlotsBet();
  CTemplateSlotsBet::default_instance_ = new CTemplateSlotsBet();
  PBSlotsReward::default_instance_ = new PBSlotsReward();
  CTemplateSlotsReward::default_instance_ = new CTemplateSlotsReward();
  PBSlotsRate::default_instance_ = new PBSlotsRate();
  CTemplateSlotsRate::default_instance_ = new CTemplateSlotsRate();
  PBTemp8Ball3P::default_instance_ = new PBTemp8Ball3P();
  CTemplate8Ball3P::default_instance_ = new CTemplate8Ball3P();
  PBTempChongzhi::default_instance_->InitAsDefaultInstance();
  CTemplateChongzhi::default_instance_->InitAsDefaultInstance();
  CTemplateItem::default_instance_->InitAsDefaultInstance();
  PBTempItem::default_instance_->InitAsDefaultInstance();
  PBBall1v1::default_instance_->InitAsDefaultInstance();
  CTemplateBall1v1::default_instance_->InitAsDefaultInstance();
  PBGlobalInt::default_instance_->InitAsDefaultInstance();
  CTemplateGlobalInt::default_instance_->InitAsDefaultInstance();
  PBShop::default_instance_->InitAsDefaultInstance();
  CTemplateShop::default_instance_->InitAsDefaultInstance();
  PBTempLucky28::default_instance_->InitAsDefaultInstance();
  CTemplateLucky28::default_instance_->InitAsDefaultInstance();
  PBTempScratch::default_instance_->InitAsDefaultInstance();
  CTemplateScratch::default_instance_->InitAsDefaultInstance();
  PBTempScratchReward::default_instance_->InitAsDefaultInstance();
  CTemplateScratchReward::default_instance_->InitAsDefaultInstance();
  PBSlotsBet::default_instance_->InitAsDefaultInstance();
  CTemplateSlotsBet::default_instance_->InitAsDefaultInstance();
  PBSlotsReward::default_instance_->InitAsDefaultInstance();
  CTemplateSlotsReward::default_instance_->InitAsDefaultInstance();
  PBSlotsRate::default_instance_->InitAsDefaultInstance();
  CTemplateSlotsRate::default_instance_->InitAsDefaultInstance();
  PBTemp8Ball3P::default_instance_->InitAsDefaultInstance();
  CTemplate8Ball3P::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_template_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_template_2eproto {
  StaticDescriptorInitializer_template_2eproto() {
    protobuf_AddDesc_template_2eproto();
  }
} static_descriptor_initializer_template_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PBTempChongzhi::kQidFieldNumber;
const int PBTempChongzhi::kQxiaohaotypeFieldNumber;
const int PBTempChongzhi::kQxiaohaoFieldNumber;
const int PBTempChongzhi::kQduihuantypeFieldNumber;
const int PBTempChongzhi::kQduihuanFieldNumber;
#endif  // !_MSC_VER

PBTempChongzhi::PBTempChongzhi()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBTempChongzhi::InitAsDefaultInstance() {
}

PBTempChongzhi::PBTempChongzhi(const PBTempChongzhi& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBTempChongzhi::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qxiaohaotype_ = 0;
  qxiaohao_ = 0;
  qduihuantype_ = 0;
  qduihuan_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTempChongzhi::~PBTempChongzhi() {
  SharedDtor();
}

void PBTempChongzhi::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTempChongzhi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTempChongzhi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTempChongzhi_descriptor_;
}

const PBTempChongzhi& PBTempChongzhi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBTempChongzhi* PBTempChongzhi::default_instance_ = NULL;

PBTempChongzhi* PBTempChongzhi::New() const {
  return new PBTempChongzhi;
}

void PBTempChongzhi::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qxiaohaotype_ = 0;
    qxiaohao_ = 0;
    qduihuantype_ = 0;
    qduihuan_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTempChongzhi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qxiaohaotype;
        break;
      }

      // required int32 qxiaohaotype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qxiaohaotype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qxiaohaotype_)));
          set_has_qxiaohaotype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qxiaohao;
        break;
      }

      // required int32 qxiaohao = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qxiaohao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qxiaohao_)));
          set_has_qxiaohao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qduihuantype;
        break;
      }

      // required int32 qduihuantype = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qduihuantype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qduihuantype_)));
          set_has_qduihuantype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qduihuan;
        break;
      }

      // required int32 qduihuan = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qduihuan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qduihuan_)));
          set_has_qduihuan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBTempChongzhi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qxiaohaotype = 2;
  if (has_qxiaohaotype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qxiaohaotype(), output);
  }

  // required int32 qxiaohao = 3;
  if (has_qxiaohao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qxiaohao(), output);
  }

  // required int32 qduihuantype = 4;
  if (has_qduihuantype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qduihuantype(), output);
  }

  // required int32 qduihuan = 5;
  if (has_qduihuan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qduihuan(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBTempChongzhi::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qxiaohaotype = 2;
  if (has_qxiaohaotype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qxiaohaotype(), target);
  }

  // required int32 qxiaohao = 3;
  if (has_qxiaohao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qxiaohao(), target);
  }

  // required int32 qduihuantype = 4;
  if (has_qduihuantype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qduihuantype(), target);
  }

  // required int32 qduihuan = 5;
  if (has_qduihuan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qduihuan(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBTempChongzhi::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qxiaohaotype = 2;
    if (has_qxiaohaotype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qxiaohaotype());
    }

    // required int32 qxiaohao = 3;
    if (has_qxiaohao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qxiaohao());
    }

    // required int32 qduihuantype = 4;
    if (has_qduihuantype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qduihuantype());
    }

    // required int32 qduihuan = 5;
    if (has_qduihuan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qduihuan());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTempChongzhi::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTempChongzhi* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTempChongzhi*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTempChongzhi::MergeFrom(const PBTempChongzhi& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qxiaohaotype()) {
      set_qxiaohaotype(from.qxiaohaotype());
    }
    if (from.has_qxiaohao()) {
      set_qxiaohao(from.qxiaohao());
    }
    if (from.has_qduihuantype()) {
      set_qduihuantype(from.qduihuantype());
    }
    if (from.has_qduihuan()) {
      set_qduihuan(from.qduihuan());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTempChongzhi::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTempChongzhi::CopyFrom(const PBTempChongzhi& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTempChongzhi::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void PBTempChongzhi::Swap(PBTempChongzhi* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qxiaohaotype_, other->qxiaohaotype_);
    std::swap(qxiaohao_, other->qxiaohao_);
    std::swap(qduihuantype_, other->qduihuantype_);
    std::swap(qduihuan_, other->qduihuan_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTempChongzhi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTempChongzhi_descriptor_;
  metadata.reflection = PBTempChongzhi_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateChongzhi::kTempChongzhiFieldNumber;
#endif  // !_MSC_VER

CTemplateChongzhi::CTemplateChongzhi()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateChongzhi::InitAsDefaultInstance() {
}

CTemplateChongzhi::CTemplateChongzhi(const CTemplateChongzhi& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateChongzhi::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateChongzhi::~CTemplateChongzhi() {
  SharedDtor();
}

void CTemplateChongzhi::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateChongzhi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateChongzhi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateChongzhi_descriptor_;
}

const CTemplateChongzhi& CTemplateChongzhi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateChongzhi* CTemplateChongzhi::default_instance_ = NULL;

CTemplateChongzhi* CTemplateChongzhi::New() const {
  return new CTemplateChongzhi;
}

void CTemplateChongzhi::Clear() {
  tempchongzhi_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateChongzhi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBTempChongzhi TempChongzhi = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TempChongzhi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempchongzhi()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_TempChongzhi;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateChongzhi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBTempChongzhi TempChongzhi = 1;
  for (int i = 0; i < this->tempchongzhi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempchongzhi(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateChongzhi::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBTempChongzhi TempChongzhi = 1;
  for (int i = 0; i < this->tempchongzhi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempchongzhi(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateChongzhi::ByteSize() const {
  int total_size = 0;

  // repeated .PBTempChongzhi TempChongzhi = 1;
  total_size += 1 * this->tempchongzhi_size();
  for (int i = 0; i < this->tempchongzhi_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempchongzhi(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateChongzhi::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateChongzhi* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateChongzhi*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateChongzhi::MergeFrom(const CTemplateChongzhi& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempchongzhi_.MergeFrom(from.tempchongzhi_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateChongzhi::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateChongzhi::CopyFrom(const CTemplateChongzhi& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateChongzhi::IsInitialized() const {

  for (int i = 0; i < tempchongzhi_size(); i++) {
    if (!this->tempchongzhi(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateChongzhi::Swap(CTemplateChongzhi* other) {
  if (other != this) {
    tempchongzhi_.Swap(&other->tempchongzhi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateChongzhi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateChongzhi_descriptor_;
  metadata.reflection = CTemplateChongzhi_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateItem::kTempItemFieldNumber;
#endif  // !_MSC_VER

CTemplateItem::CTemplateItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateItem::InitAsDefaultInstance() {
}

CTemplateItem::CTemplateItem(const CTemplateItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateItem::~CTemplateItem() {
  SharedDtor();
}

void CTemplateItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateItem_descriptor_;
}

const CTemplateItem& CTemplateItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateItem* CTemplateItem::default_instance_ = NULL;

CTemplateItem* CTemplateItem::New() const {
  return new CTemplateItem;
}

void CTemplateItem::Clear() {
  tempitem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBTempItem TempItem = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TempItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempitem()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_TempItem;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBTempItem TempItem = 1;
  for (int i = 0; i < this->tempitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempitem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBTempItem TempItem = 1;
  for (int i = 0; i < this->tempitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempitem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateItem::ByteSize() const {
  int total_size = 0;

  // repeated .PBTempItem TempItem = 1;
  total_size += 1 * this->tempitem_size();
  for (int i = 0; i < this->tempitem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempitem(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateItem::MergeFrom(const CTemplateItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempitem_.MergeFrom(from.tempitem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateItem::CopyFrom(const CTemplateItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateItem::IsInitialized() const {

  for (int i = 0; i < tempitem_size(); i++) {
    if (!this->tempitem(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateItem::Swap(CTemplateItem* other) {
  if (other != this) {
    tempitem_.Swap(&other->tempitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateItem_descriptor_;
  metadata.reflection = CTemplateItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBTempItem::kQidFieldNumber;
const int PBTempItem::kQTypeFieldNumber;
const int PBTempItem::kQSubset1FieldNumber;
const int PBTempItem::kQSubset2FieldNumber;
const int PBTempItem::kQSubset3FieldNumber;
const int PBTempItem::kQifsellFieldNumber;
const int PBTempItem::kQPinJiFieldNumber;
#endif  // !_MSC_VER

PBTempItem::PBTempItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBTempItem::InitAsDefaultInstance() {
}

PBTempItem::PBTempItem(const PBTempItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBTempItem::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qtype_ = 0;
  qsubset1_ = 0;
  qsubset2_ = 0;
  qsubset3_ = 0;
  qifsell_ = 0;
  qpinji_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTempItem::~PBTempItem() {
  SharedDtor();
}

void PBTempItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTempItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTempItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTempItem_descriptor_;
}

const PBTempItem& PBTempItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBTempItem* PBTempItem::default_instance_ = NULL;

PBTempItem* PBTempItem::New() const {
  return new PBTempItem;
}

void PBTempItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qtype_ = 0;
    qsubset1_ = 0;
    qsubset2_ = 0;
    qsubset3_ = 0;
    qifsell_ = 0;
    qpinji_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTempItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qType;
        break;
      }

      // required int32 qType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qtype_)));
          set_has_qtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qSubset1;
        break;
      }

      // required int32 qSubset1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qSubset1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsubset1_)));
          set_has_qsubset1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qSubset2;
        break;
      }

      // required int32 qSubset2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qSubset2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsubset2_)));
          set_has_qsubset2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qSubset3;
        break;
      }

      // required int32 qSubset3 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qSubset3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsubset3_)));
          set_has_qsubset3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_qifsell;
        break;
      }

      // required int32 qifsell = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qifsell:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qifsell_)));
          set_has_qifsell();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_qPinJi;
        break;
      }

      // required int32 qPinJi = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qPinJi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qpinji_)));
          set_has_qpinji();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBTempItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qType = 2;
  if (has_qtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qtype(), output);
  }

  // required int32 qSubset1 = 3;
  if (has_qsubset1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qsubset1(), output);
  }

  // required int32 qSubset2 = 4;
  if (has_qsubset2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qsubset2(), output);
  }

  // required int32 qSubset3 = 5;
  if (has_qsubset3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qsubset3(), output);
  }

  // required int32 qifsell = 6;
  if (has_qifsell()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qifsell(), output);
  }

  // required int32 qPinJi = 7;
  if (has_qpinji()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->qpinji(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBTempItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qType = 2;
  if (has_qtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qtype(), target);
  }

  // required int32 qSubset1 = 3;
  if (has_qsubset1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qsubset1(), target);
  }

  // required int32 qSubset2 = 4;
  if (has_qsubset2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qsubset2(), target);
  }

  // required int32 qSubset3 = 5;
  if (has_qsubset3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qsubset3(), target);
  }

  // required int32 qifsell = 6;
  if (has_qifsell()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qifsell(), target);
  }

  // required int32 qPinJi = 7;
  if (has_qpinji()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->qpinji(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBTempItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qType = 2;
    if (has_qtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qtype());
    }

    // required int32 qSubset1 = 3;
    if (has_qsubset1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsubset1());
    }

    // required int32 qSubset2 = 4;
    if (has_qsubset2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsubset2());
    }

    // required int32 qSubset3 = 5;
    if (has_qsubset3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsubset3());
    }

    // required int32 qifsell = 6;
    if (has_qifsell()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qifsell());
    }

    // required int32 qPinJi = 7;
    if (has_qpinji()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qpinji());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTempItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTempItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTempItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTempItem::MergeFrom(const PBTempItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qtype()) {
      set_qtype(from.qtype());
    }
    if (from.has_qsubset1()) {
      set_qsubset1(from.qsubset1());
    }
    if (from.has_qsubset2()) {
      set_qsubset2(from.qsubset2());
    }
    if (from.has_qsubset3()) {
      set_qsubset3(from.qsubset3());
    }
    if (from.has_qifsell()) {
      set_qifsell(from.qifsell());
    }
    if (from.has_qpinji()) {
      set_qpinji(from.qpinji());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTempItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTempItem::CopyFrom(const PBTempItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTempItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void PBTempItem::Swap(PBTempItem* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qtype_, other->qtype_);
    std::swap(qsubset1_, other->qsubset1_);
    std::swap(qsubset2_, other->qsubset2_);
    std::swap(qsubset3_, other->qsubset3_);
    std::swap(qifsell_, other->qifsell_);
    std::swap(qpinji_, other->qpinji_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTempItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTempItem_descriptor_;
  metadata.reflection = PBTempItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBBall1v1::kQidFieldNumber;
const int PBBall1v1::kQbettypeFieldNumber;
const int PBBall1v1::kQmingoldFieldNumber;
const int PBBall1v1::kQmaxgoldFieldNumber;
const int PBBall1v1::kQrecyclerateFieldNumber;
const int PBBall1v1::kQhittimeFieldNumber;
const int PBBall1v1::kQwaittimeFieldNumber;
const int PBBall1v1::kQallinmaxFieldNumber;
const int PBBall1v1::kQwinpointFieldNumber;
const int PBBall1v1::kQlosepointFieldNumber;
const int PBBall1v1::kQradiotimesFieldNumber;
#endif  // !_MSC_VER

PBBall1v1::PBBall1v1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBBall1v1::InitAsDefaultInstance() {
}

PBBall1v1::PBBall1v1(const PBBall1v1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBBall1v1::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qbettype_ = 0;
  qmingold_ = 0;
  qmaxgold_ = 0;
  qrecyclerate_ = 0;
  qhittime_ = 0;
  qwaittime_ = 0;
  qallinmax_ = 0;
  qwinpoint_ = 0;
  qlosepoint_ = 0;
  qradiotimes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBBall1v1::~PBBall1v1() {
  SharedDtor();
}

void PBBall1v1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBBall1v1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBBall1v1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBall1v1_descriptor_;
}

const PBBall1v1& PBBall1v1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBBall1v1* PBBall1v1::default_instance_ = NULL;

PBBall1v1* PBBall1v1::New() const {
  return new PBBall1v1;
}

void PBBall1v1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qbettype_ = 0;
    qmingold_ = 0;
    qmaxgold_ = 0;
    qrecyclerate_ = 0;
    qhittime_ = 0;
    qwaittime_ = 0;
    qallinmax_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    qwinpoint_ = 0;
    qlosepoint_ = 0;
    qradiotimes_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBBall1v1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qbettype;
        break;
      }

      // required int32 qbettype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbettype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbettype_)));
          set_has_qbettype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qmingold;
        break;
      }

      // required int32 qmingold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmingold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmingold_)));
          set_has_qmingold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qmaxgold;
        break;
      }

      // required int32 qmaxgold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmaxgold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmaxgold_)));
          set_has_qmaxgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qrecyclerate;
        break;
      }

      // required int32 qrecyclerate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qrecyclerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qrecyclerate_)));
          set_has_qrecyclerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_qhittime;
        break;
      }

      // required int32 qhittime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qhittime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qhittime_)));
          set_has_qhittime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_qwaittime;
        break;
      }

      // required int32 qwaittime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qwaittime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qwaittime_)));
          set_has_qwaittime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_qallinmax;
        break;
      }

      // required int32 qallinmax = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qallinmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qallinmax_)));
          set_has_qallinmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_qwinpoint;
        break;
      }

      // required int32 qwinpoint = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qwinpoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qwinpoint_)));
          set_has_qwinpoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_qlosepoint;
        break;
      }

      // required int32 qlosepoint = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qlosepoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qlosepoint_)));
          set_has_qlosepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_qradiotimes;
        break;
      }

      // required int32 qradiotimes = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qradiotimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qradiotimes_)));
          set_has_qradiotimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBBall1v1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qbettype = 2;
  if (has_qbettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qbettype(), output);
  }

  // required int32 qmingold = 3;
  if (has_qmingold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qmingold(), output);
  }

  // required int32 qmaxgold = 4;
  if (has_qmaxgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qmaxgold(), output);
  }

  // required int32 qrecyclerate = 5;
  if (has_qrecyclerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qrecyclerate(), output);
  }

  // required int32 qhittime = 6;
  if (has_qhittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qhittime(), output);
  }

  // required int32 qwaittime = 7;
  if (has_qwaittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->qwaittime(), output);
  }

  // required int32 qallinmax = 8;
  if (has_qallinmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->qallinmax(), output);
  }

  // required int32 qwinpoint = 9;
  if (has_qwinpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->qwinpoint(), output);
  }

  // required int32 qlosepoint = 10;
  if (has_qlosepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->qlosepoint(), output);
  }

  // required int32 qradiotimes = 11;
  if (has_qradiotimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->qradiotimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBBall1v1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qbettype = 2;
  if (has_qbettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qbettype(), target);
  }

  // required int32 qmingold = 3;
  if (has_qmingold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qmingold(), target);
  }

  // required int32 qmaxgold = 4;
  if (has_qmaxgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qmaxgold(), target);
  }

  // required int32 qrecyclerate = 5;
  if (has_qrecyclerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qrecyclerate(), target);
  }

  // required int32 qhittime = 6;
  if (has_qhittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qhittime(), target);
  }

  // required int32 qwaittime = 7;
  if (has_qwaittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->qwaittime(), target);
  }

  // required int32 qallinmax = 8;
  if (has_qallinmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->qallinmax(), target);
  }

  // required int32 qwinpoint = 9;
  if (has_qwinpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->qwinpoint(), target);
  }

  // required int32 qlosepoint = 10;
  if (has_qlosepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->qlosepoint(), target);
  }

  // required int32 qradiotimes = 11;
  if (has_qradiotimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->qradiotimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBBall1v1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qbettype = 2;
    if (has_qbettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbettype());
    }

    // required int32 qmingold = 3;
    if (has_qmingold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmingold());
    }

    // required int32 qmaxgold = 4;
    if (has_qmaxgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmaxgold());
    }

    // required int32 qrecyclerate = 5;
    if (has_qrecyclerate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qrecyclerate());
    }

    // required int32 qhittime = 6;
    if (has_qhittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qhittime());
    }

    // required int32 qwaittime = 7;
    if (has_qwaittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qwaittime());
    }

    // required int32 qallinmax = 8;
    if (has_qallinmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qallinmax());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 qwinpoint = 9;
    if (has_qwinpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qwinpoint());
    }

    // required int32 qlosepoint = 10;
    if (has_qlosepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qlosepoint());
    }

    // required int32 qradiotimes = 11;
    if (has_qradiotimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qradiotimes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBBall1v1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBBall1v1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBBall1v1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBBall1v1::MergeFrom(const PBBall1v1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qbettype()) {
      set_qbettype(from.qbettype());
    }
    if (from.has_qmingold()) {
      set_qmingold(from.qmingold());
    }
    if (from.has_qmaxgold()) {
      set_qmaxgold(from.qmaxgold());
    }
    if (from.has_qrecyclerate()) {
      set_qrecyclerate(from.qrecyclerate());
    }
    if (from.has_qhittime()) {
      set_qhittime(from.qhittime());
    }
    if (from.has_qwaittime()) {
      set_qwaittime(from.qwaittime());
    }
    if (from.has_qallinmax()) {
      set_qallinmax(from.qallinmax());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_qwinpoint()) {
      set_qwinpoint(from.qwinpoint());
    }
    if (from.has_qlosepoint()) {
      set_qlosepoint(from.qlosepoint());
    }
    if (from.has_qradiotimes()) {
      set_qradiotimes(from.qradiotimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBBall1v1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBall1v1::CopyFrom(const PBBall1v1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBall1v1::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;

  return true;
}

void PBBall1v1::Swap(PBBall1v1* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qbettype_, other->qbettype_);
    std::swap(qmingold_, other->qmingold_);
    std::swap(qmaxgold_, other->qmaxgold_);
    std::swap(qrecyclerate_, other->qrecyclerate_);
    std::swap(qhittime_, other->qhittime_);
    std::swap(qwaittime_, other->qwaittime_);
    std::swap(qallinmax_, other->qallinmax_);
    std::swap(qwinpoint_, other->qwinpoint_);
    std::swap(qlosepoint_, other->qlosepoint_);
    std::swap(qradiotimes_, other->qradiotimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBBall1v1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBBall1v1_descriptor_;
  metadata.reflection = PBBall1v1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateBall1v1::kTempBall1V1FieldNumber;
#endif  // !_MSC_VER

CTemplateBall1v1::CTemplateBall1v1()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateBall1v1::InitAsDefaultInstance() {
}

CTemplateBall1v1::CTemplateBall1v1(const CTemplateBall1v1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateBall1v1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateBall1v1::~CTemplateBall1v1() {
  SharedDtor();
}

void CTemplateBall1v1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateBall1v1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateBall1v1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateBall1v1_descriptor_;
}

const CTemplateBall1v1& CTemplateBall1v1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateBall1v1* CTemplateBall1v1::default_instance_ = NULL;

CTemplateBall1v1* CTemplateBall1v1::New() const {
  return new CTemplateBall1v1;
}

void CTemplateBall1v1::Clear() {
  tempball1v1_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateBall1v1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBBall1v1 TempBall1v1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TempBall1v1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempball1v1()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_TempBall1v1;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateBall1v1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBBall1v1 TempBall1v1 = 1;
  for (int i = 0; i < this->tempball1v1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempball1v1(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateBall1v1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBBall1v1 TempBall1v1 = 1;
  for (int i = 0; i < this->tempball1v1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempball1v1(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateBall1v1::ByteSize() const {
  int total_size = 0;

  // repeated .PBBall1v1 TempBall1v1 = 1;
  total_size += 1 * this->tempball1v1_size();
  for (int i = 0; i < this->tempball1v1_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempball1v1(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateBall1v1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateBall1v1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateBall1v1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateBall1v1::MergeFrom(const CTemplateBall1v1& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempball1v1_.MergeFrom(from.tempball1v1_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateBall1v1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateBall1v1::CopyFrom(const CTemplateBall1v1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateBall1v1::IsInitialized() const {

  for (int i = 0; i < tempball1v1_size(); i++) {
    if (!this->tempball1v1(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateBall1v1::Swap(CTemplateBall1v1* other) {
  if (other != this) {
    tempball1v1_.Swap(&other->tempball1v1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateBall1v1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateBall1v1_descriptor_;
  metadata.reflection = CTemplateBall1v1_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBGlobalInt::kQidFieldNumber;
const int PBGlobalInt::kQmorenganFieldNumber;
const int PBGlobalInt::kQmorenzhuoFieldNumber;
const int PBGlobalInt::kQmaxpukeFieldNumber;
#endif  // !_MSC_VER

PBGlobalInt::PBGlobalInt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBGlobalInt::InitAsDefaultInstance() {
}

PBGlobalInt::PBGlobalInt(const PBGlobalInt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBGlobalInt::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qmorengan_ = 0;
  qmorenzhuo_ = 0;
  qmaxpuke_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBGlobalInt::~PBGlobalInt() {
  SharedDtor();
}

void PBGlobalInt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBGlobalInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGlobalInt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGlobalInt_descriptor_;
}

const PBGlobalInt& PBGlobalInt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBGlobalInt* PBGlobalInt::default_instance_ = NULL;

PBGlobalInt* PBGlobalInt::New() const {
  return new PBGlobalInt;
}

void PBGlobalInt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qmorengan_ = 0;
    qmorenzhuo_ = 0;
    qmaxpuke_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBGlobalInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qmorengan;
        break;
      }

      // required int32 qmorengan = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmorengan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmorengan_)));
          set_has_qmorengan();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qmorenzhuo;
        break;
      }

      // required int32 qmorenzhuo = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmorenzhuo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmorenzhuo_)));
          set_has_qmorenzhuo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qmaxpuke;
        break;
      }

      // required int32 qmaxpuke = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmaxpuke:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmaxpuke_)));
          set_has_qmaxpuke();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBGlobalInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qmorengan = 2;
  if (has_qmorengan()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qmorengan(), output);
  }

  // required int32 qmorenzhuo = 3;
  if (has_qmorenzhuo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qmorenzhuo(), output);
  }

  // required int32 qmaxpuke = 4;
  if (has_qmaxpuke()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qmaxpuke(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBGlobalInt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qmorengan = 2;
  if (has_qmorengan()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qmorengan(), target);
  }

  // required int32 qmorenzhuo = 3;
  if (has_qmorenzhuo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qmorenzhuo(), target);
  }

  // required int32 qmaxpuke = 4;
  if (has_qmaxpuke()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qmaxpuke(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBGlobalInt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qmorengan = 2;
    if (has_qmorengan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmorengan());
    }

    // required int32 qmorenzhuo = 3;
    if (has_qmorenzhuo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmorenzhuo());
    }

    // required int32 qmaxpuke = 4;
    if (has_qmaxpuke()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmaxpuke());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGlobalInt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBGlobalInt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBGlobalInt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBGlobalInt::MergeFrom(const PBGlobalInt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qmorengan()) {
      set_qmorengan(from.qmorengan());
    }
    if (from.has_qmorenzhuo()) {
      set_qmorenzhuo(from.qmorenzhuo());
    }
    if (from.has_qmaxpuke()) {
      set_qmaxpuke(from.qmaxpuke());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBGlobalInt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGlobalInt::CopyFrom(const PBGlobalInt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGlobalInt::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void PBGlobalInt::Swap(PBGlobalInt* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qmorengan_, other->qmorengan_);
    std::swap(qmorenzhuo_, other->qmorenzhuo_);
    std::swap(qmaxpuke_, other->qmaxpuke_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBGlobalInt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGlobalInt_descriptor_;
  metadata.reflection = PBGlobalInt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateGlobalInt::kTempGlobalintFieldNumber;
#endif  // !_MSC_VER

CTemplateGlobalInt::CTemplateGlobalInt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateGlobalInt::InitAsDefaultInstance() {
  tempglobalint_ = const_cast< ::PBGlobalInt*>(&::PBGlobalInt::default_instance());
}

CTemplateGlobalInt::CTemplateGlobalInt(const CTemplateGlobalInt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateGlobalInt::SharedCtor() {
  _cached_size_ = 0;
  tempglobalint_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateGlobalInt::~CTemplateGlobalInt() {
  SharedDtor();
}

void CTemplateGlobalInt::SharedDtor() {
  if (this != default_instance_) {
    delete tempglobalint_;
  }
}

void CTemplateGlobalInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateGlobalInt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateGlobalInt_descriptor_;
}

const CTemplateGlobalInt& CTemplateGlobalInt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateGlobalInt* CTemplateGlobalInt::default_instance_ = NULL;

CTemplateGlobalInt* CTemplateGlobalInt::New() const {
  return new CTemplateGlobalInt;
}

void CTemplateGlobalInt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_tempglobalint()) {
      if (tempglobalint_ != NULL) tempglobalint_->::PBGlobalInt::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateGlobalInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBGlobalInt TempGlobalint = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tempglobalint()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateGlobalInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .PBGlobalInt TempGlobalint = 1;
  if (has_tempglobalint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempglobalint(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateGlobalInt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .PBGlobalInt TempGlobalint = 1;
  if (has_tempglobalint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempglobalint(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateGlobalInt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .PBGlobalInt TempGlobalint = 1;
    if (has_tempglobalint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tempglobalint());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateGlobalInt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateGlobalInt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateGlobalInt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateGlobalInt::MergeFrom(const CTemplateGlobalInt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tempglobalint()) {
      mutable_tempglobalint()->::PBGlobalInt::MergeFrom(from.tempglobalint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateGlobalInt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateGlobalInt::CopyFrom(const CTemplateGlobalInt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateGlobalInt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_tempglobalint()) {
    if (!this->tempglobalint().IsInitialized()) return false;
  }
  return true;
}

void CTemplateGlobalInt::Swap(CTemplateGlobalInt* other) {
  if (other != this) {
    std::swap(tempglobalint_, other->tempglobalint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateGlobalInt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateGlobalInt_descriptor_;
  metadata.reflection = CTemplateGlobalInt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBShop::kQidFieldNumber;
const int PBShop::kQitemidFieldNumber;
const int PBShop::kQmoneytypeFieldNumber;
const int PBShop::kQpriceFieldNumber;
const int PBShop::kQsellday1FieldNumber;
const int PBShop::kQsellday2FieldNumber;
const int PBShop::kQsellday3FieldNumber;
const int PBShop::kQsalenumFieldNumber;
const int PBShop::kQsalestartdayFieldNumber;
const int PBShop::kQdaynumFieldNumber;
const int PBShop::kQlimitnumFieldNumber;
const int PBShop::kQprice2FieldNumber;
const int PBShop::kQprice3FieldNumber;
#endif  // !_MSC_VER

PBShop::PBShop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBShop::InitAsDefaultInstance() {
}

PBShop::PBShop(const PBShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBShop::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qitemid_ = 0;
  qmoneytype_ = 0;
  qprice_ = 0;
  qsellday1_ = 0;
  qsellday2_ = 0;
  qsellday3_ = 0;
  qsalenum_ = 0;
  qsalestartday_ = 0;
  qdaynum_ = 0;
  qlimitnum_ = 0;
  qprice2_ = 0;
  qprice3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBShop::~PBShop() {
  SharedDtor();
}

void PBShop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBShop_descriptor_;
}

const PBShop& PBShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBShop* PBShop::default_instance_ = NULL;

PBShop* PBShop::New() const {
  return new PBShop;
}

void PBShop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qitemid_ = 0;
    qmoneytype_ = 0;
    qprice_ = 0;
    qsellday1_ = 0;
    qsellday2_ = 0;
    qsellday3_ = 0;
    qsalenum_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    qsalestartday_ = 0;
    qdaynum_ = 0;
    qlimitnum_ = 0;
    qprice2_ = 0;
    qprice3_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qitemid;
        break;
      }

      // required int32 qitemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qitemid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qitemid_)));
          set_has_qitemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qmoneytype;
        break;
      }

      // required int32 qmoneytype = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmoneytype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmoneytype_)));
          set_has_qmoneytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qprice;
        break;
      }

      // required int32 qprice = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qprice_)));
          set_has_qprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qsellday1;
        break;
      }

      // required int32 qsellday1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qsellday1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsellday1_)));
          set_has_qsellday1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_qsellday2;
        break;
      }

      // required int32 qsellday2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qsellday2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsellday2_)));
          set_has_qsellday2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_qsellday3;
        break;
      }

      // required int32 qsellday3 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qsellday3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsellday3_)));
          set_has_qsellday3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_qsalenum;
        break;
      }

      // required int32 qsalenum = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qsalenum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsalenum_)));
          set_has_qsalenum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_qsalestartday;
        break;
      }

      // required int32 qsalestartday = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qsalestartday:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qsalestartday_)));
          set_has_qsalestartday();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_qdaynum;
        break;
      }

      // required int32 qdaynum = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qdaynum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qdaynum_)));
          set_has_qdaynum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_qlimitnum;
        break;
      }

      // required int32 qlimitnum = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qlimitnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qlimitnum_)));
          set_has_qlimitnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_qprice2;
        break;
      }

      // required int32 qprice2 = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qprice2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qprice2_)));
          set_has_qprice2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_qprice3;
        break;
      }

      // required int32 qprice3 = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qprice3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qprice3_)));
          set_has_qprice3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qitemid = 2;
  if (has_qitemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qitemid(), output);
  }

  // required int32 qmoneytype = 3;
  if (has_qmoneytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qmoneytype(), output);
  }

  // required int32 qprice = 4;
  if (has_qprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qprice(), output);
  }

  // required int32 qsellday1 = 5;
  if (has_qsellday1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qsellday1(), output);
  }

  // required int32 qsellday2 = 6;
  if (has_qsellday2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qsellday2(), output);
  }

  // required int32 qsellday3 = 7;
  if (has_qsellday3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->qsellday3(), output);
  }

  // required int32 qsalenum = 8;
  if (has_qsalenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->qsalenum(), output);
  }

  // required int32 qsalestartday = 9;
  if (has_qsalestartday()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->qsalestartday(), output);
  }

  // required int32 qdaynum = 10;
  if (has_qdaynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->qdaynum(), output);
  }

  // required int32 qlimitnum = 11;
  if (has_qlimitnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->qlimitnum(), output);
  }

  // required int32 qprice2 = 12;
  if (has_qprice2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->qprice2(), output);
  }

  // required int32 qprice3 = 13;
  if (has_qprice3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->qprice3(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qitemid = 2;
  if (has_qitemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qitemid(), target);
  }

  // required int32 qmoneytype = 3;
  if (has_qmoneytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qmoneytype(), target);
  }

  // required int32 qprice = 4;
  if (has_qprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qprice(), target);
  }

  // required int32 qsellday1 = 5;
  if (has_qsellday1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qsellday1(), target);
  }

  // required int32 qsellday2 = 6;
  if (has_qsellday2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qsellday2(), target);
  }

  // required int32 qsellday3 = 7;
  if (has_qsellday3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->qsellday3(), target);
  }

  // required int32 qsalenum = 8;
  if (has_qsalenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->qsalenum(), target);
  }

  // required int32 qsalestartday = 9;
  if (has_qsalestartday()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->qsalestartday(), target);
  }

  // required int32 qdaynum = 10;
  if (has_qdaynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->qdaynum(), target);
  }

  // required int32 qlimitnum = 11;
  if (has_qlimitnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->qlimitnum(), target);
  }

  // required int32 qprice2 = 12;
  if (has_qprice2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->qprice2(), target);
  }

  // required int32 qprice3 = 13;
  if (has_qprice3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->qprice3(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBShop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qitemid = 2;
    if (has_qitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qitemid());
    }

    // required int32 qmoneytype = 3;
    if (has_qmoneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmoneytype());
    }

    // required int32 qprice = 4;
    if (has_qprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qprice());
    }

    // required int32 qsellday1 = 5;
    if (has_qsellday1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsellday1());
    }

    // required int32 qsellday2 = 6;
    if (has_qsellday2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsellday2());
    }

    // required int32 qsellday3 = 7;
    if (has_qsellday3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsellday3());
    }

    // required int32 qsalenum = 8;
    if (has_qsalenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsalenum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 qsalestartday = 9;
    if (has_qsalestartday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qsalestartday());
    }

    // required int32 qdaynum = 10;
    if (has_qdaynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qdaynum());
    }

    // required int32 qlimitnum = 11;
    if (has_qlimitnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qlimitnum());
    }

    // required int32 qprice2 = 12;
    if (has_qprice2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qprice2());
    }

    // required int32 qprice3 = 13;
    if (has_qprice3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qprice3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBShop::MergeFrom(const PBShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qitemid()) {
      set_qitemid(from.qitemid());
    }
    if (from.has_qmoneytype()) {
      set_qmoneytype(from.qmoneytype());
    }
    if (from.has_qprice()) {
      set_qprice(from.qprice());
    }
    if (from.has_qsellday1()) {
      set_qsellday1(from.qsellday1());
    }
    if (from.has_qsellday2()) {
      set_qsellday2(from.qsellday2());
    }
    if (from.has_qsellday3()) {
      set_qsellday3(from.qsellday3());
    }
    if (from.has_qsalenum()) {
      set_qsalenum(from.qsalenum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_qsalestartday()) {
      set_qsalestartday(from.qsalestartday());
    }
    if (from.has_qdaynum()) {
      set_qdaynum(from.qdaynum());
    }
    if (from.has_qlimitnum()) {
      set_qlimitnum(from.qlimitnum());
    }
    if (from.has_qprice2()) {
      set_qprice2(from.qprice2());
    }
    if (from.has_qprice3()) {
      set_qprice3(from.qprice3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBShop::CopyFrom(const PBShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBShop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;

  return true;
}

void PBShop::Swap(PBShop* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qitemid_, other->qitemid_);
    std::swap(qmoneytype_, other->qmoneytype_);
    std::swap(qprice_, other->qprice_);
    std::swap(qsellday1_, other->qsellday1_);
    std::swap(qsellday2_, other->qsellday2_);
    std::swap(qsellday3_, other->qsellday3_);
    std::swap(qsalenum_, other->qsalenum_);
    std::swap(qsalestartday_, other->qsalestartday_);
    std::swap(qdaynum_, other->qdaynum_);
    std::swap(qlimitnum_, other->qlimitnum_);
    std::swap(qprice2_, other->qprice2_);
    std::swap(qprice3_, other->qprice3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBShop_descriptor_;
  metadata.reflection = PBShop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateShop::kTempShangchengFieldNumber;
#endif  // !_MSC_VER

CTemplateShop::CTemplateShop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateShop::InitAsDefaultInstance() {
}

CTemplateShop::CTemplateShop(const CTemplateShop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateShop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateShop::~CTemplateShop() {
  SharedDtor();
}

void CTemplateShop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateShop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateShop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateShop_descriptor_;
}

const CTemplateShop& CTemplateShop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateShop* CTemplateShop::default_instance_ = NULL;

CTemplateShop* CTemplateShop::New() const {
  return new CTemplateShop;
}

void CTemplateShop::Clear() {
  tempshangcheng_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateShop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBShop TempShangcheng = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TempShangcheng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempshangcheng()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_TempShangcheng;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateShop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBShop TempShangcheng = 1;
  for (int i = 0; i < this->tempshangcheng_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempshangcheng(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateShop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBShop TempShangcheng = 1;
  for (int i = 0; i < this->tempshangcheng_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempshangcheng(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateShop::ByteSize() const {
  int total_size = 0;

  // repeated .PBShop TempShangcheng = 1;
  total_size += 1 * this->tempshangcheng_size();
  for (int i = 0; i < this->tempshangcheng_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempshangcheng(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateShop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateShop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateShop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateShop::MergeFrom(const CTemplateShop& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempshangcheng_.MergeFrom(from.tempshangcheng_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateShop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateShop::CopyFrom(const CTemplateShop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateShop::IsInitialized() const {

  for (int i = 0; i < tempshangcheng_size(); i++) {
    if (!this->tempshangcheng(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateShop::Swap(CTemplateShop* other) {
  if (other != this) {
    tempshangcheng_.Swap(&other->tempshangcheng_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateShop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateShop_descriptor_;
  metadata.reflection = CTemplateShop_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBTempLucky28::kQidFieldNumber;
const int PBTempLucky28::kQbettypeFieldNumber;
const int PBTempLucky28::kQmingoldFieldNumber;
const int PBTempLucky28::kQmaxgoldFieldNumber;
const int PBTempLucky28::kQbetgold1FieldNumber;
const int PBTempLucky28::kQbetgold2FieldNumber;
const int PBTempLucky28::kQbetgold3FieldNumber;
const int PBTempLucky28::kQbetgold4FieldNumber;
const int PBTempLucky28::kQbetgold5FieldNumber;
const int PBTempLucky28::kQmaxroundFieldNumber;
const int PBTempLucky28::kQrecyclerateFieldNumber;
const int PBTempLucky28::kQturntimeFieldNumber;
const int PBTempLucky28::kQradiotimesFieldNumber;
#endif  // !_MSC_VER

PBTempLucky28::PBTempLucky28()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBTempLucky28::InitAsDefaultInstance() {
}

PBTempLucky28::PBTempLucky28(const PBTempLucky28& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBTempLucky28::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qbettype_ = 0;
  qmingold_ = 0;
  qmaxgold_ = 0;
  qbetgold1_ = 0;
  qbetgold2_ = 0;
  qbetgold3_ = 0;
  qbetgold4_ = 0;
  qbetgold5_ = 0;
  qmaxround_ = 0;
  qrecyclerate_ = 0;
  qturntime_ = 0;
  qradiotimes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTempLucky28::~PBTempLucky28() {
  SharedDtor();
}

void PBTempLucky28::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTempLucky28::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTempLucky28::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTempLucky28_descriptor_;
}

const PBTempLucky28& PBTempLucky28::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBTempLucky28* PBTempLucky28::default_instance_ = NULL;

PBTempLucky28* PBTempLucky28::New() const {
  return new PBTempLucky28;
}

void PBTempLucky28::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qbettype_ = 0;
    qmingold_ = 0;
    qmaxgold_ = 0;
    qbetgold1_ = 0;
    qbetgold2_ = 0;
    qbetgold3_ = 0;
    qbetgold4_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    qbetgold5_ = 0;
    qmaxround_ = 0;
    qrecyclerate_ = 0;
    qturntime_ = 0;
    qradiotimes_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTempLucky28::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qbettype;
        break;
      }

      // required int32 qbettype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbettype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbettype_)));
          set_has_qbettype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qmingold;
        break;
      }

      // required int32 qmingold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmingold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmingold_)));
          set_has_qmingold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qmaxgold;
        break;
      }

      // required int32 qmaxgold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmaxgold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmaxgold_)));
          set_has_qmaxgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qbetgold1;
        break;
      }

      // required int32 qbetgold1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbetgold1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbetgold1_)));
          set_has_qbetgold1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_qbetgold2;
        break;
      }

      // required int32 qbetgold2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbetgold2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbetgold2_)));
          set_has_qbetgold2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_qbetgold3;
        break;
      }

      // required int32 qbetgold3 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbetgold3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbetgold3_)));
          set_has_qbetgold3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_qbetgold4;
        break;
      }

      // required int32 qbetgold4 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbetgold4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbetgold4_)));
          set_has_qbetgold4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_qbetgold5;
        break;
      }

      // required int32 qbetgold5 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbetgold5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbetgold5_)));
          set_has_qbetgold5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_qmaxround;
        break;
      }

      // required int32 qmaxround = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmaxround:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmaxround_)));
          set_has_qmaxround();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_qrecyclerate;
        break;
      }

      // required int32 qrecyclerate = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qrecyclerate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qrecyclerate_)));
          set_has_qrecyclerate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_qturntime;
        break;
      }

      // required int32 qturntime = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qturntime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qturntime_)));
          set_has_qturntime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_qradiotimes;
        break;
      }

      // required int32 qradiotimes = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qradiotimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qradiotimes_)));
          set_has_qradiotimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBTempLucky28::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qbettype = 2;
  if (has_qbettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qbettype(), output);
  }

  // required int32 qmingold = 3;
  if (has_qmingold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qmingold(), output);
  }

  // required int32 qmaxgold = 4;
  if (has_qmaxgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qmaxgold(), output);
  }

  // required int32 qbetgold1 = 5;
  if (has_qbetgold1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qbetgold1(), output);
  }

  // required int32 qbetgold2 = 6;
  if (has_qbetgold2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qbetgold2(), output);
  }

  // required int32 qbetgold3 = 7;
  if (has_qbetgold3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->qbetgold3(), output);
  }

  // required int32 qbetgold4 = 8;
  if (has_qbetgold4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->qbetgold4(), output);
  }

  // required int32 qbetgold5 = 9;
  if (has_qbetgold5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->qbetgold5(), output);
  }

  // required int32 qmaxround = 10;
  if (has_qmaxround()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->qmaxround(), output);
  }

  // required int32 qrecyclerate = 11;
  if (has_qrecyclerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->qrecyclerate(), output);
  }

  // required int32 qturntime = 12;
  if (has_qturntime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->qturntime(), output);
  }

  // required int32 qradiotimes = 13;
  if (has_qradiotimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->qradiotimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBTempLucky28::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qbettype = 2;
  if (has_qbettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qbettype(), target);
  }

  // required int32 qmingold = 3;
  if (has_qmingold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qmingold(), target);
  }

  // required int32 qmaxgold = 4;
  if (has_qmaxgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qmaxgold(), target);
  }

  // required int32 qbetgold1 = 5;
  if (has_qbetgold1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qbetgold1(), target);
  }

  // required int32 qbetgold2 = 6;
  if (has_qbetgold2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qbetgold2(), target);
  }

  // required int32 qbetgold3 = 7;
  if (has_qbetgold3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->qbetgold3(), target);
  }

  // required int32 qbetgold4 = 8;
  if (has_qbetgold4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->qbetgold4(), target);
  }

  // required int32 qbetgold5 = 9;
  if (has_qbetgold5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->qbetgold5(), target);
  }

  // required int32 qmaxround = 10;
  if (has_qmaxround()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->qmaxround(), target);
  }

  // required int32 qrecyclerate = 11;
  if (has_qrecyclerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->qrecyclerate(), target);
  }

  // required int32 qturntime = 12;
  if (has_qturntime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->qturntime(), target);
  }

  // required int32 qradiotimes = 13;
  if (has_qradiotimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->qradiotimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBTempLucky28::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qbettype = 2;
    if (has_qbettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbettype());
    }

    // required int32 qmingold = 3;
    if (has_qmingold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmingold());
    }

    // required int32 qmaxgold = 4;
    if (has_qmaxgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmaxgold());
    }

    // required int32 qbetgold1 = 5;
    if (has_qbetgold1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbetgold1());
    }

    // required int32 qbetgold2 = 6;
    if (has_qbetgold2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbetgold2());
    }

    // required int32 qbetgold3 = 7;
    if (has_qbetgold3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbetgold3());
    }

    // required int32 qbetgold4 = 8;
    if (has_qbetgold4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbetgold4());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 qbetgold5 = 9;
    if (has_qbetgold5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbetgold5());
    }

    // required int32 qmaxround = 10;
    if (has_qmaxround()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmaxround());
    }

    // required int32 qrecyclerate = 11;
    if (has_qrecyclerate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qrecyclerate());
    }

    // required int32 qturntime = 12;
    if (has_qturntime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qturntime());
    }

    // required int32 qradiotimes = 13;
    if (has_qradiotimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qradiotimes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTempLucky28::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTempLucky28* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTempLucky28*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTempLucky28::MergeFrom(const PBTempLucky28& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qbettype()) {
      set_qbettype(from.qbettype());
    }
    if (from.has_qmingold()) {
      set_qmingold(from.qmingold());
    }
    if (from.has_qmaxgold()) {
      set_qmaxgold(from.qmaxgold());
    }
    if (from.has_qbetgold1()) {
      set_qbetgold1(from.qbetgold1());
    }
    if (from.has_qbetgold2()) {
      set_qbetgold2(from.qbetgold2());
    }
    if (from.has_qbetgold3()) {
      set_qbetgold3(from.qbetgold3());
    }
    if (from.has_qbetgold4()) {
      set_qbetgold4(from.qbetgold4());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_qbetgold5()) {
      set_qbetgold5(from.qbetgold5());
    }
    if (from.has_qmaxround()) {
      set_qmaxround(from.qmaxround());
    }
    if (from.has_qrecyclerate()) {
      set_qrecyclerate(from.qrecyclerate());
    }
    if (from.has_qturntime()) {
      set_qturntime(from.qturntime());
    }
    if (from.has_qradiotimes()) {
      set_qradiotimes(from.qradiotimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTempLucky28::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTempLucky28::CopyFrom(const PBTempLucky28& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTempLucky28::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;

  return true;
}

void PBTempLucky28::Swap(PBTempLucky28* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qbettype_, other->qbettype_);
    std::swap(qmingold_, other->qmingold_);
    std::swap(qmaxgold_, other->qmaxgold_);
    std::swap(qbetgold1_, other->qbetgold1_);
    std::swap(qbetgold2_, other->qbetgold2_);
    std::swap(qbetgold3_, other->qbetgold3_);
    std::swap(qbetgold4_, other->qbetgold4_);
    std::swap(qbetgold5_, other->qbetgold5_);
    std::swap(qmaxround_, other->qmaxround_);
    std::swap(qrecyclerate_, other->qrecyclerate_);
    std::swap(qturntime_, other->qturntime_);
    std::swap(qradiotimes_, other->qradiotimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTempLucky28::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTempLucky28_descriptor_;
  metadata.reflection = PBTempLucky28_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateLucky28::kTemplucky28FieldNumber;
#endif  // !_MSC_VER

CTemplateLucky28::CTemplateLucky28()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateLucky28::InitAsDefaultInstance() {
}

CTemplateLucky28::CTemplateLucky28(const CTemplateLucky28& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateLucky28::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateLucky28::~CTemplateLucky28() {
  SharedDtor();
}

void CTemplateLucky28::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateLucky28::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateLucky28::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateLucky28_descriptor_;
}

const CTemplateLucky28& CTemplateLucky28::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateLucky28* CTemplateLucky28::default_instance_ = NULL;

CTemplateLucky28* CTemplateLucky28::New() const {
  return new CTemplateLucky28;
}

void CTemplateLucky28::Clear() {
  templucky28_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateLucky28::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBTempLucky28 Templucky28 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Templucky28:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_templucky28()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Templucky28;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateLucky28::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBTempLucky28 Templucky28 = 1;
  for (int i = 0; i < this->templucky28_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->templucky28(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateLucky28::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBTempLucky28 Templucky28 = 1;
  for (int i = 0; i < this->templucky28_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->templucky28(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateLucky28::ByteSize() const {
  int total_size = 0;

  // repeated .PBTempLucky28 Templucky28 = 1;
  total_size += 1 * this->templucky28_size();
  for (int i = 0; i < this->templucky28_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->templucky28(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateLucky28::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateLucky28* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateLucky28*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateLucky28::MergeFrom(const CTemplateLucky28& from) {
  GOOGLE_CHECK_NE(&from, this);
  templucky28_.MergeFrom(from.templucky28_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateLucky28::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateLucky28::CopyFrom(const CTemplateLucky28& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateLucky28::IsInitialized() const {

  for (int i = 0; i < templucky28_size(); i++) {
    if (!this->templucky28(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateLucky28::Swap(CTemplateLucky28* other) {
  if (other != this) {
    templucky28_.Swap(&other->templucky28_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateLucky28::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateLucky28_descriptor_;
  metadata.reflection = CTemplateLucky28_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBTempScratch::kQidFieldNumber;
const int PBTempScratch::kQscratchtypeFieldNumber;
const int PBTempScratch::kQcostFieldNumber;
const int PBTempScratch::kQhitrateFieldNumber;
const int PBTempScratch::kQrewardcountFieldNumber;
const int PBTempScratch::kQrewardminFieldNumber;
const int PBTempScratch::kQrewardmaxFieldNumber;
const int PBTempScratch::kQscratchminFieldNumber;
const int PBTempScratch::kQscratchmaxFieldNumber;
const int PBTempScratch::kQradiotimesFieldNumber;
const int PBTempScratch::kQline1MinFieldNumber;
const int PBTempScratch::kQline1MaxFieldNumber;
const int PBTempScratch::kQline2MinFieldNumber;
const int PBTempScratch::kQline2MaxFieldNumber;
const int PBTempScratch::kQhitrate1FieldNumber;
#endif  // !_MSC_VER

PBTempScratch::PBTempScratch()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBTempScratch::InitAsDefaultInstance() {
}

PBTempScratch::PBTempScratch(const PBTempScratch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBTempScratch::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qscratchtype_ = 0;
  qcost_ = 0;
  qhitrate_ = 0;
  qrewardcount_ = 0;
  qrewardmin_ = 0;
  qrewardmax_ = 0;
  qscratchmin_ = 0;
  qscratchmax_ = 0;
  qradiotimes_ = 0;
  qline1min_ = 0;
  qline1max_ = 0;
  qline2min_ = 0;
  qline2max_ = 0;
  qhitrate1_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTempScratch::~PBTempScratch() {
  SharedDtor();
}

void PBTempScratch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTempScratch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTempScratch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTempScratch_descriptor_;
}

const PBTempScratch& PBTempScratch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBTempScratch* PBTempScratch::default_instance_ = NULL;

PBTempScratch* PBTempScratch::New() const {
  return new PBTempScratch;
}

void PBTempScratch::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qscratchtype_ = 0;
    qcost_ = 0;
    qhitrate_ = 0;
    qrewardcount_ = 0;
    qrewardmin_ = 0;
    qrewardmax_ = 0;
    qscratchmin_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    qscratchmax_ = 0;
    qradiotimes_ = 0;
    qline1min_ = 0;
    qline1max_ = 0;
    qline2min_ = 0;
    qline2max_ = 0;
    qhitrate1_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTempScratch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qscratchtype;
        break;
      }

      // required int32 qscratchtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qscratchtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qscratchtype_)));
          set_has_qscratchtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qcost;
        break;
      }

      // required int32 qcost = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qcost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qcost_)));
          set_has_qcost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qhitrate;
        break;
      }

      // required int32 qhitrate = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qhitrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qhitrate_)));
          set_has_qhitrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qrewardcount;
        break;
      }

      // required int32 qrewardcount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qrewardcount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qrewardcount_)));
          set_has_qrewardcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_qrewardmin;
        break;
      }

      // required int32 qrewardmin = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qrewardmin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qrewardmin_)));
          set_has_qrewardmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_qrewardmax;
        break;
      }

      // required int32 qrewardmax = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qrewardmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qrewardmax_)));
          set_has_qrewardmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_qscratchmin;
        break;
      }

      // required int32 qscratchmin = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qscratchmin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qscratchmin_)));
          set_has_qscratchmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_qscratchmax;
        break;
      }

      // required int32 qscratchmax = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qscratchmax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qscratchmax_)));
          set_has_qscratchmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_qradiotimes;
        break;
      }

      // required int32 qradiotimes = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qradiotimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qradiotimes_)));
          set_has_qradiotimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_qline1min;
        break;
      }

      // required int32 qline1min = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qline1min:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qline1min_)));
          set_has_qline1min();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_qline1max;
        break;
      }

      // required int32 qline1max = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qline1max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qline1max_)));
          set_has_qline1max();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_qline2min;
        break;
      }

      // required int32 qline2min = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qline2min:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qline2min_)));
          set_has_qline2min();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_qline2max;
        break;
      }

      // required int32 qline2max = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qline2max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qline2max_)));
          set_has_qline2max();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_qhitrate1;
        break;
      }

      // required int32 qhitrate1 = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qhitrate1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qhitrate1_)));
          set_has_qhitrate1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBTempScratch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qscratchtype = 2;
  if (has_qscratchtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qscratchtype(), output);
  }

  // required int32 qcost = 3;
  if (has_qcost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qcost(), output);
  }

  // required int32 qhitrate = 4;
  if (has_qhitrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qhitrate(), output);
  }

  // required int32 qrewardcount = 5;
  if (has_qrewardcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qrewardcount(), output);
  }

  // required int32 qrewardmin = 6;
  if (has_qrewardmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qrewardmin(), output);
  }

  // required int32 qrewardmax = 7;
  if (has_qrewardmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->qrewardmax(), output);
  }

  // required int32 qscratchmin = 8;
  if (has_qscratchmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->qscratchmin(), output);
  }

  // required int32 qscratchmax = 9;
  if (has_qscratchmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->qscratchmax(), output);
  }

  // required int32 qradiotimes = 10;
  if (has_qradiotimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->qradiotimes(), output);
  }

  // required int32 qline1min = 12;
  if (has_qline1min()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->qline1min(), output);
  }

  // required int32 qline1max = 13;
  if (has_qline1max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->qline1max(), output);
  }

  // required int32 qline2min = 14;
  if (has_qline2min()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->qline2min(), output);
  }

  // required int32 qline2max = 15;
  if (has_qline2max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->qline2max(), output);
  }

  // required int32 qhitrate1 = 16;
  if (has_qhitrate1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->qhitrate1(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBTempScratch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qscratchtype = 2;
  if (has_qscratchtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qscratchtype(), target);
  }

  // required int32 qcost = 3;
  if (has_qcost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qcost(), target);
  }

  // required int32 qhitrate = 4;
  if (has_qhitrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qhitrate(), target);
  }

  // required int32 qrewardcount = 5;
  if (has_qrewardcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qrewardcount(), target);
  }

  // required int32 qrewardmin = 6;
  if (has_qrewardmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qrewardmin(), target);
  }

  // required int32 qrewardmax = 7;
  if (has_qrewardmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->qrewardmax(), target);
  }

  // required int32 qscratchmin = 8;
  if (has_qscratchmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->qscratchmin(), target);
  }

  // required int32 qscratchmax = 9;
  if (has_qscratchmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->qscratchmax(), target);
  }

  // required int32 qradiotimes = 10;
  if (has_qradiotimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->qradiotimes(), target);
  }

  // required int32 qline1min = 12;
  if (has_qline1min()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->qline1min(), target);
  }

  // required int32 qline1max = 13;
  if (has_qline1max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->qline1max(), target);
  }

  // required int32 qline2min = 14;
  if (has_qline2min()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->qline2min(), target);
  }

  // required int32 qline2max = 15;
  if (has_qline2max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->qline2max(), target);
  }

  // required int32 qhitrate1 = 16;
  if (has_qhitrate1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->qhitrate1(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBTempScratch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qscratchtype = 2;
    if (has_qscratchtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qscratchtype());
    }

    // required int32 qcost = 3;
    if (has_qcost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qcost());
    }

    // required int32 qhitrate = 4;
    if (has_qhitrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qhitrate());
    }

    // required int32 qrewardcount = 5;
    if (has_qrewardcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qrewardcount());
    }

    // required int32 qrewardmin = 6;
    if (has_qrewardmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qrewardmin());
    }

    // required int32 qrewardmax = 7;
    if (has_qrewardmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qrewardmax());
    }

    // required int32 qscratchmin = 8;
    if (has_qscratchmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qscratchmin());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 qscratchmax = 9;
    if (has_qscratchmax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qscratchmax());
    }

    // required int32 qradiotimes = 10;
    if (has_qradiotimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qradiotimes());
    }

    // required int32 qline1min = 12;
    if (has_qline1min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qline1min());
    }

    // required int32 qline1max = 13;
    if (has_qline1max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qline1max());
    }

    // required int32 qline2min = 14;
    if (has_qline2min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qline2min());
    }

    // required int32 qline2max = 15;
    if (has_qline2max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qline2max());
    }

    // required int32 qhitrate1 = 16;
    if (has_qhitrate1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qhitrate1());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTempScratch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTempScratch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTempScratch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTempScratch::MergeFrom(const PBTempScratch& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qscratchtype()) {
      set_qscratchtype(from.qscratchtype());
    }
    if (from.has_qcost()) {
      set_qcost(from.qcost());
    }
    if (from.has_qhitrate()) {
      set_qhitrate(from.qhitrate());
    }
    if (from.has_qrewardcount()) {
      set_qrewardcount(from.qrewardcount());
    }
    if (from.has_qrewardmin()) {
      set_qrewardmin(from.qrewardmin());
    }
    if (from.has_qrewardmax()) {
      set_qrewardmax(from.qrewardmax());
    }
    if (from.has_qscratchmin()) {
      set_qscratchmin(from.qscratchmin());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_qscratchmax()) {
      set_qscratchmax(from.qscratchmax());
    }
    if (from.has_qradiotimes()) {
      set_qradiotimes(from.qradiotimes());
    }
    if (from.has_qline1min()) {
      set_qline1min(from.qline1min());
    }
    if (from.has_qline1max()) {
      set_qline1max(from.qline1max());
    }
    if (from.has_qline2min()) {
      set_qline2min(from.qline2min());
    }
    if (from.has_qline2max()) {
      set_qline2max(from.qline2max());
    }
    if (from.has_qhitrate1()) {
      set_qhitrate1(from.qhitrate1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTempScratch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTempScratch::CopyFrom(const PBTempScratch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTempScratch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fff) != 0x00007fff) return false;

  return true;
}

void PBTempScratch::Swap(PBTempScratch* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qscratchtype_, other->qscratchtype_);
    std::swap(qcost_, other->qcost_);
    std::swap(qhitrate_, other->qhitrate_);
    std::swap(qrewardcount_, other->qrewardcount_);
    std::swap(qrewardmin_, other->qrewardmin_);
    std::swap(qrewardmax_, other->qrewardmax_);
    std::swap(qscratchmin_, other->qscratchmin_);
    std::swap(qscratchmax_, other->qscratchmax_);
    std::swap(qradiotimes_, other->qradiotimes_);
    std::swap(qline1min_, other->qline1min_);
    std::swap(qline1max_, other->qline1max_);
    std::swap(qline2min_, other->qline2min_);
    std::swap(qline2max_, other->qline2max_);
    std::swap(qhitrate1_, other->qhitrate1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTempScratch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTempScratch_descriptor_;
  metadata.reflection = PBTempScratch_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateScratch::kTempscratchFieldNumber;
#endif  // !_MSC_VER

CTemplateScratch::CTemplateScratch()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateScratch::InitAsDefaultInstance() {
}

CTemplateScratch::CTemplateScratch(const CTemplateScratch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateScratch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateScratch::~CTemplateScratch() {
  SharedDtor();
}

void CTemplateScratch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateScratch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateScratch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateScratch_descriptor_;
}

const CTemplateScratch& CTemplateScratch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateScratch* CTemplateScratch::default_instance_ = NULL;

CTemplateScratch* CTemplateScratch::New() const {
  return new CTemplateScratch;
}

void CTemplateScratch::Clear() {
  tempscratch_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateScratch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBTempScratch Tempscratch = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Tempscratch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempscratch()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Tempscratch;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateScratch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBTempScratch Tempscratch = 1;
  for (int i = 0; i < this->tempscratch_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempscratch(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateScratch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBTempScratch Tempscratch = 1;
  for (int i = 0; i < this->tempscratch_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempscratch(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateScratch::ByteSize() const {
  int total_size = 0;

  // repeated .PBTempScratch Tempscratch = 1;
  total_size += 1 * this->tempscratch_size();
  for (int i = 0; i < this->tempscratch_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempscratch(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateScratch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateScratch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateScratch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateScratch::MergeFrom(const CTemplateScratch& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempscratch_.MergeFrom(from.tempscratch_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateScratch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateScratch::CopyFrom(const CTemplateScratch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateScratch::IsInitialized() const {

  for (int i = 0; i < tempscratch_size(); i++) {
    if (!this->tempscratch(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateScratch::Swap(CTemplateScratch* other) {
  if (other != this) {
    tempscratch_.Swap(&other->tempscratch_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateScratch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateScratch_descriptor_;
  metadata.reflection = CTemplateScratch_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBTempScratchReward::kQidFieldNumber;
const int PBTempScratchReward::kQrewardorderFieldNumber;
const int PBTempScratchReward::kQgetrateFieldNumber;
const int PBTempScratchReward::kQrewardFieldNumber;
const int PBTempScratchReward::kQisbroadcaseFieldNumber;
const int PBTempScratchReward::kQcurrencytypeFieldNumber;
const int PBTempScratchReward::kQqualityFieldNumber;
#endif  // !_MSC_VER

PBTempScratchReward::PBTempScratchReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBTempScratchReward::InitAsDefaultInstance() {
}

PBTempScratchReward::PBTempScratchReward(const PBTempScratchReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBTempScratchReward::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qrewardorder_ = 0;
  qgetrate_ = 0;
  qreward_ = 0;
  qisbroadcase_ = 0;
  qcurrencytype_ = 0;
  qquality_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTempScratchReward::~PBTempScratchReward() {
  SharedDtor();
}

void PBTempScratchReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTempScratchReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTempScratchReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTempScratchReward_descriptor_;
}

const PBTempScratchReward& PBTempScratchReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBTempScratchReward* PBTempScratchReward::default_instance_ = NULL;

PBTempScratchReward* PBTempScratchReward::New() const {
  return new PBTempScratchReward;
}

void PBTempScratchReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qrewardorder_ = 0;
    qgetrate_ = 0;
    qreward_ = 0;
    qisbroadcase_ = 0;
    qcurrencytype_ = 0;
    qquality_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTempScratchReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qrewardorder;
        break;
      }

      // required int32 qrewardorder = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qrewardorder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qrewardorder_)));
          set_has_qrewardorder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qgetrate;
        break;
      }

      // required int32 qgetrate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qgetrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qgetrate_)));
          set_has_qgetrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qreward;
        break;
      }

      // required int32 qreward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qreward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qreward_)));
          set_has_qreward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qisbroadcase;
        break;
      }

      // required int32 qisbroadcase = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qisbroadcase:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qisbroadcase_)));
          set_has_qisbroadcase();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_qcurrencytype;
        break;
      }

      // required int32 qcurrencytype = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qcurrencytype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qcurrencytype_)));
          set_has_qcurrencytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_qquality;
        break;
      }

      // required int32 qquality = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qquality_)));
          set_has_qquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBTempScratchReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qrewardorder = 2;
  if (has_qrewardorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qrewardorder(), output);
  }

  // required int32 qgetrate = 3;
  if (has_qgetrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qgetrate(), output);
  }

  // required int32 qreward = 4;
  if (has_qreward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qreward(), output);
  }

  // required int32 qisbroadcase = 5;
  if (has_qisbroadcase()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qisbroadcase(), output);
  }

  // required int32 qcurrencytype = 6;
  if (has_qcurrencytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qcurrencytype(), output);
  }

  // required int32 qquality = 7;
  if (has_qquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->qquality(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBTempScratchReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qrewardorder = 2;
  if (has_qrewardorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qrewardorder(), target);
  }

  // required int32 qgetrate = 3;
  if (has_qgetrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qgetrate(), target);
  }

  // required int32 qreward = 4;
  if (has_qreward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qreward(), target);
  }

  // required int32 qisbroadcase = 5;
  if (has_qisbroadcase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qisbroadcase(), target);
  }

  // required int32 qcurrencytype = 6;
  if (has_qcurrencytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qcurrencytype(), target);
  }

  // required int32 qquality = 7;
  if (has_qquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->qquality(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBTempScratchReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qrewardorder = 2;
    if (has_qrewardorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qrewardorder());
    }

    // required int32 qgetrate = 3;
    if (has_qgetrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qgetrate());
    }

    // required int32 qreward = 4;
    if (has_qreward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qreward());
    }

    // required int32 qisbroadcase = 5;
    if (has_qisbroadcase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qisbroadcase());
    }

    // required int32 qcurrencytype = 6;
    if (has_qcurrencytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qcurrencytype());
    }

    // required int32 qquality = 7;
    if (has_qquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qquality());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTempScratchReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTempScratchReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTempScratchReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTempScratchReward::MergeFrom(const PBTempScratchReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qrewardorder()) {
      set_qrewardorder(from.qrewardorder());
    }
    if (from.has_qgetrate()) {
      set_qgetrate(from.qgetrate());
    }
    if (from.has_qreward()) {
      set_qreward(from.qreward());
    }
    if (from.has_qisbroadcase()) {
      set_qisbroadcase(from.qisbroadcase());
    }
    if (from.has_qcurrencytype()) {
      set_qcurrencytype(from.qcurrencytype());
    }
    if (from.has_qquality()) {
      set_qquality(from.qquality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTempScratchReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTempScratchReward::CopyFrom(const PBTempScratchReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTempScratchReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void PBTempScratchReward::Swap(PBTempScratchReward* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qrewardorder_, other->qrewardorder_);
    std::swap(qgetrate_, other->qgetrate_);
    std::swap(qreward_, other->qreward_);
    std::swap(qisbroadcase_, other->qisbroadcase_);
    std::swap(qcurrencytype_, other->qcurrencytype_);
    std::swap(qquality_, other->qquality_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTempScratchReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTempScratchReward_descriptor_;
  metadata.reflection = PBTempScratchReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateScratchReward::kTempscratchrewardFieldNumber;
#endif  // !_MSC_VER

CTemplateScratchReward::CTemplateScratchReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateScratchReward::InitAsDefaultInstance() {
}

CTemplateScratchReward::CTemplateScratchReward(const CTemplateScratchReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateScratchReward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateScratchReward::~CTemplateScratchReward() {
  SharedDtor();
}

void CTemplateScratchReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateScratchReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateScratchReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateScratchReward_descriptor_;
}

const CTemplateScratchReward& CTemplateScratchReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateScratchReward* CTemplateScratchReward::default_instance_ = NULL;

CTemplateScratchReward* CTemplateScratchReward::New() const {
  return new CTemplateScratchReward;
}

void CTemplateScratchReward::Clear() {
  tempscratchreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateScratchReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBTempScratchReward Tempscratchreward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Tempscratchreward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempscratchreward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Tempscratchreward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateScratchReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBTempScratchReward Tempscratchreward = 1;
  for (int i = 0; i < this->tempscratchreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempscratchreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateScratchReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBTempScratchReward Tempscratchreward = 1;
  for (int i = 0; i < this->tempscratchreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempscratchreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateScratchReward::ByteSize() const {
  int total_size = 0;

  // repeated .PBTempScratchReward Tempscratchreward = 1;
  total_size += 1 * this->tempscratchreward_size();
  for (int i = 0; i < this->tempscratchreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempscratchreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateScratchReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateScratchReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateScratchReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateScratchReward::MergeFrom(const CTemplateScratchReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempscratchreward_.MergeFrom(from.tempscratchreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateScratchReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateScratchReward::CopyFrom(const CTemplateScratchReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateScratchReward::IsInitialized() const {

  for (int i = 0; i < tempscratchreward_size(); i++) {
    if (!this->tempscratchreward(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateScratchReward::Swap(CTemplateScratchReward* other) {
  if (other != this) {
    tempscratchreward_.Swap(&other->tempscratchreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateScratchReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateScratchReward_descriptor_;
  metadata.reflection = CTemplateScratchReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBSlotsBet::kQidFieldNumber;
const int PBSlotsBet::kQbetFieldNumber;
const int PBSlotsBet::kQproportionFieldNumber;
const int PBSlotsBet::kQguaranteeFieldNumber;
const int PBSlotsBet::kQminFieldNumber;
#endif  // !_MSC_VER

PBSlotsBet::PBSlotsBet()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBSlotsBet::InitAsDefaultInstance() {
}

PBSlotsBet::PBSlotsBet(const PBSlotsBet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBSlotsBet::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qbet_ = 0;
  qproportion_ = 0;
  qguarantee_ = 0;
  qmin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBSlotsBet::~PBSlotsBet() {
  SharedDtor();
}

void PBSlotsBet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBSlotsBet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSlotsBet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBSlotsBet_descriptor_;
}

const PBSlotsBet& PBSlotsBet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBSlotsBet* PBSlotsBet::default_instance_ = NULL;

PBSlotsBet* PBSlotsBet::New() const {
  return new PBSlotsBet;
}

void PBSlotsBet::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qbet_ = 0;
    qproportion_ = 0;
    qguarantee_ = 0;
    qmin_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBSlotsBet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qbet;
        break;
      }

      // required int32 qbet = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbet_)));
          set_has_qbet();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qproportion;
        break;
      }

      // required int32 qproportion = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qproportion:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qproportion_)));
          set_has_qproportion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qguarantee;
        break;
      }

      // required int32 qguarantee = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qguarantee:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qguarantee_)));
          set_has_qguarantee();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qmin;
        break;
      }

      // required int32 qmin = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmin_)));
          set_has_qmin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBSlotsBet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qbet = 2;
  if (has_qbet()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qbet(), output);
  }

  // required int32 qproportion = 3;
  if (has_qproportion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qproportion(), output);
  }

  // required int32 qguarantee = 4;
  if (has_qguarantee()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qguarantee(), output);
  }

  // required int32 qmin = 5;
  if (has_qmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qmin(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBSlotsBet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qbet = 2;
  if (has_qbet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qbet(), target);
  }

  // required int32 qproportion = 3;
  if (has_qproportion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qproportion(), target);
  }

  // required int32 qguarantee = 4;
  if (has_qguarantee()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qguarantee(), target);
  }

  // required int32 qmin = 5;
  if (has_qmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qmin(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBSlotsBet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qbet = 2;
    if (has_qbet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbet());
    }

    // required int32 qproportion = 3;
    if (has_qproportion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qproportion());
    }

    // required int32 qguarantee = 4;
    if (has_qguarantee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qguarantee());
    }

    // required int32 qmin = 5;
    if (has_qmin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmin());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSlotsBet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBSlotsBet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBSlotsBet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBSlotsBet::MergeFrom(const PBSlotsBet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qbet()) {
      set_qbet(from.qbet());
    }
    if (from.has_qproportion()) {
      set_qproportion(from.qproportion());
    }
    if (from.has_qguarantee()) {
      set_qguarantee(from.qguarantee());
    }
    if (from.has_qmin()) {
      set_qmin(from.qmin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBSlotsBet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSlotsBet::CopyFrom(const PBSlotsBet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSlotsBet::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void PBSlotsBet::Swap(PBSlotsBet* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qbet_, other->qbet_);
    std::swap(qproportion_, other->qproportion_);
    std::swap(qguarantee_, other->qguarantee_);
    std::swap(qmin_, other->qmin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBSlotsBet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBSlotsBet_descriptor_;
  metadata.reflection = PBSlotsBet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateSlotsBet::kTempslotsbetFieldNumber;
#endif  // !_MSC_VER

CTemplateSlotsBet::CTemplateSlotsBet()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateSlotsBet::InitAsDefaultInstance() {
}

CTemplateSlotsBet::CTemplateSlotsBet(const CTemplateSlotsBet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateSlotsBet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateSlotsBet::~CTemplateSlotsBet() {
  SharedDtor();
}

void CTemplateSlotsBet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateSlotsBet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateSlotsBet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateSlotsBet_descriptor_;
}

const CTemplateSlotsBet& CTemplateSlotsBet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateSlotsBet* CTemplateSlotsBet::default_instance_ = NULL;

CTemplateSlotsBet* CTemplateSlotsBet::New() const {
  return new CTemplateSlotsBet;
}

void CTemplateSlotsBet::Clear() {
  tempslotsbet_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateSlotsBet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBSlotsBet Tempslotsbet = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Tempslotsbet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempslotsbet()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Tempslotsbet;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateSlotsBet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBSlotsBet Tempslotsbet = 1;
  for (int i = 0; i < this->tempslotsbet_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempslotsbet(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateSlotsBet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBSlotsBet Tempslotsbet = 1;
  for (int i = 0; i < this->tempslotsbet_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempslotsbet(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateSlotsBet::ByteSize() const {
  int total_size = 0;

  // repeated .PBSlotsBet Tempslotsbet = 1;
  total_size += 1 * this->tempslotsbet_size();
  for (int i = 0; i < this->tempslotsbet_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempslotsbet(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateSlotsBet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateSlotsBet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateSlotsBet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateSlotsBet::MergeFrom(const CTemplateSlotsBet& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempslotsbet_.MergeFrom(from.tempslotsbet_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateSlotsBet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateSlotsBet::CopyFrom(const CTemplateSlotsBet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateSlotsBet::IsInitialized() const {

  for (int i = 0; i < tempslotsbet_size(); i++) {
    if (!this->tempslotsbet(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateSlotsBet::Swap(CTemplateSlotsBet* other) {
  if (other != this) {
    tempslotsbet_.Swap(&other->tempslotsbet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateSlotsBet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateSlotsBet_descriptor_;
  metadata.reflection = CTemplateSlotsBet_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBSlotsReward::kQidFieldNumber;
const int PBSlotsReward::kQtypeFieldNumber;
const int PBSlotsReward::kQmultipleFieldNumber;
#endif  // !_MSC_VER

PBSlotsReward::PBSlotsReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBSlotsReward::InitAsDefaultInstance() {
}

PBSlotsReward::PBSlotsReward(const PBSlotsReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBSlotsReward::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qtype_ = 0;
  qmultiple_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBSlotsReward::~PBSlotsReward() {
  SharedDtor();
}

void PBSlotsReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBSlotsReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSlotsReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBSlotsReward_descriptor_;
}

const PBSlotsReward& PBSlotsReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBSlotsReward* PBSlotsReward::default_instance_ = NULL;

PBSlotsReward* PBSlotsReward::New() const {
  return new PBSlotsReward;
}

void PBSlotsReward::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qtype_ = 0;
    qmultiple_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBSlotsReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qtype;
        break;
      }

      // required int32 qtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qtype_)));
          set_has_qtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_qmultiple;
        break;
      }

      // required float qmultiple = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_qmultiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qmultiple_)));
          set_has_qmultiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBSlotsReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qtype = 2;
  if (has_qtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qtype(), output);
  }

  // required float qmultiple = 3;
  if (has_qmultiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->qmultiple(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBSlotsReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qtype = 2;
  if (has_qtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qtype(), target);
  }

  // required float qmultiple = 3;
  if (has_qmultiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->qmultiple(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBSlotsReward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qtype = 2;
    if (has_qtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qtype());
    }

    // required float qmultiple = 3;
    if (has_qmultiple()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSlotsReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBSlotsReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBSlotsReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBSlotsReward::MergeFrom(const PBSlotsReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qtype()) {
      set_qtype(from.qtype());
    }
    if (from.has_qmultiple()) {
      set_qmultiple(from.qmultiple());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBSlotsReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSlotsReward::CopyFrom(const PBSlotsReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSlotsReward::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PBSlotsReward::Swap(PBSlotsReward* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qtype_, other->qtype_);
    std::swap(qmultiple_, other->qmultiple_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBSlotsReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBSlotsReward_descriptor_;
  metadata.reflection = PBSlotsReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateSlotsReward::kTempslotsrewardFieldNumber;
#endif  // !_MSC_VER

CTemplateSlotsReward::CTemplateSlotsReward()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateSlotsReward::InitAsDefaultInstance() {
}

CTemplateSlotsReward::CTemplateSlotsReward(const CTemplateSlotsReward& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateSlotsReward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateSlotsReward::~CTemplateSlotsReward() {
  SharedDtor();
}

void CTemplateSlotsReward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateSlotsReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateSlotsReward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateSlotsReward_descriptor_;
}

const CTemplateSlotsReward& CTemplateSlotsReward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateSlotsReward* CTemplateSlotsReward::default_instance_ = NULL;

CTemplateSlotsReward* CTemplateSlotsReward::New() const {
  return new CTemplateSlotsReward;
}

void CTemplateSlotsReward::Clear() {
  tempslotsreward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateSlotsReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBSlotsReward Tempslotsreward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Tempslotsreward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempslotsreward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Tempslotsreward;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateSlotsReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBSlotsReward Tempslotsreward = 1;
  for (int i = 0; i < this->tempslotsreward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempslotsreward(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateSlotsReward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBSlotsReward Tempslotsreward = 1;
  for (int i = 0; i < this->tempslotsreward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempslotsreward(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateSlotsReward::ByteSize() const {
  int total_size = 0;

  // repeated .PBSlotsReward Tempslotsreward = 1;
  total_size += 1 * this->tempslotsreward_size();
  for (int i = 0; i < this->tempslotsreward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempslotsreward(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateSlotsReward::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateSlotsReward* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateSlotsReward*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateSlotsReward::MergeFrom(const CTemplateSlotsReward& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempslotsreward_.MergeFrom(from.tempslotsreward_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateSlotsReward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateSlotsReward::CopyFrom(const CTemplateSlotsReward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateSlotsReward::IsInitialized() const {

  for (int i = 0; i < tempslotsreward_size(); i++) {
    if (!this->tempslotsreward(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateSlotsReward::Swap(CTemplateSlotsReward* other) {
  if (other != this) {
    tempslotsreward_.Swap(&other->tempslotsreward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateSlotsReward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateSlotsReward_descriptor_;
  metadata.reflection = CTemplateSlotsReward_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBSlotsRate::kQidFieldNumber;
const int PBSlotsRate::kQballFieldNumber;
#endif  // !_MSC_VER

PBSlotsRate::PBSlotsRate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBSlotsRate::InitAsDefaultInstance() {
}

PBSlotsRate::PBSlotsRate(const PBSlotsRate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBSlotsRate::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBSlotsRate::~PBSlotsRate() {
  SharedDtor();
}

void PBSlotsRate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBSlotsRate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSlotsRate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBSlotsRate_descriptor_;
}

const PBSlotsRate& PBSlotsRate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBSlotsRate* PBSlotsRate::default_instance_ = NULL;

PBSlotsRate* PBSlotsRate::New() const {
  return new PBSlotsRate;
}

void PBSlotsRate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
  }
  qball_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBSlotsRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qball;
        break;
      }

      // repeated int32 qball = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qball:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_qball())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_qball())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qball;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBSlotsRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // repeated int32 qball = 2;
  for (int i = 0; i < this->qball_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->qball(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBSlotsRate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // repeated int32 qball = 2;
  for (int i = 0; i < this->qball_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->qball(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBSlotsRate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

  }
  // repeated int32 qball = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->qball_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->qball(i));
    }
    total_size += 1 * this->qball_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSlotsRate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBSlotsRate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBSlotsRate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBSlotsRate::MergeFrom(const PBSlotsRate& from) {
  GOOGLE_CHECK_NE(&from, this);
  qball_.MergeFrom(from.qball_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBSlotsRate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSlotsRate::CopyFrom(const PBSlotsRate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSlotsRate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PBSlotsRate::Swap(PBSlotsRate* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    qball_.Swap(&other->qball_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBSlotsRate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBSlotsRate_descriptor_;
  metadata.reflection = PBSlotsRate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplateSlotsRate::kTempslotsrateFieldNumber;
#endif  // !_MSC_VER

CTemplateSlotsRate::CTemplateSlotsRate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplateSlotsRate::InitAsDefaultInstance() {
}

CTemplateSlotsRate::CTemplateSlotsRate(const CTemplateSlotsRate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplateSlotsRate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplateSlotsRate::~CTemplateSlotsRate() {
  SharedDtor();
}

void CTemplateSlotsRate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplateSlotsRate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplateSlotsRate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplateSlotsRate_descriptor_;
}

const CTemplateSlotsRate& CTemplateSlotsRate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplateSlotsRate* CTemplateSlotsRate::default_instance_ = NULL;

CTemplateSlotsRate* CTemplateSlotsRate::New() const {
  return new CTemplateSlotsRate;
}

void CTemplateSlotsRate::Clear() {
  tempslotsrate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplateSlotsRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBSlotsRate Tempslotsrate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Tempslotsrate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempslotsrate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Tempslotsrate;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplateSlotsRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBSlotsRate Tempslotsrate = 1;
  for (int i = 0; i < this->tempslotsrate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempslotsrate(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplateSlotsRate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBSlotsRate Tempslotsrate = 1;
  for (int i = 0; i < this->tempslotsrate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempslotsrate(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplateSlotsRate::ByteSize() const {
  int total_size = 0;

  // repeated .PBSlotsRate Tempslotsrate = 1;
  total_size += 1 * this->tempslotsrate_size();
  for (int i = 0; i < this->tempslotsrate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempslotsrate(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplateSlotsRate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplateSlotsRate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplateSlotsRate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplateSlotsRate::MergeFrom(const CTemplateSlotsRate& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempslotsrate_.MergeFrom(from.tempslotsrate_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplateSlotsRate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplateSlotsRate::CopyFrom(const CTemplateSlotsRate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplateSlotsRate::IsInitialized() const {

  for (int i = 0; i < tempslotsrate_size(); i++) {
    if (!this->tempslotsrate(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplateSlotsRate::Swap(CTemplateSlotsRate* other) {
  if (other != this) {
    tempslotsrate_.Swap(&other->tempslotsrate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplateSlotsRate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplateSlotsRate_descriptor_;
  metadata.reflection = CTemplateSlotsRate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBTemp8Ball3P::kQidFieldNumber;
const int PBTemp8Ball3P::kQbettypeFieldNumber;
const int PBTemp8Ball3P::kQmingoldFieldNumber;
const int PBTemp8Ball3P::kQmaxgoldFieldNumber;
const int PBTemp8Ball3P::kQwingoldFieldNumber;
const int PBTemp8Ball3P::kQhittimeFieldNumber;
const int PBTemp8Ball3P::kQwaittimeFieldNumber;
const int PBTemp8Ball3P::kQwinpointFieldNumber;
const int PBTemp8Ball3P::kQlosepointFieldNumber;
#endif  // !_MSC_VER

PBTemp8Ball3P::PBTemp8Ball3P()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBTemp8Ball3P::InitAsDefaultInstance() {
}

PBTemp8Ball3P::PBTemp8Ball3P(const PBTemp8Ball3P& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBTemp8Ball3P::SharedCtor() {
  _cached_size_ = 0;
  qid_ = 0;
  qbettype_ = 0;
  qmingold_ = 0;
  qmaxgold_ = 0;
  qwingold_ = 0;
  qhittime_ = 0;
  qwaittime_ = 0;
  qwinpoint_ = 0;
  qlosepoint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBTemp8Ball3P::~PBTemp8Ball3P() {
  SharedDtor();
}

void PBTemp8Ball3P::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBTemp8Ball3P::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTemp8Ball3P::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTemp8Ball3P_descriptor_;
}

const PBTemp8Ball3P& PBTemp8Ball3P::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

PBTemp8Ball3P* PBTemp8Ball3P::default_instance_ = NULL;

PBTemp8Ball3P* PBTemp8Ball3P::New() const {
  return new PBTemp8Ball3P;
}

void PBTemp8Ball3P::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    qid_ = 0;
    qbettype_ = 0;
    qmingold_ = 0;
    qmaxgold_ = 0;
    qwingold_ = 0;
    qhittime_ = 0;
    qwaittime_ = 0;
    qwinpoint_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    qlosepoint_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBTemp8Ball3P::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 qid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qid_)));
          set_has_qid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_qbettype;
        break;
      }

      // required int32 qbettype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qbettype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qbettype_)));
          set_has_qbettype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_qmingold;
        break;
      }

      // required int32 qmingold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmingold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmingold_)));
          set_has_qmingold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_qmaxgold;
        break;
      }

      // required int32 qmaxgold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qmaxgold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qmaxgold_)));
          set_has_qmaxgold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_qwingold;
        break;
      }

      // required int32 qwingold = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qwingold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qwingold_)));
          set_has_qwingold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_qhittime;
        break;
      }

      // required int32 qhittime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qhittime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qhittime_)));
          set_has_qhittime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_qwaittime;
        break;
      }

      // required int32 qwaittime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qwaittime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qwaittime_)));
          set_has_qwaittime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_qwinpoint;
        break;
      }

      // required int32 qwinpoint = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qwinpoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qwinpoint_)));
          set_has_qwinpoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_qlosepoint;
        break;
      }

      // required int32 qlosepoint = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_qlosepoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qlosepoint_)));
          set_has_qlosepoint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBTemp8Ball3P::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 qid = 1;
  if (has_qid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->qid(), output);
  }

  // required int32 qbettype = 2;
  if (has_qbettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->qbettype(), output);
  }

  // required int32 qmingold = 3;
  if (has_qmingold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->qmingold(), output);
  }

  // required int32 qmaxgold = 4;
  if (has_qmaxgold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qmaxgold(), output);
  }

  // required int32 qwingold = 5;
  if (has_qwingold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->qwingold(), output);
  }

  // required int32 qhittime = 6;
  if (has_qhittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qhittime(), output);
  }

  // required int32 qwaittime = 7;
  if (has_qwaittime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->qwaittime(), output);
  }

  // required int32 qwinpoint = 8;
  if (has_qwinpoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->qwinpoint(), output);
  }

  // required int32 qlosepoint = 9;
  if (has_qlosepoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->qlosepoint(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBTemp8Ball3P::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 qid = 1;
  if (has_qid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->qid(), target);
  }

  // required int32 qbettype = 2;
  if (has_qbettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->qbettype(), target);
  }

  // required int32 qmingold = 3;
  if (has_qmingold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->qmingold(), target);
  }

  // required int32 qmaxgold = 4;
  if (has_qmaxgold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qmaxgold(), target);
  }

  // required int32 qwingold = 5;
  if (has_qwingold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->qwingold(), target);
  }

  // required int32 qhittime = 6;
  if (has_qhittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qhittime(), target);
  }

  // required int32 qwaittime = 7;
  if (has_qwaittime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->qwaittime(), target);
  }

  // required int32 qwinpoint = 8;
  if (has_qwinpoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->qwinpoint(), target);
  }

  // required int32 qlosepoint = 9;
  if (has_qlosepoint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->qlosepoint(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBTemp8Ball3P::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 qid = 1;
    if (has_qid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qid());
    }

    // required int32 qbettype = 2;
    if (has_qbettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qbettype());
    }

    // required int32 qmingold = 3;
    if (has_qmingold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmingold());
    }

    // required int32 qmaxgold = 4;
    if (has_qmaxgold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qmaxgold());
    }

    // required int32 qwingold = 5;
    if (has_qwingold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qwingold());
    }

    // required int32 qhittime = 6;
    if (has_qhittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qhittime());
    }

    // required int32 qwaittime = 7;
    if (has_qwaittime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qwaittime());
    }

    // required int32 qwinpoint = 8;
    if (has_qwinpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qwinpoint());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 qlosepoint = 9;
    if (has_qlosepoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qlosepoint());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTemp8Ball3P::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBTemp8Ball3P* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBTemp8Ball3P*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBTemp8Ball3P::MergeFrom(const PBTemp8Ball3P& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_qid()) {
      set_qid(from.qid());
    }
    if (from.has_qbettype()) {
      set_qbettype(from.qbettype());
    }
    if (from.has_qmingold()) {
      set_qmingold(from.qmingold());
    }
    if (from.has_qmaxgold()) {
      set_qmaxgold(from.qmaxgold());
    }
    if (from.has_qwingold()) {
      set_qwingold(from.qwingold());
    }
    if (from.has_qhittime()) {
      set_qhittime(from.qhittime());
    }
    if (from.has_qwaittime()) {
      set_qwaittime(from.qwaittime());
    }
    if (from.has_qwinpoint()) {
      set_qwinpoint(from.qwinpoint());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_qlosepoint()) {
      set_qlosepoint(from.qlosepoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBTemp8Ball3P::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTemp8Ball3P::CopyFrom(const PBTemp8Ball3P& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTemp8Ball3P::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void PBTemp8Ball3P::Swap(PBTemp8Ball3P* other) {
  if (other != this) {
    std::swap(qid_, other->qid_);
    std::swap(qbettype_, other->qbettype_);
    std::swap(qmingold_, other->qmingold_);
    std::swap(qmaxgold_, other->qmaxgold_);
    std::swap(qwingold_, other->qwingold_);
    std::swap(qhittime_, other->qhittime_);
    std::swap(qwaittime_, other->qwaittime_);
    std::swap(qwinpoint_, other->qwinpoint_);
    std::swap(qlosepoint_, other->qlosepoint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBTemp8Ball3P::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTemp8Ball3P_descriptor_;
  metadata.reflection = PBTemp8Ball3P_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CTemplate8Ball3P::kTempBall3PFieldNumber;
#endif  // !_MSC_VER

CTemplate8Ball3P::CTemplate8Ball3P()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CTemplate8Ball3P::InitAsDefaultInstance() {
}

CTemplate8Ball3P::CTemplate8Ball3P(const CTemplate8Ball3P& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CTemplate8Ball3P::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CTemplate8Ball3P::~CTemplate8Ball3P() {
  SharedDtor();
}

void CTemplate8Ball3P::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CTemplate8Ball3P::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CTemplate8Ball3P::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CTemplate8Ball3P_descriptor_;
}

const CTemplate8Ball3P& CTemplate8Ball3P::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_template_2eproto();
  return *default_instance_;
}

CTemplate8Ball3P* CTemplate8Ball3P::default_instance_ = NULL;

CTemplate8Ball3P* CTemplate8Ball3P::New() const {
  return new CTemplate8Ball3P;
}

void CTemplate8Ball3P::Clear() {
  tempball3p_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CTemplate8Ball3P::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBTemp8Ball3P TempBall3p = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TempBall3p:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tempball3p()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_TempBall3p;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CTemplate8Ball3P::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBTemp8Ball3P TempBall3p = 1;
  for (int i = 0; i < this->tempball3p_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tempball3p(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CTemplate8Ball3P::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBTemp8Ball3P TempBall3p = 1;
  for (int i = 0; i < this->tempball3p_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->tempball3p(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CTemplate8Ball3P::ByteSize() const {
  int total_size = 0;

  // repeated .PBTemp8Ball3P TempBall3p = 1;
  total_size += 1 * this->tempball3p_size();
  for (int i = 0; i < this->tempball3p_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tempball3p(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CTemplate8Ball3P::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CTemplate8Ball3P* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CTemplate8Ball3P*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CTemplate8Ball3P::MergeFrom(const CTemplate8Ball3P& from) {
  GOOGLE_CHECK_NE(&from, this);
  tempball3p_.MergeFrom(from.tempball3p_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CTemplate8Ball3P::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CTemplate8Ball3P::CopyFrom(const CTemplate8Ball3P& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CTemplate8Ball3P::IsInitialized() const {

  for (int i = 0; i < tempball3p_size(); i++) {
    if (!this->tempball3p(i).IsInitialized()) return false;
  }
  return true;
}

void CTemplate8Ball3P::Swap(CTemplate8Ball3P* other) {
  if (other != this) {
    tempball3p_.Swap(&other->tempball3p_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CTemplate8Ball3P::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CTemplate8Ball3P_descriptor_;
  metadata.reflection = CTemplate8Ball3P_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
