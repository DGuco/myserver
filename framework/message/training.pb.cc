// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: training.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "training.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

namespace {

const ::google::protobuf::Descriptor* ArmyFormationDTO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArmyFormationDTO_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainingRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainingRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SoldierDrawRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SoldierDrawRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SoldierDrawResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SoldierDrawResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllSoldierInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllSoldierInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllSoldierInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllSoldierInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFormationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFormationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFormationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFormationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SoldierChangePush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SoldierChangePush_reflection_ = NULL;
const ::google::protobuf::Descriptor* MarchSoldierChangePush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MarchSoldierChangePush_reflection_ = NULL;
const ::google::protobuf::Descriptor* SoldierTrainingPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SoldierTrainingPush_reflection_ = NULL;
const ::google::protobuf::Descriptor* FormationPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FormationPush_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TrainCommandId_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TrainingPushId_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_training_2eproto() {
  protobuf_AddDesc_training_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "training.proto");
  GOOGLE_CHECK(file != NULL);
  ArmyFormationDTO_descriptor_ = file->message_type(0);
  static const int ArmyFormationDTO_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmyFormationDTO, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmyFormationDTO, soldier_),
  };
  ArmyFormationDTO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArmyFormationDTO_descriptor_,
      ArmyFormationDTO::default_instance_,
      ArmyFormationDTO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmyFormationDTO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmyFormationDTO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArmyFormationDTO));
  TrainingRequest_descriptor_ = file->message_type(1);
  static const int TrainingRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingRequest, traintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingRequest, soldiertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingRequest, bid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingRequest, oper_),
  };
  TrainingRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainingRequest_descriptor_,
      TrainingRequest::default_instance_,
      TrainingRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainingRequest));
  TrainingResponse_descriptor_ = file->message_type(2);
  static const int TrainingResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingResponse, bid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingResponse, soldierinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingResponse, traintype_),
  };
  TrainingResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainingResponse_descriptor_,
      TrainingResponse::default_instance_,
      TrainingResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainingResponse));
  SoldierDrawRequest_descriptor_ = file->message_type(3);
  static const int SoldierDrawRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierDrawRequest, bid_),
  };
  SoldierDrawRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SoldierDrawRequest_descriptor_,
      SoldierDrawRequest::default_instance_,
      SoldierDrawRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierDrawRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierDrawRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SoldierDrawRequest));
  SoldierDrawResponse_descriptor_ = file->message_type(4);
  static const int SoldierDrawResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierDrawResponse, bid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierDrawResponse, soldierinfo_),
  };
  SoldierDrawResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SoldierDrawResponse_descriptor_,
      SoldierDrawResponse::default_instance_,
      SoldierDrawResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierDrawResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierDrawResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SoldierDrawResponse));
  AllSoldierInfoRequest_descriptor_ = file->message_type(5);
  static const int AllSoldierInfoRequest_offsets_[1] = {
  };
  AllSoldierInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllSoldierInfoRequest_descriptor_,
      AllSoldierInfoRequest::default_instance_,
      AllSoldierInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllSoldierInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllSoldierInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllSoldierInfoRequest));
  AllSoldierInfoResponse_descriptor_ = file->message_type(6);
  static const int AllSoldierInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllSoldierInfoResponse, soldierinfo_),
  };
  AllSoldierInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllSoldierInfoResponse_descriptor_,
      AllSoldierInfoResponse::default_instance_,
      AllSoldierInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllSoldierInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllSoldierInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllSoldierInfoResponse));
  SetFormationRequest_descriptor_ = file->message_type(7);
  static const int SetFormationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationRequest, soldier_),
  };
  SetFormationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFormationRequest_descriptor_,
      SetFormationRequest::default_instance_,
      SetFormationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFormationRequest));
  SetFormationResponse_descriptor_ = file->message_type(8);
  static const int SetFormationResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationResponse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationResponse, soldier_),
  };
  SetFormationResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFormationResponse_descriptor_,
      SetFormationResponse::default_instance_,
      SetFormationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFormationResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFormationResponse));
  SoldierChangePush_descriptor_ = file->message_type(9);
  static const int SoldierChangePush_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierChangePush, idlesoldiers_),
  };
  SoldierChangePush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SoldierChangePush_descriptor_,
      SoldierChangePush::default_instance_,
      SoldierChangePush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierChangePush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierChangePush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SoldierChangePush));
  MarchSoldierChangePush_descriptor_ = file->message_type(10);
  static const int MarchSoldierChangePush_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarchSoldierChangePush, marchsoldiers_),
  };
  MarchSoldierChangePush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MarchSoldierChangePush_descriptor_,
      MarchSoldierChangePush::default_instance_,
      MarchSoldierChangePush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarchSoldierChangePush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarchSoldierChangePush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MarchSoldierChangePush));
  SoldierTrainingPush_descriptor_ = file->message_type(11);
  static const int SoldierTrainingPush_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierTrainingPush, soldierinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierTrainingPush, isdone_),
  };
  SoldierTrainingPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SoldierTrainingPush_descriptor_,
      SoldierTrainingPush::default_instance_,
      SoldierTrainingPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierTrainingPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoldierTrainingPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SoldierTrainingPush));
  FormationPush_descriptor_ = file->message_type(12);
  static const int FormationPush_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationPush, formations_),
  };
  FormationPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FormationPush_descriptor_,
      FormationPush::default_instance_,
      FormationPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FormationPush));
  TrainCommandId_descriptor_ = file->enum_type(0);
  TrainingPushId_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_training_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArmyFormationDTO_descriptor_, &ArmyFormationDTO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainingRequest_descriptor_, &TrainingRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainingResponse_descriptor_, &TrainingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SoldierDrawRequest_descriptor_, &SoldierDrawRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SoldierDrawResponse_descriptor_, &SoldierDrawResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllSoldierInfoRequest_descriptor_, &AllSoldierInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllSoldierInfoResponse_descriptor_, &AllSoldierInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFormationRequest_descriptor_, &SetFormationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFormationResponse_descriptor_, &SetFormationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SoldierChangePush_descriptor_, &SoldierChangePush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MarchSoldierChangePush_descriptor_, &MarchSoldierChangePush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SoldierTrainingPush_descriptor_, &SoldierTrainingPush::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FormationPush_descriptor_, &FormationPush::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_training_2eproto() {
  delete ArmyFormationDTO::default_instance_;
  delete ArmyFormationDTO_reflection_;
  delete TrainingRequest::default_instance_;
  delete TrainingRequest_reflection_;
  delete TrainingResponse::default_instance_;
  delete TrainingResponse_reflection_;
  delete SoldierDrawRequest::default_instance_;
  delete SoldierDrawRequest_reflection_;
  delete SoldierDrawResponse::default_instance_;
  delete SoldierDrawResponse_reflection_;
  delete AllSoldierInfoRequest::default_instance_;
  delete AllSoldierInfoRequest_reflection_;
  delete AllSoldierInfoResponse::default_instance_;
  delete AllSoldierInfoResponse_reflection_;
  delete SetFormationRequest::default_instance_;
  delete SetFormationRequest_reflection_;
  delete SetFormationResponse::default_instance_;
  delete SetFormationResponse_reflection_;
  delete SoldierChangePush::default_instance_;
  delete SoldierChangePush_reflection_;
  delete MarchSoldierChangePush::default_instance_;
  delete MarchSoldierChangePush_reflection_;
  delete SoldierTrainingPush::default_instance_;
  delete SoldierTrainingPush_reflection_;
  delete FormationPush::default_instance_;
  delete FormationPush_reflection_;
}

void protobuf_AddDesc_training_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::slg::protocol::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016training.proto\022\014slg.protocol\032\014common.p"
    "roto\"I\n\020ArmyFormationDTO\022\n\n\002id\030\001 \002(\005\022)\n\007"
    "soldier\030\002 \003(\0132\030.slg.protocol.SoldierDTO\""
    "T\n\017TrainingRequest\022\021\n\ttrainType\030\001 \002(\005\022\023\n"
    "\013soldierType\030\002 \002(\005\022\013\n\003bid\030\003 \002(\005\022\014\n\004oper\030"
    "\004 \002(\005\"a\n\020TrainingResponse\022\013\n\003bid\030\001 \002(\005\022-"
    "\n\013soldierInfo\030\002 \002(\0132\030.slg.protocol.Soldi"
    "erDTO\022\021\n\ttrainType\030\003 \002(\005\"!\n\022SoldierDrawR"
    "equest\022\013\n\003bid\030\001 \002(\005\"Q\n\023SoldierDrawRespon"
    "se\022\013\n\003bid\030\001 \002(\005\022-\n\013soldierInfo\030\002 \002(\0132\030.s"
    "lg.protocol.SoldierDTO\"\027\n\025AllSoldierInfo"
    "Request\"G\n\026AllSoldierInfoResponse\022-\n\013sol"
    "dierInfo\030\001 \003(\0132\030.slg.protocol.SoldierDTO"
    "\"L\n\023SetFormationRequest\022\n\n\002id\030\001 \002(\005\022)\n\007s"
    "oldier\030\002 \003(\0132\030.slg.protocol.SoldierDTO\"M"
    "\n\024SetFormationResponse\022\n\n\002id\030\001 \002(\005\022)\n\007so"
    "ldier\030\002 \003(\0132\030.slg.protocol.SoldierDTO\"C\n"
    "\021SoldierChangePush\022.\n\014idleSoldiers\030\001 \003(\013"
    "2\030.slg.protocol.SoldierDTO\"I\n\026MarchSoldi"
    "erChangePush\022/\n\rmarchSoldiers\030\001 \003(\0132\030.sl"
    "g.protocol.SoldierDTO\"T\n\023SoldierTraining"
    "Push\022-\n\013soldierInfo\030\001 \001(\0132\030.slg.protocol"
    ".SoldierDTO\022\016\n\006isDone\030\002 \001(\010\"C\n\rFormation"
    "Push\0222\n\nformations\030\002 \003(\0132\036.slg.protocol."
    "ArmyFormationDTO*q\n\016TrainCommandId\022\023\n\016TR"
    "AINING_TRAIN\020\364\003\022\022\n\rTRAINING_DRAW\020\365\003\022\031\n\024T"
    "RAINING_ALL_SOLDIER\020\366\003\022\033\n\026TRAINING_SET_F"
    "ORMATION\020\367\003*\216\001\n\016TrainingPushId\022\035\n\027TRAINI"
    "NG_SOLDIER_CHANGE\020\305\212\003\022\037\n\031TRAINING_SOLDIE"
    "R_TRAINING\020\306\212\003\022\030\n\022TRAINING_FORMATION\020\307\212\003"
    "\022\"\n\034TRAINING_MARCHSOLDIER_CHANGE\020\310\212\003B-\n\034"
    "com.bonusstudio.slg.protocolB\rTrainingPr"
    "oto", 1283);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "training.proto", &protobuf_RegisterTypes);
  ArmyFormationDTO::default_instance_ = new ArmyFormationDTO();
  TrainingRequest::default_instance_ = new TrainingRequest();
  TrainingResponse::default_instance_ = new TrainingResponse();
  SoldierDrawRequest::default_instance_ = new SoldierDrawRequest();
  SoldierDrawResponse::default_instance_ = new SoldierDrawResponse();
  AllSoldierInfoRequest::default_instance_ = new AllSoldierInfoRequest();
  AllSoldierInfoResponse::default_instance_ = new AllSoldierInfoResponse();
  SetFormationRequest::default_instance_ = new SetFormationRequest();
  SetFormationResponse::default_instance_ = new SetFormationResponse();
  SoldierChangePush::default_instance_ = new SoldierChangePush();
  MarchSoldierChangePush::default_instance_ = new MarchSoldierChangePush();
  SoldierTrainingPush::default_instance_ = new SoldierTrainingPush();
  FormationPush::default_instance_ = new FormationPush();
  ArmyFormationDTO::default_instance_->InitAsDefaultInstance();
  TrainingRequest::default_instance_->InitAsDefaultInstance();
  TrainingResponse::default_instance_->InitAsDefaultInstance();
  SoldierDrawRequest::default_instance_->InitAsDefaultInstance();
  SoldierDrawResponse::default_instance_->InitAsDefaultInstance();
  AllSoldierInfoRequest::default_instance_->InitAsDefaultInstance();
  AllSoldierInfoResponse::default_instance_->InitAsDefaultInstance();
  SetFormationRequest::default_instance_->InitAsDefaultInstance();
  SetFormationResponse::default_instance_->InitAsDefaultInstance();
  SoldierChangePush::default_instance_->InitAsDefaultInstance();
  MarchSoldierChangePush::default_instance_->InitAsDefaultInstance();
  SoldierTrainingPush::default_instance_->InitAsDefaultInstance();
  FormationPush::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_training_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_training_2eproto {
  StaticDescriptorInitializer_training_2eproto() {
    protobuf_AddDesc_training_2eproto();
  }
} static_descriptor_initializer_training_2eproto_;
const ::google::protobuf::EnumDescriptor* TrainCommandId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainCommandId_descriptor_;
}
bool TrainCommandId_IsValid(int value) {
  switch(value) {
    case 500:
    case 501:
    case 502:
    case 503:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TrainingPushId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingPushId_descriptor_;
}
bool TrainingPushId_IsValid(int value) {
  switch(value) {
    case 50501:
    case 50502:
    case 50503:
    case 50504:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ArmyFormationDTO::kIdFieldNumber;
const int ArmyFormationDTO::kSoldierFieldNumber;
#endif  // !_MSC_VER

ArmyFormationDTO::ArmyFormationDTO()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ArmyFormationDTO::InitAsDefaultInstance() {
}

ArmyFormationDTO::ArmyFormationDTO(const ArmyFormationDTO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ArmyFormationDTO::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArmyFormationDTO::~ArmyFormationDTO() {
  SharedDtor();
}

void ArmyFormationDTO::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ArmyFormationDTO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArmyFormationDTO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArmyFormationDTO_descriptor_;
}

const ArmyFormationDTO& ArmyFormationDTO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

ArmyFormationDTO* ArmyFormationDTO::default_instance_ = NULL;

ArmyFormationDTO* ArmyFormationDTO::New() const {
  return new ArmyFormationDTO;
}

void ArmyFormationDTO::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  soldier_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArmyFormationDTO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldier;
        break;
      }

      // repeated .slg.protocol.SoldierDTO soldier = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_soldier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_soldier()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldier;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArmyFormationDTO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .slg.protocol.SoldierDTO soldier = 2;
  for (int i = 0; i < this->soldier_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soldier(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ArmyFormationDTO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .slg.protocol.SoldierDTO soldier = 2;
  for (int i = 0; i < this->soldier_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soldier(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ArmyFormationDTO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  // repeated .slg.protocol.SoldierDTO soldier = 2;
  total_size += 1 * this->soldier_size();
  for (int i = 0; i < this->soldier_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->soldier(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArmyFormationDTO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArmyFormationDTO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArmyFormationDTO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArmyFormationDTO::MergeFrom(const ArmyFormationDTO& from) {
  GOOGLE_CHECK_NE(&from, this);
  soldier_.MergeFrom(from.soldier_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArmyFormationDTO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmyFormationDTO::CopyFrom(const ArmyFormationDTO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmyFormationDTO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < soldier_size(); i++) {
    if (!this->soldier(i).IsInitialized()) return false;
  }
  return true;
}

void ArmyFormationDTO::Swap(ArmyFormationDTO* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    soldier_.Swap(&other->soldier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArmyFormationDTO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArmyFormationDTO_descriptor_;
  metadata.reflection = ArmyFormationDTO_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrainingRequest::kTrainTypeFieldNumber;
const int TrainingRequest::kSoldierTypeFieldNumber;
const int TrainingRequest::kBidFieldNumber;
const int TrainingRequest::kOperFieldNumber;
#endif  // !_MSC_VER

TrainingRequest::TrainingRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainingRequest::InitAsDefaultInstance() {
}

TrainingRequest::TrainingRequest(const TrainingRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainingRequest::SharedCtor() {
  _cached_size_ = 0;
  traintype_ = 0;
  soldiertype_ = 0;
  bid_ = 0;
  oper_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainingRequest::~TrainingRequest() {
  SharedDtor();
}

void TrainingRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainingRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingRequest_descriptor_;
}

const TrainingRequest& TrainingRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

TrainingRequest* TrainingRequest::default_instance_ = NULL;

TrainingRequest* TrainingRequest::New() const {
  return new TrainingRequest;
}

void TrainingRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    traintype_ = 0;
    soldiertype_ = 0;
    bid_ = 0;
    oper_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 trainType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &traintype_)));
          set_has_traintype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_soldierType;
        break;
      }

      // required int32 soldierType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_soldierType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soldiertype_)));
          set_has_soldiertype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bid;
        break;
      }

      // required int32 bid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_oper;
        break;
      }

      // required int32 oper = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_)));
          set_has_oper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 trainType = 1;
  if (has_traintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->traintype(), output);
  }

  // required int32 soldierType = 2;
  if (has_soldiertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->soldiertype(), output);
  }

  // required int32 bid = 3;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bid(), output);
  }

  // required int32 oper = 4;
  if (has_oper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->oper(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainingRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 trainType = 1;
  if (has_traintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->traintype(), target);
  }

  // required int32 soldierType = 2;
  if (has_soldiertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->soldiertype(), target);
  }

  // required int32 bid = 3;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bid(), target);
  }

  // required int32 oper = 4;
  if (has_oper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->oper(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainingRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 trainType = 1;
    if (has_traintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->traintype());
    }

    // required int32 soldierType = 2;
    if (has_soldiertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soldiertype());
    }

    // required int32 bid = 3;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bid());
    }

    // required int32 oper = 4;
    if (has_oper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainingRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainingRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainingRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainingRequest::MergeFrom(const TrainingRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_traintype()) {
      set_traintype(from.traintype());
    }
    if (from.has_soldiertype()) {
      set_soldiertype(from.soldiertype());
    }
    if (from.has_bid()) {
      set_bid(from.bid());
    }
    if (from.has_oper()) {
      set_oper(from.oper());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainingRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingRequest::CopyFrom(const TrainingRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void TrainingRequest::Swap(TrainingRequest* other) {
  if (other != this) {
    std::swap(traintype_, other->traintype_);
    std::swap(soldiertype_, other->soldiertype_);
    std::swap(bid_, other->bid_);
    std::swap(oper_, other->oper_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainingRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainingRequest_descriptor_;
  metadata.reflection = TrainingRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrainingResponse::kBidFieldNumber;
const int TrainingResponse::kSoldierInfoFieldNumber;
const int TrainingResponse::kTrainTypeFieldNumber;
#endif  // !_MSC_VER

TrainingResponse::TrainingResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainingResponse::InitAsDefaultInstance() {
  soldierinfo_ = const_cast< ::slg::protocol::SoldierDTO*>(&::slg::protocol::SoldierDTO::default_instance());
}

TrainingResponse::TrainingResponse(const TrainingResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainingResponse::SharedCtor() {
  _cached_size_ = 0;
  bid_ = 0;
  soldierinfo_ = NULL;
  traintype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainingResponse::~TrainingResponse() {
  SharedDtor();
}

void TrainingResponse::SharedDtor() {
  if (this != default_instance_) {
    delete soldierinfo_;
  }
}

void TrainingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingResponse_descriptor_;
}

const TrainingResponse& TrainingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

TrainingResponse* TrainingResponse::default_instance_ = NULL;

TrainingResponse* TrainingResponse::New() const {
  return new TrainingResponse;
}

void TrainingResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bid_ = 0;
    if (has_soldierinfo()) {
      if (soldierinfo_ != NULL) soldierinfo_->::slg::protocol::SoldierDTO::Clear();
    }
    traintype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldierInfo;
        break;
      }

      // required .slg.protocol.SoldierDTO soldierInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_soldierInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_soldierinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_trainType;
        break;
      }

      // required int32 trainType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_trainType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &traintype_)));
          set_has_traintype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bid(), output);
  }

  // required .slg.protocol.SoldierDTO soldierInfo = 2;
  if (has_soldierinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soldierinfo(), output);
  }

  // required int32 trainType = 3;
  if (has_traintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->traintype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainingResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 bid = 1;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bid(), target);
  }

  // required .slg.protocol.SoldierDTO soldierInfo = 2;
  if (has_soldierinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soldierinfo(), target);
  }

  // required int32 trainType = 3;
  if (has_traintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->traintype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainingResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 bid = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bid());
    }

    // required .slg.protocol.SoldierDTO soldierInfo = 2;
    if (has_soldierinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->soldierinfo());
    }

    // required int32 trainType = 3;
    if (has_traintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->traintype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainingResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainingResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainingResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainingResponse::MergeFrom(const TrainingResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_bid(from.bid());
    }
    if (from.has_soldierinfo()) {
      mutable_soldierinfo()->::slg::protocol::SoldierDTO::MergeFrom(from.soldierinfo());
    }
    if (from.has_traintype()) {
      set_traintype(from.traintype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainingResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingResponse::CopyFrom(const TrainingResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_soldierinfo()) {
    if (!this->soldierinfo().IsInitialized()) return false;
  }
  return true;
}

void TrainingResponse::Swap(TrainingResponse* other) {
  if (other != this) {
    std::swap(bid_, other->bid_);
    std::swap(soldierinfo_, other->soldierinfo_);
    std::swap(traintype_, other->traintype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainingResponse_descriptor_;
  metadata.reflection = TrainingResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SoldierDrawRequest::kBidFieldNumber;
#endif  // !_MSC_VER

SoldierDrawRequest::SoldierDrawRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SoldierDrawRequest::InitAsDefaultInstance() {
}

SoldierDrawRequest::SoldierDrawRequest(const SoldierDrawRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SoldierDrawRequest::SharedCtor() {
  _cached_size_ = 0;
  bid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SoldierDrawRequest::~SoldierDrawRequest() {
  SharedDtor();
}

void SoldierDrawRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SoldierDrawRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoldierDrawRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SoldierDrawRequest_descriptor_;
}

const SoldierDrawRequest& SoldierDrawRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

SoldierDrawRequest* SoldierDrawRequest::default_instance_ = NULL;

SoldierDrawRequest* SoldierDrawRequest::New() const {
  return new SoldierDrawRequest;
}

void SoldierDrawRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SoldierDrawRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SoldierDrawRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SoldierDrawRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 bid = 1;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SoldierDrawRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 bid = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoldierDrawRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SoldierDrawRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SoldierDrawRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SoldierDrawRequest::MergeFrom(const SoldierDrawRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_bid(from.bid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SoldierDrawRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoldierDrawRequest::CopyFrom(const SoldierDrawRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoldierDrawRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SoldierDrawRequest::Swap(SoldierDrawRequest* other) {
  if (other != this) {
    std::swap(bid_, other->bid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SoldierDrawRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SoldierDrawRequest_descriptor_;
  metadata.reflection = SoldierDrawRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SoldierDrawResponse::kBidFieldNumber;
const int SoldierDrawResponse::kSoldierInfoFieldNumber;
#endif  // !_MSC_VER

SoldierDrawResponse::SoldierDrawResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SoldierDrawResponse::InitAsDefaultInstance() {
  soldierinfo_ = const_cast< ::slg::protocol::SoldierDTO*>(&::slg::protocol::SoldierDTO::default_instance());
}

SoldierDrawResponse::SoldierDrawResponse(const SoldierDrawResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SoldierDrawResponse::SharedCtor() {
  _cached_size_ = 0;
  bid_ = 0;
  soldierinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SoldierDrawResponse::~SoldierDrawResponse() {
  SharedDtor();
}

void SoldierDrawResponse::SharedDtor() {
  if (this != default_instance_) {
    delete soldierinfo_;
  }
}

void SoldierDrawResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoldierDrawResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SoldierDrawResponse_descriptor_;
}

const SoldierDrawResponse& SoldierDrawResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

SoldierDrawResponse* SoldierDrawResponse::default_instance_ = NULL;

SoldierDrawResponse* SoldierDrawResponse::New() const {
  return new SoldierDrawResponse;
}

void SoldierDrawResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bid_ = 0;
    if (has_soldierinfo()) {
      if (soldierinfo_ != NULL) soldierinfo_->::slg::protocol::SoldierDTO::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SoldierDrawResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bid_)));
          set_has_bid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldierInfo;
        break;
      }

      // required .slg.protocol.SoldierDTO soldierInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_soldierInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_soldierinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SoldierDrawResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 bid = 1;
  if (has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bid(), output);
  }

  // required .slg.protocol.SoldierDTO soldierInfo = 2;
  if (has_soldierinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soldierinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SoldierDrawResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 bid = 1;
  if (has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bid(), target);
  }

  // required .slg.protocol.SoldierDTO soldierInfo = 2;
  if (has_soldierinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soldierinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SoldierDrawResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 bid = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bid());
    }

    // required .slg.protocol.SoldierDTO soldierInfo = 2;
    if (has_soldierinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->soldierinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoldierDrawResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SoldierDrawResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SoldierDrawResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SoldierDrawResponse::MergeFrom(const SoldierDrawResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bid()) {
      set_bid(from.bid());
    }
    if (from.has_soldierinfo()) {
      mutable_soldierinfo()->::slg::protocol::SoldierDTO::MergeFrom(from.soldierinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SoldierDrawResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoldierDrawResponse::CopyFrom(const SoldierDrawResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoldierDrawResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_soldierinfo()) {
    if (!this->soldierinfo().IsInitialized()) return false;
  }
  return true;
}

void SoldierDrawResponse::Swap(SoldierDrawResponse* other) {
  if (other != this) {
    std::swap(bid_, other->bid_);
    std::swap(soldierinfo_, other->soldierinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SoldierDrawResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SoldierDrawResponse_descriptor_;
  metadata.reflection = SoldierDrawResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

AllSoldierInfoRequest::AllSoldierInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllSoldierInfoRequest::InitAsDefaultInstance() {
}

AllSoldierInfoRequest::AllSoldierInfoRequest(const AllSoldierInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllSoldierInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllSoldierInfoRequest::~AllSoldierInfoRequest() {
  SharedDtor();
}

void AllSoldierInfoRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AllSoldierInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllSoldierInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllSoldierInfoRequest_descriptor_;
}

const AllSoldierInfoRequest& AllSoldierInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

AllSoldierInfoRequest* AllSoldierInfoRequest::default_instance_ = NULL;

AllSoldierInfoRequest* AllSoldierInfoRequest::New() const {
  return new AllSoldierInfoRequest;
}

void AllSoldierInfoRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllSoldierInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AllSoldierInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllSoldierInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllSoldierInfoRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllSoldierInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllSoldierInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllSoldierInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllSoldierInfoRequest::MergeFrom(const AllSoldierInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllSoldierInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllSoldierInfoRequest::CopyFrom(const AllSoldierInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllSoldierInfoRequest::IsInitialized() const {

  return true;
}

void AllSoldierInfoRequest::Swap(AllSoldierInfoRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllSoldierInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllSoldierInfoRequest_descriptor_;
  metadata.reflection = AllSoldierInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllSoldierInfoResponse::kSoldierInfoFieldNumber;
#endif  // !_MSC_VER

AllSoldierInfoResponse::AllSoldierInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllSoldierInfoResponse::InitAsDefaultInstance() {
}

AllSoldierInfoResponse::AllSoldierInfoResponse(const AllSoldierInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllSoldierInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllSoldierInfoResponse::~AllSoldierInfoResponse() {
  SharedDtor();
}

void AllSoldierInfoResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AllSoldierInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllSoldierInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllSoldierInfoResponse_descriptor_;
}

const AllSoldierInfoResponse& AllSoldierInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

AllSoldierInfoResponse* AllSoldierInfoResponse::default_instance_ = NULL;

AllSoldierInfoResponse* AllSoldierInfoResponse::New() const {
  return new AllSoldierInfoResponse;
}

void AllSoldierInfoResponse::Clear() {
  soldierinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllSoldierInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .slg.protocol.SoldierDTO soldierInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_soldierInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_soldierinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_soldierInfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllSoldierInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .slg.protocol.SoldierDTO soldierInfo = 1;
  for (int i = 0; i < this->soldierinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->soldierinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllSoldierInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .slg.protocol.SoldierDTO soldierInfo = 1;
  for (int i = 0; i < this->soldierinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->soldierinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllSoldierInfoResponse::ByteSize() const {
  int total_size = 0;

  // repeated .slg.protocol.SoldierDTO soldierInfo = 1;
  total_size += 1 * this->soldierinfo_size();
  for (int i = 0; i < this->soldierinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->soldierinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllSoldierInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllSoldierInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllSoldierInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllSoldierInfoResponse::MergeFrom(const AllSoldierInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  soldierinfo_.MergeFrom(from.soldierinfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllSoldierInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllSoldierInfoResponse::CopyFrom(const AllSoldierInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllSoldierInfoResponse::IsInitialized() const {

  for (int i = 0; i < soldierinfo_size(); i++) {
    if (!this->soldierinfo(i).IsInitialized()) return false;
  }
  return true;
}

void AllSoldierInfoResponse::Swap(AllSoldierInfoResponse* other) {
  if (other != this) {
    soldierinfo_.Swap(&other->soldierinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllSoldierInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllSoldierInfoResponse_descriptor_;
  metadata.reflection = AllSoldierInfoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFormationRequest::kIdFieldNumber;
const int SetFormationRequest::kSoldierFieldNumber;
#endif  // !_MSC_VER

SetFormationRequest::SetFormationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetFormationRequest::InitAsDefaultInstance() {
}

SetFormationRequest::SetFormationRequest(const SetFormationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetFormationRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFormationRequest::~SetFormationRequest() {
  SharedDtor();
}

void SetFormationRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetFormationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFormationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFormationRequest_descriptor_;
}

const SetFormationRequest& SetFormationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

SetFormationRequest* SetFormationRequest::default_instance_ = NULL;

SetFormationRequest* SetFormationRequest::New() const {
  return new SetFormationRequest;
}

void SetFormationRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  soldier_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFormationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldier;
        break;
      }

      // repeated .slg.protocol.SoldierDTO soldier = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_soldier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_soldier()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldier;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetFormationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .slg.protocol.SoldierDTO soldier = 2;
  for (int i = 0; i < this->soldier_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soldier(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetFormationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .slg.protocol.SoldierDTO soldier = 2;
  for (int i = 0; i < this->soldier_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soldier(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetFormationRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  // repeated .slg.protocol.SoldierDTO soldier = 2;
  total_size += 1 * this->soldier_size();
  for (int i = 0; i < this->soldier_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->soldier(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFormationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFormationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFormationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFormationRequest::MergeFrom(const SetFormationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  soldier_.MergeFrom(from.soldier_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFormationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFormationRequest::CopyFrom(const SetFormationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFormationRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < soldier_size(); i++) {
    if (!this->soldier(i).IsInitialized()) return false;
  }
  return true;
}

void SetFormationRequest::Swap(SetFormationRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    soldier_.Swap(&other->soldier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFormationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFormationRequest_descriptor_;
  metadata.reflection = SetFormationRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFormationResponse::kIdFieldNumber;
const int SetFormationResponse::kSoldierFieldNumber;
#endif  // !_MSC_VER

SetFormationResponse::SetFormationResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetFormationResponse::InitAsDefaultInstance() {
}

SetFormationResponse::SetFormationResponse(const SetFormationResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetFormationResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFormationResponse::~SetFormationResponse() {
  SharedDtor();
}

void SetFormationResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetFormationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFormationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFormationResponse_descriptor_;
}

const SetFormationResponse& SetFormationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

SetFormationResponse* SetFormationResponse::default_instance_ = NULL;

SetFormationResponse* SetFormationResponse::New() const {
  return new SetFormationResponse;
}

void SetFormationResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  soldier_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFormationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldier;
        break;
      }

      // repeated .slg.protocol.SoldierDTO soldier = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_soldier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_soldier()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_soldier;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetFormationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .slg.protocol.SoldierDTO soldier = 2;
  for (int i = 0; i < this->soldier_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->soldier(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetFormationResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .slg.protocol.SoldierDTO soldier = 2;
  for (int i = 0; i < this->soldier_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->soldier(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetFormationResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  // repeated .slg.protocol.SoldierDTO soldier = 2;
  total_size += 1 * this->soldier_size();
  for (int i = 0; i < this->soldier_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->soldier(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetFormationResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFormationResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFormationResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFormationResponse::MergeFrom(const SetFormationResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  soldier_.MergeFrom(from.soldier_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFormationResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFormationResponse::CopyFrom(const SetFormationResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFormationResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < soldier_size(); i++) {
    if (!this->soldier(i).IsInitialized()) return false;
  }
  return true;
}

void SetFormationResponse::Swap(SetFormationResponse* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    soldier_.Swap(&other->soldier_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFormationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFormationResponse_descriptor_;
  metadata.reflection = SetFormationResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SoldierChangePush::kIdleSoldiersFieldNumber;
#endif  // !_MSC_VER

SoldierChangePush::SoldierChangePush()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SoldierChangePush::InitAsDefaultInstance() {
}

SoldierChangePush::SoldierChangePush(const SoldierChangePush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SoldierChangePush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SoldierChangePush::~SoldierChangePush() {
  SharedDtor();
}

void SoldierChangePush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SoldierChangePush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoldierChangePush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SoldierChangePush_descriptor_;
}

const SoldierChangePush& SoldierChangePush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

SoldierChangePush* SoldierChangePush::default_instance_ = NULL;

SoldierChangePush* SoldierChangePush::New() const {
  return new SoldierChangePush;
}

void SoldierChangePush::Clear() {
  idlesoldiers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SoldierChangePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .slg.protocol.SoldierDTO idleSoldiers = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_idleSoldiers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_idlesoldiers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_idleSoldiers;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SoldierChangePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .slg.protocol.SoldierDTO idleSoldiers = 1;
  for (int i = 0; i < this->idlesoldiers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->idlesoldiers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SoldierChangePush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .slg.protocol.SoldierDTO idleSoldiers = 1;
  for (int i = 0; i < this->idlesoldiers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->idlesoldiers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SoldierChangePush::ByteSize() const {
  int total_size = 0;

  // repeated .slg.protocol.SoldierDTO idleSoldiers = 1;
  total_size += 1 * this->idlesoldiers_size();
  for (int i = 0; i < this->idlesoldiers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->idlesoldiers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoldierChangePush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SoldierChangePush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SoldierChangePush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SoldierChangePush::MergeFrom(const SoldierChangePush& from) {
  GOOGLE_CHECK_NE(&from, this);
  idlesoldiers_.MergeFrom(from.idlesoldiers_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SoldierChangePush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoldierChangePush::CopyFrom(const SoldierChangePush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoldierChangePush::IsInitialized() const {

  for (int i = 0; i < idlesoldiers_size(); i++) {
    if (!this->idlesoldiers(i).IsInitialized()) return false;
  }
  return true;
}

void SoldierChangePush::Swap(SoldierChangePush* other) {
  if (other != this) {
    idlesoldiers_.Swap(&other->idlesoldiers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SoldierChangePush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SoldierChangePush_descriptor_;
  metadata.reflection = SoldierChangePush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MarchSoldierChangePush::kMarchSoldiersFieldNumber;
#endif  // !_MSC_VER

MarchSoldierChangePush::MarchSoldierChangePush()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MarchSoldierChangePush::InitAsDefaultInstance() {
}

MarchSoldierChangePush::MarchSoldierChangePush(const MarchSoldierChangePush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MarchSoldierChangePush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MarchSoldierChangePush::~MarchSoldierChangePush() {
  SharedDtor();
}

void MarchSoldierChangePush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MarchSoldierChangePush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarchSoldierChangePush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MarchSoldierChangePush_descriptor_;
}

const MarchSoldierChangePush& MarchSoldierChangePush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

MarchSoldierChangePush* MarchSoldierChangePush::default_instance_ = NULL;

MarchSoldierChangePush* MarchSoldierChangePush::New() const {
  return new MarchSoldierChangePush;
}

void MarchSoldierChangePush::Clear() {
  marchsoldiers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MarchSoldierChangePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .slg.protocol.SoldierDTO marchSoldiers = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_marchSoldiers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_marchsoldiers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_marchSoldiers;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MarchSoldierChangePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .slg.protocol.SoldierDTO marchSoldiers = 1;
  for (int i = 0; i < this->marchsoldiers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->marchsoldiers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MarchSoldierChangePush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .slg.protocol.SoldierDTO marchSoldiers = 1;
  for (int i = 0; i < this->marchsoldiers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->marchsoldiers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MarchSoldierChangePush::ByteSize() const {
  int total_size = 0;

  // repeated .slg.protocol.SoldierDTO marchSoldiers = 1;
  total_size += 1 * this->marchsoldiers_size();
  for (int i = 0; i < this->marchsoldiers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->marchsoldiers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarchSoldierChangePush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MarchSoldierChangePush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MarchSoldierChangePush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MarchSoldierChangePush::MergeFrom(const MarchSoldierChangePush& from) {
  GOOGLE_CHECK_NE(&from, this);
  marchsoldiers_.MergeFrom(from.marchsoldiers_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MarchSoldierChangePush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarchSoldierChangePush::CopyFrom(const MarchSoldierChangePush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarchSoldierChangePush::IsInitialized() const {

  for (int i = 0; i < marchsoldiers_size(); i++) {
    if (!this->marchsoldiers(i).IsInitialized()) return false;
  }
  return true;
}

void MarchSoldierChangePush::Swap(MarchSoldierChangePush* other) {
  if (other != this) {
    marchsoldiers_.Swap(&other->marchsoldiers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MarchSoldierChangePush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MarchSoldierChangePush_descriptor_;
  metadata.reflection = MarchSoldierChangePush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SoldierTrainingPush::kSoldierInfoFieldNumber;
const int SoldierTrainingPush::kIsDoneFieldNumber;
#endif  // !_MSC_VER

SoldierTrainingPush::SoldierTrainingPush()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SoldierTrainingPush::InitAsDefaultInstance() {
  soldierinfo_ = const_cast< ::slg::protocol::SoldierDTO*>(&::slg::protocol::SoldierDTO::default_instance());
}

SoldierTrainingPush::SoldierTrainingPush(const SoldierTrainingPush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SoldierTrainingPush::SharedCtor() {
  _cached_size_ = 0;
  soldierinfo_ = NULL;
  isdone_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SoldierTrainingPush::~SoldierTrainingPush() {
  SharedDtor();
}

void SoldierTrainingPush::SharedDtor() {
  if (this != default_instance_) {
    delete soldierinfo_;
  }
}

void SoldierTrainingPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoldierTrainingPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SoldierTrainingPush_descriptor_;
}

const SoldierTrainingPush& SoldierTrainingPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

SoldierTrainingPush* SoldierTrainingPush::default_instance_ = NULL;

SoldierTrainingPush* SoldierTrainingPush::New() const {
  return new SoldierTrainingPush;
}

void SoldierTrainingPush::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_soldierinfo()) {
      if (soldierinfo_ != NULL) soldierinfo_->::slg::protocol::SoldierDTO::Clear();
    }
    isdone_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SoldierTrainingPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .slg.protocol.SoldierDTO soldierInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_soldierinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_isDone;
        break;
      }

      // optional bool isDone = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isDone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdone_)));
          set_has_isdone();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SoldierTrainingPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .slg.protocol.SoldierDTO soldierInfo = 1;
  if (has_soldierinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->soldierinfo(), output);
  }

  // optional bool isDone = 2;
  if (has_isdone()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isdone(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SoldierTrainingPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .slg.protocol.SoldierDTO soldierInfo = 1;
  if (has_soldierinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->soldierinfo(), target);
  }

  // optional bool isDone = 2;
  if (has_isdone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isdone(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SoldierTrainingPush::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .slg.protocol.SoldierDTO soldierInfo = 1;
    if (has_soldierinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->soldierinfo());
    }

    // optional bool isDone = 2;
    if (has_isdone()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoldierTrainingPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SoldierTrainingPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SoldierTrainingPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SoldierTrainingPush::MergeFrom(const SoldierTrainingPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_soldierinfo()) {
      mutable_soldierinfo()->::slg::protocol::SoldierDTO::MergeFrom(from.soldierinfo());
    }
    if (from.has_isdone()) {
      set_isdone(from.isdone());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SoldierTrainingPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoldierTrainingPush::CopyFrom(const SoldierTrainingPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoldierTrainingPush::IsInitialized() const {

  if (has_soldierinfo()) {
    if (!this->soldierinfo().IsInitialized()) return false;
  }
  return true;
}

void SoldierTrainingPush::Swap(SoldierTrainingPush* other) {
  if (other != this) {
    std::swap(soldierinfo_, other->soldierinfo_);
    std::swap(isdone_, other->isdone_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SoldierTrainingPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SoldierTrainingPush_descriptor_;
  metadata.reflection = SoldierTrainingPush_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FormationPush::kFormationsFieldNumber;
#endif  // !_MSC_VER

FormationPush::FormationPush()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FormationPush::InitAsDefaultInstance() {
}

FormationPush::FormationPush(const FormationPush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FormationPush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FormationPush::~FormationPush() {
  SharedDtor();
}

void FormationPush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FormationPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FormationPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FormationPush_descriptor_;
}

const FormationPush& FormationPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_2eproto();
  return *default_instance_;
}

FormationPush* FormationPush::default_instance_ = NULL;

FormationPush* FormationPush::New() const {
  return new FormationPush;
}

void FormationPush::Clear() {
  formations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FormationPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .slg.protocol.ArmyFormationDTO formations = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_formations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_formations()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_formations;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FormationPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .slg.protocol.ArmyFormationDTO formations = 2;
  for (int i = 0; i < this->formations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->formations(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FormationPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .slg.protocol.ArmyFormationDTO formations = 2;
  for (int i = 0; i < this->formations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->formations(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FormationPush::ByteSize() const {
  int total_size = 0;

  // repeated .slg.protocol.ArmyFormationDTO formations = 2;
  total_size += 1 * this->formations_size();
  for (int i = 0; i < this->formations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->formations(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FormationPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FormationPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FormationPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FormationPush::MergeFrom(const FormationPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  formations_.MergeFrom(from.formations_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FormationPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormationPush::CopyFrom(const FormationPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormationPush::IsInitialized() const {

  for (int i = 0; i < formations_size(); i++) {
    if (!this->formations(i).IsInitialized()) return false;
  }
  return true;
}

void FormationPush::Swap(FormationPush* other) {
  if (other != this) {
    formations_.Swap(&other->formations_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FormationPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FormationPush_descriptor_;
  metadata.reflection = FormationPush_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

// @@protoc_insertion_point(global_scope)
