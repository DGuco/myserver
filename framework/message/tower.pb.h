// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tower.proto

#ifndef PROTOBUF_tower_2eproto__INCLUDED
#define PROTOBUF_tower_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tower_2eproto();
void protobuf_AssignDesc_tower_2eproto();
void protobuf_ShutdownFile_tower_2eproto();

class TowerDTO;
class AddAmmunitionRequest;
class AddAmmunitionResponse;
class TowerPush;

enum TowerCommandId {
  MARCH_ADD_AMMUNITION = 901
};
bool TowerCommandId_IsValid(int value);
const TowerCommandId TowerCommandId_MIN = MARCH_ADD_AMMUNITION;
const TowerCommandId TowerCommandId_MAX = MARCH_ADD_AMMUNITION;
const int TowerCommandId_ARRAYSIZE = TowerCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TowerCommandId_descriptor();
inline const ::std::string& TowerCommandId_Name(TowerCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TowerCommandId_descriptor(), value);
}
inline bool TowerCommandId_Parse(
    const ::std::string& name, TowerCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TowerCommandId>(
    TowerCommandId_descriptor(), name, value);
}
enum TowerPushId {
  TOWER_CHANGE_PUSH = 50901
};
bool TowerPushId_IsValid(int value);
const TowerPushId TowerPushId_MIN = TOWER_CHANGE_PUSH;
const TowerPushId TowerPushId_MAX = TOWER_CHANGE_PUSH;
const int TowerPushId_ARRAYSIZE = TowerPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TowerPushId_descriptor();
inline const ::std::string& TowerPushId_Name(TowerPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TowerPushId_descriptor(), value);
}
inline bool TowerPushId_Parse(
    const ::std::string& name, TowerPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TowerPushId>(
    TowerPushId_descriptor(), name, value);
}
// ===================================================================

class TowerDTO : public ::google::protobuf::Message {
 public:
  TowerDTO();
  virtual ~TowerDTO();

  TowerDTO(const TowerDTO& from);

  inline TowerDTO& operator=(const TowerDTO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerDTO& default_instance();

  void Swap(TowerDTO* other);

  // implements Message ----------------------------------------------

  TowerDTO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerDTO& from);
  void MergeFrom(const TowerDTO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.TowerDTO)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static TowerDTO* default_instance_;
};
// -------------------------------------------------------------------

class AddAmmunitionRequest : public ::google::protobuf::Message {
 public:
  AddAmmunitionRequest();
  virtual ~AddAmmunitionRequest();

  AddAmmunitionRequest(const AddAmmunitionRequest& from);

  inline AddAmmunitionRequest& operator=(const AddAmmunitionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddAmmunitionRequest& default_instance();

  void Swap(AddAmmunitionRequest* other);

  // implements Message ----------------------------------------------

  AddAmmunitionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddAmmunitionRequest& from);
  void MergeFrom(const AddAmmunitionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // required int32 oper = 2;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 2;
  inline ::google::protobuf::int32 oper() const;
  inline void set_oper(::google::protobuf::int32 value);

  // required int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.AddAmmunitionRequest)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();
  inline void set_has_oper();
  inline void clear_has_oper();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bid_;
  ::google::protobuf::int32 oper_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static AddAmmunitionRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddAmmunitionResponse : public ::google::protobuf::Message {
 public:
  AddAmmunitionResponse();
  virtual ~AddAmmunitionResponse();

  AddAmmunitionResponse(const AddAmmunitionResponse& from);

  inline AddAmmunitionResponse& operator=(const AddAmmunitionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddAmmunitionResponse& default_instance();

  void Swap(AddAmmunitionResponse* other);

  // implements Message ----------------------------------------------

  AddAmmunitionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddAmmunitionResponse& from);
  void MergeFrom(const AddAmmunitionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bid = 1;
  inline bool has_bid() const;
  inline void clear_bid();
  static const int kBidFieldNumber = 1;
  inline ::google::protobuf::int32 bid() const;
  inline void set_bid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.AddAmmunitionResponse)
 private:
  inline void set_has_bid();
  inline void clear_has_bid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static AddAmmunitionResponse* default_instance_;
};
// -------------------------------------------------------------------

class TowerPush : public ::google::protobuf::Message {
 public:
  TowerPush();
  virtual ~TowerPush();

  TowerPush(const TowerPush& from);

  inline TowerPush& operator=(const TowerPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TowerPush& default_instance();

  void Swap(TowerPush* other);

  // implements Message ----------------------------------------------

  TowerPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TowerPush& from);
  void MergeFrom(const TowerPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.TowerDTO towers = 1;
  inline int towers_size() const;
  inline void clear_towers();
  static const int kTowersFieldNumber = 1;
  inline const ::slg::protocol::TowerDTO& towers(int index) const;
  inline ::slg::protocol::TowerDTO* mutable_towers(int index);
  inline ::slg::protocol::TowerDTO* add_towers();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::TowerDTO >&
      towers() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::TowerDTO >*
      mutable_towers();

  // @@protoc_insertion_point(class_scope:slg.protocol.TowerPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::TowerDTO > towers_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_tower_2eproto();
  friend void protobuf_AssignDesc_tower_2eproto();
  friend void protobuf_ShutdownFile_tower_2eproto();

  void InitAsDefaultInstance();
  static TowerPush* default_instance_;
};
// ===================================================================


// ===================================================================

// TowerDTO

// required int32 bid = 1;
inline bool TowerDTO::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TowerDTO::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TowerDTO::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TowerDTO::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 TowerDTO::bid() const {
  return bid_;
}
inline void TowerDTO::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
}

// required int32 count = 2;
inline bool TowerDTO::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TowerDTO::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TowerDTO::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TowerDTO::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 TowerDTO::count() const {
  return count_;
}
inline void TowerDTO::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// AddAmmunitionRequest

// required int32 bid = 1;
inline bool AddAmmunitionRequest::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddAmmunitionRequest::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddAmmunitionRequest::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddAmmunitionRequest::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 AddAmmunitionRequest::bid() const {
  return bid_;
}
inline void AddAmmunitionRequest::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
}

// required int32 oper = 2;
inline bool AddAmmunitionRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddAmmunitionRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddAmmunitionRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddAmmunitionRequest::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::google::protobuf::int32 AddAmmunitionRequest::oper() const {
  return oper_;
}
inline void AddAmmunitionRequest::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
}

// required int32 type = 3;
inline bool AddAmmunitionRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddAmmunitionRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddAmmunitionRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddAmmunitionRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AddAmmunitionRequest::type() const {
  return type_;
}
inline void AddAmmunitionRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// AddAmmunitionResponse

// required int32 bid = 1;
inline bool AddAmmunitionResponse::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddAmmunitionResponse::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddAmmunitionResponse::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddAmmunitionResponse::clear_bid() {
  bid_ = 0;
  clear_has_bid();
}
inline ::google::protobuf::int32 AddAmmunitionResponse::bid() const {
  return bid_;
}
inline void AddAmmunitionResponse::set_bid(::google::protobuf::int32 value) {
  set_has_bid();
  bid_ = value;
}

// -------------------------------------------------------------------

// TowerPush

// repeated .slg.protocol.TowerDTO towers = 1;
inline int TowerPush::towers_size() const {
  return towers_.size();
}
inline void TowerPush::clear_towers() {
  towers_.Clear();
}
inline const ::slg::protocol::TowerDTO& TowerPush::towers(int index) const {
  return towers_.Get(index);
}
inline ::slg::protocol::TowerDTO* TowerPush::mutable_towers(int index) {
  return towers_.Mutable(index);
}
inline ::slg::protocol::TowerDTO* TowerPush::add_towers() {
  return towers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::TowerDTO >&
TowerPush::towers() const {
  return towers_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::TowerDTO >*
TowerPush::mutable_towers() {
  return &towers_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::TowerCommandId>() {
  return ::slg::protocol::TowerCommandId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::TowerPushId>() {
  return ::slg::protocol::TowerPushId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tower_2eproto__INCLUDED
