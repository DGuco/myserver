// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equipment.proto

#ifndef PROTOBUF_equipment_2eproto__INCLUDED
#define PROTOBUF_equipment_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_equipment_2eproto();
void protobuf_AssignDesc_equipment_2eproto();
void protobuf_ShutdownFile_equipment_2eproto();

class DealEquipmentRequest;
class DealEquipmentResponse;
class DealGemstoneRequest;
class DealGemstoneResponse;
class CombineGemstoneRequest;
class CombineGemstoneResponse;
class BuyEquipmentRequest;
class BuyEquipmentResponse;
class LuckyDrawRequest;
class LuckyDrawResponse;
class EquipmentUpRequest;
class EquipmentUpResponse;
class EquipmentListPush;
class EquipmentChangePush;
class ForgChangePush;
class CanBuyEquipmentPush;

enum EquipmentCommandId {
  EQUIPMENT_DEAL_EQUIPMENT = 1601,
  EQUIPMENT_DEAL_GEMSTONE = 1602,
  EQUIPMENT_COMBINE_GEMSTONE = 1603,
  EQUIPMENT_BUY_EQUIPMENT = 1604,
  EQUIPMENT_LUCK_DRAW = 1605,
  EQUIPMENT_BUY = 1606,
  EQUIPMENT_UP = 1607
};
bool EquipmentCommandId_IsValid(int value);
const EquipmentCommandId EquipmentCommandId_MIN = EQUIPMENT_DEAL_EQUIPMENT;
const EquipmentCommandId EquipmentCommandId_MAX = EQUIPMENT_UP;
const int EquipmentCommandId_ARRAYSIZE = EquipmentCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipmentCommandId_descriptor();
inline const ::std::string& EquipmentCommandId_Name(EquipmentCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipmentCommandId_descriptor(), value);
}
inline bool EquipmentCommandId_Parse(
    const ::std::string& name, EquipmentCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipmentCommandId>(
    EquipmentCommandId_descriptor(), name, value);
}
enum EquipmentPushId {
  EQUIPMENT_LIST_PUSH = 51601,
  EQUIPMENT_CHANGE_PUSH = 51602,
  EQUIPMENT_FORG_PUSH = 51603,
  EQUIPMENT_CAN_BUY_EQUIPMENT = 51604
};
bool EquipmentPushId_IsValid(int value);
const EquipmentPushId EquipmentPushId_MIN = EQUIPMENT_LIST_PUSH;
const EquipmentPushId EquipmentPushId_MAX = EQUIPMENT_CAN_BUY_EQUIPMENT;
const int EquipmentPushId_ARRAYSIZE = EquipmentPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipmentPushId_descriptor();
inline const ::std::string& EquipmentPushId_Name(EquipmentPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipmentPushId_descriptor(), value);
}
inline bool EquipmentPushId_Parse(
    const ::std::string& name, EquipmentPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipmentPushId>(
    EquipmentPushId_descriptor(), name, value);
}
// ===================================================================

class DealEquipmentRequest : public ::google::protobuf::Message {
 public:
  DealEquipmentRequest();
  virtual ~DealEquipmentRequest();

  DealEquipmentRequest(const DealEquipmentRequest& from);

  inline DealEquipmentRequest& operator=(const DealEquipmentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DealEquipmentRequest& default_instance();

  void Swap(DealEquipmentRequest* other);

  // implements Message ----------------------------------------------

  DealEquipmentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DealEquipmentRequest& from);
  void MergeFrom(const DealEquipmentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 equipmentId = 2;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentIdFieldNumber = 2;
  inline ::google::protobuf::int32 equipmentid() const;
  inline void set_equipmentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.DealEquipmentRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 equipmentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static DealEquipmentRequest* default_instance_;
};
// -------------------------------------------------------------------

class DealEquipmentResponse : public ::google::protobuf::Message {
 public:
  DealEquipmentResponse();
  virtual ~DealEquipmentResponse();

  DealEquipmentResponse(const DealEquipmentResponse& from);

  inline DealEquipmentResponse& operator=(const DealEquipmentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DealEquipmentResponse& default_instance();

  void Swap(DealEquipmentResponse* other);

  // implements Message ----------------------------------------------

  DealEquipmentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DealEquipmentResponse& from);
  void MergeFrom(const DealEquipmentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 equipmentId = 2;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentIdFieldNumber = 2;
  inline ::google::protobuf::int32 equipmentid() const;
  inline void set_equipmentid(::google::protobuf::int32 value);

  // optional int32 replacedId = 3;
  inline bool has_replacedid() const;
  inline void clear_replacedid();
  static const int kReplacedIdFieldNumber = 3;
  inline ::google::protobuf::int32 replacedid() const;
  inline void set_replacedid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.DealEquipmentResponse)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_replacedid();
  inline void clear_has_replacedid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 equipmentid_;
  ::google::protobuf::int32 replacedid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static DealEquipmentResponse* default_instance_;
};
// -------------------------------------------------------------------

class DealGemstoneRequest : public ::google::protobuf::Message {
 public:
  DealGemstoneRequest();
  virtual ~DealGemstoneRequest();

  DealGemstoneRequest(const DealGemstoneRequest& from);

  inline DealGemstoneRequest& operator=(const DealGemstoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DealGemstoneRequest& default_instance();

  void Swap(DealGemstoneRequest* other);

  // implements Message ----------------------------------------------

  DealGemstoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DealGemstoneRequest& from);
  void MergeFrom(const DealGemstoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gemstoneid = 1;
  inline bool has_gemstoneid() const;
  inline void clear_gemstoneid();
  static const int kGemstoneidFieldNumber = 1;
  inline ::google::protobuf::int32 gemstoneid() const;
  inline void set_gemstoneid(::google::protobuf::int32 value);

  // required int32 equipmentid = 2;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentidFieldNumber = 2;
  inline ::google::protobuf::int32 equipmentid() const;
  inline void set_equipmentid(::google::protobuf::int32 value);

  // required int32 opttype = 3;
  inline bool has_opttype() const;
  inline void clear_opttype();
  static const int kOpttypeFieldNumber = 3;
  inline ::google::protobuf::int32 opttype() const;
  inline void set_opttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.DealGemstoneRequest)
 private:
  inline void set_has_gemstoneid();
  inline void clear_has_gemstoneid();
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_opttype();
  inline void clear_has_opttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gemstoneid_;
  ::google::protobuf::int32 equipmentid_;
  ::google::protobuf::int32 opttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static DealGemstoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class DealGemstoneResponse : public ::google::protobuf::Message {
 public:
  DealGemstoneResponse();
  virtual ~DealGemstoneResponse();

  DealGemstoneResponse(const DealGemstoneResponse& from);

  inline DealGemstoneResponse& operator=(const DealGemstoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DealGemstoneResponse& default_instance();

  void Swap(DealGemstoneResponse* other);

  // implements Message ----------------------------------------------

  DealGemstoneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DealGemstoneResponse& from);
  void MergeFrom(const DealGemstoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gemstoneid = 1;
  inline bool has_gemstoneid() const;
  inline void clear_gemstoneid();
  static const int kGemstoneidFieldNumber = 1;
  inline ::google::protobuf::int32 gemstoneid() const;
  inline void set_gemstoneid(::google::protobuf::int32 value);

  // required int32 equipmentid = 2;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentidFieldNumber = 2;
  inline ::google::protobuf::int32 equipmentid() const;
  inline void set_equipmentid(::google::protobuf::int32 value);

  // required int32 opttype = 3;
  inline bool has_opttype() const;
  inline void clear_opttype();
  static const int kOpttypeFieldNumber = 3;
  inline ::google::protobuf::int32 opttype() const;
  inline void set_opttype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.DealGemstoneResponse)
 private:
  inline void set_has_gemstoneid();
  inline void clear_has_gemstoneid();
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_opttype();
  inline void clear_has_opttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gemstoneid_;
  ::google::protobuf::int32 equipmentid_;
  ::google::protobuf::int32 opttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static DealGemstoneResponse* default_instance_;
};
// -------------------------------------------------------------------

class CombineGemstoneRequest : public ::google::protobuf::Message {
 public:
  CombineGemstoneRequest();
  virtual ~CombineGemstoneRequest();

  CombineGemstoneRequest(const CombineGemstoneRequest& from);

  inline CombineGemstoneRequest& operator=(const CombineGemstoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombineGemstoneRequest& default_instance();

  void Swap(CombineGemstoneRequest* other);

  // implements Message ----------------------------------------------

  CombineGemstoneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombineGemstoneRequest& from);
  void MergeFrom(const CombineGemstoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gemstoneid = 1;
  inline bool has_gemstoneid() const;
  inline void clear_gemstoneid();
  static const int kGemstoneidFieldNumber = 1;
  inline ::google::protobuf::int32 gemstoneid() const;
  inline void set_gemstoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.CombineGemstoneRequest)
 private:
  inline void set_has_gemstoneid();
  inline void clear_has_gemstoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gemstoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static CombineGemstoneRequest* default_instance_;
};
// -------------------------------------------------------------------

class CombineGemstoneResponse : public ::google::protobuf::Message {
 public:
  CombineGemstoneResponse();
  virtual ~CombineGemstoneResponse();

  CombineGemstoneResponse(const CombineGemstoneResponse& from);

  inline CombineGemstoneResponse& operator=(const CombineGemstoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombineGemstoneResponse& default_instance();

  void Swap(CombineGemstoneResponse* other);

  // implements Message ----------------------------------------------

  CombineGemstoneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombineGemstoneResponse& from);
  void MergeFrom(const CombineGemstoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 combinestoneid = 1;
  inline bool has_combinestoneid() const;
  inline void clear_combinestoneid();
  static const int kCombinestoneidFieldNumber = 1;
  inline ::google::protobuf::int32 combinestoneid() const;
  inline void set_combinestoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.CombineGemstoneResponse)
 private:
  inline void set_has_combinestoneid();
  inline void clear_has_combinestoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 combinestoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static CombineGemstoneResponse* default_instance_;
};
// -------------------------------------------------------------------

class BuyEquipmentRequest : public ::google::protobuf::Message {
 public:
  BuyEquipmentRequest();
  virtual ~BuyEquipmentRequest();

  BuyEquipmentRequest(const BuyEquipmentRequest& from);

  inline BuyEquipmentRequest& operator=(const BuyEquipmentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyEquipmentRequest& default_instance();

  void Swap(BuyEquipmentRequest* other);

  // implements Message ----------------------------------------------

  BuyEquipmentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyEquipmentRequest& from);
  void MergeFrom(const BuyEquipmentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 color = 1;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 1;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required bool oper = 3;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 3;
  inline bool oper() const;
  inline void set_oper(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuyEquipmentRequest)
 private:
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_oper();
  inline void clear_has_oper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 type_;
  bool oper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static BuyEquipmentRequest* default_instance_;
};
// -------------------------------------------------------------------

class BuyEquipmentResponse : public ::google::protobuf::Message {
 public:
  BuyEquipmentResponse();
  virtual ~BuyEquipmentResponse();

  BuyEquipmentResponse(const BuyEquipmentResponse& from);

  inline BuyEquipmentResponse& operator=(const BuyEquipmentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyEquipmentResponse& default_instance();

  void Swap(BuyEquipmentResponse* other);

  // implements Message ----------------------------------------------

  BuyEquipmentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyEquipmentResponse& from);
  void MergeFrom(const BuyEquipmentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 equipmentId = 1;
  inline bool has_equipmentid() const;
  inline void clear_equipmentid();
  static const int kEquipmentIdFieldNumber = 1;
  inline ::google::protobuf::int32 equipmentid() const;
  inline void set_equipmentid(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.BuyEquipmentResponse)
 private:
  inline void set_has_equipmentid();
  inline void clear_has_equipmentid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 equipmentid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static BuyEquipmentResponse* default_instance_;
};
// -------------------------------------------------------------------

class LuckyDrawRequest : public ::google::protobuf::Message {
 public:
  LuckyDrawRequest();
  virtual ~LuckyDrawRequest();

  LuckyDrawRequest(const LuckyDrawRequest& from);

  inline LuckyDrawRequest& operator=(const LuckyDrawRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LuckyDrawRequest& default_instance();

  void Swap(LuckyDrawRequest* other);

  // implements Message ----------------------------------------------

  LuckyDrawRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LuckyDrawRequest& from);
  void MergeFrom(const LuckyDrawRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.LuckyDrawRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static LuckyDrawRequest* default_instance_;
};
// -------------------------------------------------------------------

class LuckyDrawResponse : public ::google::protobuf::Message {
 public:
  LuckyDrawResponse();
  virtual ~LuckyDrawResponse();

  LuckyDrawResponse(const LuckyDrawResponse& from);

  inline LuckyDrawResponse& operator=(const LuckyDrawResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LuckyDrawResponse& default_instance();

  void Swap(LuckyDrawResponse* other);

  // implements Message ----------------------------------------------

  LuckyDrawResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LuckyDrawResponse& from);
  void MergeFrom(const LuckyDrawResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.EquipmentDTO reward = 1;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::slg::protocol::EquipmentDTO& reward(int index) const;
  inline ::slg::protocol::EquipmentDTO* mutable_reward(int index);
  inline ::slg::protocol::EquipmentDTO* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
      mutable_reward();

  // required int32 forgvalue = 2;
  inline bool has_forgvalue() const;
  inline void clear_forgvalue();
  static const int kForgvalueFieldNumber = 2;
  inline ::google::protobuf::int32 forgvalue() const;
  inline void set_forgvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.LuckyDrawResponse)
 private:
  inline void set_has_forgvalue();
  inline void clear_has_forgvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO > reward_;
  ::google::protobuf::int32 forgvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static LuckyDrawResponse* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentUpRequest : public ::google::protobuf::Message {
 public:
  EquipmentUpRequest();
  virtual ~EquipmentUpRequest();

  EquipmentUpRequest(const EquipmentUpRequest& from);

  inline EquipmentUpRequest& operator=(const EquipmentUpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentUpRequest& default_instance();

  void Swap(EquipmentUpRequest* other);

  // implements Message ----------------------------------------------

  EquipmentUpRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentUpRequest& from);
  void MergeFrom(const EquipmentUpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bool oper = 2;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 2;
  inline bool oper() const;
  inline void set_oper(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.EquipmentUpRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_oper();
  inline void clear_has_oper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  bool oper_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static EquipmentUpRequest* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentUpResponse : public ::google::protobuf::Message {
 public:
  EquipmentUpResponse();
  virtual ~EquipmentUpResponse();

  EquipmentUpResponse(const EquipmentUpResponse& from);

  inline EquipmentUpResponse& operator=(const EquipmentUpResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentUpResponse& default_instance();

  void Swap(EquipmentUpResponse* other);

  // implements Message ----------------------------------------------

  EquipmentUpResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentUpResponse& from);
  void MergeFrom(const EquipmentUpResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.EquipmentUpResponse)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static EquipmentUpResponse* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentListPush : public ::google::protobuf::Message {
 public:
  EquipmentListPush();
  virtual ~EquipmentListPush();

  EquipmentListPush(const EquipmentListPush& from);

  inline EquipmentListPush& operator=(const EquipmentListPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentListPush& default_instance();

  void Swap(EquipmentListPush* other);

  // implements Message ----------------------------------------------

  EquipmentListPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentListPush& from);
  void MergeFrom(const EquipmentListPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.EquipmentDTO wearEquipment = 1;
  inline int wearequipment_size() const;
  inline void clear_wearequipment();
  static const int kWearEquipmentFieldNumber = 1;
  inline const ::slg::protocol::EquipmentDTO& wearequipment(int index) const;
  inline ::slg::protocol::EquipmentDTO* mutable_wearequipment(int index);
  inline ::slg::protocol::EquipmentDTO* add_wearequipment();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
      wearequipment() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
      mutable_wearequipment();

  // repeated .slg.protocol.EquipmentDTO equipmentList = 2;
  inline int equipmentlist_size() const;
  inline void clear_equipmentlist();
  static const int kEquipmentListFieldNumber = 2;
  inline const ::slg::protocol::EquipmentDTO& equipmentlist(int index) const;
  inline ::slg::protocol::EquipmentDTO* mutable_equipmentlist(int index);
  inline ::slg::protocol::EquipmentDTO* add_equipmentlist();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
      equipmentlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
      mutable_equipmentlist();

  // @@protoc_insertion_point(class_scope:slg.protocol.EquipmentListPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO > wearequipment_;
  ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO > equipmentlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static EquipmentListPush* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentChangePush : public ::google::protobuf::Message {
 public:
  EquipmentChangePush();
  virtual ~EquipmentChangePush();

  EquipmentChangePush(const EquipmentChangePush& from);

  inline EquipmentChangePush& operator=(const EquipmentChangePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentChangePush& default_instance();

  void Swap(EquipmentChangePush* other);

  // implements Message ----------------------------------------------

  EquipmentChangePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentChangePush& from);
  void MergeFrom(const EquipmentChangePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.EquipmentDTO equipment = 1;
  inline int equipment_size() const;
  inline void clear_equipment();
  static const int kEquipmentFieldNumber = 1;
  inline const ::slg::protocol::EquipmentDTO& equipment(int index) const;
  inline ::slg::protocol::EquipmentDTO* mutable_equipment(int index);
  inline ::slg::protocol::EquipmentDTO* add_equipment();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
      equipment() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
      mutable_equipment();

  // @@protoc_insertion_point(class_scope:slg.protocol.EquipmentChangePush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO > equipment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static EquipmentChangePush* default_instance_;
};
// -------------------------------------------------------------------

class ForgChangePush : public ::google::protobuf::Message {
 public:
  ForgChangePush();
  virtual ~ForgChangePush();

  ForgChangePush(const ForgChangePush& from);

  inline ForgChangePush& operator=(const ForgChangePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForgChangePush& default_instance();

  void Swap(ForgChangePush* other);

  // implements Message ----------------------------------------------

  ForgChangePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForgChangePush& from);
  void MergeFrom(const ForgChangePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 forgvalue = 1;
  inline bool has_forgvalue() const;
  inline void clear_forgvalue();
  static const int kForgvalueFieldNumber = 1;
  inline ::google::protobuf::int32 forgvalue() const;
  inline void set_forgvalue(::google::protobuf::int32 value);

  // required int32 curTime = 2;
  inline bool has_curtime() const;
  inline void clear_curtime();
  static const int kCurTimeFieldNumber = 2;
  inline ::google::protobuf::int32 curtime() const;
  inline void set_curtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:slg.protocol.ForgChangePush)
 private:
  inline void set_has_forgvalue();
  inline void clear_has_forgvalue();
  inline void set_has_curtime();
  inline void clear_has_curtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 forgvalue_;
  ::google::protobuf::int32 curtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static ForgChangePush* default_instance_;
};
// -------------------------------------------------------------------

class CanBuyEquipmentPush : public ::google::protobuf::Message {
 public:
  CanBuyEquipmentPush();
  virtual ~CanBuyEquipmentPush();

  CanBuyEquipmentPush(const CanBuyEquipmentPush& from);

  inline CanBuyEquipmentPush& operator=(const CanBuyEquipmentPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanBuyEquipmentPush& default_instance();

  void Swap(CanBuyEquipmentPush* other);

  // implements Message ----------------------------------------------

  CanBuyEquipmentPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CanBuyEquipmentPush& from);
  void MergeFrom(const CanBuyEquipmentPush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 equipmentIds = 1;
  inline int equipmentids_size() const;
  inline void clear_equipmentids();
  static const int kEquipmentIdsFieldNumber = 1;
  inline ::google::protobuf::int32 equipmentids(int index) const;
  inline void set_equipmentids(int index, ::google::protobuf::int32 value);
  inline void add_equipmentids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equipmentids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equipmentids();

  // @@protoc_insertion_point(class_scope:slg.protocol.CanBuyEquipmentPush)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipmentids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_equipment_2eproto();
  friend void protobuf_AssignDesc_equipment_2eproto();
  friend void protobuf_ShutdownFile_equipment_2eproto();

  void InitAsDefaultInstance();
  static CanBuyEquipmentPush* default_instance_;
};
// ===================================================================


// ===================================================================

// DealEquipmentRequest

// required int32 type = 1;
inline bool DealEquipmentRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DealEquipmentRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DealEquipmentRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DealEquipmentRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DealEquipmentRequest::type() const {
  return type_;
}
inline void DealEquipmentRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 equipmentId = 2;
inline bool DealEquipmentRequest::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DealEquipmentRequest::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DealEquipmentRequest::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DealEquipmentRequest::clear_equipmentid() {
  equipmentid_ = 0;
  clear_has_equipmentid();
}
inline ::google::protobuf::int32 DealEquipmentRequest::equipmentid() const {
  return equipmentid_;
}
inline void DealEquipmentRequest::set_equipmentid(::google::protobuf::int32 value) {
  set_has_equipmentid();
  equipmentid_ = value;
}

// -------------------------------------------------------------------

// DealEquipmentResponse

// required int32 type = 1;
inline bool DealEquipmentResponse::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DealEquipmentResponse::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DealEquipmentResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DealEquipmentResponse::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DealEquipmentResponse::type() const {
  return type_;
}
inline void DealEquipmentResponse::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 equipmentId = 2;
inline bool DealEquipmentResponse::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DealEquipmentResponse::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DealEquipmentResponse::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DealEquipmentResponse::clear_equipmentid() {
  equipmentid_ = 0;
  clear_has_equipmentid();
}
inline ::google::protobuf::int32 DealEquipmentResponse::equipmentid() const {
  return equipmentid_;
}
inline void DealEquipmentResponse::set_equipmentid(::google::protobuf::int32 value) {
  set_has_equipmentid();
  equipmentid_ = value;
}

// optional int32 replacedId = 3;
inline bool DealEquipmentResponse::has_replacedid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DealEquipmentResponse::set_has_replacedid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DealEquipmentResponse::clear_has_replacedid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DealEquipmentResponse::clear_replacedid() {
  replacedid_ = 0;
  clear_has_replacedid();
}
inline ::google::protobuf::int32 DealEquipmentResponse::replacedid() const {
  return replacedid_;
}
inline void DealEquipmentResponse::set_replacedid(::google::protobuf::int32 value) {
  set_has_replacedid();
  replacedid_ = value;
}

// -------------------------------------------------------------------

// DealGemstoneRequest

// required int32 gemstoneid = 1;
inline bool DealGemstoneRequest::has_gemstoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DealGemstoneRequest::set_has_gemstoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DealGemstoneRequest::clear_has_gemstoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DealGemstoneRequest::clear_gemstoneid() {
  gemstoneid_ = 0;
  clear_has_gemstoneid();
}
inline ::google::protobuf::int32 DealGemstoneRequest::gemstoneid() const {
  return gemstoneid_;
}
inline void DealGemstoneRequest::set_gemstoneid(::google::protobuf::int32 value) {
  set_has_gemstoneid();
  gemstoneid_ = value;
}

// required int32 equipmentid = 2;
inline bool DealGemstoneRequest::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DealGemstoneRequest::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DealGemstoneRequest::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DealGemstoneRequest::clear_equipmentid() {
  equipmentid_ = 0;
  clear_has_equipmentid();
}
inline ::google::protobuf::int32 DealGemstoneRequest::equipmentid() const {
  return equipmentid_;
}
inline void DealGemstoneRequest::set_equipmentid(::google::protobuf::int32 value) {
  set_has_equipmentid();
  equipmentid_ = value;
}

// required int32 opttype = 3;
inline bool DealGemstoneRequest::has_opttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DealGemstoneRequest::set_has_opttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DealGemstoneRequest::clear_has_opttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DealGemstoneRequest::clear_opttype() {
  opttype_ = 0;
  clear_has_opttype();
}
inline ::google::protobuf::int32 DealGemstoneRequest::opttype() const {
  return opttype_;
}
inline void DealGemstoneRequest::set_opttype(::google::protobuf::int32 value) {
  set_has_opttype();
  opttype_ = value;
}

// -------------------------------------------------------------------

// DealGemstoneResponse

// required int32 gemstoneid = 1;
inline bool DealGemstoneResponse::has_gemstoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DealGemstoneResponse::set_has_gemstoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DealGemstoneResponse::clear_has_gemstoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DealGemstoneResponse::clear_gemstoneid() {
  gemstoneid_ = 0;
  clear_has_gemstoneid();
}
inline ::google::protobuf::int32 DealGemstoneResponse::gemstoneid() const {
  return gemstoneid_;
}
inline void DealGemstoneResponse::set_gemstoneid(::google::protobuf::int32 value) {
  set_has_gemstoneid();
  gemstoneid_ = value;
}

// required int32 equipmentid = 2;
inline bool DealGemstoneResponse::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DealGemstoneResponse::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DealGemstoneResponse::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DealGemstoneResponse::clear_equipmentid() {
  equipmentid_ = 0;
  clear_has_equipmentid();
}
inline ::google::protobuf::int32 DealGemstoneResponse::equipmentid() const {
  return equipmentid_;
}
inline void DealGemstoneResponse::set_equipmentid(::google::protobuf::int32 value) {
  set_has_equipmentid();
  equipmentid_ = value;
}

// required int32 opttype = 3;
inline bool DealGemstoneResponse::has_opttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DealGemstoneResponse::set_has_opttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DealGemstoneResponse::clear_has_opttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DealGemstoneResponse::clear_opttype() {
  opttype_ = 0;
  clear_has_opttype();
}
inline ::google::protobuf::int32 DealGemstoneResponse::opttype() const {
  return opttype_;
}
inline void DealGemstoneResponse::set_opttype(::google::protobuf::int32 value) {
  set_has_opttype();
  opttype_ = value;
}

// -------------------------------------------------------------------

// CombineGemstoneRequest

// required int32 gemstoneid = 1;
inline bool CombineGemstoneRequest::has_gemstoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombineGemstoneRequest::set_has_gemstoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombineGemstoneRequest::clear_has_gemstoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombineGemstoneRequest::clear_gemstoneid() {
  gemstoneid_ = 0;
  clear_has_gemstoneid();
}
inline ::google::protobuf::int32 CombineGemstoneRequest::gemstoneid() const {
  return gemstoneid_;
}
inline void CombineGemstoneRequest::set_gemstoneid(::google::protobuf::int32 value) {
  set_has_gemstoneid();
  gemstoneid_ = value;
}

// -------------------------------------------------------------------

// CombineGemstoneResponse

// required int32 combinestoneid = 1;
inline bool CombineGemstoneResponse::has_combinestoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombineGemstoneResponse::set_has_combinestoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombineGemstoneResponse::clear_has_combinestoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombineGemstoneResponse::clear_combinestoneid() {
  combinestoneid_ = 0;
  clear_has_combinestoneid();
}
inline ::google::protobuf::int32 CombineGemstoneResponse::combinestoneid() const {
  return combinestoneid_;
}
inline void CombineGemstoneResponse::set_combinestoneid(::google::protobuf::int32 value) {
  set_has_combinestoneid();
  combinestoneid_ = value;
}

// -------------------------------------------------------------------

// BuyEquipmentRequest

// required int32 color = 1;
inline bool BuyEquipmentRequest::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyEquipmentRequest::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyEquipmentRequest::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyEquipmentRequest::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 BuyEquipmentRequest::color() const {
  return color_;
}
inline void BuyEquipmentRequest::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// required int32 type = 2;
inline bool BuyEquipmentRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyEquipmentRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyEquipmentRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyEquipmentRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 BuyEquipmentRequest::type() const {
  return type_;
}
inline void BuyEquipmentRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required bool oper = 3;
inline bool BuyEquipmentRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyEquipmentRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyEquipmentRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyEquipmentRequest::clear_oper() {
  oper_ = false;
  clear_has_oper();
}
inline bool BuyEquipmentRequest::oper() const {
  return oper_;
}
inline void BuyEquipmentRequest::set_oper(bool value) {
  set_has_oper();
  oper_ = value;
}

// -------------------------------------------------------------------

// BuyEquipmentResponse

// required int32 equipmentId = 1;
inline bool BuyEquipmentResponse::has_equipmentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyEquipmentResponse::set_has_equipmentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyEquipmentResponse::clear_has_equipmentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyEquipmentResponse::clear_equipmentid() {
  equipmentid_ = 0;
  clear_has_equipmentid();
}
inline ::google::protobuf::int32 BuyEquipmentResponse::equipmentid() const {
  return equipmentid_;
}
inline void BuyEquipmentResponse::set_equipmentid(::google::protobuf::int32 value) {
  set_has_equipmentid();
  equipmentid_ = value;
}

// required int32 num = 2;
inline bool BuyEquipmentResponse::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyEquipmentResponse::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyEquipmentResponse::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyEquipmentResponse::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BuyEquipmentResponse::num() const {
  return num_;
}
inline void BuyEquipmentResponse::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// LuckyDrawRequest

// required int32 id = 1;
inline bool LuckyDrawRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LuckyDrawRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LuckyDrawRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LuckyDrawRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LuckyDrawRequest::id() const {
  return id_;
}
inline void LuckyDrawRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// LuckyDrawResponse

// repeated .slg.protocol.EquipmentDTO reward = 1;
inline int LuckyDrawResponse::reward_size() const {
  return reward_.size();
}
inline void LuckyDrawResponse::clear_reward() {
  reward_.Clear();
}
inline const ::slg::protocol::EquipmentDTO& LuckyDrawResponse::reward(int index) const {
  return reward_.Get(index);
}
inline ::slg::protocol::EquipmentDTO* LuckyDrawResponse::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::slg::protocol::EquipmentDTO* LuckyDrawResponse::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
LuckyDrawResponse::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
LuckyDrawResponse::mutable_reward() {
  return &reward_;
}

// required int32 forgvalue = 2;
inline bool LuckyDrawResponse::has_forgvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LuckyDrawResponse::set_has_forgvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LuckyDrawResponse::clear_has_forgvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LuckyDrawResponse::clear_forgvalue() {
  forgvalue_ = 0;
  clear_has_forgvalue();
}
inline ::google::protobuf::int32 LuckyDrawResponse::forgvalue() const {
  return forgvalue_;
}
inline void LuckyDrawResponse::set_forgvalue(::google::protobuf::int32 value) {
  set_has_forgvalue();
  forgvalue_ = value;
}

// -------------------------------------------------------------------

// EquipmentUpRequest

// required int32 id = 1;
inline bool EquipmentUpRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentUpRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentUpRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentUpRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EquipmentUpRequest::id() const {
  return id_;
}
inline void EquipmentUpRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required bool oper = 2;
inline bool EquipmentUpRequest::has_oper() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentUpRequest::set_has_oper() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentUpRequest::clear_has_oper() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentUpRequest::clear_oper() {
  oper_ = false;
  clear_has_oper();
}
inline bool EquipmentUpRequest::oper() const {
  return oper_;
}
inline void EquipmentUpRequest::set_oper(bool value) {
  set_has_oper();
  oper_ = value;
}

// -------------------------------------------------------------------

// EquipmentUpResponse

// required int32 id = 1;
inline bool EquipmentUpResponse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentUpResponse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentUpResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentUpResponse::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EquipmentUpResponse::id() const {
  return id_;
}
inline void EquipmentUpResponse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// EquipmentListPush

// repeated .slg.protocol.EquipmentDTO wearEquipment = 1;
inline int EquipmentListPush::wearequipment_size() const {
  return wearequipment_.size();
}
inline void EquipmentListPush::clear_wearequipment() {
  wearequipment_.Clear();
}
inline const ::slg::protocol::EquipmentDTO& EquipmentListPush::wearequipment(int index) const {
  return wearequipment_.Get(index);
}
inline ::slg::protocol::EquipmentDTO* EquipmentListPush::mutable_wearequipment(int index) {
  return wearequipment_.Mutable(index);
}
inline ::slg::protocol::EquipmentDTO* EquipmentListPush::add_wearequipment() {
  return wearequipment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
EquipmentListPush::wearequipment() const {
  return wearequipment_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
EquipmentListPush::mutable_wearequipment() {
  return &wearequipment_;
}

// repeated .slg.protocol.EquipmentDTO equipmentList = 2;
inline int EquipmentListPush::equipmentlist_size() const {
  return equipmentlist_.size();
}
inline void EquipmentListPush::clear_equipmentlist() {
  equipmentlist_.Clear();
}
inline const ::slg::protocol::EquipmentDTO& EquipmentListPush::equipmentlist(int index) const {
  return equipmentlist_.Get(index);
}
inline ::slg::protocol::EquipmentDTO* EquipmentListPush::mutable_equipmentlist(int index) {
  return equipmentlist_.Mutable(index);
}
inline ::slg::protocol::EquipmentDTO* EquipmentListPush::add_equipmentlist() {
  return equipmentlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
EquipmentListPush::equipmentlist() const {
  return equipmentlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
EquipmentListPush::mutable_equipmentlist() {
  return &equipmentlist_;
}

// -------------------------------------------------------------------

// EquipmentChangePush

// repeated .slg.protocol.EquipmentDTO equipment = 1;
inline int EquipmentChangePush::equipment_size() const {
  return equipment_.size();
}
inline void EquipmentChangePush::clear_equipment() {
  equipment_.Clear();
}
inline const ::slg::protocol::EquipmentDTO& EquipmentChangePush::equipment(int index) const {
  return equipment_.Get(index);
}
inline ::slg::protocol::EquipmentDTO* EquipmentChangePush::mutable_equipment(int index) {
  return equipment_.Mutable(index);
}
inline ::slg::protocol::EquipmentDTO* EquipmentChangePush::add_equipment() {
  return equipment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >&
EquipmentChangePush::equipment() const {
  return equipment_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::EquipmentDTO >*
EquipmentChangePush::mutable_equipment() {
  return &equipment_;
}

// -------------------------------------------------------------------

// ForgChangePush

// required int32 forgvalue = 1;
inline bool ForgChangePush::has_forgvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForgChangePush::set_has_forgvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForgChangePush::clear_has_forgvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForgChangePush::clear_forgvalue() {
  forgvalue_ = 0;
  clear_has_forgvalue();
}
inline ::google::protobuf::int32 ForgChangePush::forgvalue() const {
  return forgvalue_;
}
inline void ForgChangePush::set_forgvalue(::google::protobuf::int32 value) {
  set_has_forgvalue();
  forgvalue_ = value;
}

// required int32 curTime = 2;
inline bool ForgChangePush::has_curtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForgChangePush::set_has_curtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForgChangePush::clear_has_curtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForgChangePush::clear_curtime() {
  curtime_ = 0;
  clear_has_curtime();
}
inline ::google::protobuf::int32 ForgChangePush::curtime() const {
  return curtime_;
}
inline void ForgChangePush::set_curtime(::google::protobuf::int32 value) {
  set_has_curtime();
  curtime_ = value;
}

// -------------------------------------------------------------------

// CanBuyEquipmentPush

// repeated int32 equipmentIds = 1;
inline int CanBuyEquipmentPush::equipmentids_size() const {
  return equipmentids_.size();
}
inline void CanBuyEquipmentPush::clear_equipmentids() {
  equipmentids_.Clear();
}
inline ::google::protobuf::int32 CanBuyEquipmentPush::equipmentids(int index) const {
  return equipmentids_.Get(index);
}
inline void CanBuyEquipmentPush::set_equipmentids(int index, ::google::protobuf::int32 value) {
  equipmentids_.Set(index, value);
}
inline void CanBuyEquipmentPush::add_equipmentids(::google::protobuf::int32 value) {
  equipmentids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CanBuyEquipmentPush::equipmentids() const {
  return equipmentids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CanBuyEquipmentPush::mutable_equipmentids() {
  return &equipmentids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::EquipmentCommandId>() {
  return ::slg::protocol::EquipmentCommandId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::EquipmentPushId>() {
  return ::slg::protocol::EquipmentPushId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_equipment_2eproto__INCLUDED
