syntax = "proto2";
package slg.protocol;
option java_package="com.bonusstudio.slg.protocol";
option java_outer_classname="ChatProto";
import "common.proto";

enum ChatContentType {
    CHAT_CONTENT_TEXT = 1; // 文本
}

message ChatContent {
    required ChatContentType type = 1;
    optional string text = 10; // 文本内容
}

message ChatPlayer {
    required int64 playerId = 1;				 
	required string name = 2;		        
	optional string icon = 3;			 
    optional string allianceShortName = 4;//发送者联盟名称简写
    optional VipDTO vip = 5; 
    optional bool valid = 6;                //是否在群聊
}

message ChatMessage {
    required int64 messageId = 1;       // 消息ID
    required ChatContent content = 2;   // 消息内容
    required int32 timestamp = 3;       // 发送时间
    required int64 senderId = 10;       // 发送方ID
    optional ChatPlayer sender = 11;    // 发送方信息
}

enum ChatCommandId {
    CHAT_SEND = 2201;           // 发送聊天内容
    CHAT_GROUP_CREATE = 2202;   // 创建群组
    CHAT_GROUP_LEAVE = 2203;    // 退出群组
    CHAT_PULL = 2204;           // 拉取离线消息
}

enum ChatChannel {
    CHAT_P2P = 1;           // 私聊
    CHAT_GROUP = 2;         // 群聊
    CHAT_ALLIANCE = 3;      // 联盟
    CHAT_WORLD = 4;         // 世界
}

message ChatGroupCreateRequest {
    repeated int64 playerIds = 1;
}

message ChatGroupCreateResponse {
    required int64 groupId = 1;
}

message ChatGroupLeaveRequest {
    required int64 groupId = 1;
}

message ChatSendRequest {
    required ChatChannel channel = 1;
    required ChatContent content = 2; 
    optional int64 targetId = 3; // GroupId or PlayerId 
}

message ChatSendResponse {
    required int64 messageId = 1;
}

message ChatGroupSnapshot {
    required int64 groupId = 1;
    required int64 messageId = 2;
}

message ChatPullRequest {
    repeated ChatGroupSnapshot snapshots = 1;
}

enum ChatPushId {
    CHAT_MESSAGE_PUSH = 52201;
    CHAT_GROUP_PUSH = 52202;
}

message ChatMessagePush {
    required ChatChannel channel = 1;
    repeated ChatMessage messages = 2;
    optional int64 groupId = 3;
}

message ChatGroup {
    required int64 groupId = 1; // 全局GroupId
    optional int64 ownerId = 2; // 群主ID
    repeated ChatPlayer members = 3; // 群聊成员
    required bool p2p = 4; // 是否私聊频道
}

message ChatGroupPush {
    repeated ChatGroup groups = 1;
}

