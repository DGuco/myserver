syntax = "proto2";
package slg.protocol;
option java_package="com.bonusstudio.slg.protocol";
option java_outer_classname="BuildingProto";

/// ---------------DTO------------
enum BuildingState {
    BUILDING_STATE_IDLE = 0;
    BUILDING_STATE_BUILDING = 1;
    BUILDING_STATE_UPGRADING = 2;
    BUILDING_STATE_REMOVING = 3;
    BUILDING_STATE_WORKING = 4;
}

message BuildingDTO {
    required int32 id = 1;
    required int32 type = 2;
    required int32 level = 3;
    required int32 gridId = 4;
    required BuildingState state = 5;
}

enum BuildingQueueType {
    BUILDING_QUEUE_TYPE_NORMAL = 1;
    BUILDING_QUEUE_TYPE_VIP = 2;
}

message BuildingQueueDTO {
    optional int32 timerTaskId = 1;
    required BuildingQueueType type = 2;
    optional int32 endTime = 3; // 什么时间结束 
}

/// -------------------COMMAND----------------

enum BuildingCommandId {
    BUILDING_BUILD = 201;
    BUILDING_UPGRADE = 202;
    BUILDING_REMOVE = 203;
    BUILDING_SWAP = 204;
}

message BuildingBuildRequest {
    required int32 buildingType = 1;
    required int32 gridId = 2;
    required bool oper = 3;     //缺少资源是否钻石补充
    required bool quick = 4;
}

message BuildingBuildResponse {
    required int32 buildingId = 1;
    required bool quick = 2;
}

message BuildingUpgradeRequest {
    required int32 buildingId = 1;
    required bool oper = 2;     //缺少资源是否钻石补充
    required bool quick = 3;
}

message BuildingUpgradeResponse {
    required int32 buildingId = 1;
    required bool quick = 2;
}

message BuildingRemoveRequest {
    required int32 buildingId = 1;
}

message BuildingRemoveResponse {
    required int32 buildingId = 1;
}

message BuildingSwapRequest {
    required int32 buildingIdFrom = 1;
    required int32 buildingIdTo = 2;
}

message BuildingSwapResponse {
    required int32 buildingIdFrom = 1;
    required int32 buildingIdTo = 2;
}

///  ----------------PUSH MESSAGES------------

enum BuildingPushId {
    BUILDING_QUEUE_PUSH = 50200;
    BUILDING_LIST_PUSH = 50201;
    BUILDING_REMOVE_PUSH = 50202;
    UNLOCKED_AREA_PUSH = 50203;
    BUILDING_COMPLETE_PUSH = 50204;
}

message BuildingListPush {
    repeated BuildingDTO buildings = 1;
}

message BuildingQueuePush {
    repeated BuildingQueueDTO buildingQueues = 1;
}

message BuildingRemovePush {
    required int32 buildingId = 1;
}

enum BuildingCompleteType {
    BUILDING_COMPLETE_BUILD = 1; // 建造完成
    BUILDING_COMPLETE_UPGRADE = 2; // 升级完成
    BUILDING_COMPLETE_SWAP = 3; // 交换
}

message BuildingCompletePush {
    repeated BuildingDTO building = 1;
    required BuildingCompleteType type =2;
}

message UnlockedAreaPush {
    repeated int32 areaId = 1;
}