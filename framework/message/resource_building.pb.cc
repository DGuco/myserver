// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resource_building.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "resource_building.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

namespace {

const ::google::protobuf::Descriptor* ResourceBuildingDTO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceBuildingDTO_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceBuildingReapRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceBuildingReapRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceBuildingReapResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceBuildingReapResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceBuildingSpeedUpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceBuildingSpeedUpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceBuildingSpeedUpResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceBuildingSpeedUpResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceBuildingListPush_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceBuildingListPush_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ResourceBuildingCommandId_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ResourceBuildingPushId_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_resource_5fbuilding_2eproto() {
  protobuf_AddDesc_resource_5fbuilding_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "resource_building.proto");
  GOOGLE_CHECK(file != NULL);
  ResourceBuildingDTO_descriptor_ = file->message_type(0);
  static const int ResourceBuildingDTO_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingDTO, buildingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingDTO, currentnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingDTO, lastreaptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingDTO, speedupendtime_),
  };
  ResourceBuildingDTO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceBuildingDTO_descriptor_,
      ResourceBuildingDTO::default_instance_,
      ResourceBuildingDTO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingDTO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingDTO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceBuildingDTO));
  ResourceBuildingReapRequest_descriptor_ = file->message_type(1);
  static const int ResourceBuildingReapRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapRequest, buildingid_),
  };
  ResourceBuildingReapRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceBuildingReapRequest_descriptor_,
      ResourceBuildingReapRequest::default_instance_,
      ResourceBuildingReapRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceBuildingReapRequest));
  ResourceBuildingReapResponse_descriptor_ = file->message_type(2);
  static const int ResourceBuildingReapResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapResponse, buildingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapResponse, resourcradd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapResponse, iscrit_),
  };
  ResourceBuildingReapResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceBuildingReapResponse_descriptor_,
      ResourceBuildingReapResponse::default_instance_,
      ResourceBuildingReapResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingReapResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceBuildingReapResponse));
  ResourceBuildingSpeedUpRequest_descriptor_ = file->message_type(3);
  static const int ResourceBuildingSpeedUpRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpRequest, buildingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpRequest, usediamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpRequest, itemid_),
  };
  ResourceBuildingSpeedUpRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceBuildingSpeedUpRequest_descriptor_,
      ResourceBuildingSpeedUpRequest::default_instance_,
      ResourceBuildingSpeedUpRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceBuildingSpeedUpRequest));
  ResourceBuildingSpeedUpResponse_descriptor_ = file->message_type(4);
  static const int ResourceBuildingSpeedUpResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpResponse, buildingid_),
  };
  ResourceBuildingSpeedUpResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceBuildingSpeedUpResponse_descriptor_,
      ResourceBuildingSpeedUpResponse::default_instance_,
      ResourceBuildingSpeedUpResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingSpeedUpResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceBuildingSpeedUpResponse));
  ResourceBuildingListPush_descriptor_ = file->message_type(5);
  static const int ResourceBuildingListPush_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingListPush, resourcebuildings_),
  };
  ResourceBuildingListPush_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceBuildingListPush_descriptor_,
      ResourceBuildingListPush::default_instance_,
      ResourceBuildingListPush_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingListPush, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceBuildingListPush, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceBuildingListPush));
  ResourceBuildingCommandId_descriptor_ = file->enum_type(0);
  ResourceBuildingPushId_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_resource_5fbuilding_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceBuildingDTO_descriptor_, &ResourceBuildingDTO::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceBuildingReapRequest_descriptor_, &ResourceBuildingReapRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceBuildingReapResponse_descriptor_, &ResourceBuildingReapResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceBuildingSpeedUpRequest_descriptor_, &ResourceBuildingSpeedUpRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceBuildingSpeedUpResponse_descriptor_, &ResourceBuildingSpeedUpResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceBuildingListPush_descriptor_, &ResourceBuildingListPush::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_resource_5fbuilding_2eproto() {
  delete ResourceBuildingDTO::default_instance_;
  delete ResourceBuildingDTO_reflection_;
  delete ResourceBuildingReapRequest::default_instance_;
  delete ResourceBuildingReapRequest_reflection_;
  delete ResourceBuildingReapResponse::default_instance_;
  delete ResourceBuildingReapResponse_reflection_;
  delete ResourceBuildingSpeedUpRequest::default_instance_;
  delete ResourceBuildingSpeedUpRequest_reflection_;
  delete ResourceBuildingSpeedUpResponse::default_instance_;
  delete ResourceBuildingSpeedUpResponse_reflection_;
  delete ResourceBuildingListPush::default_instance_;
  delete ResourceBuildingListPush_reflection_;
}

void protobuf_AddDesc_resource_5fbuilding_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::slg::protocol::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027resource_building.proto\022\014slg.protocol\032"
    "\014common.proto\"k\n\023ResourceBuildingDTO\022\022\n\n"
    "buildingId\030\001 \002(\005\022\022\n\ncurrentNum\030\002 \002(\005\022\024\n\014"
    "lastReapTime\030\003 \002(\005\022\026\n\016speedUpEndTime\030\004 \001"
    "(\005\"1\n\033ResourceBuildingReapRequest\022\022\n\nbui"
    "ldingId\030\001 \002(\005\"r\n\034ResourceBuildingReapRes"
    "ponse\022\022\n\nbuildingId\030\001 \002(\005\022.\n\013resourcrAdd"
    "\030\002 \002(\0132\031.slg.protocol.PropertyDTO\022\016\n\006isC"
    "rit\030\003 \002(\010\"X\n\036ResourceBuildingSpeedUpRequ"
    "est\022\022\n\nbuildingId\030\001 \002(\005\022\022\n\nuseDiamond\030\002 "
    "\001(\010\022\016\n\006itemId\030\003 \001(\005\"5\n\037ResourceBuildingS"
    "peedUpResponse\022\022\n\nbuildingId\030\001 \002(\005\"X\n\030Re"
    "sourceBuildingListPush\022<\n\021resourceBuildi"
    "ngs\030\001 \003(\0132!.slg.protocol.ResourceBuildin"
    "gDTO*Y\n\031ResourceBuildingCommandId\022\033\n\026RES"
    "OURCE_BUILDING_REAP\020\221\003\022\037\n\032RESOURCE_BUILD"
    "ING_SPEED_UP\020\222\003*;\n\026ResourceBuildingPushI"
    "d\022!\n\033RESOURCE_BUILDING_LIST_PUSH\020\341\211\003B5\n\034"
    "com.bonusstudio.slg.protocolB\025ResourceBu"
    "ildingProto", 771);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resource_building.proto", &protobuf_RegisterTypes);
  ResourceBuildingDTO::default_instance_ = new ResourceBuildingDTO();
  ResourceBuildingReapRequest::default_instance_ = new ResourceBuildingReapRequest();
  ResourceBuildingReapResponse::default_instance_ = new ResourceBuildingReapResponse();
  ResourceBuildingSpeedUpRequest::default_instance_ = new ResourceBuildingSpeedUpRequest();
  ResourceBuildingSpeedUpResponse::default_instance_ = new ResourceBuildingSpeedUpResponse();
  ResourceBuildingListPush::default_instance_ = new ResourceBuildingListPush();
  ResourceBuildingDTO::default_instance_->InitAsDefaultInstance();
  ResourceBuildingReapRequest::default_instance_->InitAsDefaultInstance();
  ResourceBuildingReapResponse::default_instance_->InitAsDefaultInstance();
  ResourceBuildingSpeedUpRequest::default_instance_->InitAsDefaultInstance();
  ResourceBuildingSpeedUpResponse::default_instance_->InitAsDefaultInstance();
  ResourceBuildingListPush::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_resource_5fbuilding_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_resource_5fbuilding_2eproto {
  StaticDescriptorInitializer_resource_5fbuilding_2eproto() {
    protobuf_AddDesc_resource_5fbuilding_2eproto();
  }
} static_descriptor_initializer_resource_5fbuilding_2eproto_;
const ::google::protobuf::EnumDescriptor* ResourceBuildingCommandId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingCommandId_descriptor_;
}
bool ResourceBuildingCommandId_IsValid(int value) {
  switch(value) {
    case 401:
    case 402:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ResourceBuildingPushId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingPushId_descriptor_;
}
bool ResourceBuildingPushId_IsValid(int value) {
  switch(value) {
    case 50401:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceBuildingDTO::kBuildingIdFieldNumber;
const int ResourceBuildingDTO::kCurrentNumFieldNumber;
const int ResourceBuildingDTO::kLastReapTimeFieldNumber;
const int ResourceBuildingDTO::kSpeedUpEndTimeFieldNumber;
#endif  // !_MSC_VER

ResourceBuildingDTO::ResourceBuildingDTO()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceBuildingDTO::InitAsDefaultInstance() {
}

ResourceBuildingDTO::ResourceBuildingDTO(const ResourceBuildingDTO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceBuildingDTO::SharedCtor() {
  _cached_size_ = 0;
  buildingid_ = 0;
  currentnum_ = 0;
  lastreaptime_ = 0;
  speedupendtime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceBuildingDTO::~ResourceBuildingDTO() {
  SharedDtor();
}

void ResourceBuildingDTO::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceBuildingDTO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceBuildingDTO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingDTO_descriptor_;
}

const ResourceBuildingDTO& ResourceBuildingDTO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_resource_5fbuilding_2eproto();
  return *default_instance_;
}

ResourceBuildingDTO* ResourceBuildingDTO::default_instance_ = NULL;

ResourceBuildingDTO* ResourceBuildingDTO::New() const {
  return new ResourceBuildingDTO;
}

void ResourceBuildingDTO::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buildingid_ = 0;
    currentnum_ = 0;
    lastreaptime_ = 0;
    speedupendtime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceBuildingDTO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 buildingId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buildingid_)));
          set_has_buildingid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_currentNum;
        break;
      }

      // required int32 currentNum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentnum_)));
          set_has_currentnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lastReapTime;
        break;
      }

      // required int32 lastReapTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lastReapTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastreaptime_)));
          set_has_lastreaptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_speedUpEndTime;
        break;
      }

      // optional int32 speedUpEndTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_speedUpEndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speedupendtime_)));
          set_has_speedupendtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceBuildingDTO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buildingid(), output);
  }

  // required int32 currentNum = 2;
  if (has_currentnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->currentnum(), output);
  }

  // required int32 lastReapTime = 3;
  if (has_lastreaptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lastreaptime(), output);
  }

  // optional int32 speedUpEndTime = 4;
  if (has_speedupendtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->speedupendtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceBuildingDTO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buildingid(), target);
  }

  // required int32 currentNum = 2;
  if (has_currentnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->currentnum(), target);
  }

  // required int32 lastReapTime = 3;
  if (has_lastreaptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lastreaptime(), target);
  }

  // optional int32 speedUpEndTime = 4;
  if (has_speedupendtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->speedupendtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceBuildingDTO::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 buildingId = 1;
    if (has_buildingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buildingid());
    }

    // required int32 currentNum = 2;
    if (has_currentnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currentnum());
    }

    // required int32 lastReapTime = 3;
    if (has_lastreaptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastreaptime());
    }

    // optional int32 speedUpEndTime = 4;
    if (has_speedupendtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speedupendtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceBuildingDTO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceBuildingDTO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceBuildingDTO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceBuildingDTO::MergeFrom(const ResourceBuildingDTO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildingid()) {
      set_buildingid(from.buildingid());
    }
    if (from.has_currentnum()) {
      set_currentnum(from.currentnum());
    }
    if (from.has_lastreaptime()) {
      set_lastreaptime(from.lastreaptime());
    }
    if (from.has_speedupendtime()) {
      set_speedupendtime(from.speedupendtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceBuildingDTO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceBuildingDTO::CopyFrom(const ResourceBuildingDTO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceBuildingDTO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ResourceBuildingDTO::Swap(ResourceBuildingDTO* other) {
  if (other != this) {
    std::swap(buildingid_, other->buildingid_);
    std::swap(currentnum_, other->currentnum_);
    std::swap(lastreaptime_, other->lastreaptime_);
    std::swap(speedupendtime_, other->speedupendtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceBuildingDTO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceBuildingDTO_descriptor_;
  metadata.reflection = ResourceBuildingDTO_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceBuildingReapRequest::kBuildingIdFieldNumber;
#endif  // !_MSC_VER

ResourceBuildingReapRequest::ResourceBuildingReapRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceBuildingReapRequest::InitAsDefaultInstance() {
}

ResourceBuildingReapRequest::ResourceBuildingReapRequest(const ResourceBuildingReapRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceBuildingReapRequest::SharedCtor() {
  _cached_size_ = 0;
  buildingid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceBuildingReapRequest::~ResourceBuildingReapRequest() {
  SharedDtor();
}

void ResourceBuildingReapRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceBuildingReapRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceBuildingReapRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingReapRequest_descriptor_;
}

const ResourceBuildingReapRequest& ResourceBuildingReapRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_resource_5fbuilding_2eproto();
  return *default_instance_;
}

ResourceBuildingReapRequest* ResourceBuildingReapRequest::default_instance_ = NULL;

ResourceBuildingReapRequest* ResourceBuildingReapRequest::New() const {
  return new ResourceBuildingReapRequest;
}

void ResourceBuildingReapRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buildingid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceBuildingReapRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 buildingId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buildingid_)));
          set_has_buildingid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceBuildingReapRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buildingid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceBuildingReapRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buildingid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceBuildingReapRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 buildingId = 1;
    if (has_buildingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buildingid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceBuildingReapRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceBuildingReapRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceBuildingReapRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceBuildingReapRequest::MergeFrom(const ResourceBuildingReapRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildingid()) {
      set_buildingid(from.buildingid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceBuildingReapRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceBuildingReapRequest::CopyFrom(const ResourceBuildingReapRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceBuildingReapRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResourceBuildingReapRequest::Swap(ResourceBuildingReapRequest* other) {
  if (other != this) {
    std::swap(buildingid_, other->buildingid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceBuildingReapRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceBuildingReapRequest_descriptor_;
  metadata.reflection = ResourceBuildingReapRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceBuildingReapResponse::kBuildingIdFieldNumber;
const int ResourceBuildingReapResponse::kResourcrAddFieldNumber;
const int ResourceBuildingReapResponse::kIsCritFieldNumber;
#endif  // !_MSC_VER

ResourceBuildingReapResponse::ResourceBuildingReapResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceBuildingReapResponse::InitAsDefaultInstance() {
  resourcradd_ = const_cast< ::slg::protocol::PropertyDTO*>(&::slg::protocol::PropertyDTO::default_instance());
}

ResourceBuildingReapResponse::ResourceBuildingReapResponse(const ResourceBuildingReapResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceBuildingReapResponse::SharedCtor() {
  _cached_size_ = 0;
  buildingid_ = 0;
  resourcradd_ = NULL;
  iscrit_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceBuildingReapResponse::~ResourceBuildingReapResponse() {
  SharedDtor();
}

void ResourceBuildingReapResponse::SharedDtor() {
  if (this != default_instance_) {
    delete resourcradd_;
  }
}

void ResourceBuildingReapResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceBuildingReapResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingReapResponse_descriptor_;
}

const ResourceBuildingReapResponse& ResourceBuildingReapResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_resource_5fbuilding_2eproto();
  return *default_instance_;
}

ResourceBuildingReapResponse* ResourceBuildingReapResponse::default_instance_ = NULL;

ResourceBuildingReapResponse* ResourceBuildingReapResponse::New() const {
  return new ResourceBuildingReapResponse;
}

void ResourceBuildingReapResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buildingid_ = 0;
    if (has_resourcradd()) {
      if (resourcradd_ != NULL) resourcradd_->::slg::protocol::PropertyDTO::Clear();
    }
    iscrit_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceBuildingReapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 buildingId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buildingid_)));
          set_has_buildingid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resourcrAdd;
        break;
      }

      // required .slg.protocol.PropertyDTO resourcrAdd = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resourcrAdd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcradd()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_isCrit;
        break;
      }

      // required bool isCrit = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isCrit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iscrit_)));
          set_has_iscrit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceBuildingReapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buildingid(), output);
  }

  // required .slg.protocol.PropertyDTO resourcrAdd = 2;
  if (has_resourcradd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resourcradd(), output);
  }

  // required bool isCrit = 3;
  if (has_iscrit()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->iscrit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceBuildingReapResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buildingid(), target);
  }

  // required .slg.protocol.PropertyDTO resourcrAdd = 2;
  if (has_resourcradd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resourcradd(), target);
  }

  // required bool isCrit = 3;
  if (has_iscrit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->iscrit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceBuildingReapResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 buildingId = 1;
    if (has_buildingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buildingid());
    }

    // required .slg.protocol.PropertyDTO resourcrAdd = 2;
    if (has_resourcradd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resourcradd());
    }

    // required bool isCrit = 3;
    if (has_iscrit()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceBuildingReapResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceBuildingReapResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceBuildingReapResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceBuildingReapResponse::MergeFrom(const ResourceBuildingReapResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildingid()) {
      set_buildingid(from.buildingid());
    }
    if (from.has_resourcradd()) {
      mutable_resourcradd()->::slg::protocol::PropertyDTO::MergeFrom(from.resourcradd());
    }
    if (from.has_iscrit()) {
      set_iscrit(from.iscrit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceBuildingReapResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceBuildingReapResponse::CopyFrom(const ResourceBuildingReapResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceBuildingReapResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_resourcradd()) {
    if (!this->resourcradd().IsInitialized()) return false;
  }
  return true;
}

void ResourceBuildingReapResponse::Swap(ResourceBuildingReapResponse* other) {
  if (other != this) {
    std::swap(buildingid_, other->buildingid_);
    std::swap(resourcradd_, other->resourcradd_);
    std::swap(iscrit_, other->iscrit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceBuildingReapResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceBuildingReapResponse_descriptor_;
  metadata.reflection = ResourceBuildingReapResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceBuildingSpeedUpRequest::kBuildingIdFieldNumber;
const int ResourceBuildingSpeedUpRequest::kUseDiamondFieldNumber;
const int ResourceBuildingSpeedUpRequest::kItemIdFieldNumber;
#endif  // !_MSC_VER

ResourceBuildingSpeedUpRequest::ResourceBuildingSpeedUpRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceBuildingSpeedUpRequest::InitAsDefaultInstance() {
}

ResourceBuildingSpeedUpRequest::ResourceBuildingSpeedUpRequest(const ResourceBuildingSpeedUpRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceBuildingSpeedUpRequest::SharedCtor() {
  _cached_size_ = 0;
  buildingid_ = 0;
  usediamond_ = false;
  itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceBuildingSpeedUpRequest::~ResourceBuildingSpeedUpRequest() {
  SharedDtor();
}

void ResourceBuildingSpeedUpRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceBuildingSpeedUpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceBuildingSpeedUpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingSpeedUpRequest_descriptor_;
}

const ResourceBuildingSpeedUpRequest& ResourceBuildingSpeedUpRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_resource_5fbuilding_2eproto();
  return *default_instance_;
}

ResourceBuildingSpeedUpRequest* ResourceBuildingSpeedUpRequest::default_instance_ = NULL;

ResourceBuildingSpeedUpRequest* ResourceBuildingSpeedUpRequest::New() const {
  return new ResourceBuildingSpeedUpRequest;
}

void ResourceBuildingSpeedUpRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buildingid_ = 0;
    usediamond_ = false;
    itemid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceBuildingSpeedUpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 buildingId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buildingid_)));
          set_has_buildingid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_useDiamond;
        break;
      }

      // optional bool useDiamond = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_useDiamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usediamond_)));
          set_has_usediamond();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itemId;
        break;
      }

      // optional int32 itemId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceBuildingSpeedUpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buildingid(), output);
  }

  // optional bool useDiamond = 2;
  if (has_usediamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->usediamond(), output);
  }

  // optional int32 itemId = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceBuildingSpeedUpRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buildingid(), target);
  }

  // optional bool useDiamond = 2;
  if (has_usediamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->usediamond(), target);
  }

  // optional int32 itemId = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceBuildingSpeedUpRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 buildingId = 1;
    if (has_buildingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buildingid());
    }

    // optional bool useDiamond = 2;
    if (has_usediamond()) {
      total_size += 1 + 1;
    }

    // optional int32 itemId = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceBuildingSpeedUpRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceBuildingSpeedUpRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceBuildingSpeedUpRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceBuildingSpeedUpRequest::MergeFrom(const ResourceBuildingSpeedUpRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildingid()) {
      set_buildingid(from.buildingid());
    }
    if (from.has_usediamond()) {
      set_usediamond(from.usediamond());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceBuildingSpeedUpRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceBuildingSpeedUpRequest::CopyFrom(const ResourceBuildingSpeedUpRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceBuildingSpeedUpRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResourceBuildingSpeedUpRequest::Swap(ResourceBuildingSpeedUpRequest* other) {
  if (other != this) {
    std::swap(buildingid_, other->buildingid_);
    std::swap(usediamond_, other->usediamond_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceBuildingSpeedUpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceBuildingSpeedUpRequest_descriptor_;
  metadata.reflection = ResourceBuildingSpeedUpRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceBuildingSpeedUpResponse::kBuildingIdFieldNumber;
#endif  // !_MSC_VER

ResourceBuildingSpeedUpResponse::ResourceBuildingSpeedUpResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceBuildingSpeedUpResponse::InitAsDefaultInstance() {
}

ResourceBuildingSpeedUpResponse::ResourceBuildingSpeedUpResponse(const ResourceBuildingSpeedUpResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceBuildingSpeedUpResponse::SharedCtor() {
  _cached_size_ = 0;
  buildingid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceBuildingSpeedUpResponse::~ResourceBuildingSpeedUpResponse() {
  SharedDtor();
}

void ResourceBuildingSpeedUpResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceBuildingSpeedUpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceBuildingSpeedUpResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingSpeedUpResponse_descriptor_;
}

const ResourceBuildingSpeedUpResponse& ResourceBuildingSpeedUpResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_resource_5fbuilding_2eproto();
  return *default_instance_;
}

ResourceBuildingSpeedUpResponse* ResourceBuildingSpeedUpResponse::default_instance_ = NULL;

ResourceBuildingSpeedUpResponse* ResourceBuildingSpeedUpResponse::New() const {
  return new ResourceBuildingSpeedUpResponse;
}

void ResourceBuildingSpeedUpResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buildingid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceBuildingSpeedUpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 buildingId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buildingid_)));
          set_has_buildingid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceBuildingSpeedUpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buildingid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceBuildingSpeedUpResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 buildingId = 1;
  if (has_buildingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buildingid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceBuildingSpeedUpResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 buildingId = 1;
    if (has_buildingid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buildingid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceBuildingSpeedUpResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceBuildingSpeedUpResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceBuildingSpeedUpResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceBuildingSpeedUpResponse::MergeFrom(const ResourceBuildingSpeedUpResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buildingid()) {
      set_buildingid(from.buildingid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceBuildingSpeedUpResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceBuildingSpeedUpResponse::CopyFrom(const ResourceBuildingSpeedUpResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceBuildingSpeedUpResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResourceBuildingSpeedUpResponse::Swap(ResourceBuildingSpeedUpResponse* other) {
  if (other != this) {
    std::swap(buildingid_, other->buildingid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceBuildingSpeedUpResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceBuildingSpeedUpResponse_descriptor_;
  metadata.reflection = ResourceBuildingSpeedUpResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceBuildingListPush::kResourceBuildingsFieldNumber;
#endif  // !_MSC_VER

ResourceBuildingListPush::ResourceBuildingListPush()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceBuildingListPush::InitAsDefaultInstance() {
}

ResourceBuildingListPush::ResourceBuildingListPush(const ResourceBuildingListPush& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceBuildingListPush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceBuildingListPush::~ResourceBuildingListPush() {
  SharedDtor();
}

void ResourceBuildingListPush::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceBuildingListPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceBuildingListPush::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceBuildingListPush_descriptor_;
}

const ResourceBuildingListPush& ResourceBuildingListPush::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_resource_5fbuilding_2eproto();
  return *default_instance_;
}

ResourceBuildingListPush* ResourceBuildingListPush::default_instance_ = NULL;

ResourceBuildingListPush* ResourceBuildingListPush::New() const {
  return new ResourceBuildingListPush;
}

void ResourceBuildingListPush::Clear() {
  resourcebuildings_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceBuildingListPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .slg.protocol.ResourceBuildingDTO resourceBuildings = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resourceBuildings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resourcebuildings()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_resourceBuildings;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceBuildingListPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .slg.protocol.ResourceBuildingDTO resourceBuildings = 1;
  for (int i = 0; i < this->resourcebuildings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resourcebuildings(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceBuildingListPush::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .slg.protocol.ResourceBuildingDTO resourceBuildings = 1;
  for (int i = 0; i < this->resourcebuildings_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resourcebuildings(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceBuildingListPush::ByteSize() const {
  int total_size = 0;

  // repeated .slg.protocol.ResourceBuildingDTO resourceBuildings = 1;
  total_size += 1 * this->resourcebuildings_size();
  for (int i = 0; i < this->resourcebuildings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resourcebuildings(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceBuildingListPush::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceBuildingListPush* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceBuildingListPush*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceBuildingListPush::MergeFrom(const ResourceBuildingListPush& from) {
  GOOGLE_CHECK_NE(&from, this);
  resourcebuildings_.MergeFrom(from.resourcebuildings_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceBuildingListPush::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceBuildingListPush::CopyFrom(const ResourceBuildingListPush& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceBuildingListPush::IsInitialized() const {

  for (int i = 0; i < resourcebuildings_size(); i++) {
    if (!this->resourcebuildings(i).IsInitialized()) return false;
  }
  return true;
}

void ResourceBuildingListPush::Swap(ResourceBuildingListPush* other) {
  if (other != this) {
    resourcebuildings_.Swap(&other->resourcebuildings_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceBuildingListPush::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceBuildingListPush_descriptor_;
  metadata.reflection = ResourceBuildingListPush_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

// @@protoc_insertion_point(global_scope)
