// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#ifndef PROTOBUF_item_2eproto__INCLUDED
#define PROTOBUF_item_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace slg {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_item_2eproto();
void protobuf_AssignDesc_item_2eproto();
void protobuf_ShutdownFile_item_2eproto();

class ItemsUseRequest;
class ItemsUseResponse;
class ItemChangePush;

enum ITEMCommandId {
  ITEM_USE_ITEM = 801
};
bool ITEMCommandId_IsValid(int value);
const ITEMCommandId ITEMCommandId_MIN = ITEM_USE_ITEM;
const ITEMCommandId ITEMCommandId_MAX = ITEM_USE_ITEM;
const int ITEMCommandId_ARRAYSIZE = ITEMCommandId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ITEMCommandId_descriptor();
inline const ::std::string& ITEMCommandId_Name(ITEMCommandId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ITEMCommandId_descriptor(), value);
}
inline bool ITEMCommandId_Parse(
    const ::std::string& name, ITEMCommandId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ITEMCommandId>(
    ITEMCommandId_descriptor(), name, value);
}
enum ItemPushId {
  ITEM_CHANGE_PUSH = 50801
};
bool ItemPushId_IsValid(int value);
const ItemPushId ItemPushId_MIN = ITEM_CHANGE_PUSH;
const ItemPushId ItemPushId_MAX = ITEM_CHANGE_PUSH;
const int ItemPushId_ARRAYSIZE = ItemPushId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemPushId_descriptor();
inline const ::std::string& ItemPushId_Name(ItemPushId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemPushId_descriptor(), value);
}
inline bool ItemPushId_Parse(
    const ::std::string& name, ItemPushId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemPushId>(
    ItemPushId_descriptor(), name, value);
}
// ===================================================================

class ItemsUseRequest : public ::google::protobuf::Message {
 public:
  ItemsUseRequest();
  virtual ~ItemsUseRequest();

  ItemsUseRequest(const ItemsUseRequest& from);

  inline ItemsUseRequest& operator=(const ItemsUseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemsUseRequest& default_instance();

  void Swap(ItemsUseRequest* other);

  // implements Message ----------------------------------------------

  ItemsUseRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemsUseRequest& from);
  void MergeFrom(const ItemsUseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .slg.protocol.ItemDTO item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::slg::protocol::ItemDTO& item() const;
  inline ::slg::protocol::ItemDTO* mutable_item();
  inline ::slg::protocol::ItemDTO* release_item();
  inline void set_allocated_item(::slg::protocol::ItemDTO* item);

  // @@protoc_insertion_point(class_scope:slg.protocol.ItemsUseRequest)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::slg::protocol::ItemDTO* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_item_2eproto();
  friend void protobuf_AssignDesc_item_2eproto();
  friend void protobuf_ShutdownFile_item_2eproto();

  void InitAsDefaultInstance();
  static ItemsUseRequest* default_instance_;
};
// -------------------------------------------------------------------

class ItemsUseResponse : public ::google::protobuf::Message {
 public:
  ItemsUseResponse();
  virtual ~ItemsUseResponse();

  ItemsUseResponse(const ItemsUseResponse& from);

  inline ItemsUseResponse& operator=(const ItemsUseResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemsUseResponse& default_instance();

  void Swap(ItemsUseResponse* other);

  // implements Message ----------------------------------------------

  ItemsUseResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemsUseResponse& from);
  void MergeFrom(const ItemsUseResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .slg.protocol.ItemDTO item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::slg::protocol::ItemDTO& item() const;
  inline ::slg::protocol::ItemDTO* mutable_item();
  inline ::slg::protocol::ItemDTO* release_item();
  inline void set_allocated_item(::slg::protocol::ItemDTO* item);

  // @@protoc_insertion_point(class_scope:slg.protocol.ItemsUseResponse)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::slg::protocol::ItemDTO* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_item_2eproto();
  friend void protobuf_AssignDesc_item_2eproto();
  friend void protobuf_ShutdownFile_item_2eproto();

  void InitAsDefaultInstance();
  static ItemsUseResponse* default_instance_;
};
// -------------------------------------------------------------------

class ItemChangePush : public ::google::protobuf::Message {
 public:
  ItemChangePush();
  virtual ~ItemChangePush();

  ItemChangePush(const ItemChangePush& from);

  inline ItemChangePush& operator=(const ItemChangePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemChangePush& default_instance();

  void Swap(ItemChangePush* other);

  // implements Message ----------------------------------------------

  ItemChangePush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemChangePush& from);
  void MergeFrom(const ItemChangePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .slg.protocol.ItemDTO items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::slg::protocol::ItemDTO& items(int index) const;
  inline ::slg::protocol::ItemDTO* mutable_items(int index);
  inline ::slg::protocol::ItemDTO* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
      mutable_items();

  // required bool isLogin = 2;
  inline bool has_islogin() const;
  inline void clear_islogin();
  static const int kIsLoginFieldNumber = 2;
  inline bool islogin() const;
  inline void set_islogin(bool value);

  // @@protoc_insertion_point(class_scope:slg.protocol.ItemChangePush)
 private:
  inline void set_has_islogin();
  inline void clear_has_islogin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO > items_;
  bool islogin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_item_2eproto();
  friend void protobuf_AssignDesc_item_2eproto();
  friend void protobuf_ShutdownFile_item_2eproto();

  void InitAsDefaultInstance();
  static ItemChangePush* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemsUseRequest

// required .slg.protocol.ItemDTO item = 1;
inline bool ItemsUseRequest::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemsUseRequest::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemsUseRequest::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemsUseRequest::clear_item() {
  if (item_ != NULL) item_->::slg::protocol::ItemDTO::Clear();
  clear_has_item();
}
inline const ::slg::protocol::ItemDTO& ItemsUseRequest::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::slg::protocol::ItemDTO* ItemsUseRequest::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::slg::protocol::ItemDTO;
  return item_;
}
inline ::slg::protocol::ItemDTO* ItemsUseRequest::release_item() {
  clear_has_item();
  ::slg::protocol::ItemDTO* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ItemsUseRequest::set_allocated_item(::slg::protocol::ItemDTO* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// ItemsUseResponse

// required .slg.protocol.ItemDTO item = 1;
inline bool ItemsUseResponse::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemsUseResponse::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemsUseResponse::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemsUseResponse::clear_item() {
  if (item_ != NULL) item_->::slg::protocol::ItemDTO::Clear();
  clear_has_item();
}
inline const ::slg::protocol::ItemDTO& ItemsUseResponse::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::slg::protocol::ItemDTO* ItemsUseResponse::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::slg::protocol::ItemDTO;
  return item_;
}
inline ::slg::protocol::ItemDTO* ItemsUseResponse::release_item() {
  clear_has_item();
  ::slg::protocol::ItemDTO* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ItemsUseResponse::set_allocated_item(::slg::protocol::ItemDTO* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// ItemChangePush

// repeated .slg.protocol.ItemDTO items = 1;
inline int ItemChangePush::items_size() const {
  return items_.size();
}
inline void ItemChangePush::clear_items() {
  items_.Clear();
}
inline const ::slg::protocol::ItemDTO& ItemChangePush::items(int index) const {
  return items_.Get(index);
}
inline ::slg::protocol::ItemDTO* ItemChangePush::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::slg::protocol::ItemDTO* ItemChangePush::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >&
ItemChangePush::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::slg::protocol::ItemDTO >*
ItemChangePush::mutable_items() {
  return &items_;
}

// required bool isLogin = 2;
inline bool ItemChangePush::has_islogin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemChangePush::set_has_islogin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemChangePush::clear_has_islogin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemChangePush::clear_islogin() {
  islogin_ = false;
  clear_has_islogin();
}
inline bool ItemChangePush::islogin() const {
  return islogin_;
}
inline void ItemChangePush::set_islogin(bool value) {
  set_has_islogin();
  islogin_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace slg

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::ITEMCommandId>() {
  return ::slg::protocol::ITEMCommandId_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::slg::protocol::ItemPushId>() {
  return ::slg::protocol::ItemPushId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_item_2eproto__INCLUDED
