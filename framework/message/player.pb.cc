// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#include "player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class PlayerDTODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerDTO>
      _instance;
} _PlayerDTO_default_instance_;
class GuideDTODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuideDTO>
      _instance;
} _GuideDTO_default_instance_;
class UserAccountLoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAccountLoginRequest>
      _instance;
} _UserAccountLoginRequest_default_instance_;
class UserAccountLoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAccountLoginResponse>
      _instance;
} _UserAccountLoginResponse_default_instance_;
class PlayerLoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRequest>
      _instance;
} _PlayerLoginRequest_default_instance_;
class PlayerLoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginResponse>
      _instance;
} _PlayerLoginResponse_default_instance_;
class PlayerReconnectRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerReconnectRequest>
      _instance;
} _PlayerReconnectRequest_default_instance_;
class PlayerReconnectResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerReconnectResponse>
      _instance;
} _PlayerReconnectResponse_default_instance_;
class PlayerReloadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerReloadRequest>
      _instance;
} _PlayerReloadRequest_default_instance_;
class PlayerReloadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerReloadResponse>
      _instance;
} _PlayerReloadResponse_default_instance_;
class PlayerHeartBeatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerHeartBeatRequest>
      _instance;
} _PlayerHeartBeatRequest_default_instance_;
class PlayerHeartBeatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerHeartBeatResponse>
      _instance;
} _PlayerHeartBeatResponse_default_instance_;
class SetTalentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTalentRequest>
      _instance;
} _SetTalentRequest_default_instance_;
class SetTalentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTalentResponse>
      _instance;
} _SetTalentResponse_default_instance_;
class SetImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetImageRequest>
      _instance;
} _SetImageRequest_default_instance_;
class SetImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetImageResponse>
      _instance;
} _SetImageResponse_default_instance_;
class QueryLordInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryLordInfoRequest>
      _instance;
} _QueryLordInfoRequest_default_instance_;
class QueryLordInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryLordInfoResponse>
      _instance;
} _QueryLordInfoResponse_default_instance_;
class SetIconRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetIconRequest>
      _instance;
} _SetIconRequest_default_instance_;
class SetIconResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetIconResponse>
      _instance;
} _SetIconResponse_default_instance_;
class ChangeNameRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeNameRequest>
      _instance;
} _ChangeNameRequest_default_instance_;
class ChangeNameResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeNameResponse>
      _instance;
} _ChangeNameResponse_default_instance_;
class SetGuideRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetGuideRequest>
      _instance;
} _SetGuideRequest_default_instance_;
class PlayerDataPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerDataPush>
      _instance;
} _PlayerDataPush_default_instance_;
class PlayerPropertyChangePushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerPropertyChangePush>
      _instance;
} _PlayerPropertyChangePush_default_instance_;
class PlayerLevelUpPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerLevelUpPush>
      _instance;
} _PlayerLevelUpPush_default_instance_;
class PlayerProtectPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerProtectPush>
      _instance;
} _PlayerProtectPush_default_instance_;
class PlayerCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerCount>
      _instance;
} _PlayerCount_default_instance_;
class PlayerCountPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerCountPush>
      _instance;
} _PlayerCountPush_default_instance_;
class PlayeBattlePushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayeBattlePush>
      _instance;
} _PlayeBattlePush_default_instance_;
class TalentPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TalentPush>
      _instance;
} _TalentPush_default_instance_;
class VipInfoPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VipInfoPush>
      _instance;
} _VipInfoPush_default_instance_;
class VipActiveInfoPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VipActiveInfoPush>
      _instance;
} _VipActiveInfoPush_default_instance_;
class SysTimePushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SysTimePush>
      _instance;
} _SysTimePush_default_instance_;
class GuidePushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuidePush>
      _instance;
} _GuidePush_default_instance_;
namespace protobuf_player_2eproto {
void InitDefaultsPlayerDTOImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsPropertyDTO();
  protobuf_common_2eproto::InitDefaultsPositionDTO();
  {
    void* ptr = &::_PlayerDTO_default_instance_;
    new (ptr) ::PlayerDTO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerDTO::InitAsDefaultInstance();
}

void InitDefaultsPlayerDTO() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerDTOImpl);
}

void InitDefaultsGuideDTOImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GuideDTO_default_instance_;
    new (ptr) ::GuideDTO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuideDTO::InitAsDefaultInstance();
}

void InitDefaultsGuideDTO() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuideDTOImpl);
}

void InitDefaultsUserAccountLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserAccountLoginRequest_default_instance_;
    new (ptr) ::UserAccountLoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserAccountLoginRequest::InitAsDefaultInstance();
}

void InitDefaultsUserAccountLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserAccountLoginRequestImpl);
}

void InitDefaultsUserAccountLoginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserAccountLoginResponse_default_instance_;
    new (ptr) ::UserAccountLoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserAccountLoginResponse::InitAsDefaultInstance();
}

void InitDefaultsUserAccountLoginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserAccountLoginResponseImpl);
}

void InitDefaultsPlayerLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerLoginRequest_default_instance_;
    new (ptr) ::PlayerLoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerLoginRequest::InitAsDefaultInstance();
}

void InitDefaultsPlayerLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerLoginRequestImpl);
}

void InitDefaultsPlayerLoginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerLoginResponse_default_instance_;
    new (ptr) ::PlayerLoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerLoginResponse::InitAsDefaultInstance();
}

void InitDefaultsPlayerLoginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerLoginResponseImpl);
}

void InitDefaultsPlayerReconnectRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerReconnectRequest_default_instance_;
    new (ptr) ::PlayerReconnectRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerReconnectRequest::InitAsDefaultInstance();
}

void InitDefaultsPlayerReconnectRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerReconnectRequestImpl);
}

void InitDefaultsPlayerReconnectResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerReconnectResponse_default_instance_;
    new (ptr) ::PlayerReconnectResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerReconnectResponse::InitAsDefaultInstance();
}

void InitDefaultsPlayerReconnectResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerReconnectResponseImpl);
}

void InitDefaultsPlayerReloadRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerReloadRequest_default_instance_;
    new (ptr) ::PlayerReloadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerReloadRequest::InitAsDefaultInstance();
}

void InitDefaultsPlayerReloadRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerReloadRequestImpl);
}

void InitDefaultsPlayerReloadResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerReloadResponse_default_instance_;
    new (ptr) ::PlayerReloadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerReloadResponse::InitAsDefaultInstance();
}

void InitDefaultsPlayerReloadResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerReloadResponseImpl);
}

void InitDefaultsPlayerHeartBeatRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerHeartBeatRequest_default_instance_;
    new (ptr) ::PlayerHeartBeatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerHeartBeatRequest::InitAsDefaultInstance();
}

void InitDefaultsPlayerHeartBeatRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerHeartBeatRequestImpl);
}

void InitDefaultsPlayerHeartBeatResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerHeartBeatResponse_default_instance_;
    new (ptr) ::PlayerHeartBeatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerHeartBeatResponse::InitAsDefaultInstance();
}

void InitDefaultsPlayerHeartBeatResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerHeartBeatResponseImpl);
}

void InitDefaultsSetTalentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SetTalentRequest_default_instance_;
    new (ptr) ::SetTalentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetTalentRequest::InitAsDefaultInstance();
}

void InitDefaultsSetTalentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetTalentRequestImpl);
}

void InitDefaultsSetTalentResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SetTalentResponse_default_instance_;
    new (ptr) ::SetTalentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetTalentResponse::InitAsDefaultInstance();
}

void InitDefaultsSetTalentResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetTalentResponseImpl);
}

void InitDefaultsSetImageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SetImageRequest_default_instance_;
    new (ptr) ::SetImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetImageRequest::InitAsDefaultInstance();
}

void InitDefaultsSetImageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetImageRequestImpl);
}

void InitDefaultsSetImageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SetImageResponse_default_instance_;
    new (ptr) ::SetImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetImageResponse::InitAsDefaultInstance();
}

void InitDefaultsSetImageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetImageResponseImpl);
}

void InitDefaultsQueryLordInfoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_QueryLordInfoRequest_default_instance_;
    new (ptr) ::QueryLordInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueryLordInfoRequest::InitAsDefaultInstance();
}

void InitDefaultsQueryLordInfoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryLordInfoRequestImpl);
}

void InitDefaultsQueryLordInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsEquipmentDTO();
  {
    void* ptr = &::_QueryLordInfoResponse_default_instance_;
    new (ptr) ::QueryLordInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueryLordInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsQueryLordInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryLordInfoResponseImpl);
}

void InitDefaultsSetIconRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SetIconRequest_default_instance_;
    new (ptr) ::SetIconRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetIconRequest::InitAsDefaultInstance();
}

void InitDefaultsSetIconRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetIconRequestImpl);
}

void InitDefaultsSetIconResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SetIconResponse_default_instance_;
    new (ptr) ::SetIconResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetIconResponse::InitAsDefaultInstance();
}

void InitDefaultsSetIconResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetIconResponseImpl);
}

void InitDefaultsChangeNameRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ChangeNameRequest_default_instance_;
    new (ptr) ::ChangeNameRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChangeNameRequest::InitAsDefaultInstance();
}

void InitDefaultsChangeNameRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeNameRequestImpl);
}

void InitDefaultsChangeNameResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsPropertyDTO();
  {
    void* ptr = &::_ChangeNameResponse_default_instance_;
    new (ptr) ::ChangeNameResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChangeNameResponse::InitAsDefaultInstance();
}

void InitDefaultsChangeNameResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangeNameResponseImpl);
}

void InitDefaultsSetGuideRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SetGuideRequest_default_instance_;
    new (ptr) ::SetGuideRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetGuideRequest::InitAsDefaultInstance();
}

void InitDefaultsSetGuideRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetGuideRequestImpl);
}

void InitDefaultsPlayerDataPushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_player_2eproto::InitDefaultsPlayerDTO();
  {
    void* ptr = &::_PlayerDataPush_default_instance_;
    new (ptr) ::PlayerDataPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerDataPush::InitAsDefaultInstance();
}

void InitDefaultsPlayerDataPush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerDataPushImpl);
}

void InitDefaultsPlayerPropertyChangePushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2eproto::InitDefaultsPropertyDTO();
  {
    void* ptr = &::_PlayerPropertyChangePush_default_instance_;
    new (ptr) ::PlayerPropertyChangePush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerPropertyChangePush::InitAsDefaultInstance();
}

void InitDefaultsPlayerPropertyChangePush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerPropertyChangePushImpl);
}

void InitDefaultsPlayerLevelUpPushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerLevelUpPush_default_instance_;
    new (ptr) ::PlayerLevelUpPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerLevelUpPush::InitAsDefaultInstance();
}

void InitDefaultsPlayerLevelUpPush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerLevelUpPushImpl);
}

void InitDefaultsPlayerProtectPushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerProtectPush_default_instance_;
    new (ptr) ::PlayerProtectPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerProtectPush::InitAsDefaultInstance();
}

void InitDefaultsPlayerProtectPush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerProtectPushImpl);
}

void InitDefaultsPlayerCountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerCount_default_instance_;
    new (ptr) ::PlayerCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerCount::InitAsDefaultInstance();
}

void InitDefaultsPlayerCount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerCountImpl);
}

void InitDefaultsPlayerCountPushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_player_2eproto::InitDefaultsPlayerCount();
  {
    void* ptr = &::_PlayerCountPush_default_instance_;
    new (ptr) ::PlayerCountPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerCountPush::InitAsDefaultInstance();
}

void InitDefaultsPlayerCountPush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerCountPushImpl);
}

void InitDefaultsPlayeBattlePushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayeBattlePush_default_instance_;
    new (ptr) ::PlayeBattlePush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayeBattlePush::InitAsDefaultInstance();
}

void InitDefaultsPlayeBattlePush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayeBattlePushImpl);
}

void InitDefaultsTalentPushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TalentPush_default_instance_;
    new (ptr) ::TalentPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TalentPush::InitAsDefaultInstance();
}

void InitDefaultsTalentPush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTalentPushImpl);
}

void InitDefaultsVipInfoPushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_VipInfoPush_default_instance_;
    new (ptr) ::VipInfoPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VipInfoPush::InitAsDefaultInstance();
}

void InitDefaultsVipInfoPush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVipInfoPushImpl);
}

void InitDefaultsVipActiveInfoPushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_VipActiveInfoPush_default_instance_;
    new (ptr) ::VipActiveInfoPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VipActiveInfoPush::InitAsDefaultInstance();
}

void InitDefaultsVipActiveInfoPush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVipActiveInfoPushImpl);
}

void InitDefaultsSysTimePushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_SysTimePush_default_instance_;
    new (ptr) ::SysTimePush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SysTimePush::InitAsDefaultInstance();
}

void InitDefaultsSysTimePush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSysTimePushImpl);
}

void InitDefaultsGuidePushImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_player_2eproto::InitDefaultsGuideDTO();
  {
    void* ptr = &::_GuidePush_default_instance_;
    new (ptr) ::GuidePush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuidePush::InitAsDefaultInstance();
}

void InitDefaultsGuidePush() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuidePushImpl);
}

::google::protobuf::Metadata file_level_metadata[35];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, mapgridposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, haschangedname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDTO, icon_),
  4,
  0,
  5,
  ~0u,
  1,
  3,
  6,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuideDTO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuideDTO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuideDTO, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuideDTO, jump_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserAccountLoginRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserAccountLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserAccountLoginRequest, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserAccountLoginRequest, puid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserAccountLoginResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserAccountLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserAccountLoginResponse, playerid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginRequest, playerid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginResponse, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginResponse, systime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLoginResponse, timezoneoffset_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReconnectRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReconnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReconnectRequest, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReconnectRequest, lastpushid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReconnectResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReconnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReconnectResponse, state_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReloadRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReloadResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReloadResponse, systime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerReloadResponse, timezoneoffset_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerHeartBeatRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerHeartBeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerHeartBeatResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerHeartBeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerHeartBeatResponse, systime_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentRequest, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentRequest, talentid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentResponse, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetTalentResponse, talentid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetImageRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetImageRequest, image_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetImageResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetImageResponse, image_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoRequest, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoRequest, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, allianceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, alliancename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, isfriend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::QueryLordInfoResponse, equipmentlist_),
  2,
  0,
  3,
  1,
  4,
  5,
  6,
  7,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetIconRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetIconRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetIconRequest, iconid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetIconRequest, oper_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetIconResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetIconResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetIconResponse, iconid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameRequest, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameRequest, useitem_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameResponse, isavailable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChangeNameResponse, reward_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetGuideRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetGuideRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetGuideRequest, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDataPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDataPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerDataPush, player_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerPropertyChangePush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerPropertyChangePush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerPropertyChangePush, properties_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLevelUpPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLevelUpPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerLevelUpPush, level_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerProtectPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerProtectPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerProtectPush, bornprotectendtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerProtectPush, atkprotectendtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerProtectPush, spyprotectendtime_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCount, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCount, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCount, defcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCount, addcount_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCountPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCountPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerCountPush, counts_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayeBattlePush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayeBattlePush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayeBattlePush, battlevalue_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TalentPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TalentPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TalentPush, talentids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipInfoPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipInfoPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipInfoPush, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipInfoPush, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipInfoPush, sign_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipActiveInfoPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipActiveInfoPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VipActiveInfoPush, activeend_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SysTimePush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SysTimePush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SysTimePush, currtime_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuidePush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuidePush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuidePush, guide_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::PlayerDTO)},
  { 21, 28, sizeof(::GuideDTO)},
  { 30, 37, sizeof(::UserAccountLoginRequest)},
  { 39, 45, sizeof(::UserAccountLoginResponse)},
  { 46, 52, sizeof(::PlayerLoginRequest)},
  { 53, 61, sizeof(::PlayerLoginResponse)},
  { 64, 71, sizeof(::PlayerReconnectRequest)},
  { 73, 79, sizeof(::PlayerReconnectResponse)},
  { 80, 85, sizeof(::PlayerReloadRequest)},
  { 85, 92, sizeof(::PlayerReloadResponse)},
  { 94, 99, sizeof(::PlayerHeartBeatRequest)},
  { 99, 105, sizeof(::PlayerHeartBeatResponse)},
  { 106, 113, sizeof(::SetTalentRequest)},
  { 115, 122, sizeof(::SetTalentResponse)},
  { 124, 130, sizeof(::SetImageRequest)},
  { 131, 137, sizeof(::SetImageResponse)},
  { 138, 145, sizeof(::QueryLordInfoRequest)},
  { 147, 161, sizeof(::QueryLordInfoResponse)},
  { 170, 177, sizeof(::SetIconRequest)},
  { 179, 185, sizeof(::SetIconResponse)},
  { 186, 193, sizeof(::ChangeNameRequest)},
  { 195, 202, sizeof(::ChangeNameResponse)},
  { 204, 210, sizeof(::SetGuideRequest)},
  { 211, 217, sizeof(::PlayerDataPush)},
  { 218, 224, sizeof(::PlayerPropertyChangePush)},
  { 225, 231, sizeof(::PlayerLevelUpPush)},
  { 232, 240, sizeof(::PlayerProtectPush)},
  { 243, 252, sizeof(::PlayerCount)},
  { 256, 262, sizeof(::PlayerCountPush)},
  { 263, 269, sizeof(::PlayeBattlePush)},
  { 270, 276, sizeof(::TalentPush)},
  { 277, 285, sizeof(::VipInfoPush)},
  { 288, 294, sizeof(::VipActiveInfoPush)},
  { 295, 301, sizeof(::SysTimePush)},
  { 302, 308, sizeof(::GuidePush)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerDTO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuideDTO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserAccountLoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserAccountLoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerLoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerLoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerReconnectRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerReconnectResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerReloadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerReloadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerHeartBeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerHeartBeatResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetTalentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetTalentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetImageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_QueryLordInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_QueryLordInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetIconRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetIconResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChangeNameRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChangeNameResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetGuideRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerDataPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerPropertyChangePush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerLevelUpPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerProtectPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerCountPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayeBattlePush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TalentPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VipInfoPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VipActiveInfoPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SysTimePush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuidePush_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "player.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 35);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014player.proto\032\014common.proto\"\273\001\n\tPlayerD"
      "TO\022\020\n\010playerId\030\001 \002(\004\022\014\n\004name\030\002 \001(\t\022\r\n\005le"
      "vel\030\003 \002(\005\022 \n\nproperties\030\004 \003(\0132\014.Property"
      "DTO\022\020\n\010language\030\005 \001(\t\022%\n\017mapGridPosition"
      "\030\006 \002(\0132\014.PositionDTO\022\026\n\016hasChangedName\030\007"
      " \002(\010\022\014\n\004icon\030\010 \002(\t\"$\n\010GuideDTO\022\n\n\002id\030\002 \002"
      "(\005\022\014\n\004jump\030\003 \002(\010\"9\n\027UserAccountLoginRequ"
      "est\022\020\n\010platform\030\001 \002(\t\022\014\n\004puid\030\002 \002(\t\",\n\030U"
      "serAccountLoginResponse\022\020\n\010playerId\030\001 \002("
      "\004\"&\n\022PlayerLoginRequest\022\020\n\010playerId\030\001 \002("
      "\004\"Q\n\023PlayerLoginResponse\022\021\n\tsessionId\030\001 "
      "\002(\004\022\017\n\007systime\030\002 \002(\003\022\026\n\016timeZoneOffset\030\003"
      " \002(\005\"\?\n\026PlayerReconnectRequest\022\021\n\tsessio"
      "nId\030\001 \002(\004\022\022\n\nlastPushId\030\002 \002(\005\"9\n\027PlayerR"
      "econnectResponse\022\036\n\005state\030\001 \001(\0162\017.Reconn"
      "ectState\"\025\n\023PlayerReloadRequest\"\?\n\024Playe"
      "rReloadResponse\022\017\n\007systime\030\001 \002(\003\022\026\n\016time"
      "ZoneOffset\030\002 \002(\005\"\030\n\026PlayerHeartBeatReque"
      "st\"*\n\027PlayerHeartBeatResponse\022\017\n\007systime"
      "\030\001 \002(\003\"3\n\020SetTalentRequest\022\r\n\005level\030\001 \002("
      "\005\022\020\n\010talentId\030\002 \002(\005\"4\n\021SetTalentResponse"
      "\022\r\n\005level\030\001 \002(\005\022\020\n\010talentId\030\002 \002(\005\" \n\017Set"
      "ImageRequest\022\r\n\005image\030\001 \002(\005\"!\n\020SetImageR"
      "esponse\022\r\n\005image\030\002 \001(\005\"6\n\024QueryLordInfoR"
      "equest\022\020\n\010playerId\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\"\310"
      "\001\n\025QueryLordInfoResponse\022\020\n\010playerId\030\001 \001"
      "(\003\022\020\n\010nickname\030\002 \001(\t\022\022\n\nallianceid\030\003 \001(\005"
      "\022\024\n\014alliancename\030\004 \001(\t\022\013\n\003exp\030\005 \001(\005\022\r\n\005l"
      "evel\030\006 \001(\005\022\020\n\010isfriend\030\007 \001(\010\022\r\n\005image\030\010 "
      "\001(\005\022$\n\requipmentlist\030\t \003(\0132\r.EquipmentDT"
      "O\".\n\016SetIconRequest\022\016\n\006iconID\030\001 \002(\t\022\014\n\004o"
      "per\030\002 \002(\005\"!\n\017SetIconResponse\022\016\n\006iconID\030\002"
      " \001(\t\"6\n\021ChangeNameRequest\022\020\n\010nickname\030\001 "
      "\002(\t\022\017\n\007useItem\030\002 \002(\010\"G\n\022ChangeNameRespon"
      "se\022\023\n\013isAvailable\030\001 \002(\010\022\034\n\006reward\030\002 \001(\0132"
      "\014.PropertyDTO\"\035\n\017SetGuideRequest\022\n\n\002id\030\001"
      " \002(\005\",\n\016PlayerDataPush\022\032\n\006player\030\001 \002(\0132\n"
      ".PlayerDTO\"<\n\030PlayerPropertyChangePush\022 "
      "\n\nproperties\030\001 \003(\0132\014.PropertyDTO\"\"\n\021Play"
      "erLevelUpPush\022\r\n\005level\030\001 \002(\005\"e\n\021PlayerPr"
      "otectPush\022\032\n\022bornProtectEndTime\030\001 \002(\005\022\031\n"
      "\021atkProtectEndTime\030\002 \002(\005\022\031\n\021spyProtectEn"
      "dTime\030\003 \002(\005\"N\n\013PlayerCount\022\014\n\004type\030\001 \002(\005"
      "\022\r\n\005point\030\002 \002(\005\022\020\n\010defCount\030\003 \002(\005\022\020\n\010add"
      "Count\030\004 \001(\005\"/\n\017PlayerCountPush\022\034\n\006counts"
      "\030\001 \003(\0132\014.PlayerCount\"&\n\017PlayeBattlePush\022"
      "\023\n\013battleValue\030\001 \002(\005\"\037\n\nTalentPush\022\021\n\tta"
      "lentIds\030\001 \003(\005\"4\n\013VipInfoPush\022\n\n\002lv\030\001 \002(\005"
      "\022\013\n\003exp\030\002 \002(\005\022\014\n\004sign\030\003 \002(\005\"&\n\021VipActive"
      "InfoPush\022\021\n\tactiveEnd\030\001 \002(\005\"\037\n\013SysTimePu"
      "sh\022\020\n\010currTime\030\001 \002(\003\"%\n\tGuidePush\022\030\n\005gui"
      "de\030\001 \002(\0132\t.GuideDTO*\232\002\n\017PlayerCommandId\022"
      "\026\n\022USER_ACCOUNT_LOGIN\020d\022\020\n\014PLAYER_LOGIN\020"
      "e\022\024\n\020PLAYER_RECONNECT\020f\022\024\n\020PLAYRE_HEARTB"
      "EAT\020g\022\021\n\rPLAYRE_RELOAD\020h\022\025\n\021PLAYER_TALEN"
      "T_SET\020i\022\024\n\020PLAYER_IMAGE_SET\020j\022\027\n\023PLAYER_"
      "QUERY_PLAYER\020k\022\023\n\017PLAYER_ICON_SET\020l\022\026\n\022P"
      "LAYER_CHANGE_NAME\020m\022\024\n\020PLAYER_SET_GUIDE\020"
      "n\022\025\n\021PLAYER_JUMP_GUIDE\020o*7\n\016ReconnectSta"
      "te\022\014\n\010CONTINUE\020\001\022\n\n\006RELOAD\020\002\022\013\n\007RELOGIN\020"
      "\003*\345\002\n\014PlayerPushId\022\026\n\020PLAYRE_DATA_PUSH\020\265"
      "\207\003\022\032\n\024PROPERTY_CHANGE_PUSH\020\266\207\003\022\032\n\024PLAYER"
      "_LEVEL_UP_PUSH\020\267\207\003\022\031\n\023PLAYER_PROTECT_PUS"
      "H\020\270\207\003\022\024\n\016PLAYER_RELOGIN\020\276\207\003\022\027\n\021PLAYER_CO"
      "UNT_PUSH\020\310\207\003\022\030\n\022PLAYER_BATTLE_PUSH\020\311\207\003\022\030"
      "\n\022PLAYER_TALENT_PUSH\020\312\207\003\022\025\n\017PLAYER_VIP_P"
      "USH\020\313\207\003\022\034\n\026PLAYER_VIP_ACTIVE_PUSH\020\314\207\003\022\032\n"
      "\024PLAYER_SYS_TIME_PUSH\020\315\207\003\022\035\n\027PLAYER_ONLI"
      "NE_OTHER_DAY\020\316\207\003\022\027\n\021PLAYER_GUIDE_PUSH\020\317\207"
      "\003B\002H\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2765);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_player_2eproto
const ::google::protobuf::EnumDescriptor* PlayerCommandId_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[0];
}
bool PlayerCommandId_IsValid(int value) {
  switch (value) {
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReconnectState_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[1];
}
bool ReconnectState_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerPushId_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[2];
}
bool PlayerPushId_IsValid(int value) {
  switch (value) {
    case 50101:
    case 50102:
    case 50103:
    case 50104:
    case 50110:
    case 50120:
    case 50121:
    case 50122:
    case 50123:
    case 50124:
    case 50125:
    case 50126:
    case 50127:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PlayerDTO::InitAsDefaultInstance() {
  ::_PlayerDTO_default_instance_._instance.get_mutable()->mapgridposition_ = const_cast< ::PositionDTO*>(
      ::PositionDTO::internal_default_instance());
}
void PlayerDTO::clear_properties() {
  properties_.Clear();
}
void PlayerDTO::clear_mapgridposition() {
  if (mapgridposition_ != NULL) mapgridposition_->Clear();
  clear_has_mapgridposition();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerDTO::kPlayerIdFieldNumber;
const int PlayerDTO::kNameFieldNumber;
const int PlayerDTO::kLevelFieldNumber;
const int PlayerDTO::kPropertiesFieldNumber;
const int PlayerDTO::kLanguageFieldNumber;
const int PlayerDTO::kMapGridPositionFieldNumber;
const int PlayerDTO::kHasChangedNameFieldNumber;
const int PlayerDTO::kIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerDTO::PlayerDTO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerDTO();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerDTO)
}
PlayerDTO::PlayerDTO(const PlayerDTO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon()) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.has_mapgridposition()) {
    mapgridposition_ = new ::PositionDTO(*from.mapgridposition_);
  } else {
    mapgridposition_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&haschangedname_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(haschangedname_));
  // @@protoc_insertion_point(copy_constructor:PlayerDTO)
}

void PlayerDTO::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mapgridposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&haschangedname_) -
      reinterpret_cast<char*>(&mapgridposition_)) + sizeof(haschangedname_));
}

PlayerDTO::~PlayerDTO() {
  // @@protoc_insertion_point(destructor:PlayerDTO)
  SharedDtor();
}

void PlayerDTO::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mapgridposition_;
}

void PlayerDTO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerDTO::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerDTO& PlayerDTO::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerDTO();
  return *internal_default_instance();
}

PlayerDTO* PlayerDTO::New(::google::protobuf::Arena* arena) const {
  PlayerDTO* n = new PlayerDTO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerDTO::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerDTO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*language_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!icon_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*icon_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(mapgridposition_ != NULL);
      mapgridposition_->Clear();
    }
  }
  if (cached_has_bits & 112u) {
    ::memset(&playerid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&haschangedname_) -
        reinterpret_cast<char*>(&playerid_)) + sizeof(haschangedname_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerDTO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerDTO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 playerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayerDTO.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PropertyDTO properties = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string language = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayerDTO.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PositionDTO mapGridPosition = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mapgridposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool hasChangedName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_haschangedname();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &haschangedname_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string icon = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayerDTO.icon");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerDTO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerDTO)
  return false;
#undef DO_
}

void PlayerDTO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerDTO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 playerId = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerDTO.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 level = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // repeated .PropertyDTO properties = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->properties(static_cast<int>(i)), output);
  }

  // optional string language = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerDTO.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->language(), output);
  }

  // required .PositionDTO mapGridPosition = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->mapgridposition_, output);
  }

  // required bool hasChangedName = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->haschangedname(), output);
  }

  // required string icon = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerDTO.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->icon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerDTO)
}

::google::protobuf::uint8* PlayerDTO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerDTO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 playerId = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerDTO.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 level = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // repeated .PropertyDTO properties = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->properties(static_cast<int>(i)), deterministic, target);
  }

  // optional string language = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerDTO.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->language(), target);
  }

  // required .PositionDTO mapGridPosition = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->mapgridposition_, deterministic, target);
  }

  // required bool hasChangedName = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->haschangedname(), target);
  }

  // required string icon = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerDTO.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->icon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerDTO)
  return target;
}

size_t PlayerDTO::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayerDTO)
  size_t total_size = 0;

  if (has_icon()) {
    // required string icon = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  if (has_mapgridposition()) {
    // required .PositionDTO mapGridPosition = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mapgridposition_);
  }

  if (has_playerid()) {
    // required uint64 playerId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  if (has_level()) {
    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_haschangedname()) {
    // required bool hasChangedName = 7;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t PlayerDTO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerDTO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007c) ^ 0x0000007c) == 0) {  // All required fields are present.
    // required string icon = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());

    // required .PositionDTO mapGridPosition = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mapgridposition_);

    // required uint64 playerId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());

    // required int32 level = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required bool hasChangedName = 7;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .PropertyDTO properties = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string language = 5;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerDTO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerDTO)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerDTO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerDTO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerDTO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerDTO)
    MergeFrom(*source);
  }
}

void PlayerDTO::MergeFrom(const PlayerDTO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerDTO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_language();
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon();
      icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_mapgridposition()->::PositionDTO::MergeFrom(from.mapgridposition());
    }
    if (cached_has_bits & 0x00000010u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000020u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000040u) {
      haschangedname_ = from.haschangedname_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerDTO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerDTO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerDTO::CopyFrom(const PlayerDTO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerDTO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerDTO::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007c) != 0x0000007c) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->properties())) return false;
  if (has_mapgridposition()) {
    if (!this->mapgridposition_->IsInitialized()) return false;
  }
  return true;
}

void PlayerDTO::Swap(PlayerDTO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerDTO::InternalSwap(PlayerDTO* other) {
  using std::swap;
  properties_.InternalSwap(&other->properties_);
  name_.Swap(&other->name_);
  language_.Swap(&other->language_);
  icon_.Swap(&other->icon_);
  swap(mapgridposition_, other->mapgridposition_);
  swap(playerid_, other->playerid_);
  swap(level_, other->level_);
  swap(haschangedname_, other->haschangedname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerDTO::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuideDTO::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuideDTO::kIdFieldNumber;
const int GuideDTO::kJumpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuideDTO::GuideDTO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsGuideDTO();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuideDTO)
}
GuideDTO::GuideDTO(const GuideDTO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&jump_) -
    reinterpret_cast<char*>(&id_)) + sizeof(jump_));
  // @@protoc_insertion_point(copy_constructor:GuideDTO)
}

void GuideDTO::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jump_) -
      reinterpret_cast<char*>(&id_)) + sizeof(jump_));
}

GuideDTO::~GuideDTO() {
  // @@protoc_insertion_point(destructor:GuideDTO)
  SharedDtor();
}

void GuideDTO::SharedDtor() {
}

void GuideDTO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuideDTO::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuideDTO& GuideDTO::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsGuideDTO();
  return *internal_default_instance();
}

GuideDTO* GuideDTO::New(::google::protobuf::Arena* arena) const {
  GuideDTO* n = new GuideDTO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuideDTO::Clear() {
// @@protoc_insertion_point(message_clear_start:GuideDTO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&jump_) -
        reinterpret_cast<char*>(&id_)) + sizeof(jump_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuideDTO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuideDTO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool jump = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_jump();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &jump_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuideDTO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuideDTO)
  return false;
#undef DO_
}

void GuideDTO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuideDTO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // required bool jump = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->jump(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuideDTO)
}

::google::protobuf::uint8* GuideDTO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuideDTO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // required bool jump = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->jump(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuideDTO)
  return target;
}

size_t GuideDTO::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GuideDTO)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_jump()) {
    // required bool jump = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t GuideDTO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuideDTO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required bool jump = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuideDTO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuideDTO)
  GOOGLE_DCHECK_NE(&from, this);
  const GuideDTO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuideDTO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuideDTO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuideDTO)
    MergeFrom(*source);
  }
}

void GuideDTO::MergeFrom(const GuideDTO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuideDTO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      jump_ = from.jump_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuideDTO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuideDTO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuideDTO::CopyFrom(const GuideDTO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuideDTO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuideDTO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GuideDTO::Swap(GuideDTO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuideDTO::InternalSwap(GuideDTO* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(jump_, other->jump_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuideDTO::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserAccountLoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAccountLoginRequest::kPlatformFieldNumber;
const int UserAccountLoginRequest::kPuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAccountLoginRequest::UserAccountLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsUserAccountLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserAccountLoginRequest)
}
UserAccountLoginRequest::UserAccountLoginRequest(const UserAccountLoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platform()) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  puid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_puid()) {
    puid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.puid_);
  }
  // @@protoc_insertion_point(copy_constructor:UserAccountLoginRequest)
}

void UserAccountLoginRequest::SharedCtor() {
  _cached_size_ = 0;
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserAccountLoginRequest::~UserAccountLoginRequest() {
  // @@protoc_insertion_point(destructor:UserAccountLoginRequest)
  SharedDtor();
}

void UserAccountLoginRequest::SharedDtor() {
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserAccountLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserAccountLoginRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAccountLoginRequest& UserAccountLoginRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsUserAccountLoginRequest();
  return *internal_default_instance();
}

UserAccountLoginRequest* UserAccountLoginRequest::New(::google::protobuf::Arena* arena) const {
  UserAccountLoginRequest* n = new UserAccountLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserAccountLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAccountLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!platform_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*platform_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!puid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*puid_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserAccountLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserAccountLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string platform = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserAccountLoginRequest.platform");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string puid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_puid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->puid().data(), static_cast<int>(this->puid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserAccountLoginRequest.puid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserAccountLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserAccountLoginRequest)
  return false;
#undef DO_
}

void UserAccountLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserAccountLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string platform = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserAccountLoginRequest.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->platform(), output);
  }

  // required string puid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->puid().data(), static_cast<int>(this->puid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserAccountLoginRequest.puid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->puid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserAccountLoginRequest)
}

::google::protobuf::uint8* UserAccountLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserAccountLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string platform = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserAccountLoginRequest.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platform(), target);
  }

  // required string puid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->puid().data(), static_cast<int>(this->puid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserAccountLoginRequest.puid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->puid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserAccountLoginRequest)
  return target;
}

size_t UserAccountLoginRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UserAccountLoginRequest)
  size_t total_size = 0;

  if (has_platform()) {
    // required string platform = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  if (has_puid()) {
    // required string puid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->puid());
  }

  return total_size;
}
size_t UserAccountLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserAccountLoginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string platform = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());

    // required string puid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->puid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserAccountLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserAccountLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAccountLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAccountLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserAccountLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserAccountLoginRequest)
    MergeFrom(*source);
  }
}

void UserAccountLoginRequest::MergeFrom(const UserAccountLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserAccountLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_platform();
      platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_puid();
      puid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.puid_);
    }
  }
}

void UserAccountLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserAccountLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAccountLoginRequest::CopyFrom(const UserAccountLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAccountLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAccountLoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserAccountLoginRequest::Swap(UserAccountLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAccountLoginRequest::InternalSwap(UserAccountLoginRequest* other) {
  using std::swap;
  platform_.Swap(&other->platform_);
  puid_.Swap(&other->puid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserAccountLoginRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserAccountLoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAccountLoginResponse::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAccountLoginResponse::UserAccountLoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsUserAccountLoginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserAccountLoginResponse)
}
UserAccountLoginResponse::UserAccountLoginResponse(const UserAccountLoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:UserAccountLoginResponse)
}

void UserAccountLoginResponse::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = GOOGLE_ULONGLONG(0);
}

UserAccountLoginResponse::~UserAccountLoginResponse() {
  // @@protoc_insertion_point(destructor:UserAccountLoginResponse)
  SharedDtor();
}

void UserAccountLoginResponse::SharedDtor() {
}

void UserAccountLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserAccountLoginResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserAccountLoginResponse& UserAccountLoginResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsUserAccountLoginResponse();
  return *internal_default_instance();
}

UserAccountLoginResponse* UserAccountLoginResponse::New(::google::protobuf::Arena* arena) const {
  UserAccountLoginResponse* n = new UserAccountLoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserAccountLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAccountLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserAccountLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserAccountLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 playerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserAccountLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserAccountLoginResponse)
  return false;
#undef DO_
}

void UserAccountLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserAccountLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 playerId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserAccountLoginResponse)
}

::google::protobuf::uint8* UserAccountLoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserAccountLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 playerId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserAccountLoginResponse)
  return target;
}

size_t UserAccountLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserAccountLoginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 playerId = 1;
  if (has_playerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserAccountLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserAccountLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAccountLoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserAccountLoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserAccountLoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserAccountLoginResponse)
    MergeFrom(*source);
  }
}

void UserAccountLoginResponse::MergeFrom(const UserAccountLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserAccountLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerid()) {
    set_playerid(from.playerid());
  }
}

void UserAccountLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserAccountLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAccountLoginResponse::CopyFrom(const UserAccountLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAccountLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAccountLoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserAccountLoginResponse::Swap(UserAccountLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAccountLoginResponse::InternalSwap(UserAccountLoginResponse* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserAccountLoginResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerLoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginRequest::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginRequest::PlayerLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerLoginRequest)
}
PlayerLoginRequest::PlayerLoginRequest(const PlayerLoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:PlayerLoginRequest)
}

void PlayerLoginRequest::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = GOOGLE_ULONGLONG(0);
}

PlayerLoginRequest::~PlayerLoginRequest() {
  // @@protoc_insertion_point(destructor:PlayerLoginRequest)
  SharedDtor();
}

void PlayerLoginRequest::SharedDtor() {
}

void PlayerLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginRequest& PlayerLoginRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerLoginRequest();
  return *internal_default_instance();
}

PlayerLoginRequest* PlayerLoginRequest::New(::google::protobuf::Arena* arena) const {
  PlayerLoginRequest* n = new PlayerLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 playerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerLoginRequest)
  return false;
#undef DO_
}

void PlayerLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 playerId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerLoginRequest)
}

::google::protobuf::uint8* PlayerLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 playerId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerLoginRequest)
  return target;
}

size_t PlayerLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerLoginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 playerId = 1;
  if (has_playerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerLoginRequest)
    MergeFrom(*source);
  }
}

void PlayerLoginRequest::MergeFrom(const PlayerLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerid()) {
    set_playerid(from.playerid());
  }
}

void PlayerLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginRequest::CopyFrom(const PlayerLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerLoginRequest::Swap(PlayerLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginRequest::InternalSwap(PlayerLoginRequest* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerLoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginResponse::kSessionIdFieldNumber;
const int PlayerLoginResponse::kSystimeFieldNumber;
const int PlayerLoginResponse::kTimeZoneOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginResponse::PlayerLoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerLoginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerLoginResponse)
}
PlayerLoginResponse::PlayerLoginResponse(const PlayerLoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sessionid_, &from.sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&timezoneoffset_) -
    reinterpret_cast<char*>(&sessionid_)) + sizeof(timezoneoffset_));
  // @@protoc_insertion_point(copy_constructor:PlayerLoginResponse)
}

void PlayerLoginResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timezoneoffset_) -
      reinterpret_cast<char*>(&sessionid_)) + sizeof(timezoneoffset_));
}

PlayerLoginResponse::~PlayerLoginResponse() {
  // @@protoc_insertion_point(destructor:PlayerLoginResponse)
  SharedDtor();
}

void PlayerLoginResponse::SharedDtor() {
}

void PlayerLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginResponse& PlayerLoginResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerLoginResponse();
  return *internal_default_instance();
}

PlayerLoginResponse* PlayerLoginResponse::New(::google::protobuf::Arena* arena) const {
  PlayerLoginResponse* n = new PlayerLoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&sessionid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timezoneoffset_) -
        reinterpret_cast<char*>(&sessionid_)) + sizeof(timezoneoffset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 sessionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sessionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 systime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_systime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &systime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 timeZoneOffset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_timezoneoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timezoneoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerLoginResponse)
  return false;
#undef DO_
}

void PlayerLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 sessionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  // required int64 systime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->systime(), output);
  }

  // required int32 timeZoneOffset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timezoneoffset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerLoginResponse)
}

::google::protobuf::uint8* PlayerLoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 sessionId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  // required int64 systime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->systime(), target);
  }

  // required int32 timeZoneOffset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timezoneoffset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerLoginResponse)
  return target;
}

size_t PlayerLoginResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayerLoginResponse)
  size_t total_size = 0;

  if (has_sessionid()) {
    // required uint64 sessionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  if (has_systime()) {
    // required int64 systime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->systime());
  }

  if (has_timezoneoffset()) {
    // required int32 timeZoneOffset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timezoneoffset());
  }

  return total_size;
}
size_t PlayerLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerLoginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 sessionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());

    // required int64 systime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->systime());

    // required int32 timeZoneOffset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timezoneoffset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerLoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerLoginResponse)
    MergeFrom(*source);
  }
}

void PlayerLoginResponse::MergeFrom(const PlayerLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sessionid_ = from.sessionid_;
    }
    if (cached_has_bits & 0x00000002u) {
      systime_ = from.systime_;
    }
    if (cached_has_bits & 0x00000004u) {
      timezoneoffset_ = from.timezoneoffset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginResponse::CopyFrom(const PlayerLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PlayerLoginResponse::Swap(PlayerLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginResponse::InternalSwap(PlayerLoginResponse* other) {
  using std::swap;
  swap(sessionid_, other->sessionid_);
  swap(systime_, other->systime_);
  swap(timezoneoffset_, other->timezoneoffset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerReconnectRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerReconnectRequest::kSessionIdFieldNumber;
const int PlayerReconnectRequest::kLastPushIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerReconnectRequest::PlayerReconnectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerReconnectRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerReconnectRequest)
}
PlayerReconnectRequest::PlayerReconnectRequest(const PlayerReconnectRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sessionid_, &from.sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lastpushid_) -
    reinterpret_cast<char*>(&sessionid_)) + sizeof(lastpushid_));
  // @@protoc_insertion_point(copy_constructor:PlayerReconnectRequest)
}

void PlayerReconnectRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastpushid_) -
      reinterpret_cast<char*>(&sessionid_)) + sizeof(lastpushid_));
}

PlayerReconnectRequest::~PlayerReconnectRequest() {
  // @@protoc_insertion_point(destructor:PlayerReconnectRequest)
  SharedDtor();
}

void PlayerReconnectRequest::SharedDtor() {
}

void PlayerReconnectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerReconnectRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerReconnectRequest& PlayerReconnectRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerReconnectRequest();
  return *internal_default_instance();
}

PlayerReconnectRequest* PlayerReconnectRequest::New(::google::protobuf::Arena* arena) const {
  PlayerReconnectRequest* n = new PlayerReconnectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerReconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerReconnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&sessionid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lastpushid_) -
        reinterpret_cast<char*>(&sessionid_)) + sizeof(lastpushid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerReconnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerReconnectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 sessionId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sessionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lastPushId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lastpushid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastpushid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerReconnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerReconnectRequest)
  return false;
#undef DO_
}

void PlayerReconnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerReconnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 sessionId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  // required int32 lastPushId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lastpushid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerReconnectRequest)
}

::google::protobuf::uint8* PlayerReconnectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerReconnectRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 sessionId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  // required int32 lastPushId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lastpushid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerReconnectRequest)
  return target;
}

size_t PlayerReconnectRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayerReconnectRequest)
  size_t total_size = 0;

  if (has_sessionid()) {
    // required uint64 sessionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  if (has_lastpushid()) {
    // required int32 lastPushId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastpushid());
  }

  return total_size;
}
size_t PlayerReconnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerReconnectRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 sessionId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());

    // required int32 lastPushId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastpushid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerReconnectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerReconnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerReconnectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerReconnectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerReconnectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerReconnectRequest)
    MergeFrom(*source);
  }
}

void PlayerReconnectRequest::MergeFrom(const PlayerReconnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerReconnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      sessionid_ = from.sessionid_;
    }
    if (cached_has_bits & 0x00000002u) {
      lastpushid_ = from.lastpushid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerReconnectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerReconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerReconnectRequest::CopyFrom(const PlayerReconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerReconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerReconnectRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PlayerReconnectRequest::Swap(PlayerReconnectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerReconnectRequest::InternalSwap(PlayerReconnectRequest* other) {
  using std::swap;
  swap(sessionid_, other->sessionid_);
  swap(lastpushid_, other->lastpushid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerReconnectRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerReconnectResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerReconnectResponse::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerReconnectResponse::PlayerReconnectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerReconnectResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerReconnectResponse)
}
PlayerReconnectResponse::PlayerReconnectResponse(const PlayerReconnectResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:PlayerReconnectResponse)
}

void PlayerReconnectResponse::SharedCtor() {
  _cached_size_ = 0;
  state_ = 1;
}

PlayerReconnectResponse::~PlayerReconnectResponse() {
  // @@protoc_insertion_point(destructor:PlayerReconnectResponse)
  SharedDtor();
}

void PlayerReconnectResponse::SharedDtor() {
}

void PlayerReconnectResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerReconnectResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerReconnectResponse& PlayerReconnectResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerReconnectResponse();
  return *internal_default_instance();
}

PlayerReconnectResponse* PlayerReconnectResponse::New(::google::protobuf::Arena* arena) const {
  PlayerReconnectResponse* n = new PlayerReconnectResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerReconnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerReconnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerReconnectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerReconnectResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ReconnectState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ReconnectState_IsValid(value)) {
            set_state(static_cast< ::ReconnectState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerReconnectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerReconnectResponse)
  return false;
#undef DO_
}

void PlayerReconnectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerReconnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReconnectState state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerReconnectResponse)
}

::google::protobuf::uint8* PlayerReconnectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerReconnectResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ReconnectState state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerReconnectResponse)
  return target;
}

size_t PlayerReconnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerReconnectResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ReconnectState state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerReconnectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerReconnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerReconnectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerReconnectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerReconnectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerReconnectResponse)
    MergeFrom(*source);
  }
}

void PlayerReconnectResponse::MergeFrom(const PlayerReconnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerReconnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    set_state(from.state());
  }
}

void PlayerReconnectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerReconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerReconnectResponse::CopyFrom(const PlayerReconnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerReconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerReconnectResponse::IsInitialized() const {
  return true;
}

void PlayerReconnectResponse::Swap(PlayerReconnectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerReconnectResponse::InternalSwap(PlayerReconnectResponse* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerReconnectResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerReloadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerReloadRequest::PlayerReloadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerReloadRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerReloadRequest)
}
PlayerReloadRequest::PlayerReloadRequest(const PlayerReloadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PlayerReloadRequest)
}

void PlayerReloadRequest::SharedCtor() {
  _cached_size_ = 0;
}

PlayerReloadRequest::~PlayerReloadRequest() {
  // @@protoc_insertion_point(destructor:PlayerReloadRequest)
  SharedDtor();
}

void PlayerReloadRequest::SharedDtor() {
}

void PlayerReloadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerReloadRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerReloadRequest& PlayerReloadRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerReloadRequest();
  return *internal_default_instance();
}

PlayerReloadRequest* PlayerReloadRequest::New(::google::protobuf::Arena* arena) const {
  PlayerReloadRequest* n = new PlayerReloadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerReloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerReloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerReloadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerReloadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerReloadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerReloadRequest)
  return false;
#undef DO_
}

void PlayerReloadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerReloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerReloadRequest)
}

::google::protobuf::uint8* PlayerReloadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerReloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerReloadRequest)
  return target;
}

size_t PlayerReloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerReloadRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerReloadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerReloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerReloadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerReloadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerReloadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerReloadRequest)
    MergeFrom(*source);
  }
}

void PlayerReloadRequest::MergeFrom(const PlayerReloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerReloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayerReloadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerReloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerReloadRequest::CopyFrom(const PlayerReloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerReloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerReloadRequest::IsInitialized() const {
  return true;
}

void PlayerReloadRequest::Swap(PlayerReloadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerReloadRequest::InternalSwap(PlayerReloadRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerReloadRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerReloadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerReloadResponse::kSystimeFieldNumber;
const int PlayerReloadResponse::kTimeZoneOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerReloadResponse::PlayerReloadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerReloadResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerReloadResponse)
}
PlayerReloadResponse::PlayerReloadResponse(const PlayerReloadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&systime_, &from.systime_,
    static_cast<size_t>(reinterpret_cast<char*>(&timezoneoffset_) -
    reinterpret_cast<char*>(&systime_)) + sizeof(timezoneoffset_));
  // @@protoc_insertion_point(copy_constructor:PlayerReloadResponse)
}

void PlayerReloadResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&systime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timezoneoffset_) -
      reinterpret_cast<char*>(&systime_)) + sizeof(timezoneoffset_));
}

PlayerReloadResponse::~PlayerReloadResponse() {
  // @@protoc_insertion_point(destructor:PlayerReloadResponse)
  SharedDtor();
}

void PlayerReloadResponse::SharedDtor() {
}

void PlayerReloadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerReloadResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerReloadResponse& PlayerReloadResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerReloadResponse();
  return *internal_default_instance();
}

PlayerReloadResponse* PlayerReloadResponse::New(::google::protobuf::Arena* arena) const {
  PlayerReloadResponse* n = new PlayerReloadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerReloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerReloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&systime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timezoneoffset_) -
        reinterpret_cast<char*>(&systime_)) + sizeof(timezoneoffset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerReloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerReloadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 systime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_systime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &systime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 timeZoneOffset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timezoneoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timezoneoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerReloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerReloadResponse)
  return false;
#undef DO_
}

void PlayerReloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerReloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 systime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->systime(), output);
  }

  // required int32 timeZoneOffset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timezoneoffset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerReloadResponse)
}

::google::protobuf::uint8* PlayerReloadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerReloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 systime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->systime(), target);
  }

  // required int32 timeZoneOffset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timezoneoffset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerReloadResponse)
  return target;
}

size_t PlayerReloadResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayerReloadResponse)
  size_t total_size = 0;

  if (has_systime()) {
    // required int64 systime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->systime());
  }

  if (has_timezoneoffset()) {
    // required int32 timeZoneOffset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timezoneoffset());
  }

  return total_size;
}
size_t PlayerReloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerReloadResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 systime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->systime());

    // required int32 timeZoneOffset = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timezoneoffset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerReloadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerReloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerReloadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerReloadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerReloadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerReloadResponse)
    MergeFrom(*source);
  }
}

void PlayerReloadResponse::MergeFrom(const PlayerReloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerReloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      systime_ = from.systime_;
    }
    if (cached_has_bits & 0x00000002u) {
      timezoneoffset_ = from.timezoneoffset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerReloadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerReloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerReloadResponse::CopyFrom(const PlayerReloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerReloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerReloadResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PlayerReloadResponse::Swap(PlayerReloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerReloadResponse::InternalSwap(PlayerReloadResponse* other) {
  using std::swap;
  swap(systime_, other->systime_);
  swap(timezoneoffset_, other->timezoneoffset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerReloadResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerHeartBeatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerHeartBeatRequest::PlayerHeartBeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerHeartBeatRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerHeartBeatRequest)
}
PlayerHeartBeatRequest::PlayerHeartBeatRequest(const PlayerHeartBeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PlayerHeartBeatRequest)
}

void PlayerHeartBeatRequest::SharedCtor() {
  _cached_size_ = 0;
}

PlayerHeartBeatRequest::~PlayerHeartBeatRequest() {
  // @@protoc_insertion_point(destructor:PlayerHeartBeatRequest)
  SharedDtor();
}

void PlayerHeartBeatRequest::SharedDtor() {
}

void PlayerHeartBeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerHeartBeatRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerHeartBeatRequest& PlayerHeartBeatRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerHeartBeatRequest();
  return *internal_default_instance();
}

PlayerHeartBeatRequest* PlayerHeartBeatRequest::New(::google::protobuf::Arena* arena) const {
  PlayerHeartBeatRequest* n = new PlayerHeartBeatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerHeartBeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerHeartBeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerHeartBeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerHeartBeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerHeartBeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerHeartBeatRequest)
  return false;
#undef DO_
}

void PlayerHeartBeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerHeartBeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerHeartBeatRequest)
}

::google::protobuf::uint8* PlayerHeartBeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerHeartBeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerHeartBeatRequest)
  return target;
}

size_t PlayerHeartBeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerHeartBeatRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerHeartBeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerHeartBeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerHeartBeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerHeartBeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerHeartBeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerHeartBeatRequest)
    MergeFrom(*source);
  }
}

void PlayerHeartBeatRequest::MergeFrom(const PlayerHeartBeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerHeartBeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayerHeartBeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerHeartBeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerHeartBeatRequest::CopyFrom(const PlayerHeartBeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerHeartBeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerHeartBeatRequest::IsInitialized() const {
  return true;
}

void PlayerHeartBeatRequest::Swap(PlayerHeartBeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerHeartBeatRequest::InternalSwap(PlayerHeartBeatRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerHeartBeatRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerHeartBeatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerHeartBeatResponse::kSystimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerHeartBeatResponse::PlayerHeartBeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerHeartBeatResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerHeartBeatResponse)
}
PlayerHeartBeatResponse::PlayerHeartBeatResponse(const PlayerHeartBeatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  systime_ = from.systime_;
  // @@protoc_insertion_point(copy_constructor:PlayerHeartBeatResponse)
}

void PlayerHeartBeatResponse::SharedCtor() {
  _cached_size_ = 0;
  systime_ = GOOGLE_LONGLONG(0);
}

PlayerHeartBeatResponse::~PlayerHeartBeatResponse() {
  // @@protoc_insertion_point(destructor:PlayerHeartBeatResponse)
  SharedDtor();
}

void PlayerHeartBeatResponse::SharedDtor() {
}

void PlayerHeartBeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerHeartBeatResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerHeartBeatResponse& PlayerHeartBeatResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerHeartBeatResponse();
  return *internal_default_instance();
}

PlayerHeartBeatResponse* PlayerHeartBeatResponse::New(::google::protobuf::Arena* arena) const {
  PlayerHeartBeatResponse* n = new PlayerHeartBeatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerHeartBeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerHeartBeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  systime_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerHeartBeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerHeartBeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 systime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_systime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &systime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerHeartBeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerHeartBeatResponse)
  return false;
#undef DO_
}

void PlayerHeartBeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerHeartBeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 systime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->systime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerHeartBeatResponse)
}

::google::protobuf::uint8* PlayerHeartBeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerHeartBeatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 systime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->systime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerHeartBeatResponse)
  return target;
}

size_t PlayerHeartBeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerHeartBeatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 systime = 1;
  if (has_systime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->systime());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerHeartBeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerHeartBeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerHeartBeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerHeartBeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerHeartBeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerHeartBeatResponse)
    MergeFrom(*source);
  }
}

void PlayerHeartBeatResponse::MergeFrom(const PlayerHeartBeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerHeartBeatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_systime()) {
    set_systime(from.systime());
  }
}

void PlayerHeartBeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerHeartBeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerHeartBeatResponse::CopyFrom(const PlayerHeartBeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerHeartBeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerHeartBeatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerHeartBeatResponse::Swap(PlayerHeartBeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerHeartBeatResponse::InternalSwap(PlayerHeartBeatResponse* other) {
  using std::swap;
  swap(systime_, other->systime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerHeartBeatResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetTalentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTalentRequest::kLevelFieldNumber;
const int SetTalentRequest::kTalentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTalentRequest::SetTalentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSetTalentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetTalentRequest)
}
SetTalentRequest::SetTalentRequest(const SetTalentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&talentid_) -
    reinterpret_cast<char*>(&level_)) + sizeof(talentid_));
  // @@protoc_insertion_point(copy_constructor:SetTalentRequest)
}

void SetTalentRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&talentid_) -
      reinterpret_cast<char*>(&level_)) + sizeof(talentid_));
}

SetTalentRequest::~SetTalentRequest() {
  // @@protoc_insertion_point(destructor:SetTalentRequest)
  SharedDtor();
}

void SetTalentRequest::SharedDtor() {
}

void SetTalentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetTalentRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetTalentRequest& SetTalentRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSetTalentRequest();
  return *internal_default_instance();
}

SetTalentRequest* SetTalentRequest::New(::google::protobuf::Arena* arena) const {
  SetTalentRequest* n = new SetTalentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetTalentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetTalentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&talentid_) -
        reinterpret_cast<char*>(&level_)) + sizeof(talentid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetTalentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetTalentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 talentId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_talentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetTalentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetTalentRequest)
  return false;
#undef DO_
}

void SetTalentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetTalentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 talentId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->talentid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetTalentRequest)
}

::google::protobuf::uint8* SetTalentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetTalentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 talentId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->talentid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetTalentRequest)
  return target;
}

size_t SetTalentRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SetTalentRequest)
  size_t total_size = 0;

  if (has_level()) {
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_talentid()) {
    // required int32 talentId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->talentid());
  }

  return total_size;
}
size_t SetTalentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetTalentRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 talentId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->talentid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetTalentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetTalentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTalentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetTalentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetTalentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetTalentRequest)
    MergeFrom(*source);
  }
}

void SetTalentRequest::MergeFrom(const SetTalentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetTalentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000002u) {
      talentid_ = from.talentid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetTalentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetTalentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTalentRequest::CopyFrom(const SetTalentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetTalentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTalentRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SetTalentRequest::Swap(SetTalentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTalentRequest::InternalSwap(SetTalentRequest* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(talentid_, other->talentid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetTalentRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetTalentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTalentResponse::kLevelFieldNumber;
const int SetTalentResponse::kTalentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTalentResponse::SetTalentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSetTalentResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetTalentResponse)
}
SetTalentResponse::SetTalentResponse(const SetTalentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&talentid_) -
    reinterpret_cast<char*>(&level_)) + sizeof(talentid_));
  // @@protoc_insertion_point(copy_constructor:SetTalentResponse)
}

void SetTalentResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&talentid_) -
      reinterpret_cast<char*>(&level_)) + sizeof(talentid_));
}

SetTalentResponse::~SetTalentResponse() {
  // @@protoc_insertion_point(destructor:SetTalentResponse)
  SharedDtor();
}

void SetTalentResponse::SharedDtor() {
}

void SetTalentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetTalentResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetTalentResponse& SetTalentResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSetTalentResponse();
  return *internal_default_instance();
}

SetTalentResponse* SetTalentResponse::New(::google::protobuf::Arena* arena) const {
  SetTalentResponse* n = new SetTalentResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetTalentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SetTalentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&talentid_) -
        reinterpret_cast<char*>(&level_)) + sizeof(talentid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetTalentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetTalentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 talentId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_talentid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &talentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetTalentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetTalentResponse)
  return false;
#undef DO_
}

void SetTalentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetTalentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // required int32 talentId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->talentid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetTalentResponse)
}

::google::protobuf::uint8* SetTalentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetTalentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // required int32 talentId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->talentid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetTalentResponse)
  return target;
}

size_t SetTalentResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SetTalentResponse)
  size_t total_size = 0;

  if (has_level()) {
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  if (has_talentid()) {
    // required int32 talentId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->talentid());
  }

  return total_size;
}
size_t SetTalentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetTalentResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 level = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());

    // required int32 talentId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->talentid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetTalentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetTalentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTalentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetTalentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetTalentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetTalentResponse)
    MergeFrom(*source);
  }
}

void SetTalentResponse::MergeFrom(const SetTalentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetTalentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000002u) {
      talentid_ = from.talentid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetTalentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetTalentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTalentResponse::CopyFrom(const SetTalentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetTalentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTalentResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SetTalentResponse::Swap(SetTalentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTalentResponse::InternalSwap(SetTalentResponse* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(talentid_, other->talentid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetTalentResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetImageRequest::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetImageRequest::SetImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSetImageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetImageRequest)
}
SetImageRequest::SetImageRequest(const SetImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_ = from.image_;
  // @@protoc_insertion_point(copy_constructor:SetImageRequest)
}

void SetImageRequest::SharedCtor() {
  _cached_size_ = 0;
  image_ = 0;
}

SetImageRequest::~SetImageRequest() {
  // @@protoc_insertion_point(destructor:SetImageRequest)
  SharedDtor();
}

void SetImageRequest::SharedDtor() {
}

void SetImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetImageRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetImageRequest& SetImageRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSetImageRequest();
  return *internal_default_instance();
}

SetImageRequest* SetImageRequest::New(::google::protobuf::Arena* arena) const {
  SetImageRequest* n = new SetImageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_image();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetImageRequest)
  return false;
#undef DO_
}

void SetImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 image = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->image(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetImageRequest)
}

::google::protobuf::uint8* SetImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 image = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->image(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetImageRequest)
  return target;
}

size_t SetImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetImageRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 image = 1;
  if (has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetImageRequest)
    MergeFrom(*source);
  }
}

void SetImageRequest::MergeFrom(const SetImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_image()) {
    set_image(from.image());
  }
}

void SetImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetImageRequest::CopyFrom(const SetImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetImageRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SetImageRequest::Swap(SetImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetImageRequest::InternalSwap(SetImageRequest* other) {
  using std::swap;
  swap(image_, other->image_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetImageRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetImageResponse::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetImageResponse::SetImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSetImageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetImageResponse)
}
SetImageResponse::SetImageResponse(const SetImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_ = from.image_;
  // @@protoc_insertion_point(copy_constructor:SetImageResponse)
}

void SetImageResponse::SharedCtor() {
  _cached_size_ = 0;
  image_ = 0;
}

SetImageResponse::~SetImageResponse() {
  // @@protoc_insertion_point(destructor:SetImageResponse)
  SharedDtor();
}

void SetImageResponse::SharedDtor() {
}

void SetImageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetImageResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetImageResponse& SetImageResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSetImageResponse();
  return *internal_default_instance();
}

SetImageResponse* SetImageResponse::New(::google::protobuf::Arena* arena) const {
  SetImageResponse* n = new SetImageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SetImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetImageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_image();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetImageResponse)
  return false;
#undef DO_
}

void SetImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 image = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->image(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetImageResponse)
}

::google::protobuf::uint8* SetImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 image = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->image(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetImageResponse)
  return target;
}

size_t SetImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetImageResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 image = 2;
  if (has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->image());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetImageResponse)
    MergeFrom(*source);
  }
}

void SetImageResponse::MergeFrom(const SetImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_image()) {
    set_image(from.image());
  }
}

void SetImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetImageResponse::CopyFrom(const SetImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetImageResponse::IsInitialized() const {
  return true;
}

void SetImageResponse::Swap(SetImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetImageResponse::InternalSwap(SetImageResponse* other) {
  using std::swap;
  swap(image_, other->image_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetImageResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryLordInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryLordInfoRequest::kPlayerIdFieldNumber;
const int QueryLordInfoRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryLordInfoRequest::QueryLordInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsQueryLordInfoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryLordInfoRequest)
}
QueryLordInfoRequest::QueryLordInfoRequest(const QueryLordInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:QueryLordInfoRequest)
}

void QueryLordInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_LONGLONG(0);
}

QueryLordInfoRequest::~QueryLordInfoRequest() {
  // @@protoc_insertion_point(destructor:QueryLordInfoRequest)
  SharedDtor();
}

void QueryLordInfoRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryLordInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryLordInfoRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryLordInfoRequest& QueryLordInfoRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsQueryLordInfoRequest();
  return *internal_default_instance();
}

QueryLordInfoRequest* QueryLordInfoRequest::New(::google::protobuf::Arena* arena) const {
  QueryLordInfoRequest* n = new QueryLordInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryLordInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryLordInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  playerid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QueryLordInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryLordInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 playerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryLordInfoRequest.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryLordInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryLordInfoRequest)
  return false;
#undef DO_
}

void QueryLordInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryLordInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 playerId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->playerid(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryLordInfoRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryLordInfoRequest)
}

::google::protobuf::uint8* QueryLordInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryLordInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 playerId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->playerid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryLordInfoRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryLordInfoRequest)
  return target;
}

size_t QueryLordInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryLordInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 playerId = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->playerid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryLordInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryLordInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryLordInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryLordInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryLordInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryLordInfoRequest)
    MergeFrom(*source);
  }
}

void QueryLordInfoRequest::MergeFrom(const QueryLordInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryLordInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      playerid_ = from.playerid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QueryLordInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryLordInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryLordInfoRequest::CopyFrom(const QueryLordInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryLordInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLordInfoRequest::IsInitialized() const {
  return true;
}

void QueryLordInfoRequest::Swap(QueryLordInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryLordInfoRequest::InternalSwap(QueryLordInfoRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(playerid_, other->playerid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryLordInfoRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryLordInfoResponse::InitAsDefaultInstance() {
}
void QueryLordInfoResponse::clear_equipmentlist() {
  equipmentlist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryLordInfoResponse::kPlayerIdFieldNumber;
const int QueryLordInfoResponse::kNicknameFieldNumber;
const int QueryLordInfoResponse::kAllianceidFieldNumber;
const int QueryLordInfoResponse::kAlliancenameFieldNumber;
const int QueryLordInfoResponse::kExpFieldNumber;
const int QueryLordInfoResponse::kLevelFieldNumber;
const int QueryLordInfoResponse::kIsfriendFieldNumber;
const int QueryLordInfoResponse::kImageFieldNumber;
const int QueryLordInfoResponse::kEquipmentlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryLordInfoResponse::QueryLordInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsQueryLordInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueryLordInfoResponse)
}
QueryLordInfoResponse::QueryLordInfoResponse(const QueryLordInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      equipmentlist_(from.equipmentlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  alliancename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alliancename()) {
    alliancename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alliancename_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&image_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(image_));
  // @@protoc_insertion_point(copy_constructor:QueryLordInfoResponse)
}

void QueryLordInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alliancename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(image_));
}

QueryLordInfoResponse::~QueryLordInfoResponse() {
  // @@protoc_insertion_point(destructor:QueryLordInfoResponse)
  SharedDtor();
}

void QueryLordInfoResponse::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alliancename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QueryLordInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryLordInfoResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryLordInfoResponse& QueryLordInfoResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsQueryLordInfoResponse();
  return *internal_default_instance();
}

QueryLordInfoResponse* QueryLordInfoResponse::New(::google::protobuf::Arena* arena) const {
  QueryLordInfoResponse* n = new QueryLordInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryLordInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:QueryLordInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equipmentlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!alliancename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alliancename_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&playerid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&image_) -
        reinterpret_cast<char*>(&playerid_)) + sizeof(image_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QueryLordInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueryLordInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 playerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryLordInfoResponse.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 allianceid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_allianceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &allianceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alliancename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alliancename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alliancename().data(), static_cast<int>(this->alliancename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "QueryLordInfoResponse.alliancename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 exp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isfriend = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_isfriend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfriend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 image = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_image();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &image_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .EquipmentDTO equipmentlist = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_equipmentlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueryLordInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueryLordInfoResponse)
  return false;
#undef DO_
}

void QueryLordInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueryLordInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 playerId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->playerid(), output);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryLordInfoResponse.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional int32 allianceid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->allianceid(), output);
  }

  // optional string alliancename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alliancename().data(), static_cast<int>(this->alliancename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryLordInfoResponse.alliancename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alliancename(), output);
  }

  // optional int32 exp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->exp(), output);
  }

  // optional int32 level = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level(), output);
  }

  // optional bool isfriend = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isfriend(), output);
  }

  // optional int32 image = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->image(), output);
  }

  // repeated .EquipmentDTO equipmentlist = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equipmentlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->equipmentlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueryLordInfoResponse)
}

::google::protobuf::uint8* QueryLordInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:QueryLordInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 playerId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->playerid(), target);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryLordInfoResponse.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional int32 allianceid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->allianceid(), target);
  }

  // optional string alliancename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alliancename().data(), static_cast<int>(this->alliancename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "QueryLordInfoResponse.alliancename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alliancename(), target);
  }

  // optional int32 exp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->exp(), target);
  }

  // optional int32 level = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level(), target);
  }

  // optional bool isfriend = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isfriend(), target);
  }

  // optional int32 image = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->image(), target);
  }

  // repeated .EquipmentDTO equipmentlist = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equipmentlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->equipmentlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueryLordInfoResponse)
  return target;
}

size_t QueryLordInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueryLordInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .EquipmentDTO equipmentlist = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->equipmentlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->equipmentlist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string alliancename = 4;
    if (has_alliancename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alliancename());
    }

    // optional int64 playerId = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->playerid());
    }

    // optional int32 allianceid = 3;
    if (has_allianceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->allianceid());
    }

    // optional int32 exp = 5;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // optional int32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional bool isfriend = 7;
    if (has_isfriend()) {
      total_size += 1 + 1;
    }

    // optional int32 image = 8;
    if (has_image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->image());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryLordInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueryLordInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryLordInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryLordInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueryLordInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueryLordInfoResponse)
    MergeFrom(*source);
  }
}

void QueryLordInfoResponse::MergeFrom(const QueryLordInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueryLordInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equipmentlist_.MergeFrom(from.equipmentlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_alliancename();
      alliancename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alliancename_);
    }
    if (cached_has_bits & 0x00000004u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000008u) {
      allianceid_ = from.allianceid_;
    }
    if (cached_has_bits & 0x00000010u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000020u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000040u) {
      isfriend_ = from.isfriend_;
    }
    if (cached_has_bits & 0x00000080u) {
      image_ = from.image_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QueryLordInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueryLordInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryLordInfoResponse::CopyFrom(const QueryLordInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueryLordInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryLordInfoResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->equipmentlist())) return false;
  return true;
}

void QueryLordInfoResponse::Swap(QueryLordInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryLordInfoResponse::InternalSwap(QueryLordInfoResponse* other) {
  using std::swap;
  equipmentlist_.InternalSwap(&other->equipmentlist_);
  nickname_.Swap(&other->nickname_);
  alliancename_.Swap(&other->alliancename_);
  swap(playerid_, other->playerid_);
  swap(allianceid_, other->allianceid_);
  swap(exp_, other->exp_);
  swap(level_, other->level_);
  swap(isfriend_, other->isfriend_);
  swap(image_, other->image_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryLordInfoResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetIconRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetIconRequest::kIconIDFieldNumber;
const int SetIconRequest::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetIconRequest::SetIconRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSetIconRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetIconRequest)
}
SetIconRequest::SetIconRequest(const SetIconRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iconid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconid()) {
    iconid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconid_);
  }
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:SetIconRequest)
}

void SetIconRequest::SharedCtor() {
  _cached_size_ = 0;
  iconid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oper_ = 0;
}

SetIconRequest::~SetIconRequest() {
  // @@protoc_insertion_point(destructor:SetIconRequest)
  SharedDtor();
}

void SetIconRequest::SharedDtor() {
  iconid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetIconRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetIconRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetIconRequest& SetIconRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSetIconRequest();
  return *internal_default_instance();
}

SetIconRequest* SetIconRequest::New(::google::protobuf::Arena* arena) const {
  SetIconRequest* n = new SetIconRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetIconRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetIconRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!iconid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*iconid_.UnsafeRawStringPointer())->clear();
  }
  oper_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetIconRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetIconRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string iconID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconid().data(), static_cast<int>(this->iconid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SetIconRequest.iconID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 oper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_oper();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetIconRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetIconRequest)
  return false;
#undef DO_
}

void SetIconRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetIconRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string iconID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconid().data(), static_cast<int>(this->iconid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SetIconRequest.iconID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->iconid(), output);
  }

  // required int32 oper = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oper(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetIconRequest)
}

::google::protobuf::uint8* SetIconRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetIconRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string iconID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconid().data(), static_cast<int>(this->iconid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SetIconRequest.iconID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->iconid(), target);
  }

  // required int32 oper = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oper(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetIconRequest)
  return target;
}

size_t SetIconRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SetIconRequest)
  size_t total_size = 0;

  if (has_iconid()) {
    // required string iconID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iconid());
  }

  if (has_oper()) {
    // required int32 oper = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->oper());
  }

  return total_size;
}
size_t SetIconRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetIconRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string iconID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iconid());

    // required int32 oper = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->oper());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetIconRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetIconRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetIconRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetIconRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetIconRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetIconRequest)
    MergeFrom(*source);
  }
}

void SetIconRequest::MergeFrom(const SetIconRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetIconRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_iconid();
      iconid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconid_);
    }
    if (cached_has_bits & 0x00000002u) {
      oper_ = from.oper_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetIconRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetIconRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetIconRequest::CopyFrom(const SetIconRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetIconRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetIconRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SetIconRequest::Swap(SetIconRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetIconRequest::InternalSwap(SetIconRequest* other) {
  using std::swap;
  iconid_.Swap(&other->iconid_);
  swap(oper_, other->oper_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetIconRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetIconResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetIconResponse::kIconIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetIconResponse::SetIconResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSetIconResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetIconResponse)
}
SetIconResponse::SetIconResponse(const SetIconResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iconid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconid()) {
    iconid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconid_);
  }
  // @@protoc_insertion_point(copy_constructor:SetIconResponse)
}

void SetIconResponse::SharedCtor() {
  _cached_size_ = 0;
  iconid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetIconResponse::~SetIconResponse() {
  // @@protoc_insertion_point(destructor:SetIconResponse)
  SharedDtor();
}

void SetIconResponse::SharedDtor() {
  iconid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetIconResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetIconResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetIconResponse& SetIconResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSetIconResponse();
  return *internal_default_instance();
}

SetIconResponse* SetIconResponse::New(::google::protobuf::Arena* arena) const {
  SetIconResponse* n = new SetIconResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetIconResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SetIconResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!iconid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*iconid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetIconResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetIconResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string iconID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconid().data(), static_cast<int>(this->iconid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SetIconResponse.iconID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetIconResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetIconResponse)
  return false;
#undef DO_
}

void SetIconResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetIconResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string iconID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconid().data(), static_cast<int>(this->iconid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SetIconResponse.iconID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->iconid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetIconResponse)
}

::google::protobuf::uint8* SetIconResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetIconResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string iconID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconid().data(), static_cast<int>(this->iconid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SetIconResponse.iconID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->iconid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetIconResponse)
  return target;
}

size_t SetIconResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetIconResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string iconID = 2;
  if (has_iconid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iconid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetIconResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetIconResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetIconResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetIconResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetIconResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetIconResponse)
    MergeFrom(*source);
  }
}

void SetIconResponse::MergeFrom(const SetIconResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetIconResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_iconid()) {
    set_has_iconid();
    iconid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconid_);
  }
}

void SetIconResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetIconResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetIconResponse::CopyFrom(const SetIconResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetIconResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetIconResponse::IsInitialized() const {
  return true;
}

void SetIconResponse::Swap(SetIconResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetIconResponse::InternalSwap(SetIconResponse* other) {
  using std::swap;
  iconid_.Swap(&other->iconid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetIconResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeNameRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeNameRequest::kNicknameFieldNumber;
const int ChangeNameRequest::kUseItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeNameRequest::ChangeNameRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsChangeNameRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChangeNameRequest)
}
ChangeNameRequest::ChangeNameRequest(const ChangeNameRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  useitem_ = from.useitem_;
  // @@protoc_insertion_point(copy_constructor:ChangeNameRequest)
}

void ChangeNameRequest::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useitem_ = false;
}

ChangeNameRequest::~ChangeNameRequest() {
  // @@protoc_insertion_point(destructor:ChangeNameRequest)
  SharedDtor();
}

void ChangeNameRequest::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeNameRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeNameRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeNameRequest& ChangeNameRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsChangeNameRequest();
  return *internal_default_instance();
}

ChangeNameRequest* ChangeNameRequest::New(::google::protobuf::Arena* arena) const {
  ChangeNameRequest* n = new ChangeNameRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ChangeNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  useitem_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeNameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChangeNameRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string nickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ChangeNameRequest.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool useItem = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_useitem();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &useitem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChangeNameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChangeNameRequest)
  return false;
#undef DO_
}

void ChangeNameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChangeNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChangeNameRequest.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // required bool useItem = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->useitem(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChangeNameRequest)
}

::google::protobuf::uint8* ChangeNameRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChangeNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChangeNameRequest.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // required bool useItem = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->useitem(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChangeNameRequest)
  return target;
}

size_t ChangeNameRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ChangeNameRequest)
  size_t total_size = 0;

  if (has_nickname()) {
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_useitem()) {
    // required bool useItem = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ChangeNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChangeNameRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required bool useItem = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeNameRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChangeNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeNameRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeNameRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChangeNameRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChangeNameRequest)
    MergeFrom(*source);
  }
}

void ChangeNameRequest::MergeFrom(const ChangeNameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChangeNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      useitem_ = from.useitem_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeNameRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChangeNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeNameRequest::CopyFrom(const ChangeNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChangeNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeNameRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ChangeNameRequest::Swap(ChangeNameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeNameRequest::InternalSwap(ChangeNameRequest* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(useitem_, other->useitem_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeNameRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeNameResponse::InitAsDefaultInstance() {
  ::_ChangeNameResponse_default_instance_._instance.get_mutable()->reward_ = const_cast< ::PropertyDTO*>(
      ::PropertyDTO::internal_default_instance());
}
void ChangeNameResponse::clear_reward() {
  if (reward_ != NULL) reward_->Clear();
  clear_has_reward();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeNameResponse::kIsAvailableFieldNumber;
const int ChangeNameResponse::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeNameResponse::ChangeNameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsChangeNameResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChangeNameResponse)
}
ChangeNameResponse::ChangeNameResponse(const ChangeNameResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reward()) {
    reward_ = new ::PropertyDTO(*from.reward_);
  } else {
    reward_ = NULL;
  }
  isavailable_ = from.isavailable_;
  // @@protoc_insertion_point(copy_constructor:ChangeNameResponse)
}

void ChangeNameResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isavailable_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(isavailable_));
}

ChangeNameResponse::~ChangeNameResponse() {
  // @@protoc_insertion_point(destructor:ChangeNameResponse)
  SharedDtor();
}

void ChangeNameResponse::SharedDtor() {
  if (this != internal_default_instance()) delete reward_;
}

void ChangeNameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeNameResponse::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeNameResponse& ChangeNameResponse::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsChangeNameResponse();
  return *internal_default_instance();
}

ChangeNameResponse* ChangeNameResponse::New(::google::protobuf::Arena* arena) const {
  ChangeNameResponse* n = new ChangeNameResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ChangeNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(reward_ != NULL);
    reward_->Clear();
  }
  isavailable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeNameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChangeNameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isAvailable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_isavailable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isavailable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PropertyDTO reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChangeNameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChangeNameResponse)
  return false;
#undef DO_
}

void ChangeNameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChangeNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool isAvailable = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isavailable(), output);
  }

  // optional .PropertyDTO reward = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->reward_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChangeNameResponse)
}

::google::protobuf::uint8* ChangeNameResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChangeNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool isAvailable = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isavailable(), target);
  }

  // optional .PropertyDTO reward = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->reward_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChangeNameResponse)
  return target;
}

size_t ChangeNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChangeNameResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool isAvailable = 1;
  if (has_isavailable()) {
    total_size += 1 + 1;
  }
  // optional .PropertyDTO reward = 2;
  if (has_reward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->reward_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeNameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChangeNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeNameResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeNameResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChangeNameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChangeNameResponse)
    MergeFrom(*source);
  }
}

void ChangeNameResponse::MergeFrom(const ChangeNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChangeNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_reward()->::PropertyDTO::MergeFrom(from.reward());
    }
    if (cached_has_bits & 0x00000002u) {
      isavailable_ = from.isavailable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeNameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChangeNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeNameResponse::CopyFrom(const ChangeNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChangeNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeNameResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_reward()) {
    if (!this->reward_->IsInitialized()) return false;
  }
  return true;
}

void ChangeNameResponse::Swap(ChangeNameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeNameResponse::InternalSwap(ChangeNameResponse* other) {
  using std::swap;
  swap(reward_, other->reward_);
  swap(isavailable_, other->isavailable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeNameResponse::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetGuideRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetGuideRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetGuideRequest::SetGuideRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSetGuideRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetGuideRequest)
}
SetGuideRequest::SetGuideRequest(const SetGuideRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:SetGuideRequest)
}

void SetGuideRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

SetGuideRequest::~SetGuideRequest() {
  // @@protoc_insertion_point(destructor:SetGuideRequest)
  SharedDtor();
}

void SetGuideRequest::SharedDtor() {
}

void SetGuideRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetGuideRequest::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetGuideRequest& SetGuideRequest::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSetGuideRequest();
  return *internal_default_instance();
}

SetGuideRequest* SetGuideRequest::New(::google::protobuf::Arena* arena) const {
  SetGuideRequest* n = new SetGuideRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetGuideRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetGuideRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetGuideRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetGuideRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetGuideRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetGuideRequest)
  return false;
#undef DO_
}

void SetGuideRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetGuideRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetGuideRequest)
}

::google::protobuf::uint8* SetGuideRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetGuideRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetGuideRequest)
  return target;
}

size_t SetGuideRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetGuideRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetGuideRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetGuideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetGuideRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetGuideRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetGuideRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetGuideRequest)
    MergeFrom(*source);
  }
}

void SetGuideRequest::MergeFrom(const SetGuideRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetGuideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void SetGuideRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetGuideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetGuideRequest::CopyFrom(const SetGuideRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetGuideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGuideRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SetGuideRequest::Swap(SetGuideRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetGuideRequest::InternalSwap(SetGuideRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetGuideRequest::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerDataPush::InitAsDefaultInstance() {
  ::_PlayerDataPush_default_instance_._instance.get_mutable()->player_ = const_cast< ::PlayerDTO*>(
      ::PlayerDTO::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerDataPush::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerDataPush::PlayerDataPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerDataPush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerDataPush)
}
PlayerDataPush::PlayerDataPush(const PlayerDataPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::PlayerDTO(*from.player_);
  } else {
    player_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PlayerDataPush)
}

void PlayerDataPush::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
}

PlayerDataPush::~PlayerDataPush() {
  // @@protoc_insertion_point(destructor:PlayerDataPush)
  SharedDtor();
}

void PlayerDataPush::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void PlayerDataPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerDataPush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerDataPush& PlayerDataPush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerDataPush();
  return *internal_default_instance();
}

PlayerDataPush* PlayerDataPush::New(::google::protobuf::Arena* arena) const {
  PlayerDataPush* n = new PlayerDataPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerDataPush::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerDataPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != NULL);
    player_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerDataPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerDataPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PlayerDTO player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerDataPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerDataPush)
  return false;
#undef DO_
}

void PlayerDataPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerDataPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PlayerDTO player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerDataPush)
}

::google::protobuf::uint8* PlayerDataPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerDataPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PlayerDTO player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerDataPush)
  return target;
}

size_t PlayerDataPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerDataPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .PlayerDTO player = 1;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerDataPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerDataPush)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerDataPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerDataPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerDataPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerDataPush)
    MergeFrom(*source);
  }
}

void PlayerDataPush::MergeFrom(const PlayerDataPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerDataPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    mutable_player()->::PlayerDTO::MergeFrom(from.player());
  }
}

void PlayerDataPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerDataPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerDataPush::CopyFrom(const PlayerDataPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerDataPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerDataPush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_player()) {
    if (!this->player_->IsInitialized()) return false;
  }
  return true;
}

void PlayerDataPush::Swap(PlayerDataPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerDataPush::InternalSwap(PlayerDataPush* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerDataPush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerPropertyChangePush::InitAsDefaultInstance() {
}
void PlayerPropertyChangePush::clear_properties() {
  properties_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropertyChangePush::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropertyChangePush::PlayerPropertyChangePush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerPropertyChangePush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerPropertyChangePush)
}
PlayerPropertyChangePush::PlayerPropertyChangePush(const PlayerPropertyChangePush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      properties_(from.properties_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PlayerPropertyChangePush)
}

void PlayerPropertyChangePush::SharedCtor() {
  _cached_size_ = 0;
}

PlayerPropertyChangePush::~PlayerPropertyChangePush() {
  // @@protoc_insertion_point(destructor:PlayerPropertyChangePush)
  SharedDtor();
}

void PlayerPropertyChangePush::SharedDtor() {
}

void PlayerPropertyChangePush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPropertyChangePush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPropertyChangePush& PlayerPropertyChangePush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerPropertyChangePush();
  return *internal_default_instance();
}

PlayerPropertyChangePush* PlayerPropertyChangePush::New(::google::protobuf::Arena* arena) const {
  PlayerPropertyChangePush* n = new PlayerPropertyChangePush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPropertyChangePush::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerPropertyChangePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerPropertyChangePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerPropertyChangePush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PropertyDTO properties = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerPropertyChangePush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerPropertyChangePush)
  return false;
#undef DO_
}

void PlayerPropertyChangePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerPropertyChangePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PropertyDTO properties = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerPropertyChangePush)
}

::google::protobuf::uint8* PlayerPropertyChangePush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerPropertyChangePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PropertyDTO properties = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->properties_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->properties(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerPropertyChangePush)
  return target;
}

size_t PlayerPropertyChangePush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerPropertyChangePush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .PropertyDTO properties = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->properties_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->properties(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPropertyChangePush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerPropertyChangePush)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPropertyChangePush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropertyChangePush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerPropertyChangePush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerPropertyChangePush)
    MergeFrom(*source);
  }
}

void PlayerPropertyChangePush::MergeFrom(const PlayerPropertyChangePush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerPropertyChangePush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
}

void PlayerPropertyChangePush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerPropertyChangePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropertyChangePush::CopyFrom(const PlayerPropertyChangePush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerPropertyChangePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropertyChangePush::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->properties())) return false;
  return true;
}

void PlayerPropertyChangePush::Swap(PlayerPropertyChangePush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropertyChangePush::InternalSwap(PlayerPropertyChangePush* other) {
  using std::swap;
  properties_.InternalSwap(&other->properties_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPropertyChangePush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerLevelUpPush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLevelUpPush::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLevelUpPush::PlayerLevelUpPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerLevelUpPush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerLevelUpPush)
}
PlayerLevelUpPush::PlayerLevelUpPush(const PlayerLevelUpPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:PlayerLevelUpPush)
}

void PlayerLevelUpPush::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
}

PlayerLevelUpPush::~PlayerLevelUpPush() {
  // @@protoc_insertion_point(destructor:PlayerLevelUpPush)
  SharedDtor();
}

void PlayerLevelUpPush::SharedDtor() {
}

void PlayerLevelUpPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLevelUpPush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLevelUpPush& PlayerLevelUpPush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerLevelUpPush();
  return *internal_default_instance();
}

PlayerLevelUpPush* PlayerLevelUpPush::New(::google::protobuf::Arena* arena) const {
  PlayerLevelUpPush* n = new PlayerLevelUpPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLevelUpPush::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerLevelUpPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerLevelUpPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerLevelUpPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerLevelUpPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerLevelUpPush)
  return false;
#undef DO_
}

void PlayerLevelUpPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerLevelUpPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerLevelUpPush)
}

::google::protobuf::uint8* PlayerLevelUpPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerLevelUpPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerLevelUpPush)
  return target;
}

size_t PlayerLevelUpPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerLevelUpPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 level = 1;
  if (has_level()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLevelUpPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerLevelUpPush)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLevelUpPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLevelUpPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerLevelUpPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerLevelUpPush)
    MergeFrom(*source);
  }
}

void PlayerLevelUpPush::MergeFrom(const PlayerLevelUpPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerLevelUpPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_level()) {
    set_level(from.level());
  }
}

void PlayerLevelUpPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerLevelUpPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLevelUpPush::CopyFrom(const PlayerLevelUpPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerLevelUpPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLevelUpPush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayerLevelUpPush::Swap(PlayerLevelUpPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLevelUpPush::InternalSwap(PlayerLevelUpPush* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLevelUpPush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerProtectPush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerProtectPush::kBornProtectEndTimeFieldNumber;
const int PlayerProtectPush::kAtkProtectEndTimeFieldNumber;
const int PlayerProtectPush::kSpyProtectEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerProtectPush::PlayerProtectPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerProtectPush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerProtectPush)
}
PlayerProtectPush::PlayerProtectPush(const PlayerProtectPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bornprotectendtime_, &from.bornprotectendtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&spyprotectendtime_) -
    reinterpret_cast<char*>(&bornprotectendtime_)) + sizeof(spyprotectendtime_));
  // @@protoc_insertion_point(copy_constructor:PlayerProtectPush)
}

void PlayerProtectPush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bornprotectendtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spyprotectendtime_) -
      reinterpret_cast<char*>(&bornprotectendtime_)) + sizeof(spyprotectendtime_));
}

PlayerProtectPush::~PlayerProtectPush() {
  // @@protoc_insertion_point(destructor:PlayerProtectPush)
  SharedDtor();
}

void PlayerProtectPush::SharedDtor() {
}

void PlayerProtectPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerProtectPush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerProtectPush& PlayerProtectPush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerProtectPush();
  return *internal_default_instance();
}

PlayerProtectPush* PlayerProtectPush::New(::google::protobuf::Arena* arena) const {
  PlayerProtectPush* n = new PlayerProtectPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerProtectPush::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerProtectPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&bornprotectendtime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&spyprotectendtime_) -
        reinterpret_cast<char*>(&bornprotectendtime_)) + sizeof(spyprotectendtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerProtectPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerProtectPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bornProtectEndTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bornprotectendtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bornprotectendtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 atkProtectEndTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_atkprotectendtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atkprotectendtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 spyProtectEndTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_spyprotectendtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spyprotectendtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerProtectPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerProtectPush)
  return false;
#undef DO_
}

void PlayerProtectPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerProtectPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 bornProtectEndTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bornprotectendtime(), output);
  }

  // required int32 atkProtectEndTime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->atkprotectendtime(), output);
  }

  // required int32 spyProtectEndTime = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->spyprotectendtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerProtectPush)
}

::google::protobuf::uint8* PlayerProtectPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerProtectPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 bornProtectEndTime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bornprotectendtime(), target);
  }

  // required int32 atkProtectEndTime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->atkprotectendtime(), target);
  }

  // required int32 spyProtectEndTime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->spyprotectendtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerProtectPush)
  return target;
}

size_t PlayerProtectPush::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayerProtectPush)
  size_t total_size = 0;

  if (has_bornprotectendtime()) {
    // required int32 bornProtectEndTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bornprotectendtime());
  }

  if (has_atkprotectendtime()) {
    // required int32 atkProtectEndTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->atkprotectendtime());
  }

  if (has_spyprotectendtime()) {
    // required int32 spyProtectEndTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spyprotectendtime());
  }

  return total_size;
}
size_t PlayerProtectPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerProtectPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 bornProtectEndTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bornprotectendtime());

    // required int32 atkProtectEndTime = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->atkprotectendtime());

    // required int32 spyProtectEndTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spyprotectendtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerProtectPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerProtectPush)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerProtectPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerProtectPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerProtectPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerProtectPush)
    MergeFrom(*source);
  }
}

void PlayerProtectPush::MergeFrom(const PlayerProtectPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerProtectPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bornprotectendtime_ = from.bornprotectendtime_;
    }
    if (cached_has_bits & 0x00000002u) {
      atkprotectendtime_ = from.atkprotectendtime_;
    }
    if (cached_has_bits & 0x00000004u) {
      spyprotectendtime_ = from.spyprotectendtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerProtectPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerProtectPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerProtectPush::CopyFrom(const PlayerProtectPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerProtectPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerProtectPush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PlayerProtectPush::Swap(PlayerProtectPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerProtectPush::InternalSwap(PlayerProtectPush* other) {
  using std::swap;
  swap(bornprotectendtime_, other->bornprotectendtime_);
  swap(atkprotectendtime_, other->atkprotectendtime_);
  swap(spyprotectendtime_, other->spyprotectendtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerProtectPush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCount::kTypeFieldNumber;
const int PlayerCount::kPointFieldNumber;
const int PlayerCount::kDefCountFieldNumber;
const int PlayerCount::kAddCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCount::PlayerCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerCount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerCount)
}
PlayerCount::PlayerCount(const PlayerCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&addcount_) -
    reinterpret_cast<char*>(&type_)) + sizeof(addcount_));
  // @@protoc_insertion_point(copy_constructor:PlayerCount)
}

void PlayerCount::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&addcount_) -
      reinterpret_cast<char*>(&type_)) + sizeof(addcount_));
}

PlayerCount::~PlayerCount() {
  // @@protoc_insertion_point(destructor:PlayerCount)
  SharedDtor();
}

void PlayerCount::SharedDtor() {
}

void PlayerCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCount::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCount& PlayerCount::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerCount();
  return *internal_default_instance();
}

PlayerCount* PlayerCount::New(::google::protobuf::Arena* arena) const {
  PlayerCount* n = new PlayerCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCount::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&addcount_) -
        reinterpret_cast<char*>(&type_)) + sizeof(addcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 defCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_defcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 addCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_addcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerCount)
  return false;
#undef DO_
}

void PlayerCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required int32 point = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->point(), output);
  }

  // required int32 defCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->defcount(), output);
  }

  // optional int32 addCount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->addcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerCount)
}

::google::protobuf::uint8* PlayerCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required int32 point = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->point(), target);
  }

  // required int32 defCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->defcount(), target);
  }

  // optional int32 addCount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->addcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerCount)
  return target;
}

size_t PlayerCount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayerCount)
  size_t total_size = 0;

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_point()) {
    // required int32 point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());
  }

  if (has_defcount()) {
    // required int32 defCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->defcount());
  }

  return total_size;
}
size_t PlayerCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required int32 point = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());

    // required int32 defCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->defcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 addCount = 4;
  if (has_addcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->addcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerCount)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerCount)
    MergeFrom(*source);
  }
}

void PlayerCount::MergeFrom(const PlayerCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      point_ = from.point_;
    }
    if (cached_has_bits & 0x00000004u) {
      defcount_ = from.defcount_;
    }
    if (cached_has_bits & 0x00000008u) {
      addcount_ = from.addcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCount::CopyFrom(const PlayerCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PlayerCount::Swap(PlayerCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCount::InternalSwap(PlayerCount* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(point_, other->point_);
  swap(defcount_, other->defcount_);
  swap(addcount_, other->addcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCount::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerCountPush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCountPush::kCountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCountPush::PlayerCountPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayerCountPush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerCountPush)
}
PlayerCountPush::PlayerCountPush(const PlayerCountPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      counts_(from.counts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PlayerCountPush)
}

void PlayerCountPush::SharedCtor() {
  _cached_size_ = 0;
}

PlayerCountPush::~PlayerCountPush() {
  // @@protoc_insertion_point(destructor:PlayerCountPush)
  SharedDtor();
}

void PlayerCountPush::SharedDtor() {
}

void PlayerCountPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCountPush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCountPush& PlayerCountPush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayerCountPush();
  return *internal_default_instance();
}

PlayerCountPush* PlayerCountPush::New(::google::protobuf::Arena* arena) const {
  PlayerCountPush* n = new PlayerCountPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCountPush::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerCountPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  counts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerCountPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerCountPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PlayerCount counts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_counts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerCountPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerCountPush)
  return false;
#undef DO_
}

void PlayerCountPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerCountPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PlayerCount counts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->counts(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerCountPush)
}

::google::protobuf::uint8* PlayerCountPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerCountPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PlayerCount counts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->counts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->counts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerCountPush)
  return target;
}

size_t PlayerCountPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerCountPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .PlayerCount counts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->counts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->counts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCountPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerCountPush)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCountPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCountPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerCountPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerCountPush)
    MergeFrom(*source);
  }
}

void PlayerCountPush::MergeFrom(const PlayerCountPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerCountPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  counts_.MergeFrom(from.counts_);
}

void PlayerCountPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerCountPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCountPush::CopyFrom(const PlayerCountPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerCountPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCountPush::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->counts())) return false;
  return true;
}

void PlayerCountPush::Swap(PlayerCountPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCountPush::InternalSwap(PlayerCountPush* other) {
  using std::swap;
  counts_.InternalSwap(&other->counts_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCountPush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayeBattlePush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayeBattlePush::kBattleValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayeBattlePush::PlayeBattlePush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsPlayeBattlePush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayeBattlePush)
}
PlayeBattlePush::PlayeBattlePush(const PlayeBattlePush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  battlevalue_ = from.battlevalue_;
  // @@protoc_insertion_point(copy_constructor:PlayeBattlePush)
}

void PlayeBattlePush::SharedCtor() {
  _cached_size_ = 0;
  battlevalue_ = 0;
}

PlayeBattlePush::~PlayeBattlePush() {
  // @@protoc_insertion_point(destructor:PlayeBattlePush)
  SharedDtor();
}

void PlayeBattlePush::SharedDtor() {
}

void PlayeBattlePush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayeBattlePush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayeBattlePush& PlayeBattlePush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsPlayeBattlePush();
  return *internal_default_instance();
}

PlayeBattlePush* PlayeBattlePush::New(::google::protobuf::Arena* arena) const {
  PlayeBattlePush* n = new PlayeBattlePush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayeBattlePush::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayeBattlePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  battlevalue_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayeBattlePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayeBattlePush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 battleValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_battlevalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battlevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayeBattlePush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayeBattlePush)
  return false;
#undef DO_
}

void PlayeBattlePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayeBattlePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 battleValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->battlevalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayeBattlePush)
}

::google::protobuf::uint8* PlayeBattlePush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayeBattlePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 battleValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->battlevalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayeBattlePush)
  return target;
}

size_t PlayeBattlePush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayeBattlePush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 battleValue = 1;
  if (has_battlevalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battlevalue());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayeBattlePush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayeBattlePush)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayeBattlePush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayeBattlePush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayeBattlePush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayeBattlePush)
    MergeFrom(*source);
  }
}

void PlayeBattlePush::MergeFrom(const PlayeBattlePush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayeBattlePush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_battlevalue()) {
    set_battlevalue(from.battlevalue());
  }
}

void PlayeBattlePush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayeBattlePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayeBattlePush::CopyFrom(const PlayeBattlePush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayeBattlePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayeBattlePush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PlayeBattlePush::Swap(PlayeBattlePush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayeBattlePush::InternalSwap(PlayeBattlePush* other) {
  using std::swap;
  swap(battlevalue_, other->battlevalue_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayeBattlePush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TalentPush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TalentPush::kTalentIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TalentPush::TalentPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsTalentPush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalentPush)
}
TalentPush::TalentPush(const TalentPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      talentids_(from.talentids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TalentPush)
}

void TalentPush::SharedCtor() {
  _cached_size_ = 0;
}

TalentPush::~TalentPush() {
  // @@protoc_insertion_point(destructor:TalentPush)
  SharedDtor();
}

void TalentPush::SharedDtor() {
}

void TalentPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalentPush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TalentPush& TalentPush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsTalentPush();
  return *internal_default_instance();
}

TalentPush* TalentPush::New(::google::protobuf::Arena* arena) const {
  TalentPush* n = new TalentPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TalentPush::Clear() {
// @@protoc_insertion_point(message_clear_start:TalentPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  talentids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TalentPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalentPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 talentIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_talentids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_talentids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalentPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalentPush)
  return false;
#undef DO_
}

void TalentPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalentPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 talentIds = 1;
  for (int i = 0, n = this->talentids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->talentids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalentPush)
}

::google::protobuf::uint8* TalentPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TalentPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 talentIds = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->talentids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalentPush)
  return target;
}

size_t TalentPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TalentPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 talentIds = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->talentids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->talentids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalentPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TalentPush)
  GOOGLE_DCHECK_NE(&from, this);
  const TalentPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TalentPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TalentPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TalentPush)
    MergeFrom(*source);
  }
}

void TalentPush::MergeFrom(const TalentPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TalentPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  talentids_.MergeFrom(from.talentids_);
}

void TalentPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TalentPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalentPush::CopyFrom(const TalentPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TalentPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalentPush::IsInitialized() const {
  return true;
}

void TalentPush::Swap(TalentPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TalentPush::InternalSwap(TalentPush* other) {
  using std::swap;
  talentids_.InternalSwap(&other->talentids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TalentPush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VipInfoPush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VipInfoPush::kLvFieldNumber;
const int VipInfoPush::kExpFieldNumber;
const int VipInfoPush::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VipInfoPush::VipInfoPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsVipInfoPush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VipInfoPush)
}
VipInfoPush::VipInfoPush(const VipInfoPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lv_, &from.lv_,
    static_cast<size_t>(reinterpret_cast<char*>(&sign_) -
    reinterpret_cast<char*>(&lv_)) + sizeof(sign_));
  // @@protoc_insertion_point(copy_constructor:VipInfoPush)
}

void VipInfoPush::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sign_) -
      reinterpret_cast<char*>(&lv_)) + sizeof(sign_));
}

VipInfoPush::~VipInfoPush() {
  // @@protoc_insertion_point(destructor:VipInfoPush)
  SharedDtor();
}

void VipInfoPush::SharedDtor() {
}

void VipInfoPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VipInfoPush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VipInfoPush& VipInfoPush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsVipInfoPush();
  return *internal_default_instance();
}

VipInfoPush* VipInfoPush::New(::google::protobuf::Arena* arena) const {
  VipInfoPush* n = new VipInfoPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VipInfoPush::Clear() {
// @@protoc_insertion_point(message_clear_start:VipInfoPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&lv_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sign_) -
        reinterpret_cast<char*>(&lv_)) + sizeof(sign_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VipInfoPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VipInfoPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 exp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 sign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sign();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sign_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VipInfoPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VipInfoPush)
  return false;
#undef DO_
}

void VipInfoPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VipInfoPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lv = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lv(), output);
  }

  // required int32 exp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }

  // required int32 sign = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sign(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VipInfoPush)
}

::google::protobuf::uint8* VipInfoPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VipInfoPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 lv = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lv(), target);
  }

  // required int32 exp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }

  // required int32 sign = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sign(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VipInfoPush)
  return target;
}

size_t VipInfoPush::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:VipInfoPush)
  size_t total_size = 0;

  if (has_lv()) {
    // required int32 lv = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lv());
  }

  if (has_exp()) {
    // required int32 exp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  if (has_sign()) {
    // required int32 sign = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sign());
  }

  return total_size;
}
size_t VipInfoPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VipInfoPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 lv = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lv());

    // required int32 exp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());

    // required int32 sign = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sign());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VipInfoPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VipInfoPush)
  GOOGLE_DCHECK_NE(&from, this);
  const VipInfoPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VipInfoPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VipInfoPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VipInfoPush)
    MergeFrom(*source);
  }
}

void VipInfoPush::MergeFrom(const VipInfoPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VipInfoPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000002u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00000004u) {
      sign_ = from.sign_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VipInfoPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VipInfoPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VipInfoPush::CopyFrom(const VipInfoPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VipInfoPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VipInfoPush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void VipInfoPush::Swap(VipInfoPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VipInfoPush::InternalSwap(VipInfoPush* other) {
  using std::swap;
  swap(lv_, other->lv_);
  swap(exp_, other->exp_);
  swap(sign_, other->sign_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VipInfoPush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VipActiveInfoPush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VipActiveInfoPush::kActiveEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VipActiveInfoPush::VipActiveInfoPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsVipActiveInfoPush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VipActiveInfoPush)
}
VipActiveInfoPush::VipActiveInfoPush(const VipActiveInfoPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  activeend_ = from.activeend_;
  // @@protoc_insertion_point(copy_constructor:VipActiveInfoPush)
}

void VipActiveInfoPush::SharedCtor() {
  _cached_size_ = 0;
  activeend_ = 0;
}

VipActiveInfoPush::~VipActiveInfoPush() {
  // @@protoc_insertion_point(destructor:VipActiveInfoPush)
  SharedDtor();
}

void VipActiveInfoPush::SharedDtor() {
}

void VipActiveInfoPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VipActiveInfoPush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VipActiveInfoPush& VipActiveInfoPush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsVipActiveInfoPush();
  return *internal_default_instance();
}

VipActiveInfoPush* VipActiveInfoPush::New(::google::protobuf::Arena* arena) const {
  VipActiveInfoPush* n = new VipActiveInfoPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VipActiveInfoPush::Clear() {
// @@protoc_insertion_point(message_clear_start:VipActiveInfoPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  activeend_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VipActiveInfoPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VipActiveInfoPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 activeEnd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_activeend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activeend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VipActiveInfoPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VipActiveInfoPush)
  return false;
#undef DO_
}

void VipActiveInfoPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VipActiveInfoPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 activeEnd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activeend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VipActiveInfoPush)
}

::google::protobuf::uint8* VipActiveInfoPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VipActiveInfoPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 activeEnd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activeend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VipActiveInfoPush)
  return target;
}

size_t VipActiveInfoPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VipActiveInfoPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 activeEnd = 1;
  if (has_activeend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activeend());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VipActiveInfoPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VipActiveInfoPush)
  GOOGLE_DCHECK_NE(&from, this);
  const VipActiveInfoPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VipActiveInfoPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VipActiveInfoPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VipActiveInfoPush)
    MergeFrom(*source);
  }
}

void VipActiveInfoPush::MergeFrom(const VipActiveInfoPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VipActiveInfoPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_activeend()) {
    set_activeend(from.activeend());
  }
}

void VipActiveInfoPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VipActiveInfoPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VipActiveInfoPush::CopyFrom(const VipActiveInfoPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VipActiveInfoPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VipActiveInfoPush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VipActiveInfoPush::Swap(VipActiveInfoPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VipActiveInfoPush::InternalSwap(VipActiveInfoPush* other) {
  using std::swap;
  swap(activeend_, other->activeend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VipActiveInfoPush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SysTimePush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SysTimePush::kCurrTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SysTimePush::SysTimePush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsSysTimePush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SysTimePush)
}
SysTimePush::SysTimePush(const SysTimePush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currtime_ = from.currtime_;
  // @@protoc_insertion_point(copy_constructor:SysTimePush)
}

void SysTimePush::SharedCtor() {
  _cached_size_ = 0;
  currtime_ = GOOGLE_LONGLONG(0);
}

SysTimePush::~SysTimePush() {
  // @@protoc_insertion_point(destructor:SysTimePush)
  SharedDtor();
}

void SysTimePush::SharedDtor() {
}

void SysTimePush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SysTimePush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SysTimePush& SysTimePush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsSysTimePush();
  return *internal_default_instance();
}

SysTimePush* SysTimePush::New(::google::protobuf::Arena* arena) const {
  SysTimePush* n = new SysTimePush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SysTimePush::Clear() {
// @@protoc_insertion_point(message_clear_start:SysTimePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currtime_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SysTimePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SysTimePush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 currTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_currtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &currtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SysTimePush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SysTimePush)
  return false;
#undef DO_
}

void SysTimePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SysTimePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 currTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->currtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SysTimePush)
}

::google::protobuf::uint8* SysTimePush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SysTimePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 currTime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->currtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SysTimePush)
  return target;
}

size_t SysTimePush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SysTimePush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 currTime = 1;
  if (has_currtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->currtime());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SysTimePush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SysTimePush)
  GOOGLE_DCHECK_NE(&from, this);
  const SysTimePush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SysTimePush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SysTimePush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SysTimePush)
    MergeFrom(*source);
  }
}

void SysTimePush::MergeFrom(const SysTimePush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SysTimePush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_currtime()) {
    set_currtime(from.currtime());
  }
}

void SysTimePush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SysTimePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysTimePush::CopyFrom(const SysTimePush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SysTimePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysTimePush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SysTimePush::Swap(SysTimePush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SysTimePush::InternalSwap(SysTimePush* other) {
  using std::swap;
  swap(currtime_, other->currtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SysTimePush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuidePush::InitAsDefaultInstance() {
  ::_GuidePush_default_instance_._instance.get_mutable()->guide_ = const_cast< ::GuideDTO*>(
      ::GuideDTO::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuidePush::kGuideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuidePush::GuidePush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_player_2eproto::InitDefaultsGuidePush();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuidePush)
}
GuidePush::GuidePush(const GuidePush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guide()) {
    guide_ = new ::GuideDTO(*from.guide_);
  } else {
    guide_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GuidePush)
}

void GuidePush::SharedCtor() {
  _cached_size_ = 0;
  guide_ = NULL;
}

GuidePush::~GuidePush() {
  // @@protoc_insertion_point(destructor:GuidePush)
  SharedDtor();
}

void GuidePush::SharedDtor() {
  if (this != internal_default_instance()) delete guide_;
}

void GuidePush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuidePush::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuidePush& GuidePush::default_instance() {
  ::protobuf_player_2eproto::InitDefaultsGuidePush();
  return *internal_default_instance();
}

GuidePush* GuidePush::New(::google::protobuf::Arena* arena) const {
  GuidePush* n = new GuidePush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuidePush::Clear() {
// @@protoc_insertion_point(message_clear_start:GuidePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guide_ != NULL);
    guide_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuidePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuidePush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .GuideDTO guide = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guide()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuidePush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuidePush)
  return false;
#undef DO_
}

void GuidePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuidePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .GuideDTO guide = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->guide_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuidePush)
}

::google::protobuf::uint8* GuidePush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuidePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .GuideDTO guide = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->guide_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuidePush)
  return target;
}

size_t GuidePush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuidePush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .GuideDTO guide = 1;
  if (has_guide()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->guide_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuidePush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuidePush)
  GOOGLE_DCHECK_NE(&from, this);
  const GuidePush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuidePush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuidePush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuidePush)
    MergeFrom(*source);
  }
}

void GuidePush::MergeFrom(const GuidePush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuidePush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guide()) {
    mutable_guide()->::GuideDTO::MergeFrom(from.guide());
  }
}

void GuidePush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuidePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuidePush::CopyFrom(const GuidePush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuidePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuidePush::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_guide()) {
    if (!this->guide_->IsInitialized()) return false;
  }
  return true;
}

void GuidePush::Swap(GuidePush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuidePush::InternalSwap(GuidePush* other) {
  using std::swap;
  swap(guide_, other->guide_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuidePush::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
