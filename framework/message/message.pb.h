// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class CMessageHead;
class CMessage;
class CMsgPingRequest;

enum CMsgPingRequest_Msg {
  CMsgPingRequest_Msg_MsgID = 16777215
};
bool CMsgPingRequest_Msg_IsValid(int value);
const CMsgPingRequest_Msg CMsgPingRequest_Msg_Msg_MIN = CMsgPingRequest_Msg_MsgID;
const CMsgPingRequest_Msg CMsgPingRequest_Msg_Msg_MAX = CMsgPingRequest_Msg_MsgID;
const int CMsgPingRequest_Msg_Msg_ARRAYSIZE = CMsgPingRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPingRequest_Msg_descriptor();
inline const ::std::string& CMsgPingRequest_Msg_Name(CMsgPingRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPingRequest_Msg_descriptor(), value);
}
inline bool CMsgPingRequest_Msg_Parse(
    const ::std::string& name, CMsgPingRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPingRequest_Msg>(
    CMsgPingRequest_Msg_descriptor(), name, value);
}
enum enMessageFE {
  FE_TIMER = 0,
  FE_CLIENT = 1,
  FE_GAMESERVER = 2,
  FE_LOGINSERVER = 3,
  FE_DBSERVER = 4,
  FE_PROXYSERVER = 5,
  FE_WORLDSERVER = 6,
  FE_WEBSERVER = 7,
  FE_OFFLINESERVER = 8,
  FE_CHECKSERVER = 9,
  FE_HALLSERVER = 10,
  FE_GATESERVER = 11,
  FE_TCPSERVER = 12,
  FE_ROOMSERVER = 13
};
bool enMessageFE_IsValid(int value);
const enMessageFE enMessageFE_MIN = FE_TIMER;
const enMessageFE enMessageFE_MAX = FE_ROOMSERVER;
const int enMessageFE_ARRAYSIZE = enMessageFE_MAX + 1;

const ::google::protobuf::EnumDescriptor* enMessageFE_descriptor();
inline const ::std::string& enMessageFE_Name(enMessageFE value) {
  return ::google::protobuf::internal::NameOfEnum(
    enMessageFE_descriptor(), value);
}
inline bool enMessageFE_Parse(
    const ::std::string& name, enMessageFE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enMessageFE>(
    enMessageFE_descriptor(), name, value);
}
// ===================================================================

class CMessageHead : public ::google::protobuf::Message {
 public:
  CMessageHead();
  virtual ~CMessageHead();

  CMessageHead(const CMessageHead& from);

  inline CMessageHead& operator=(const CMessageHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHead& default_instance();

  void Swap(CMessageHead* other);

  // implements Message ----------------------------------------------

  CMessageHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageHead& from);
  void MergeFrom(const CMessageHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MessageID = 1 [default = 0];
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageIDFieldNumber = 1;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);

  // optional int32 DstFE = 2;
  inline bool has_dstfe() const;
  inline void clear_dstfe();
  static const int kDstFEFieldNumber = 2;
  inline ::google::protobuf::int32 dstfe() const;
  inline void set_dstfe(::google::protobuf::int32 value);

  // optional int32 DstID = 3;
  inline bool has_dstid() const;
  inline void clear_dstid();
  static const int kDstIDFieldNumber = 3;
  inline ::google::protobuf::int32 dstid() const;
  inline void set_dstid(::google::protobuf::int32 value);

  // optional int64 TimeStamp = 4;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 4;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CMessageHead)
 private:
  inline void set_has_messageid();
  inline void clear_has_messageid();
  inline void set_has_dstfe();
  inline void clear_has_dstfe();
  inline void set_has_dstid();
  inline void clear_has_dstid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 messageid_;
  ::google::protobuf::int32 dstfe_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 dstid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static CMessageHead* default_instance_;
};
// -------------------------------------------------------------------

class CMessage : public ::google::protobuf::Message {
 public:
  CMessage();
  virtual ~CMessage();

  CMessage(const CMessage& from);

  inline CMessage& operator=(const CMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessage& default_instance();

  void Swap(CMessage* other);

  // implements Message ----------------------------------------------

  CMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessage& from);
  void MergeFrom(const CMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMessageHead MsgHead = 1;
  inline bool has_msghead() const;
  inline void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  inline const ::CMessageHead& msghead() const;
  inline ::CMessageHead* mutable_msghead();
  inline ::CMessageHead* release_msghead();
  inline void set_allocated_msghead(::CMessageHead* msghead);

  // optional fixed64 MsgPara = 2 [default = 0];
  inline bool has_msgpara() const;
  inline void clear_msgpara();
  static const int kMsgParaFieldNumber = 2;
  inline ::google::protobuf::uint64 msgpara() const;
  inline void set_msgpara(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMessage)
 private:
  inline void set_has_msghead();
  inline void clear_has_msghead();
  inline void set_has_msgpara();
  inline void clear_has_msgpara();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CMessageHead* msghead_;
  ::google::protobuf::uint64 msgpara_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static CMessage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPingRequest : public ::google::protobuf::Message {
 public:
  CMsgPingRequest();
  virtual ~CMsgPingRequest();

  CMsgPingRequest(const CMsgPingRequest& from);

  inline CMsgPingRequest& operator=(const CMsgPingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPingRequest& default_instance();

  void Swap(CMsgPingRequest* other);

  // implements Message ----------------------------------------------

  CMsgPingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPingRequest& from);
  void MergeFrom(const CMsgPingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgPingRequest_Msg Msg;
  static const Msg MsgID = CMsgPingRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgPingRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgPingRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgPingRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgPingRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgPingRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgPingRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgPingRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPingRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static CMsgPingRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// CMessageHead

// required int32 MessageID = 1 [default = 0];
inline bool CMessageHead::has_messageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageHead::set_has_messageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageHead::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageHead::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
inline ::google::protobuf::int32 CMessageHead::messageid() const {
  return messageid_;
}
inline void CMessageHead::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
}

// optional int32 DstFE = 2;
inline bool CMessageHead::has_dstfe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMessageHead::set_has_dstfe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMessageHead::clear_has_dstfe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMessageHead::clear_dstfe() {
  dstfe_ = 0;
  clear_has_dstfe();
}
inline ::google::protobuf::int32 CMessageHead::dstfe() const {
  return dstfe_;
}
inline void CMessageHead::set_dstfe(::google::protobuf::int32 value) {
  set_has_dstfe();
  dstfe_ = value;
}

// optional int32 DstID = 3;
inline bool CMessageHead::has_dstid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMessageHead::set_has_dstid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMessageHead::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMessageHead::clear_dstid() {
  dstid_ = 0;
  clear_has_dstid();
}
inline ::google::protobuf::int32 CMessageHead::dstid() const {
  return dstid_;
}
inline void CMessageHead::set_dstid(::google::protobuf::int32 value) {
  set_has_dstid();
  dstid_ = value;
}

// optional int64 TimeStamp = 4;
inline bool CMessageHead::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMessageHead::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMessageHead::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMessageHead::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 CMessageHead::timestamp() const {
  return timestamp_;
}
inline void CMessageHead::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// -------------------------------------------------------------------

// CMessage

// optional .CMessageHead MsgHead = 1;
inline bool CMessage::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessage::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessage::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessage::clear_msghead() {
  if (msghead_ != NULL) msghead_->::CMessageHead::Clear();
  clear_has_msghead();
}
inline const ::CMessageHead& CMessage::msghead() const {
  return msghead_ != NULL ? *msghead_ : *default_instance_->msghead_;
}
inline ::CMessageHead* CMessage::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) msghead_ = new ::CMessageHead;
  return msghead_;
}
inline ::CMessageHead* CMessage::release_msghead() {
  clear_has_msghead();
  ::CMessageHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void CMessage::set_allocated_msghead(::CMessageHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
}

// optional fixed64 MsgPara = 2 [default = 0];
inline bool CMessage::has_msgpara() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMessage::set_has_msgpara() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMessage::clear_has_msgpara() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMessage::clear_msgpara() {
  msgpara_ = GOOGLE_ULONGLONG(0);
  clear_has_msgpara();
}
inline ::google::protobuf::uint64 CMessage::msgpara() const {
  return msgpara_;
}
inline void CMessage::set_msgpara(::google::protobuf::uint64 value) {
  set_has_msgpara();
  msgpara_ = value;
}

// -------------------------------------------------------------------

// CMsgPingRequest


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgPingRequest_Msg>() {
  return ::CMsgPingRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enMessageFE>() {
  return ::enMessageFE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
