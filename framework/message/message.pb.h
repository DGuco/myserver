// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CClientMessage;
class CClientMessageDefaultTypeInternal;
extern CClientMessageDefaultTypeInternal _CClientMessage_default_instance_;
class CMessageSet;
class CMessageSetDefaultTypeInternal;
extern CMessageSetDefaultTypeInternal _CMessageSet_default_instance_;
class CMsgPingRequest;
class CMsgPingRequestDefaultTypeInternal;
extern CMsgPingRequestDefaultTypeInternal _CMsgPingRequest_default_instance_;
class CProxyHead;
class CProxyHeadDefaultTypeInternal;
extern CProxyHeadDefaultTypeInternal _CProxyHead_default_instance_;
class CSocketInfo;
class CSocketInfoDefaultTypeInternal;
extern CSocketInfoDefaultTypeInternal _CSocketInfo_default_instance_;
class CTcpHead;
class CTcpHeadDefaultTypeInternal;
extern CTcpHeadDefaultTypeInternal _CTcpHead_default_instance_;

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_message_2eproto

enum CMsgPingRequest_Msg {
  CMsgPingRequest_Msg_MsgID = 16777215
};
bool CMsgPingRequest_Msg_IsValid(int value);
const CMsgPingRequest_Msg CMsgPingRequest_Msg_Msg_MIN = CMsgPingRequest_Msg_MsgID;
const CMsgPingRequest_Msg CMsgPingRequest_Msg_Msg_MAX = CMsgPingRequest_Msg_MsgID;
const int CMsgPingRequest_Msg_Msg_ARRAYSIZE = CMsgPingRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPingRequest_Msg_descriptor();
inline const ::std::string& CMsgPingRequest_Msg_Name(CMsgPingRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPingRequest_Msg_descriptor(), value);
}
inline bool CMsgPingRequest_Msg_Parse(
    const ::std::string& name, CMsgPingRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPingRequest_Msg>(
    CMsgPingRequest_Msg_descriptor(), name, value);
}
enum enMessageFE {
  FE_TIMER = 0,
  FE_CLIENT = 1,
  FE_GAMESERVER = 2,
  FE_LOGINSERVER = 3,
  FE_DBSERVER = 4,
  FE_PROXYSERVER = 5,
  FE_WORLDSERVER = 6,
  FE_WEBSERVER = 7,
  FE_OFFLINESERVER = 8,
  FE_CHECKSERVER = 9,
  FE_HALLSERVER = 10,
  FE_GATESERVER = 11,
  FE_ROOMSERVER = 12
};
bool enMessageFE_IsValid(int value);
const enMessageFE enMessageFE_MIN = FE_TIMER;
const enMessageFE enMessageFE_MAX = FE_ROOMSERVER;
const int enMessageFE_ARRAYSIZE = enMessageFE_MAX + 1;

const ::google::protobuf::EnumDescriptor* enMessageFE_descriptor();
inline const ::std::string& enMessageFE_Name(enMessageFE value) {
  return ::google::protobuf::internal::NameOfEnum(
    enMessageFE_descriptor(), value);
}
inline bool enMessageFE_Parse(
    const ::std::string& name, enMessageFE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enMessageFE>(
    enMessageFE_descriptor(), name, value);
}
enum EMessageCmd {
  MESS_NULL = 0,
  MESS_REGIST = 1,
  MESS_KEEPALIVE = 2
};
bool EMessageCmd_IsValid(int value);
const EMessageCmd EMessageCmd_MIN = MESS_NULL;
const EMessageCmd EMessageCmd_MAX = MESS_KEEPALIVE;
const int EMessageCmd_ARRAYSIZE = EMessageCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMessageCmd_descriptor();
inline const ::std::string& EMessageCmd_Name(EMessageCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMessageCmd_descriptor(), value);
}
inline bool EMessageCmd_Parse(
    const ::std::string& name, EMessageCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMessageCmd>(
    EMessageCmd_descriptor(), name, value);
}
enum EProxyCmd {
  CMD_NULL = 0,
  CMD_REGIST = 1,
  CMD_KEEPALIVE = 2
};
bool EProxyCmd_IsValid(int value);
const EProxyCmd EProxyCmd_MIN = CMD_NULL;
const EProxyCmd EProxyCmd_MAX = CMD_KEEPALIVE;
const int EProxyCmd_ARRAYSIZE = EProxyCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* EProxyCmd_descriptor();
inline const ::std::string& EProxyCmd_Name(EProxyCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    EProxyCmd_descriptor(), value);
}
inline bool EProxyCmd_Parse(
    const ::std::string& name, EProxyCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EProxyCmd>(
    EProxyCmd_descriptor(), name, value);
}
// ===================================================================

class CSocketInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSocketInfo) */ {
 public:
  CSocketInfo();
  virtual ~CSocketInfo();

  CSocketInfo(const CSocketInfo& from);

  inline CSocketInfo& operator=(const CSocketInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSocketInfo& default_instance();

  static inline const CSocketInfo* internal_default_instance() {
    return reinterpret_cast<const CSocketInfo*>(
               &_CSocketInfo_default_instance_);
  }

  void Swap(CSocketInfo* other);

  // implements Message ----------------------------------------------

  inline CSocketInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CSocketInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSocketInfo& from);
  void MergeFrom(const CSocketInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSocketInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SrcIP = 1;
  bool has_srcip() const;
  void clear_srcip();
  static const int kSrcIPFieldNumber = 1;
  ::google::protobuf::int32 srcip() const;
  void set_srcip(::google::protobuf::int32 value);

  // optional int32 SrcPort = 2;
  bool has_srcport() const;
  void clear_srcport();
  static const int kSrcPortFieldNumber = 2;
  ::google::protobuf::int32 srcport() const;
  void set_srcport(::google::protobuf::int32 value);

  // optional int64 CreateTime = 4;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 4;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // optional int32 SocketID = 3;
  bool has_socketid() const;
  void clear_socketid();
  static const int kSocketIDFieldNumber = 3;
  ::google::protobuf::int32 socketid() const;
  void set_socketid(::google::protobuf::int32 value);

  // optional int32 State = 5;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSocketInfo)
 private:
  void set_has_srcip();
  void clear_has_srcip();
  void set_has_srcport();
  void clear_has_srcport();
  void set_has_socketid();
  void clear_has_socketid();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 srcip_;
  ::google::protobuf::int32 srcport_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int32 socketid_;
  ::google::protobuf::int32 state_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CTcpHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CTcpHead) */ {
 public:
  CTcpHead();
  virtual ~CTcpHead();

  CTcpHead(const CTcpHead& from);

  inline CTcpHead& operator=(const CTcpHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTcpHead& default_instance();

  static inline const CTcpHead* internal_default_instance() {
    return reinterpret_cast<const CTcpHead*>(
               &_CTcpHead_default_instance_);
  }

  void Swap(CTcpHead* other);

  // implements Message ----------------------------------------------

  inline CTcpHead* New() const PROTOBUF_FINAL { return New(NULL); }

  CTcpHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CTcpHead& from);
  void MergeFrom(const CTcpHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CTcpHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSocketInfo SocketInfos = 3;
  int socketinfos_size() const;
  void clear_socketinfos();
  static const int kSocketInfosFieldNumber = 3;
  const ::CSocketInfo& socketinfos(int index) const;
  ::CSocketInfo* mutable_socketinfos(int index);
  ::CSocketInfo* add_socketinfos();
  ::google::protobuf::RepeatedPtrField< ::CSocketInfo >*
      mutable_socketinfos();
  const ::google::protobuf::RepeatedPtrField< ::CSocketInfo >&
      socketinfos() const;

  // optional int64 TimeStamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // optional .EMessageCmd OpFlag = 1 [default = MESS_NULL];
  bool has_opflag() const;
  void clear_opflag();
  static const int kOpFlagFieldNumber = 1;
  ::EMessageCmd opflag() const;
  void set_opflag(::EMessageCmd value);

  // @@protoc_insertion_point(class_scope:CTcpHead)
 private:
  void set_has_opflag();
  void clear_has_opflag();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSocketInfo > socketinfos_;
  ::google::protobuf::int64 timestamp_;
  int opflag_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMessageSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMessageSet) */ {
 public:
  CMessageSet();
  virtual ~CMessageSet();

  CMessageSet(const CMessageSet& from);

  inline CMessageSet& operator=(const CMessageSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSet& default_instance();

  static inline const CMessageSet* internal_default_instance() {
    return reinterpret_cast<const CMessageSet*>(
               &_CMessageSet_default_instance_);
  }

  void Swap(CMessageSet* other);

  // implements Message ----------------------------------------------

  inline CMessageSet* New() const PROTOBUF_FINAL { return New(NULL); }

  CMessageSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessageSet& from);
  void MergeFrom(const CMessageSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessageSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes MsgParas = 2;
  int msgparas_size() const;
  void clear_msgparas();
  static const int kMsgParasFieldNumber = 2;
  const ::std::string& msgparas(int index) const;
  ::std::string* mutable_msgparas(int index);
  void set_msgparas(int index, const ::std::string& value);
  void set_msgparas(int index, const char* value);
  void set_msgparas(int index, const void* value, size_t size);
  ::std::string* add_msgparas();
  void add_msgparas(const ::std::string& value);
  void add_msgparas(const char* value);
  void add_msgparas(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& msgparas() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_msgparas();

  // optional .CTcpHead MsgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::CTcpHead& msghead() const;
  ::CTcpHead* mutable_msghead();
  ::CTcpHead* release_msghead();
  void set_allocated_msghead(::CTcpHead* msghead);

  // @@protoc_insertion_point(class_scope:CMessageSet)
 private:
  void set_has_msghead();
  void clear_has_msghead();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> msgparas_;
  ::CTcpHead* msghead_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CClientMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CClientMessage) */ {
 public:
  CClientMessage();
  virtual ~CClientMessage();

  CClientMessage(const CClientMessage& from);

  inline CClientMessage& operator=(const CClientMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CClientMessage& default_instance();

  static inline const CClientMessage* internal_default_instance() {
    return reinterpret_cast<const CClientMessage*>(
               &_CClientMessage_default_instance_);
  }

  void Swap(CClientMessage* other);

  // implements Message ----------------------------------------------

  inline CClientMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CClientMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CClientMessage& from);
  void MergeFrom(const CClientMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CClientMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes MsgParas = 3;
  bool has_msgparas() const;
  void clear_msgparas();
  static const int kMsgParasFieldNumber = 3;
  const ::std::string& msgparas() const;
  void set_msgparas(const ::std::string& value);
  #if LANG_CXX11
  void set_msgparas(::std::string&& value);
  #endif
  void set_msgparas(const char* value);
  void set_msgparas(const void* value, size_t size);
  ::std::string* mutable_msgparas();
  ::std::string* release_msgparas();
  void set_allocated_msgparas(::std::string* msgparas);

  // required int32 Cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // required int32 Seq = 2;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  ::google::protobuf::int32 seq() const;
  void set_seq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CClientMessage)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_seq();
  void clear_has_seq();
  void set_has_msgparas();
  void clear_has_msgparas();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msgparas_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 seq_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgPingRequest) */ {
 public:
  CMsgPingRequest();
  virtual ~CMsgPingRequest();

  CMsgPingRequest(const CMsgPingRequest& from);

  inline CMsgPingRequest& operator=(const CMsgPingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPingRequest& default_instance();

  static inline const CMsgPingRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgPingRequest*>(
               &_CMsgPingRequest_default_instance_);
  }

  void Swap(CMsgPingRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgPingRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPingRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPingRequest& from);
  void MergeFrom(const CMsgPingRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgPingRequest_Msg Msg;
  static const Msg MsgID =
    CMsgPingRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgPingRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgPingRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgPingRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgPingRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgPingRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgPingRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgPingRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CProxyHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CProxyHead) */ {
 public:
  CProxyHead();
  virtual ~CProxyHead();

  CProxyHead(const CProxyHead& from);

  inline CProxyHead& operator=(const CProxyHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CProxyHead& default_instance();

  static inline const CProxyHead* internal_default_instance() {
    return reinterpret_cast<const CProxyHead*>(
               &_CProxyHead_default_instance_);
  }

  void Swap(CProxyHead* other);

  // implements Message ----------------------------------------------

  inline CProxyHead* New() const PROTOBUF_FINAL { return New(NULL); }

  CProxyHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CProxyHead& from);
  void MergeFrom(const CProxyHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CProxyHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 SrcFE = 1;
  bool has_srcfe() const;
  void clear_srcfe();
  static const int kSrcFEFieldNumber = 1;
  ::google::protobuf::uint32 srcfe() const;
  void set_srcfe(::google::protobuf::uint32 value);

  // required uint32 SrcID = 2;
  bool has_srcid() const;
  void clear_srcid();
  static const int kSrcIDFieldNumber = 2;
  ::google::protobuf::uint32 srcid() const;
  void set_srcid(::google::protobuf::uint32 value);

  // required uint32 DstFE = 3;
  bool has_dstfe() const;
  void clear_dstfe();
  static const int kDstFEFieldNumber = 3;
  ::google::protobuf::uint32 dstfe() const;
  void set_dstfe(::google::protobuf::uint32 value);

  // required uint32 DstID = 4;
  bool has_dstid() const;
  void clear_dstid();
  static const int kDstIDFieldNumber = 4;
  ::google::protobuf::uint32 dstid() const;
  void set_dstid(::google::protobuf::uint32 value);

  // required uint64 TimeStamp = 6;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 6;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional .EMessageCmd OpFlag = 5 [default = MESS_NULL];
  bool has_opflag() const;
  void clear_opflag();
  static const int kOpFlagFieldNumber = 5;
  ::EMessageCmd opflag() const;
  void set_opflag(::EMessageCmd value);

  // @@protoc_insertion_point(class_scope:CProxyHead)
 private:
  void set_has_srcfe();
  void clear_has_srcfe();
  void set_has_srcid();
  void clear_has_srcid();
  void set_has_dstfe();
  void clear_has_dstfe();
  void set_has_dstid();
  void clear_has_dstid();
  void set_has_opflag();
  void clear_has_opflag();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 srcfe_;
  ::google::protobuf::uint32 srcid_;
  ::google::protobuf::uint32 dstfe_;
  ::google::protobuf::uint32 dstid_;
  ::google::protobuf::uint64 timestamp_;
  int opflag_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CSocketInfo

// optional int32 SrcIP = 1;
inline bool CSocketInfo::has_srcip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSocketInfo::set_has_srcip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSocketInfo::clear_has_srcip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSocketInfo::clear_srcip() {
  srcip_ = 0;
  clear_has_srcip();
}
inline ::google::protobuf::int32 CSocketInfo::srcip() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.SrcIP)
  return srcip_;
}
inline void CSocketInfo::set_srcip(::google::protobuf::int32 value) {
  set_has_srcip();
  srcip_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.SrcIP)
}

// optional int32 SrcPort = 2;
inline bool CSocketInfo::has_srcport() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSocketInfo::set_has_srcport() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSocketInfo::clear_has_srcport() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSocketInfo::clear_srcport() {
  srcport_ = 0;
  clear_has_srcport();
}
inline ::google::protobuf::int32 CSocketInfo::srcport() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.SrcPort)
  return srcport_;
}
inline void CSocketInfo::set_srcport(::google::protobuf::int32 value) {
  set_has_srcport();
  srcport_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.SrcPort)
}

// optional int32 SocketID = 3;
inline bool CSocketInfo::has_socketid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSocketInfo::set_has_socketid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSocketInfo::clear_has_socketid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSocketInfo::clear_socketid() {
  socketid_ = 0;
  clear_has_socketid();
}
inline ::google::protobuf::int32 CSocketInfo::socketid() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.SocketID)
  return socketid_;
}
inline void CSocketInfo::set_socketid(::google::protobuf::int32 value) {
  set_has_socketid();
  socketid_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.SocketID)
}

// optional int64 CreateTime = 4;
inline bool CSocketInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSocketInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSocketInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSocketInfo::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::int64 CSocketInfo::createtime() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.CreateTime)
  return createtime_;
}
inline void CSocketInfo::set_createtime(::google::protobuf::int64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.CreateTime)
}

// optional int32 State = 5;
inline bool CSocketInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSocketInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSocketInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSocketInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CSocketInfo::state() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.State)
  return state_;
}
inline void CSocketInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.State)
}

// -------------------------------------------------------------------

// CTcpHead

// optional .EMessageCmd OpFlag = 1 [default = MESS_NULL];
inline bool CTcpHead::has_opflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTcpHead::set_has_opflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTcpHead::clear_has_opflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTcpHead::clear_opflag() {
  opflag_ = 0;
  clear_has_opflag();
}
inline ::EMessageCmd CTcpHead::opflag() const {
  // @@protoc_insertion_point(field_get:CTcpHead.OpFlag)
  return static_cast< ::EMessageCmd >(opflag_);
}
inline void CTcpHead::set_opflag(::EMessageCmd value) {
  assert(::EMessageCmd_IsValid(value));
  set_has_opflag();
  opflag_ = value;
  // @@protoc_insertion_point(field_set:CTcpHead.OpFlag)
}

// optional int64 TimeStamp = 2;
inline bool CTcpHead::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTcpHead::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTcpHead::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTcpHead::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 CTcpHead::timestamp() const {
  // @@protoc_insertion_point(field_get:CTcpHead.TimeStamp)
  return timestamp_;
}
inline void CTcpHead::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CTcpHead.TimeStamp)
}

// repeated .CSocketInfo SocketInfos = 3;
inline int CTcpHead::socketinfos_size() const {
  return socketinfos_.size();
}
inline void CTcpHead::clear_socketinfos() {
  socketinfos_.Clear();
}
inline const ::CSocketInfo& CTcpHead::socketinfos(int index) const {
  // @@protoc_insertion_point(field_get:CTcpHead.SocketInfos)
  return socketinfos_.Get(index);
}
inline ::CSocketInfo* CTcpHead::mutable_socketinfos(int index) {
  // @@protoc_insertion_point(field_mutable:CTcpHead.SocketInfos)
  return socketinfos_.Mutable(index);
}
inline ::CSocketInfo* CTcpHead::add_socketinfos() {
  // @@protoc_insertion_point(field_add:CTcpHead.SocketInfos)
  return socketinfos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSocketInfo >*
CTcpHead::mutable_socketinfos() {
  // @@protoc_insertion_point(field_mutable_list:CTcpHead.SocketInfos)
  return &socketinfos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSocketInfo >&
CTcpHead::socketinfos() const {
  // @@protoc_insertion_point(field_list:CTcpHead.SocketInfos)
  return socketinfos_;
}

// -------------------------------------------------------------------

// CMessageSet

// optional .CTcpHead MsgHead = 1;
inline bool CMessageSet::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessageSet::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessageSet::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessageSet::clear_msghead() {
  if (msghead_ != NULL) msghead_->::CTcpHead::Clear();
  clear_has_msghead();
}
inline const ::CTcpHead& CMessageSet::msghead() const {
  // @@protoc_insertion_point(field_get:CMessageSet.MsgHead)
  return msghead_ != NULL ? *msghead_
                         : *::CTcpHead::internal_default_instance();
}
inline ::CTcpHead* CMessageSet::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::CTcpHead;
  }
  // @@protoc_insertion_point(field_mutable:CMessageSet.MsgHead)
  return msghead_;
}
inline ::CTcpHead* CMessageSet::release_msghead() {
  // @@protoc_insertion_point(field_release:CMessageSet.MsgHead)
  clear_has_msghead();
  ::CTcpHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void CMessageSet::set_allocated_msghead(::CTcpHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:CMessageSet.MsgHead)
}

// repeated bytes MsgParas = 2;
inline int CMessageSet::msgparas_size() const {
  return msgparas_.size();
}
inline void CMessageSet::clear_msgparas() {
  msgparas_.Clear();
}
inline const ::std::string& CMessageSet::msgparas(int index) const {
  // @@protoc_insertion_point(field_get:CMessageSet.MsgParas)
  return msgparas_.Get(index);
}
inline ::std::string* CMessageSet::mutable_msgparas(int index) {
  // @@protoc_insertion_point(field_mutable:CMessageSet.MsgParas)
  return msgparas_.Mutable(index);
}
inline void CMessageSet::set_msgparas(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMessageSet.MsgParas)
  msgparas_.Mutable(index)->assign(value);
}
inline void CMessageSet::set_msgparas(int index, const char* value) {
  msgparas_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMessageSet.MsgParas)
}
inline void CMessageSet::set_msgparas(int index, const void* value, size_t size) {
  msgparas_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMessageSet.MsgParas)
}
inline ::std::string* CMessageSet::add_msgparas() {
  // @@protoc_insertion_point(field_add_mutable:CMessageSet.MsgParas)
  return msgparas_.Add();
}
inline void CMessageSet::add_msgparas(const ::std::string& value) {
  msgparas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMessageSet.MsgParas)
}
inline void CMessageSet::add_msgparas(const char* value) {
  msgparas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMessageSet.MsgParas)
}
inline void CMessageSet::add_msgparas(const void* value, size_t size) {
  msgparas_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMessageSet.MsgParas)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageSet::msgparas() const {
  // @@protoc_insertion_point(field_list:CMessageSet.MsgParas)
  return msgparas_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageSet::mutable_msgparas() {
  // @@protoc_insertion_point(field_mutable_list:CMessageSet.MsgParas)
  return &msgparas_;
}

// -------------------------------------------------------------------

// CClientMessage

// required int32 Cmd = 1;
inline bool CClientMessage::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CClientMessage::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CClientMessage::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CClientMessage::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 CClientMessage::cmd() const {
  // @@protoc_insertion_point(field_get:CClientMessage.Cmd)
  return cmd_;
}
inline void CClientMessage::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:CClientMessage.Cmd)
}

// required int32 Seq = 2;
inline bool CClientMessage::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CClientMessage::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CClientMessage::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CClientMessage::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 CClientMessage::seq() const {
  // @@protoc_insertion_point(field_get:CClientMessage.Seq)
  return seq_;
}
inline void CClientMessage::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:CClientMessage.Seq)
}

// required bytes MsgParas = 3;
inline bool CClientMessage::has_msgparas() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClientMessage::set_has_msgparas() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CClientMessage::clear_has_msgparas() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CClientMessage::clear_msgparas() {
  msgparas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgparas();
}
inline const ::std::string& CClientMessage::msgparas() const {
  // @@protoc_insertion_point(field_get:CClientMessage.MsgParas)
  return msgparas_.GetNoArena();
}
inline void CClientMessage::set_msgparas(const ::std::string& value) {
  set_has_msgparas();
  msgparas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CClientMessage.MsgParas)
}
#if LANG_CXX11
inline void CClientMessage::set_msgparas(::std::string&& value) {
  set_has_msgparas();
  msgparas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CClientMessage.MsgParas)
}
#endif
inline void CClientMessage::set_msgparas(const char* value) {
  set_has_msgparas();
  msgparas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CClientMessage.MsgParas)
}
inline void CClientMessage::set_msgparas(const void* value, size_t size) {
  set_has_msgparas();
  msgparas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CClientMessage.MsgParas)
}
inline ::std::string* CClientMessage::mutable_msgparas() {
  set_has_msgparas();
  // @@protoc_insertion_point(field_mutable:CClientMessage.MsgParas)
  return msgparas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CClientMessage::release_msgparas() {
  // @@protoc_insertion_point(field_release:CClientMessage.MsgParas)
  clear_has_msgparas();
  return msgparas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CClientMessage::set_allocated_msgparas(::std::string* msgparas) {
  if (msgparas != NULL) {
    set_has_msgparas();
  } else {
    clear_has_msgparas();
  }
  msgparas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgparas);
  // @@protoc_insertion_point(field_set_allocated:CClientMessage.MsgParas)
}

// -------------------------------------------------------------------

// CMsgPingRequest

// -------------------------------------------------------------------

// CProxyHead

// required uint32 SrcFE = 1;
inline bool CProxyHead::has_srcfe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CProxyHead::set_has_srcfe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CProxyHead::clear_has_srcfe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CProxyHead::clear_srcfe() {
  srcfe_ = 0u;
  clear_has_srcfe();
}
inline ::google::protobuf::uint32 CProxyHead::srcfe() const {
  // @@protoc_insertion_point(field_get:CProxyHead.SrcFE)
  return srcfe_;
}
inline void CProxyHead::set_srcfe(::google::protobuf::uint32 value) {
  set_has_srcfe();
  srcfe_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.SrcFE)
}

// required uint32 SrcID = 2;
inline bool CProxyHead::has_srcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CProxyHead::set_has_srcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CProxyHead::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CProxyHead::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 CProxyHead::srcid() const {
  // @@protoc_insertion_point(field_get:CProxyHead.SrcID)
  return srcid_;
}
inline void CProxyHead::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.SrcID)
}

// required uint32 DstFE = 3;
inline bool CProxyHead::has_dstfe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CProxyHead::set_has_dstfe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CProxyHead::clear_has_dstfe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CProxyHead::clear_dstfe() {
  dstfe_ = 0u;
  clear_has_dstfe();
}
inline ::google::protobuf::uint32 CProxyHead::dstfe() const {
  // @@protoc_insertion_point(field_get:CProxyHead.DstFE)
  return dstfe_;
}
inline void CProxyHead::set_dstfe(::google::protobuf::uint32 value) {
  set_has_dstfe();
  dstfe_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.DstFE)
}

// required uint32 DstID = 4;
inline bool CProxyHead::has_dstid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CProxyHead::set_has_dstid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CProxyHead::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CProxyHead::clear_dstid() {
  dstid_ = 0u;
  clear_has_dstid();
}
inline ::google::protobuf::uint32 CProxyHead::dstid() const {
  // @@protoc_insertion_point(field_get:CProxyHead.DstID)
  return dstid_;
}
inline void CProxyHead::set_dstid(::google::protobuf::uint32 value) {
  set_has_dstid();
  dstid_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.DstID)
}

// optional .EMessageCmd OpFlag = 5 [default = MESS_NULL];
inline bool CProxyHead::has_opflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CProxyHead::set_has_opflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CProxyHead::clear_has_opflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CProxyHead::clear_opflag() {
  opflag_ = 0;
  clear_has_opflag();
}
inline ::EMessageCmd CProxyHead::opflag() const {
  // @@protoc_insertion_point(field_get:CProxyHead.OpFlag)
  return static_cast< ::EMessageCmd >(opflag_);
}
inline void CProxyHead::set_opflag(::EMessageCmd value) {
  assert(::EMessageCmd_IsValid(value));
  set_has_opflag();
  opflag_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.OpFlag)
}

// required uint64 TimeStamp = 6;
inline bool CProxyHead::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CProxyHead::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CProxyHead::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CProxyHead::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 CProxyHead::timestamp() const {
  // @@protoc_insertion_point(field_get:CProxyHead.TimeStamp)
  return timestamp_;
}
inline void CProxyHead::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CProxyHead.TimeStamp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgPingRequest_Msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgPingRequest_Msg>() {
  return ::CMsgPingRequest_Msg_descriptor();
}
template <> struct is_proto_enum< ::enMessageFE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enMessageFE>() {
  return ::enMessageFE_descriptor();
}
template <> struct is_proto_enum< ::EMessageCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EMessageCmd>() {
  return ::EMessageCmd_descriptor();
}
template <> struct is_proto_enum< ::EProxyCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EProxyCmd>() {
  return ::EProxyCmd_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
