// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CMessage;
class CMessageDefaultTypeInternal;
extern CMessageDefaultTypeInternal _CMessage_default_instance_;
class CMsgPingRequest;
class CMsgPingRequestDefaultTypeInternal;
extern CMsgPingRequestDefaultTypeInternal _CMsgPingRequest_default_instance_;
class CProxyMessage;
class CProxyMessageDefaultTypeInternal;
extern CProxyMessageDefaultTypeInternal _CProxyMessage_default_instance_;
class CServerMessage;
class CServerMessageDefaultTypeInternal;
extern CServerMessageDefaultTypeInternal _CServerMessage_default_instance_;
class CSocketInfo;
class CSocketInfoDefaultTypeInternal;
extern CSocketInfoDefaultTypeInternal _CSocketInfo_default_instance_;
class MesHead;
class MesHeadDefaultTypeInternal;
extern MesHeadDefaultTypeInternal _MesHead_default_instance_;
class P2SHead;
class P2SHeadDefaultTypeInternal;
extern P2SHeadDefaultTypeInternal _P2SHead_default_instance_;
class S2PHead;
class S2PHeadDefaultTypeInternal;
extern S2PHeadDefaultTypeInternal _S2PHead_default_instance_;

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_message_2eproto

enum CMsgPingRequest_Msg {
  CMsgPingRequest_Msg_MsgID = 16777215
};
bool CMsgPingRequest_Msg_IsValid(int value);
const CMsgPingRequest_Msg CMsgPingRequest_Msg_Msg_MIN = CMsgPingRequest_Msg_MsgID;
const CMsgPingRequest_Msg CMsgPingRequest_Msg_Msg_MAX = CMsgPingRequest_Msg_MsgID;
const int CMsgPingRequest_Msg_Msg_ARRAYSIZE = CMsgPingRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPingRequest_Msg_descriptor();
inline const ::std::string& CMsgPingRequest_Msg_Name(CMsgPingRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPingRequest_Msg_descriptor(), value);
}
inline bool CMsgPingRequest_Msg_Parse(
    const ::std::string& name, CMsgPingRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPingRequest_Msg>(
    CMsgPingRequest_Msg_descriptor(), name, value);
}
enum enMessageFE {
  FE_TIMER = 0,
  FE_CLIENT = 1,
  FE_GAMESERVER = 2,
  FE_LOGINSERVER = 3,
  FE_DBSERVER = 4,
  FE_PROXYSERVER = 5,
  FE_WORLDSERVER = 6,
  FE_WEBSERVER = 7,
  FE_OFFLINESERVER = 8,
  FE_CHECKSERVER = 9,
  FE_HALLSERVER = 10,
  FE_GATESERVER = 11,
  FE_ROOMSERVER = 12
};
bool enMessageFE_IsValid(int value);
const enMessageFE enMessageFE_MIN = FE_TIMER;
const enMessageFE enMessageFE_MAX = FE_ROOMSERVER;
const int enMessageFE_ARRAYSIZE = enMessageFE_MAX + 1;

const ::google::protobuf::EnumDescriptor* enMessageFE_descriptor();
inline const ::std::string& enMessageFE_Name(enMessageFE value) {
  return ::google::protobuf::internal::NameOfEnum(
    enMessageFE_descriptor(), value);
}
inline bool enMessageFE_Parse(
    const ::std::string& name, enMessageFE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enMessageFE>(
    enMessageFE_descriptor(), name, value);
}
enum EMessageCmd {
  MESS_NULL = 0,
  MESS_REGIST = 1,
  MESS_KEEPALIVE = 2
};
bool EMessageCmd_IsValid(int value);
const EMessageCmd EMessageCmd_MIN = MESS_NULL;
const EMessageCmd EMessageCmd_MAX = MESS_KEEPALIVE;
const int EMessageCmd_ARRAYSIZE = EMessageCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMessageCmd_descriptor();
inline const ::std::string& EMessageCmd_Name(EMessageCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMessageCmd_descriptor(), value);
}
inline bool EMessageCmd_Parse(
    const ::std::string& name, EMessageCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMessageCmd>(
    EMessageCmd_descriptor(), name, value);
}
// ===================================================================

class CSocketInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSocketInfo) */ {
 public:
  CSocketInfo();
  virtual ~CSocketInfo();

  CSocketInfo(const CSocketInfo& from);

  inline CSocketInfo& operator=(const CSocketInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSocketInfo& default_instance();

  static inline const CSocketInfo* internal_default_instance() {
    return reinterpret_cast<const CSocketInfo*>(
               &_CSocketInfo_default_instance_);
  }

  void Swap(CSocketInfo* other);

  // implements Message ----------------------------------------------

  inline CSocketInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CSocketInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSocketInfo& from);
  void MergeFrom(const CSocketInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSocketInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 CreateTime = 2;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 2;
  ::google::protobuf::int64 createtime() const;
  void set_createtime(::google::protobuf::int64 value);

  // optional int32 SocketID = 1;
  bool has_socketid() const;
  void clear_socketid();
  static const int kSocketIDFieldNumber = 1;
  ::google::protobuf::int32 socketid() const;
  void set_socketid(::google::protobuf::int32 value);

  // optional int32 State = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CSocketInfo)
 private:
  void set_has_socketid();
  void clear_has_socketid();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int32 socketid_;
  ::google::protobuf::int32 state_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MesHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MesHead) */ {
 public:
  MesHead();
  virtual ~MesHead();

  MesHead(const MesHead& from);

  inline MesHead& operator=(const MesHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MesHead& default_instance();

  static inline const MesHead* internal_default_instance() {
    return reinterpret_cast<const MesHead*>(
               &_MesHead_default_instance_);
  }

  void Swap(MesHead* other);

  // implements Message ----------------------------------------------

  inline MesHead* New() const PROTOBUF_FINAL { return New(NULL); }

  MesHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MesHead& from);
  void MergeFrom(const MesHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MesHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSocketInfo SocketInfos = 1;
  int socketinfos_size() const;
  void clear_socketinfos();
  static const int kSocketInfosFieldNumber = 1;
  const ::CSocketInfo& socketinfos(int index) const;
  ::CSocketInfo* mutable_socketinfos(int index);
  ::CSocketInfo* add_socketinfos();
  ::google::protobuf::RepeatedPtrField< ::CSocketInfo >*
      mutable_socketinfos();
  const ::google::protobuf::RepeatedPtrField< ::CSocketInfo >&
      socketinfos() const;

  // required int32 Cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // required int32 Seq = 3;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 3;
  ::google::protobuf::int32 seq() const;
  void set_seq(::google::protobuf::int32 value);

  // required bool isEncry = 4;
  bool has_isencry() const;
  void clear_isencry();
  static const int kIsEncryFieldNumber = 4;
  bool isencry() const;
  void set_isencry(bool value);

  // @@protoc_insertion_point(class_scope:MesHead)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_seq();
  void clear_has_seq();
  void set_has_isencry();
  void clear_has_isencry();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSocketInfo > socketinfos_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 seq_;
  bool isencry_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMessage) */ {
 public:
  CMessage();
  virtual ~CMessage();

  CMessage(const CMessage& from);

  inline CMessage& operator=(const CMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessage& default_instance();

  static inline const CMessage* internal_default_instance() {
    return reinterpret_cast<const CMessage*>(
               &_CMessage_default_instance_);
  }

  void Swap(CMessage* other);

  // implements Message ----------------------------------------------

  inline CMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMessage& from);
  void MergeFrom(const CMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MesHead MsgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::MesHead& msghead() const;
  ::MesHead* mutable_msghead();
  ::MesHead* release_msghead();
  void set_allocated_msghead(::MesHead* msghead);

  // optional fixed64 MsgPara = 2 [default = 0];
  bool has_msgpara() const;
  void clear_msgpara();
  static const int kMsgParaFieldNumber = 2;
  ::google::protobuf::uint64 msgpara() const;
  void set_msgpara(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMessage)
 private:
  void set_has_msghead();
  void clear_has_msghead();
  void set_has_msgpara();
  void clear_has_msgpara();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MesHead* msghead_;
  ::google::protobuf::uint64 msgpara_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2PHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S2PHead) */ {
 public:
  S2PHead();
  virtual ~S2PHead();

  S2PHead(const S2PHead& from);

  inline S2PHead& operator=(const S2PHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2PHead& default_instance();

  static inline const S2PHead* internal_default_instance() {
    return reinterpret_cast<const S2PHead*>(
               &_S2PHead_default_instance_);
  }

  void Swap(S2PHead* other);

  // implements Message ----------------------------------------------

  inline S2PHead* New() const PROTOBUF_FINAL { return New(NULL); }

  S2PHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2PHead& from);
  void MergeFrom(const S2PHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2PHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 SrcFE = 1;
  bool has_srcfe() const;
  void clear_srcfe();
  static const int kSrcFEFieldNumber = 1;
  ::google::protobuf::uint32 srcfe() const;
  void set_srcfe(::google::protobuf::uint32 value);

  // required uint32 SrcID = 2;
  bool has_srcid() const;
  void clear_srcid();
  static const int kSrcIDFieldNumber = 2;
  ::google::protobuf::uint32 srcid() const;
  void set_srcid(::google::protobuf::uint32 value);

  // required uint32 DstFE = 3;
  bool has_dstfe() const;
  void clear_dstfe();
  static const int kDstFEFieldNumber = 3;
  ::google::protobuf::uint32 dstfe() const;
  void set_dstfe(::google::protobuf::uint32 value);

  // required uint32 DstID = 4;
  bool has_dstid() const;
  void clear_dstid();
  static const int kDstIDFieldNumber = 4;
  ::google::protobuf::uint32 dstid() const;
  void set_dstid(::google::protobuf::uint32 value);

  // required uint64 TimeStamp = 6;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 6;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // optional .EMessageCmd OpFlag = 5 [default = MESS_NULL];
  bool has_opflag() const;
  void clear_opflag();
  static const int kOpFlagFieldNumber = 5;
  ::EMessageCmd opflag() const;
  void set_opflag(::EMessageCmd value);

  // @@protoc_insertion_point(class_scope:S2PHead)
 private:
  void set_has_srcfe();
  void clear_has_srcfe();
  void set_has_srcid();
  void clear_has_srcid();
  void set_has_dstfe();
  void clear_has_dstfe();
  void set_has_dstid();
  void clear_has_dstid();
  void set_has_opflag();
  void clear_has_opflag();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 srcfe_;
  ::google::protobuf::uint32 srcid_;
  ::google::protobuf::uint32 dstfe_;
  ::google::protobuf::uint32 dstid_;
  ::google::protobuf::uint64 timestamp_;
  int opflag_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CProxyMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CProxyMessage) */ {
 public:
  CProxyMessage();
  virtual ~CProxyMessage();

  CProxyMessage(const CProxyMessage& from);

  inline CProxyMessage& operator=(const CProxyMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CProxyMessage& default_instance();

  static inline const CProxyMessage* internal_default_instance() {
    return reinterpret_cast<const CProxyMessage*>(
               &_CProxyMessage_default_instance_);
  }

  void Swap(CProxyMessage* other);

  // implements Message ----------------------------------------------

  inline CProxyMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CProxyMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CProxyMessage& from);
  void MergeFrom(const CProxyMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CProxyMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .S2PHead MsgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::S2PHead& msghead() const;
  ::S2PHead* mutable_msghead();
  ::S2PHead* release_msghead();
  void set_allocated_msghead(::S2PHead* msghead);

  // @@protoc_insertion_point(class_scope:CProxyMessage)
 private:
  void set_has_msghead();
  void clear_has_msghead();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::S2PHead* msghead_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P2SHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:P2SHead) */ {
 public:
  P2SHead();
  virtual ~P2SHead();

  P2SHead(const P2SHead& from);

  inline P2SHead& operator=(const P2SHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P2SHead& default_instance();

  static inline const P2SHead* internal_default_instance() {
    return reinterpret_cast<const P2SHead*>(
               &_P2SHead_default_instance_);
  }

  void Swap(P2SHead* other);

  // implements Message ----------------------------------------------

  inline P2SHead* New() const PROTOBUF_FINAL { return New(NULL); }

  P2SHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P2SHead& from);
  void MergeFrom(const P2SHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P2SHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:P2SHead)
 private:
  void set_has_cmd();
  void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cmd_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CServerMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CServerMessage) */ {
 public:
  CServerMessage();
  virtual ~CServerMessage();

  CServerMessage(const CServerMessage& from);

  inline CServerMessage& operator=(const CServerMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CServerMessage& default_instance();

  static inline const CServerMessage* internal_default_instance() {
    return reinterpret_cast<const CServerMessage*>(
               &_CServerMessage_default_instance_);
  }

  void Swap(CServerMessage* other);

  // implements Message ----------------------------------------------

  inline CServerMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CServerMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CServerMessage& from);
  void MergeFrom(const CServerMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CServerMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .P2SHead MsgHead = 1;
  bool has_msghead() const;
  void clear_msghead();
  static const int kMsgHeadFieldNumber = 1;
  const ::P2SHead& msghead() const;
  ::P2SHead* mutable_msghead();
  ::P2SHead* release_msghead();
  void set_allocated_msghead(::P2SHead* msghead);

  // @@protoc_insertion_point(class_scope:CServerMessage)
 private:
  void set_has_msghead();
  void clear_has_msghead();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::P2SHead* msghead_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgPingRequest) */ {
 public:
  CMsgPingRequest();
  virtual ~CMsgPingRequest();

  CMsgPingRequest(const CMsgPingRequest& from);

  inline CMsgPingRequest& operator=(const CMsgPingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPingRequest& default_instance();

  static inline const CMsgPingRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgPingRequest*>(
               &_CMsgPingRequest_default_instance_);
  }

  void Swap(CMsgPingRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgPingRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPingRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPingRequest& from);
  void MergeFrom(const CMsgPingRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgPingRequest_Msg Msg;
  static const Msg MsgID =
    CMsgPingRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgPingRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgPingRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgPingRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgPingRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgPingRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgPingRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgPingRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CSocketInfo

// optional int32 SocketID = 1;
inline bool CSocketInfo::has_socketid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSocketInfo::set_has_socketid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSocketInfo::clear_has_socketid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSocketInfo::clear_socketid() {
  socketid_ = 0;
  clear_has_socketid();
}
inline ::google::protobuf::int32 CSocketInfo::socketid() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.SocketID)
  return socketid_;
}
inline void CSocketInfo::set_socketid(::google::protobuf::int32 value) {
  set_has_socketid();
  socketid_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.SocketID)
}

// optional int64 CreateTime = 2;
inline bool CSocketInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSocketInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSocketInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSocketInfo::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::int64 CSocketInfo::createtime() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.CreateTime)
  return createtime_;
}
inline void CSocketInfo::set_createtime(::google::protobuf::int64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.CreateTime)
}

// optional int32 State = 3;
inline bool CSocketInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSocketInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSocketInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSocketInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CSocketInfo::state() const {
  // @@protoc_insertion_point(field_get:CSocketInfo.State)
  return state_;
}
inline void CSocketInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSocketInfo.State)
}

// -------------------------------------------------------------------

// MesHead

// repeated .CSocketInfo SocketInfos = 1;
inline int MesHead::socketinfos_size() const {
  return socketinfos_.size();
}
inline void MesHead::clear_socketinfos() {
  socketinfos_.Clear();
}
inline const ::CSocketInfo& MesHead::socketinfos(int index) const {
  // @@protoc_insertion_point(field_get:MesHead.SocketInfos)
  return socketinfos_.Get(index);
}
inline ::CSocketInfo* MesHead::mutable_socketinfos(int index) {
  // @@protoc_insertion_point(field_mutable:MesHead.SocketInfos)
  return socketinfos_.Mutable(index);
}
inline ::CSocketInfo* MesHead::add_socketinfos() {
  // @@protoc_insertion_point(field_add:MesHead.SocketInfos)
  return socketinfos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSocketInfo >*
MesHead::mutable_socketinfos() {
  // @@protoc_insertion_point(field_mutable_list:MesHead.SocketInfos)
  return &socketinfos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSocketInfo >&
MesHead::socketinfos() const {
  // @@protoc_insertion_point(field_list:MesHead.SocketInfos)
  return socketinfos_;
}

// required int32 Cmd = 2;
inline bool MesHead::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MesHead::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MesHead::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MesHead::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 MesHead::cmd() const {
  // @@protoc_insertion_point(field_get:MesHead.Cmd)
  return cmd_;
}
inline void MesHead::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:MesHead.Cmd)
}

// required int32 Seq = 3;
inline bool MesHead::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MesHead::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MesHead::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MesHead::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
inline ::google::protobuf::int32 MesHead::seq() const {
  // @@protoc_insertion_point(field_get:MesHead.Seq)
  return seq_;
}
inline void MesHead::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:MesHead.Seq)
}

// required bool isEncry = 4;
inline bool MesHead::has_isencry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MesHead::set_has_isencry() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MesHead::clear_has_isencry() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MesHead::clear_isencry() {
  isencry_ = false;
  clear_has_isencry();
}
inline bool MesHead::isencry() const {
  // @@protoc_insertion_point(field_get:MesHead.isEncry)
  return isencry_;
}
inline void MesHead::set_isencry(bool value) {
  set_has_isencry();
  isencry_ = value;
  // @@protoc_insertion_point(field_set:MesHead.isEncry)
}

// -------------------------------------------------------------------

// CMessage

// required .MesHead MsgHead = 1;
inline bool CMessage::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMessage::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMessage::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMessage::clear_msghead() {
  if (msghead_ != NULL) msghead_->::MesHead::Clear();
  clear_has_msghead();
}
inline const ::MesHead& CMessage::msghead() const {
  // @@protoc_insertion_point(field_get:CMessage.MsgHead)
  return msghead_ != NULL ? *msghead_
                         : *::MesHead::internal_default_instance();
}
inline ::MesHead* CMessage::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::MesHead;
  }
  // @@protoc_insertion_point(field_mutable:CMessage.MsgHead)
  return msghead_;
}
inline ::MesHead* CMessage::release_msghead() {
  // @@protoc_insertion_point(field_release:CMessage.MsgHead)
  clear_has_msghead();
  ::MesHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void CMessage::set_allocated_msghead(::MesHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:CMessage.MsgHead)
}

// optional fixed64 MsgPara = 2 [default = 0];
inline bool CMessage::has_msgpara() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMessage::set_has_msgpara() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMessage::clear_has_msgpara() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMessage::clear_msgpara() {
  msgpara_ = GOOGLE_ULONGLONG(0);
  clear_has_msgpara();
}
inline ::google::protobuf::uint64 CMessage::msgpara() const {
  // @@protoc_insertion_point(field_get:CMessage.MsgPara)
  return msgpara_;
}
inline void CMessage::set_msgpara(::google::protobuf::uint64 value) {
  set_has_msgpara();
  msgpara_ = value;
  // @@protoc_insertion_point(field_set:CMessage.MsgPara)
}

// -------------------------------------------------------------------

// S2PHead

// required uint32 SrcFE = 1;
inline bool S2PHead::has_srcfe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2PHead::set_has_srcfe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2PHead::clear_has_srcfe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2PHead::clear_srcfe() {
  srcfe_ = 0u;
  clear_has_srcfe();
}
inline ::google::protobuf::uint32 S2PHead::srcfe() const {
  // @@protoc_insertion_point(field_get:S2PHead.SrcFE)
  return srcfe_;
}
inline void S2PHead::set_srcfe(::google::protobuf::uint32 value) {
  set_has_srcfe();
  srcfe_ = value;
  // @@protoc_insertion_point(field_set:S2PHead.SrcFE)
}

// required uint32 SrcID = 2;
inline bool S2PHead::has_srcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2PHead::set_has_srcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2PHead::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2PHead::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 S2PHead::srcid() const {
  // @@protoc_insertion_point(field_get:S2PHead.SrcID)
  return srcid_;
}
inline void S2PHead::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:S2PHead.SrcID)
}

// required uint32 DstFE = 3;
inline bool S2PHead::has_dstfe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2PHead::set_has_dstfe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2PHead::clear_has_dstfe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2PHead::clear_dstfe() {
  dstfe_ = 0u;
  clear_has_dstfe();
}
inline ::google::protobuf::uint32 S2PHead::dstfe() const {
  // @@protoc_insertion_point(field_get:S2PHead.DstFE)
  return dstfe_;
}
inline void S2PHead::set_dstfe(::google::protobuf::uint32 value) {
  set_has_dstfe();
  dstfe_ = value;
  // @@protoc_insertion_point(field_set:S2PHead.DstFE)
}

// required uint32 DstID = 4;
inline bool S2PHead::has_dstid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2PHead::set_has_dstid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2PHead::clear_has_dstid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2PHead::clear_dstid() {
  dstid_ = 0u;
  clear_has_dstid();
}
inline ::google::protobuf::uint32 S2PHead::dstid() const {
  // @@protoc_insertion_point(field_get:S2PHead.DstID)
  return dstid_;
}
inline void S2PHead::set_dstid(::google::protobuf::uint32 value) {
  set_has_dstid();
  dstid_ = value;
  // @@protoc_insertion_point(field_set:S2PHead.DstID)
}

// optional .EMessageCmd OpFlag = 5 [default = MESS_NULL];
inline bool S2PHead::has_opflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2PHead::set_has_opflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2PHead::clear_has_opflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2PHead::clear_opflag() {
  opflag_ = 0;
  clear_has_opflag();
}
inline ::EMessageCmd S2PHead::opflag() const {
  // @@protoc_insertion_point(field_get:S2PHead.OpFlag)
  return static_cast< ::EMessageCmd >(opflag_);
}
inline void S2PHead::set_opflag(::EMessageCmd value) {
  assert(::EMessageCmd_IsValid(value));
  set_has_opflag();
  opflag_ = value;
  // @@protoc_insertion_point(field_set:S2PHead.OpFlag)
}

// required uint64 TimeStamp = 6;
inline bool S2PHead::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2PHead::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2PHead::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2PHead::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 S2PHead::timestamp() const {
  // @@protoc_insertion_point(field_get:S2PHead.TimeStamp)
  return timestamp_;
}
inline void S2PHead::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:S2PHead.TimeStamp)
}

// -------------------------------------------------------------------

// CProxyMessage

// required .S2PHead MsgHead = 1;
inline bool CProxyMessage::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CProxyMessage::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CProxyMessage::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CProxyMessage::clear_msghead() {
  if (msghead_ != NULL) msghead_->::S2PHead::Clear();
  clear_has_msghead();
}
inline const ::S2PHead& CProxyMessage::msghead() const {
  // @@protoc_insertion_point(field_get:CProxyMessage.MsgHead)
  return msghead_ != NULL ? *msghead_
                         : *::S2PHead::internal_default_instance();
}
inline ::S2PHead* CProxyMessage::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::S2PHead;
  }
  // @@protoc_insertion_point(field_mutable:CProxyMessage.MsgHead)
  return msghead_;
}
inline ::S2PHead* CProxyMessage::release_msghead() {
  // @@protoc_insertion_point(field_release:CProxyMessage.MsgHead)
  clear_has_msghead();
  ::S2PHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void CProxyMessage::set_allocated_msghead(::S2PHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:CProxyMessage.MsgHead)
}

// -------------------------------------------------------------------

// P2SHead

// required int32 Cmd = 1;
inline bool P2SHead::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void P2SHead::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void P2SHead::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void P2SHead::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 P2SHead::cmd() const {
  // @@protoc_insertion_point(field_get:P2SHead.Cmd)
  return cmd_;
}
inline void P2SHead::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:P2SHead.Cmd)
}

// -------------------------------------------------------------------

// CServerMessage

// required .P2SHead MsgHead = 1;
inline bool CServerMessage::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CServerMessage::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CServerMessage::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CServerMessage::clear_msghead() {
  if (msghead_ != NULL) msghead_->::P2SHead::Clear();
  clear_has_msghead();
}
inline const ::P2SHead& CServerMessage::msghead() const {
  // @@protoc_insertion_point(field_get:CServerMessage.MsgHead)
  return msghead_ != NULL ? *msghead_
                         : *::P2SHead::internal_default_instance();
}
inline ::P2SHead* CServerMessage::mutable_msghead() {
  set_has_msghead();
  if (msghead_ == NULL) {
    msghead_ = new ::P2SHead;
  }
  // @@protoc_insertion_point(field_mutable:CServerMessage.MsgHead)
  return msghead_;
}
inline ::P2SHead* CServerMessage::release_msghead() {
  // @@protoc_insertion_point(field_release:CServerMessage.MsgHead)
  clear_has_msghead();
  ::P2SHead* temp = msghead_;
  msghead_ = NULL;
  return temp;
}
inline void CServerMessage::set_allocated_msghead(::P2SHead* msghead) {
  delete msghead_;
  msghead_ = msghead;
  if (msghead) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  // @@protoc_insertion_point(field_set_allocated:CServerMessage.MsgHead)
}

// -------------------------------------------------------------------

// CMsgPingRequest

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgPingRequest_Msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgPingRequest_Msg>() {
  return ::CMsgPingRequest_Msg_descriptor();
}
template <> struct is_proto_enum< ::enMessageFE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::enMessageFE>() {
  return ::enMessageFE_descriptor();
}
template <> struct is_proto_enum< ::EMessageCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EMessageCmd>() {
  return ::EMessageCmd_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
