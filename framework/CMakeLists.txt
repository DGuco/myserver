cmake_minimum_required(VERSION 3.6)
project(myserver)
set(FRAMEWORK
        base/base.h
        base/object.h
        base/performance.h
        base/servertool.h
        base/base.cpp
        base/performance.cpp
        base/servertool.cpp
        base/my_assert.h
        base/commondef.h
        base/my_macro.h
        base/my_macro.h
        base/objectManager.cpp
        base/objectManager.h
        json/json.h
        json/json.cpp
        json/config.h
        json/config.cpp
        log/log.h
        log/log.cpp
        message/tcpmessage.pb.h
        message/tcpmessage.pb.cc
        message/message.pb.h
        message/message.pb.cc
        message/proxymessage.pb.h
        message/proxymessage.pb.cc
        net/statistics.h
        net/tcp_conn.h
        net/client_comm_engine.h
        net/runflag.h
        net/server_comm_engine.h
        net/daemon.h
        message/message_interface.h
        net/nethead.h
        net/oi_tea.h
        net/daemon.cpp
        message/message_interface.cpp
        net/nethead.cpp
        net/oi_tea.cpp
        net/runflag.cpp
        net/server_comm_engine.cpp
        net/statistics.cpp
        net/client_comm_engine.cpp
        net/ccrypto.h
        net/ccrypto.cpp
        mem/sharemem.h
        mem/shm.h/
        mem/sharemem.cpp
        mem/shm.cpp
        mem/codequeue.h
        mem/codequeue.cpp
        mem/mempool.h
        mem/mempoolsafty.h
        thread/mythread.h
        thread/mythread.cpp
        timer/clock.cpp
        timer/clock.h
        timer/timer.h
        timer/timer.cpp
        event/event.h
        event/eventbus.h
        event/eventHandler.h
        event/eventbus.cpp
        event/handlerregistration.h)

include_directories(
        /usr/local/include
)

link_directories(
        /usr/local/lib
        ${CMAKE_SOURCE_DIR}/lib
)

add_library(framework ${FRAMEWORK})
target_link_libraries(framework pthread protobuf log4cpp crypto)
set(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/lib)
