// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coremessage.proto

#ifndef PROTOBUF_coremessage_2eproto__INCLUDED
#define PROTOBUF_coremessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "resourcemessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_coremessage_2eproto();
void protobuf_AssignDesc_coremessage_2eproto();
void protobuf_ShutdownFile_coremessage_2eproto();

class CMsgLoginHallRequest;
class CMsgLoginHallResponse;
class CMsgLeaveHallRequest;
class CMsgLeaveHallResponse;
class CMsgSystemErrorResponse;
class CMsgTestRequest;
class CMsgTestResponse;
class CMsgExchangeResourceRequest;
class CMsgExchangeResourceResponse;
class CMsgRenameRequest;
class CMsgRenameResponse;
class CMsgChangeHeadRequest;
class CMsgChangeHeadResponse;
class CMsgUpdateResourceResponse;
class CMsgAlmsResponse;
class CMsgBackHallOKRequest;
class CMsgDataStatisticsRequest;
class CMsg8BallDataStatisticsResponse;

enum CMsgLoginHallRequest_Msg {
  CMsgLoginHallRequest_Msg_MsgID = 1
};
bool CMsgLoginHallRequest_Msg_IsValid(int value);
const CMsgLoginHallRequest_Msg CMsgLoginHallRequest_Msg_Msg_MIN = CMsgLoginHallRequest_Msg_MsgID;
const CMsgLoginHallRequest_Msg CMsgLoginHallRequest_Msg_Msg_MAX = CMsgLoginHallRequest_Msg_MsgID;
const int CMsgLoginHallRequest_Msg_Msg_ARRAYSIZE = CMsgLoginHallRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLoginHallRequest_Msg_descriptor();
inline const ::std::string& CMsgLoginHallRequest_Msg_Name(CMsgLoginHallRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLoginHallRequest_Msg_descriptor(), value);
}
inline bool CMsgLoginHallRequest_Msg_Parse(
    const ::std::string& name, CMsgLoginHallRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLoginHallRequest_Msg>(
    CMsgLoginHallRequest_Msg_descriptor(), name, value);
}
enum CMsgLoginHallResponse_Msg {
  CMsgLoginHallResponse_Msg_MsgID = 2
};
bool CMsgLoginHallResponse_Msg_IsValid(int value);
const CMsgLoginHallResponse_Msg CMsgLoginHallResponse_Msg_Msg_MIN = CMsgLoginHallResponse_Msg_MsgID;
const CMsgLoginHallResponse_Msg CMsgLoginHallResponse_Msg_Msg_MAX = CMsgLoginHallResponse_Msg_MsgID;
const int CMsgLoginHallResponse_Msg_Msg_ARRAYSIZE = CMsgLoginHallResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLoginHallResponse_Msg_descriptor();
inline const ::std::string& CMsgLoginHallResponse_Msg_Name(CMsgLoginHallResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLoginHallResponse_Msg_descriptor(), value);
}
inline bool CMsgLoginHallResponse_Msg_Parse(
    const ::std::string& name, CMsgLoginHallResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLoginHallResponse_Msg>(
    CMsgLoginHallResponse_Msg_descriptor(), name, value);
}
enum CMsgLeaveHallRequest_Msg {
  CMsgLeaveHallRequest_Msg_MsgID = 3
};
bool CMsgLeaveHallRequest_Msg_IsValid(int value);
const CMsgLeaveHallRequest_Msg CMsgLeaveHallRequest_Msg_Msg_MIN = CMsgLeaveHallRequest_Msg_MsgID;
const CMsgLeaveHallRequest_Msg CMsgLeaveHallRequest_Msg_Msg_MAX = CMsgLeaveHallRequest_Msg_MsgID;
const int CMsgLeaveHallRequest_Msg_Msg_ARRAYSIZE = CMsgLeaveHallRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLeaveHallRequest_Msg_descriptor();
inline const ::std::string& CMsgLeaveHallRequest_Msg_Name(CMsgLeaveHallRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLeaveHallRequest_Msg_descriptor(), value);
}
inline bool CMsgLeaveHallRequest_Msg_Parse(
    const ::std::string& name, CMsgLeaveHallRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLeaveHallRequest_Msg>(
    CMsgLeaveHallRequest_Msg_descriptor(), name, value);
}
enum CMsgLeaveHallResponse_Msg {
  CMsgLeaveHallResponse_Msg_MsgID = 4
};
bool CMsgLeaveHallResponse_Msg_IsValid(int value);
const CMsgLeaveHallResponse_Msg CMsgLeaveHallResponse_Msg_Msg_MIN = CMsgLeaveHallResponse_Msg_MsgID;
const CMsgLeaveHallResponse_Msg CMsgLeaveHallResponse_Msg_Msg_MAX = CMsgLeaveHallResponse_Msg_MsgID;
const int CMsgLeaveHallResponse_Msg_Msg_ARRAYSIZE = CMsgLeaveHallResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLeaveHallResponse_Msg_descriptor();
inline const ::std::string& CMsgLeaveHallResponse_Msg_Name(CMsgLeaveHallResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLeaveHallResponse_Msg_descriptor(), value);
}
inline bool CMsgLeaveHallResponse_Msg_Parse(
    const ::std::string& name, CMsgLeaveHallResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLeaveHallResponse_Msg>(
    CMsgLeaveHallResponse_Msg_descriptor(), name, value);
}
enum CMsgSystemErrorResponse_Msg {
  CMsgSystemErrorResponse_Msg_MsgID = 5
};
bool CMsgSystemErrorResponse_Msg_IsValid(int value);
const CMsgSystemErrorResponse_Msg CMsgSystemErrorResponse_Msg_Msg_MIN = CMsgSystemErrorResponse_Msg_MsgID;
const CMsgSystemErrorResponse_Msg CMsgSystemErrorResponse_Msg_Msg_MAX = CMsgSystemErrorResponse_Msg_MsgID;
const int CMsgSystemErrorResponse_Msg_Msg_ARRAYSIZE = CMsgSystemErrorResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgSystemErrorResponse_Msg_descriptor();
inline const ::std::string& CMsgSystemErrorResponse_Msg_Name(CMsgSystemErrorResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgSystemErrorResponse_Msg_descriptor(), value);
}
inline bool CMsgSystemErrorResponse_Msg_Parse(
    const ::std::string& name, CMsgSystemErrorResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgSystemErrorResponse_Msg>(
    CMsgSystemErrorResponse_Msg_descriptor(), name, value);
}
enum CMsgTestRequest_Msg {
  CMsgTestRequest_Msg_MsgID = 6
};
bool CMsgTestRequest_Msg_IsValid(int value);
const CMsgTestRequest_Msg CMsgTestRequest_Msg_Msg_MIN = CMsgTestRequest_Msg_MsgID;
const CMsgTestRequest_Msg CMsgTestRequest_Msg_Msg_MAX = CMsgTestRequest_Msg_MsgID;
const int CMsgTestRequest_Msg_Msg_ARRAYSIZE = CMsgTestRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgTestRequest_Msg_descriptor();
inline const ::std::string& CMsgTestRequest_Msg_Name(CMsgTestRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgTestRequest_Msg_descriptor(), value);
}
inline bool CMsgTestRequest_Msg_Parse(
    const ::std::string& name, CMsgTestRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgTestRequest_Msg>(
    CMsgTestRequest_Msg_descriptor(), name, value);
}
enum CMsgTestResponse_Msg {
  CMsgTestResponse_Msg_MsgID = 7
};
bool CMsgTestResponse_Msg_IsValid(int value);
const CMsgTestResponse_Msg CMsgTestResponse_Msg_Msg_MIN = CMsgTestResponse_Msg_MsgID;
const CMsgTestResponse_Msg CMsgTestResponse_Msg_Msg_MAX = CMsgTestResponse_Msg_MsgID;
const int CMsgTestResponse_Msg_Msg_ARRAYSIZE = CMsgTestResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgTestResponse_Msg_descriptor();
inline const ::std::string& CMsgTestResponse_Msg_Name(CMsgTestResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgTestResponse_Msg_descriptor(), value);
}
inline bool CMsgTestResponse_Msg_Parse(
    const ::std::string& name, CMsgTestResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgTestResponse_Msg>(
    CMsgTestResponse_Msg_descriptor(), name, value);
}
enum CMsgExchangeResourceRequest_Msg {
  CMsgExchangeResourceRequest_Msg_MsgID = 8
};
bool CMsgExchangeResourceRequest_Msg_IsValid(int value);
const CMsgExchangeResourceRequest_Msg CMsgExchangeResourceRequest_Msg_Msg_MIN = CMsgExchangeResourceRequest_Msg_MsgID;
const CMsgExchangeResourceRequest_Msg CMsgExchangeResourceRequest_Msg_Msg_MAX = CMsgExchangeResourceRequest_Msg_MsgID;
const int CMsgExchangeResourceRequest_Msg_Msg_ARRAYSIZE = CMsgExchangeResourceRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgExchangeResourceRequest_Msg_descriptor();
inline const ::std::string& CMsgExchangeResourceRequest_Msg_Name(CMsgExchangeResourceRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgExchangeResourceRequest_Msg_descriptor(), value);
}
inline bool CMsgExchangeResourceRequest_Msg_Parse(
    const ::std::string& name, CMsgExchangeResourceRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgExchangeResourceRequest_Msg>(
    CMsgExchangeResourceRequest_Msg_descriptor(), name, value);
}
enum CMsgExchangeResourceResponse_Msg {
  CMsgExchangeResourceResponse_Msg_MsgID = 9
};
bool CMsgExchangeResourceResponse_Msg_IsValid(int value);
const CMsgExchangeResourceResponse_Msg CMsgExchangeResourceResponse_Msg_Msg_MIN = CMsgExchangeResourceResponse_Msg_MsgID;
const CMsgExchangeResourceResponse_Msg CMsgExchangeResourceResponse_Msg_Msg_MAX = CMsgExchangeResourceResponse_Msg_MsgID;
const int CMsgExchangeResourceResponse_Msg_Msg_ARRAYSIZE = CMsgExchangeResourceResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgExchangeResourceResponse_Msg_descriptor();
inline const ::std::string& CMsgExchangeResourceResponse_Msg_Name(CMsgExchangeResourceResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgExchangeResourceResponse_Msg_descriptor(), value);
}
inline bool CMsgExchangeResourceResponse_Msg_Parse(
    const ::std::string& name, CMsgExchangeResourceResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgExchangeResourceResponse_Msg>(
    CMsgExchangeResourceResponse_Msg_descriptor(), name, value);
}
enum CMsgRenameRequest_Msg {
  CMsgRenameRequest_Msg_MsgID = 10
};
bool CMsgRenameRequest_Msg_IsValid(int value);
const CMsgRenameRequest_Msg CMsgRenameRequest_Msg_Msg_MIN = CMsgRenameRequest_Msg_MsgID;
const CMsgRenameRequest_Msg CMsgRenameRequest_Msg_Msg_MAX = CMsgRenameRequest_Msg_MsgID;
const int CMsgRenameRequest_Msg_Msg_ARRAYSIZE = CMsgRenameRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgRenameRequest_Msg_descriptor();
inline const ::std::string& CMsgRenameRequest_Msg_Name(CMsgRenameRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgRenameRequest_Msg_descriptor(), value);
}
inline bool CMsgRenameRequest_Msg_Parse(
    const ::std::string& name, CMsgRenameRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgRenameRequest_Msg>(
    CMsgRenameRequest_Msg_descriptor(), name, value);
}
enum CMsgRenameResponse_Msg {
  CMsgRenameResponse_Msg_MsgID = 11
};
bool CMsgRenameResponse_Msg_IsValid(int value);
const CMsgRenameResponse_Msg CMsgRenameResponse_Msg_Msg_MIN = CMsgRenameResponse_Msg_MsgID;
const CMsgRenameResponse_Msg CMsgRenameResponse_Msg_Msg_MAX = CMsgRenameResponse_Msg_MsgID;
const int CMsgRenameResponse_Msg_Msg_ARRAYSIZE = CMsgRenameResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgRenameResponse_Msg_descriptor();
inline const ::std::string& CMsgRenameResponse_Msg_Name(CMsgRenameResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgRenameResponse_Msg_descriptor(), value);
}
inline bool CMsgRenameResponse_Msg_Parse(
    const ::std::string& name, CMsgRenameResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgRenameResponse_Msg>(
    CMsgRenameResponse_Msg_descriptor(), name, value);
}
enum CMsgChangeHeadRequest_Msg {
  CMsgChangeHeadRequest_Msg_MsgID = 12
};
bool CMsgChangeHeadRequest_Msg_IsValid(int value);
const CMsgChangeHeadRequest_Msg CMsgChangeHeadRequest_Msg_Msg_MIN = CMsgChangeHeadRequest_Msg_MsgID;
const CMsgChangeHeadRequest_Msg CMsgChangeHeadRequest_Msg_Msg_MAX = CMsgChangeHeadRequest_Msg_MsgID;
const int CMsgChangeHeadRequest_Msg_Msg_ARRAYSIZE = CMsgChangeHeadRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgChangeHeadRequest_Msg_descriptor();
inline const ::std::string& CMsgChangeHeadRequest_Msg_Name(CMsgChangeHeadRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgChangeHeadRequest_Msg_descriptor(), value);
}
inline bool CMsgChangeHeadRequest_Msg_Parse(
    const ::std::string& name, CMsgChangeHeadRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgChangeHeadRequest_Msg>(
    CMsgChangeHeadRequest_Msg_descriptor(), name, value);
}
enum CMsgChangeHeadResponse_Msg {
  CMsgChangeHeadResponse_Msg_MsgID = 13
};
bool CMsgChangeHeadResponse_Msg_IsValid(int value);
const CMsgChangeHeadResponse_Msg CMsgChangeHeadResponse_Msg_Msg_MIN = CMsgChangeHeadResponse_Msg_MsgID;
const CMsgChangeHeadResponse_Msg CMsgChangeHeadResponse_Msg_Msg_MAX = CMsgChangeHeadResponse_Msg_MsgID;
const int CMsgChangeHeadResponse_Msg_Msg_ARRAYSIZE = CMsgChangeHeadResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgChangeHeadResponse_Msg_descriptor();
inline const ::std::string& CMsgChangeHeadResponse_Msg_Name(CMsgChangeHeadResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgChangeHeadResponse_Msg_descriptor(), value);
}
inline bool CMsgChangeHeadResponse_Msg_Parse(
    const ::std::string& name, CMsgChangeHeadResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgChangeHeadResponse_Msg>(
    CMsgChangeHeadResponse_Msg_descriptor(), name, value);
}
enum CMsgUpdateResourceResponse_Msg {
  CMsgUpdateResourceResponse_Msg_MsgID = 14
};
bool CMsgUpdateResourceResponse_Msg_IsValid(int value);
const CMsgUpdateResourceResponse_Msg CMsgUpdateResourceResponse_Msg_Msg_MIN = CMsgUpdateResourceResponse_Msg_MsgID;
const CMsgUpdateResourceResponse_Msg CMsgUpdateResourceResponse_Msg_Msg_MAX = CMsgUpdateResourceResponse_Msg_MsgID;
const int CMsgUpdateResourceResponse_Msg_Msg_ARRAYSIZE = CMsgUpdateResourceResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgUpdateResourceResponse_Msg_descriptor();
inline const ::std::string& CMsgUpdateResourceResponse_Msg_Name(CMsgUpdateResourceResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgUpdateResourceResponse_Msg_descriptor(), value);
}
inline bool CMsgUpdateResourceResponse_Msg_Parse(
    const ::std::string& name, CMsgUpdateResourceResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgUpdateResourceResponse_Msg>(
    CMsgUpdateResourceResponse_Msg_descriptor(), name, value);
}
enum CMsgAlmsResponse_Msg {
  CMsgAlmsResponse_Msg_MsgID = 15
};
bool CMsgAlmsResponse_Msg_IsValid(int value);
const CMsgAlmsResponse_Msg CMsgAlmsResponse_Msg_Msg_MIN = CMsgAlmsResponse_Msg_MsgID;
const CMsgAlmsResponse_Msg CMsgAlmsResponse_Msg_Msg_MAX = CMsgAlmsResponse_Msg_MsgID;
const int CMsgAlmsResponse_Msg_Msg_ARRAYSIZE = CMsgAlmsResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgAlmsResponse_Msg_descriptor();
inline const ::std::string& CMsgAlmsResponse_Msg_Name(CMsgAlmsResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgAlmsResponse_Msg_descriptor(), value);
}
inline bool CMsgAlmsResponse_Msg_Parse(
    const ::std::string& name, CMsgAlmsResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgAlmsResponse_Msg>(
    CMsgAlmsResponse_Msg_descriptor(), name, value);
}
enum CMsgBackHallOKRequest_Msg {
  CMsgBackHallOKRequest_Msg_MsgID = 16
};
bool CMsgBackHallOKRequest_Msg_IsValid(int value);
const CMsgBackHallOKRequest_Msg CMsgBackHallOKRequest_Msg_Msg_MIN = CMsgBackHallOKRequest_Msg_MsgID;
const CMsgBackHallOKRequest_Msg CMsgBackHallOKRequest_Msg_Msg_MAX = CMsgBackHallOKRequest_Msg_MsgID;
const int CMsgBackHallOKRequest_Msg_Msg_ARRAYSIZE = CMsgBackHallOKRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgBackHallOKRequest_Msg_descriptor();
inline const ::std::string& CMsgBackHallOKRequest_Msg_Name(CMsgBackHallOKRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgBackHallOKRequest_Msg_descriptor(), value);
}
inline bool CMsgBackHallOKRequest_Msg_Parse(
    const ::std::string& name, CMsgBackHallOKRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgBackHallOKRequest_Msg>(
    CMsgBackHallOKRequest_Msg_descriptor(), name, value);
}
enum CMsgDataStatisticsRequest_Msg {
  CMsgDataStatisticsRequest_Msg_MsgID = 17
};
bool CMsgDataStatisticsRequest_Msg_IsValid(int value);
const CMsgDataStatisticsRequest_Msg CMsgDataStatisticsRequest_Msg_Msg_MIN = CMsgDataStatisticsRequest_Msg_MsgID;
const CMsgDataStatisticsRequest_Msg CMsgDataStatisticsRequest_Msg_Msg_MAX = CMsgDataStatisticsRequest_Msg_MsgID;
const int CMsgDataStatisticsRequest_Msg_Msg_ARRAYSIZE = CMsgDataStatisticsRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDataStatisticsRequest_Msg_descriptor();
inline const ::std::string& CMsgDataStatisticsRequest_Msg_Name(CMsgDataStatisticsRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDataStatisticsRequest_Msg_descriptor(), value);
}
inline bool CMsgDataStatisticsRequest_Msg_Parse(
    const ::std::string& name, CMsgDataStatisticsRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDataStatisticsRequest_Msg>(
    CMsgDataStatisticsRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallDataStatisticsResponse_Msg {
  CMsg8BallDataStatisticsResponse_Msg_MsgID = 18
};
bool CMsg8BallDataStatisticsResponse_Msg_IsValid(int value);
const CMsg8BallDataStatisticsResponse_Msg CMsg8BallDataStatisticsResponse_Msg_Msg_MIN = CMsg8BallDataStatisticsResponse_Msg_MsgID;
const CMsg8BallDataStatisticsResponse_Msg CMsg8BallDataStatisticsResponse_Msg_Msg_MAX = CMsg8BallDataStatisticsResponse_Msg_MsgID;
const int CMsg8BallDataStatisticsResponse_Msg_Msg_ARRAYSIZE = CMsg8BallDataStatisticsResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallDataStatisticsResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallDataStatisticsResponse_Msg_Name(CMsg8BallDataStatisticsResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallDataStatisticsResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallDataStatisticsResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallDataStatisticsResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallDataStatisticsResponse_Msg>(
    CMsg8BallDataStatisticsResponse_Msg_descriptor(), name, value);
}
// ===================================================================

class CMsgLoginHallRequest : public ::google::protobuf::Message {
 public:
  CMsgLoginHallRequest();
  virtual ~CMsgLoginHallRequest();

  CMsgLoginHallRequest(const CMsgLoginHallRequest& from);

  inline CMsgLoginHallRequest& operator=(const CMsgLoginHallRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLoginHallRequest& default_instance();

  void Swap(CMsgLoginHallRequest* other);

  // implements Message ----------------------------------------------

  CMsgLoginHallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLoginHallRequest& from);
  void MergeFrom(const CMsgLoginHallRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLoginHallRequest_Msg Msg;
  static const Msg MsgID = CMsgLoginHallRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLoginHallRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLoginHallRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLoginHallRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLoginHallRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLoginHallRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLoginHallRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLoginHallRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string Account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string Password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional int32 PFrom = 3;
  inline bool has_pfrom() const;
  inline void clear_pfrom();
  static const int kPFromFieldNumber = 3;
  inline ::google::protobuf::int32 pfrom() const;
  inline void set_pfrom(::google::protobuf::int32 value);

  // required string Session = 4;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 4;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  inline void set_allocated_session(::std::string* session);

  // @@protoc_insertion_point(class_scope:CMsgLoginHallRequest)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_pfrom();
  inline void clear_has_pfrom();
  inline void set_has_session();
  inline void clear_has_session();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_;
  ::std::string* password_;
  ::std::string* session_;
  ::google::protobuf::int32 pfrom_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLoginHallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLoginHallResponse : public ::google::protobuf::Message {
 public:
  CMsgLoginHallResponse();
  virtual ~CMsgLoginHallResponse();

  CMsgLoginHallResponse(const CMsgLoginHallResponse& from);

  inline CMsgLoginHallResponse& operator=(const CMsgLoginHallResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLoginHallResponse& default_instance();

  void Swap(CMsgLoginHallResponse* other);

  // implements Message ----------------------------------------------

  CMsgLoginHallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLoginHallResponse& from);
  void MergeFrom(const CMsgLoginHallResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLoginHallResponse_Msg Msg;
  static const Msg MsgID = CMsgLoginHallResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLoginHallResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLoginHallResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLoginHallResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLoginHallResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLoginHallResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLoginHallResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLoginHallResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::int32 entityid() const;
  inline void set_entityid(::google::protobuf::int32 value);

  // required int64 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required string RoleName = 4;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 4;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // repeated .PBUpdateResource resources = 5;
  inline int resources_size() const;
  inline void clear_resources();
  static const int kResourcesFieldNumber = 5;
  inline const ::PBUpdateResource& resources(int index) const;
  inline ::PBUpdateResource* mutable_resources(int index);
  inline ::PBUpdateResource* add_resources();
  inline const ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >&
      resources() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >*
      mutable_resources();

  // repeated .PBGagaleType1SingleInfo data = 6;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::PBGagaleType1SingleInfo& data(int index) const;
  inline ::PBGagaleType1SingleInfo* mutable_data(int index);
  inline ::PBGagaleType1SingleInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType1SingleInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType1SingleInfo >*
      mutable_data();

  // repeated .PBItem Items = 7;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 7;
  inline const ::PBItem& items(int index) const;
  inline ::PBItem* mutable_items(int index);
  inline ::PBItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_items();

  // required bool HasFirstChangeName = 8;
  inline bool has_hasfirstchangename() const;
  inline void clear_hasfirstchangename();
  static const int kHasFirstChangeNameFieldNumber = 8;
  inline bool hasfirstchangename() const;
  inline void set_hasfirstchangename(bool value);

  // required int32 headid = 9;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 9;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgLoginHallResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_hasfirstchangename();
  inline void clear_has_hasfirstchangename();
  inline void set_has_headid();
  inline void clear_has_headid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 entityid_;
  ::google::protobuf::int64 roleid_;
  ::std::string* rolename_;
  ::google::protobuf::RepeatedPtrField< ::PBUpdateResource > resources_;
  ::google::protobuf::RepeatedPtrField< ::PBGagaleType1SingleInfo > data_;
  ::google::protobuf::RepeatedPtrField< ::PBItem > items_;
  bool hasfirstchangename_;
  ::google::protobuf::int32 headid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLoginHallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaveHallRequest : public ::google::protobuf::Message {
 public:
  CMsgLeaveHallRequest();
  virtual ~CMsgLeaveHallRequest();

  CMsgLeaveHallRequest(const CMsgLeaveHallRequest& from);

  inline CMsgLeaveHallRequest& operator=(const CMsgLeaveHallRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveHallRequest& default_instance();

  void Swap(CMsgLeaveHallRequest* other);

  // implements Message ----------------------------------------------

  CMsgLeaveHallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaveHallRequest& from);
  void MergeFrom(const CMsgLeaveHallRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLeaveHallRequest_Msg Msg;
  static const Msg MsgID = CMsgLeaveHallRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLeaveHallRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLeaveHallRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLeaveHallRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLeaveHallRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLeaveHallRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLeaveHallRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLeaveHallRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 LeaveType = 1;
  inline bool has_leavetype() const;
  inline void clear_leavetype();
  static const int kLeaveTypeFieldNumber = 1;
  inline ::google::protobuf::int32 leavetype() const;
  inline void set_leavetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgLeaveHallRequest)
 private:
  inline void set_has_leavetype();
  inline void clear_has_leavetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 leavetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaveHallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaveHallResponse : public ::google::protobuf::Message {
 public:
  CMsgLeaveHallResponse();
  virtual ~CMsgLeaveHallResponse();

  CMsgLeaveHallResponse(const CMsgLeaveHallResponse& from);

  inline CMsgLeaveHallResponse& operator=(const CMsgLeaveHallResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveHallResponse& default_instance();

  void Swap(CMsgLeaveHallResponse* other);

  // implements Message ----------------------------------------------

  CMsgLeaveHallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaveHallResponse& from);
  void MergeFrom(const CMsgLeaveHallResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLeaveHallResponse_Msg Msg;
  static const Msg MsgID = CMsgLeaveHallResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLeaveHallResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLeaveHallResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLeaveHallResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLeaveHallResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLeaveHallResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLeaveHallResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLeaveHallResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 LeaveType = 1;
  inline bool has_leavetype() const;
  inline void clear_leavetype();
  static const int kLeaveTypeFieldNumber = 1;
  inline ::google::protobuf::int32 leavetype() const;
  inline void set_leavetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgLeaveHallResponse)
 private:
  inline void set_has_leavetype();
  inline void clear_has_leavetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 leavetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaveHallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSystemErrorResponse : public ::google::protobuf::Message {
 public:
  CMsgSystemErrorResponse();
  virtual ~CMsgSystemErrorResponse();

  CMsgSystemErrorResponse(const CMsgSystemErrorResponse& from);

  inline CMsgSystemErrorResponse& operator=(const CMsgSystemErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSystemErrorResponse& default_instance();

  void Swap(CMsgSystemErrorResponse* other);

  // implements Message ----------------------------------------------

  CMsgSystemErrorResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSystemErrorResponse& from);
  void MergeFrom(const CMsgSystemErrorResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSystemErrorResponse_Msg Msg;
  static const Msg MsgID = CMsgSystemErrorResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgSystemErrorResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgSystemErrorResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgSystemErrorResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgSystemErrorResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgSystemErrorResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgSystemErrorResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgSystemErrorResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgSystemErrorResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgSystemErrorResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTestRequest : public ::google::protobuf::Message {
 public:
  CMsgTestRequest();
  virtual ~CMsgTestRequest();

  CMsgTestRequest(const CMsgTestRequest& from);

  inline CMsgTestRequest& operator=(const CMsgTestRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTestRequest& default_instance();

  void Swap(CMsgTestRequest* other);

  // implements Message ----------------------------------------------

  CMsgTestRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTestRequest& from);
  void MergeFrom(const CMsgTestRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTestRequest_Msg Msg;
  static const Msg MsgID = CMsgTestRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgTestRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgTestRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgTestRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgTestRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgTestRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgTestRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgTestRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::int32 entityid() const;
  inline void set_entityid(::google::protobuf::int32 value);

  // optional int64 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // optional int64 TimeStamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);

  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CMsgTestRequest)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int64 timestamp_;
  ::std::string* name_;
  ::google::protobuf::int32 entityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgTestRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTestResponse : public ::google::protobuf::Message {
 public:
  CMsgTestResponse();
  virtual ~CMsgTestResponse();

  CMsgTestResponse(const CMsgTestResponse& from);

  inline CMsgTestResponse& operator=(const CMsgTestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTestResponse& default_instance();

  void Swap(CMsgTestResponse* other);

  // implements Message ----------------------------------------------

  CMsgTestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTestResponse& from);
  void MergeFrom(const CMsgTestResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTestResponse_Msg Msg;
  static const Msg MsgID = CMsgTestResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgTestResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgTestResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgTestResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgTestResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgTestResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgTestResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgTestResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::int32 entityid() const;
  inline void set_entityid(::google::protobuf::int32 value);

  // optional int64 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // optional int64 TimeStamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);

  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CMsgTestResponse)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int64 timestamp_;
  ::std::string* name_;
  ::google::protobuf::int32 entityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgTestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgExchangeResourceRequest : public ::google::protobuf::Message {
 public:
  CMsgExchangeResourceRequest();
  virtual ~CMsgExchangeResourceRequest();

  CMsgExchangeResourceRequest(const CMsgExchangeResourceRequest& from);

  inline CMsgExchangeResourceRequest& operator=(const CMsgExchangeResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExchangeResourceRequest& default_instance();

  void Swap(CMsgExchangeResourceRequest* other);

  // implements Message ----------------------------------------------

  CMsgExchangeResourceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgExchangeResourceRequest& from);
  void MergeFrom(const CMsgExchangeResourceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgExchangeResourceRequest_Msg Msg;
  static const Msg MsgID = CMsgExchangeResourceRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgExchangeResourceRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgExchangeResourceRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgExchangeResourceRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgExchangeResourceRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgExchangeResourceRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgExchangeResourceRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgExchangeResourceRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgExchangeResourceRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgExchangeResourceRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgExchangeResourceResponse : public ::google::protobuf::Message {
 public:
  CMsgExchangeResourceResponse();
  virtual ~CMsgExchangeResourceResponse();

  CMsgExchangeResourceResponse(const CMsgExchangeResourceResponse& from);

  inline CMsgExchangeResourceResponse& operator=(const CMsgExchangeResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExchangeResourceResponse& default_instance();

  void Swap(CMsgExchangeResourceResponse* other);

  // implements Message ----------------------------------------------

  CMsgExchangeResourceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgExchangeResourceResponse& from);
  void MergeFrom(const CMsgExchangeResourceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgExchangeResourceResponse_Msg Msg;
  static const Msg MsgID = CMsgExchangeResourceResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgExchangeResourceResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgExchangeResourceResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgExchangeResourceResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgExchangeResourceResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgExchangeResourceResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgExchangeResourceResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgExchangeResourceResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .PBUpdateResource resources = 2;
  inline int resources_size() const;
  inline void clear_resources();
  static const int kResourcesFieldNumber = 2;
  inline const ::PBUpdateResource& resources(int index) const;
  inline ::PBUpdateResource* mutable_resources(int index);
  inline ::PBUpdateResource* add_resources();
  inline const ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >&
      resources() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >*
      mutable_resources();

  // @@protoc_insertion_point(class_scope:CMsgExchangeResourceResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBUpdateResource > resources_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgExchangeResourceResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenameRequest : public ::google::protobuf::Message {
 public:
  CMsgRenameRequest();
  virtual ~CMsgRenameRequest();

  CMsgRenameRequest(const CMsgRenameRequest& from);

  inline CMsgRenameRequest& operator=(const CMsgRenameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenameRequest& default_instance();

  void Swap(CMsgRenameRequest* other);

  // implements Message ----------------------------------------------

  CMsgRenameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenameRequest& from);
  void MergeFrom(const CMsgRenameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgRenameRequest_Msg Msg;
  static const Msg MsgID = CMsgRenameRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgRenameRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgRenameRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgRenameRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgRenameRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgRenameRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgRenameRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgRenameRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string RoleName = 1;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // @@protoc_insertion_point(class_scope:CMsgRenameRequest)
 private:
  inline void set_has_rolename();
  inline void clear_has_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRenameResponse : public ::google::protobuf::Message {
 public:
  CMsgRenameResponse();
  virtual ~CMsgRenameResponse();

  CMsgRenameResponse(const CMsgRenameResponse& from);

  inline CMsgRenameResponse& operator=(const CMsgRenameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRenameResponse& default_instance();

  void Swap(CMsgRenameResponse* other);

  // implements Message ----------------------------------------------

  CMsgRenameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRenameResponse& from);
  void MergeFrom(const CMsgRenameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgRenameResponse_Msg Msg;
  static const Msg MsgID = CMsgRenameResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgRenameResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgRenameResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgRenameResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgRenameResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgRenameResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgRenameResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgRenameResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required string rolename = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // @@protoc_insertion_point(class_scope:CMsgRenameResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_rolename();
  inline void clear_has_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgRenameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgChangeHeadRequest : public ::google::protobuf::Message {
 public:
  CMsgChangeHeadRequest();
  virtual ~CMsgChangeHeadRequest();

  CMsgChangeHeadRequest(const CMsgChangeHeadRequest& from);

  inline CMsgChangeHeadRequest& operator=(const CMsgChangeHeadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgChangeHeadRequest& default_instance();

  void Swap(CMsgChangeHeadRequest* other);

  // implements Message ----------------------------------------------

  CMsgChangeHeadRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgChangeHeadRequest& from);
  void MergeFrom(const CMsgChangeHeadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgChangeHeadRequest_Msg Msg;
  static const Msg MsgID = CMsgChangeHeadRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgChangeHeadRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgChangeHeadRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgChangeHeadRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgChangeHeadRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgChangeHeadRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgChangeHeadRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgChangeHeadRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 HeadId = 1;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadIdFieldNumber = 1;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgChangeHeadRequest)
 private:
  inline void set_has_headid();
  inline void clear_has_headid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 headid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgChangeHeadRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgChangeHeadResponse : public ::google::protobuf::Message {
 public:
  CMsgChangeHeadResponse();
  virtual ~CMsgChangeHeadResponse();

  CMsgChangeHeadResponse(const CMsgChangeHeadResponse& from);

  inline CMsgChangeHeadResponse& operator=(const CMsgChangeHeadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgChangeHeadResponse& default_instance();

  void Swap(CMsgChangeHeadResponse* other);

  // implements Message ----------------------------------------------

  CMsgChangeHeadResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgChangeHeadResponse& from);
  void MergeFrom(const CMsgChangeHeadResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgChangeHeadResponse_Msg Msg;
  static const Msg MsgID = CMsgChangeHeadResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgChangeHeadResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgChangeHeadResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgChangeHeadResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgChangeHeadResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgChangeHeadResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgChangeHeadResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgChangeHeadResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 headid = 2;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadidFieldNumber = 2;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgChangeHeadResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_headid();
  inline void clear_has_headid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 headid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgChangeHeadResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateResourceResponse : public ::google::protobuf::Message {
 public:
  CMsgUpdateResourceResponse();
  virtual ~CMsgUpdateResourceResponse();

  CMsgUpdateResourceResponse(const CMsgUpdateResourceResponse& from);

  inline CMsgUpdateResourceResponse& operator=(const CMsgUpdateResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateResourceResponse& default_instance();

  void Swap(CMsgUpdateResourceResponse* other);

  // implements Message ----------------------------------------------

  CMsgUpdateResourceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateResourceResponse& from);
  void MergeFrom(const CMsgUpdateResourceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgUpdateResourceResponse_Msg Msg;
  static const Msg MsgID = CMsgUpdateResourceResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgUpdateResourceResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgUpdateResourceResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgUpdateResourceResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgUpdateResourceResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgUpdateResourceResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgUpdateResourceResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgUpdateResourceResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PBUpdateResource resources = 1;
  inline int resources_size() const;
  inline void clear_resources();
  static const int kResourcesFieldNumber = 1;
  inline const ::PBUpdateResource& resources(int index) const;
  inline ::PBUpdateResource* mutable_resources(int index);
  inline ::PBUpdateResource* add_resources();
  inline const ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >&
      resources() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >*
      mutable_resources();

  // @@protoc_insertion_point(class_scope:CMsgUpdateResourceResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBUpdateResource > resources_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpdateResourceResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAlmsResponse : public ::google::protobuf::Message {
 public:
  CMsgAlmsResponse();
  virtual ~CMsgAlmsResponse();

  CMsgAlmsResponse(const CMsgAlmsResponse& from);

  inline CMsgAlmsResponse& operator=(const CMsgAlmsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAlmsResponse& default_instance();

  void Swap(CMsgAlmsResponse* other);

  // implements Message ----------------------------------------------

  CMsgAlmsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAlmsResponse& from);
  void MergeFrom(const CMsgAlmsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgAlmsResponse_Msg Msg;
  static const Msg MsgID = CMsgAlmsResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgAlmsResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgAlmsResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgAlmsResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgAlmsResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgAlmsResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgAlmsResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgAlmsResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgAlmsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgAlmsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBackHallOKRequest : public ::google::protobuf::Message {
 public:
  CMsgBackHallOKRequest();
  virtual ~CMsgBackHallOKRequest();

  CMsgBackHallOKRequest(const CMsgBackHallOKRequest& from);

  inline CMsgBackHallOKRequest& operator=(const CMsgBackHallOKRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBackHallOKRequest& default_instance();

  void Swap(CMsgBackHallOKRequest* other);

  // implements Message ----------------------------------------------

  CMsgBackHallOKRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBackHallOKRequest& from);
  void MergeFrom(const CMsgBackHallOKRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgBackHallOKRequest_Msg Msg;
  static const Msg MsgID = CMsgBackHallOKRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgBackHallOKRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgBackHallOKRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgBackHallOKRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgBackHallOKRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgBackHallOKRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgBackHallOKRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgBackHallOKRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgBackHallOKRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgBackHallOKRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDataStatisticsRequest : public ::google::protobuf::Message {
 public:
  CMsgDataStatisticsRequest();
  virtual ~CMsgDataStatisticsRequest();

  CMsgDataStatisticsRequest(const CMsgDataStatisticsRequest& from);

  inline CMsgDataStatisticsRequest& operator=(const CMsgDataStatisticsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDataStatisticsRequest& default_instance();

  void Swap(CMsgDataStatisticsRequest* other);

  // implements Message ----------------------------------------------

  CMsgDataStatisticsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDataStatisticsRequest& from);
  void MergeFrom(const CMsgDataStatisticsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDataStatisticsRequest_Msg Msg;
  static const Msg MsgID = CMsgDataStatisticsRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgDataStatisticsRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgDataStatisticsRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgDataStatisticsRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgDataStatisticsRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgDataStatisticsRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgDataStatisticsRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgDataStatisticsRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .EDataStatisticsType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::EDataStatisticsType type() const;
  inline void set_type(::EDataStatisticsType value);

  // @@protoc_insertion_point(class_scope:CMsgDataStatisticsRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgDataStatisticsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallDataStatisticsResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallDataStatisticsResponse();
  virtual ~CMsg8BallDataStatisticsResponse();

  CMsg8BallDataStatisticsResponse(const CMsg8BallDataStatisticsResponse& from);

  inline CMsg8BallDataStatisticsResponse& operator=(const CMsg8BallDataStatisticsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallDataStatisticsResponse& default_instance();

  void Swap(CMsg8BallDataStatisticsResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallDataStatisticsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallDataStatisticsResponse& from);
  void MergeFrom(const CMsg8BallDataStatisticsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallDataStatisticsResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallDataStatisticsResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallDataStatisticsResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallDataStatisticsResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallDataStatisticsResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallDataStatisticsResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallDataStatisticsResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallDataStatisticsResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallDataStatisticsResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .EDataStatisticsType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::EDataStatisticsType type() const;
  inline void set_type(::EDataStatisticsType value);

  // required int32 win = 3;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 3;
  inline ::google::protobuf::int32 win() const;
  inline void set_win(::google::protobuf::int32 value);

  // required int32 lose = 4;
  inline bool has_lose() const;
  inline void clear_lose();
  static const int kLoseFieldNumber = 4;
  inline ::google::protobuf::int32 lose() const;
  inline void set_lose(::google::protobuf::int32 value);

  // required int32 escape = 5;
  inline bool has_escape() const;
  inline void clear_escape();
  static const int kEscapeFieldNumber = 5;
  inline ::google::protobuf::int32 escape() const;
  inline void set_escape(::google::protobuf::int32 value);

  // required int32 winningstreak = 6;
  inline bool has_winningstreak() const;
  inline void clear_winningstreak();
  static const int kWinningstreakFieldNumber = 6;
  inline ::google::protobuf::int32 winningstreak() const;
  inline void set_winningstreak(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsg8BallDataStatisticsResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_win();
  inline void clear_has_win();
  inline void set_has_lose();
  inline void clear_has_lose();
  inline void set_has_escape();
  inline void clear_has_escape();
  inline void set_has_winningstreak();
  inline void clear_has_winningstreak();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int type_;
  ::google::protobuf::int32 win_;
  ::google::protobuf::int32 lose_;
  ::google::protobuf::int32 escape_;
  ::google::protobuf::int32 winningstreak_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_coremessage_2eproto();
  friend void protobuf_AssignDesc_coremessage_2eproto();
  friend void protobuf_ShutdownFile_coremessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallDataStatisticsResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgLoginHallRequest

// required string Account = 1;
inline bool CMsgLoginHallRequest::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLoginHallRequest::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLoginHallRequest::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLoginHallRequest::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& CMsgLoginHallRequest::account() const {
  return *account_;
}
inline void CMsgLoginHallRequest::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CMsgLoginHallRequest::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CMsgLoginHallRequest::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgLoginHallRequest::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* CMsgLoginHallRequest::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgLoginHallRequest::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string Password = 2;
inline bool CMsgLoginHallRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLoginHallRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLoginHallRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLoginHallRequest::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& CMsgLoginHallRequest::password() const {
  return *password_;
}
inline void CMsgLoginHallRequest::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMsgLoginHallRequest::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMsgLoginHallRequest::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgLoginHallRequest::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* CMsgLoginHallRequest::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgLoginHallRequest::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 PFrom = 3;
inline bool CMsgLoginHallRequest::has_pfrom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLoginHallRequest::set_has_pfrom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLoginHallRequest::clear_has_pfrom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLoginHallRequest::clear_pfrom() {
  pfrom_ = 0;
  clear_has_pfrom();
}
inline ::google::protobuf::int32 CMsgLoginHallRequest::pfrom() const {
  return pfrom_;
}
inline void CMsgLoginHallRequest::set_pfrom(::google::protobuf::int32 value) {
  set_has_pfrom();
  pfrom_ = value;
}

// required string Session = 4;
inline bool CMsgLoginHallRequest::has_session() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLoginHallRequest::set_has_session() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLoginHallRequest::clear_has_session() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLoginHallRequest::clear_session() {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& CMsgLoginHallRequest::session() const {
  return *session_;
}
inline void CMsgLoginHallRequest::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void CMsgLoginHallRequest::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void CMsgLoginHallRequest::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgLoginHallRequest::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  return session_;
}
inline ::std::string* CMsgLoginHallRequest::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgLoginHallRequest::set_allocated_session(::std::string* session) {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    delete session_;
  }
  if (session) {
    set_has_session();
    session_ = session;
  } else {
    clear_has_session();
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgLoginHallResponse

// required int32 Result = 1;
inline bool CMsgLoginHallResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLoginHallResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLoginHallResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLoginHallResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgLoginHallResponse::result() const {
  return result_;
}
inline void CMsgLoginHallResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 EntityID = 2;
inline bool CMsgLoginHallResponse::has_entityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLoginHallResponse::set_has_entityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLoginHallResponse::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLoginHallResponse::clear_entityid() {
  entityid_ = 0;
  clear_has_entityid();
}
inline ::google::protobuf::int32 CMsgLoginHallResponse::entityid() const {
  return entityid_;
}
inline void CMsgLoginHallResponse::set_entityid(::google::protobuf::int32 value) {
  set_has_entityid();
  entityid_ = value;
}

// required int64 RoleID = 3;
inline bool CMsgLoginHallResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLoginHallResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLoginHallResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLoginHallResponse::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 CMsgLoginHallResponse::roleid() const {
  return roleid_;
}
inline void CMsgLoginHallResponse::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string RoleName = 4;
inline bool CMsgLoginHallResponse::has_rolename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLoginHallResponse::set_has_rolename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLoginHallResponse::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLoginHallResponse::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& CMsgLoginHallResponse::rolename() const {
  return *rolename_;
}
inline void CMsgLoginHallResponse::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgLoginHallResponse::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgLoginHallResponse::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgLoginHallResponse::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* CMsgLoginHallResponse::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgLoginHallResponse::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .PBUpdateResource resources = 5;
inline int CMsgLoginHallResponse::resources_size() const {
  return resources_.size();
}
inline void CMsgLoginHallResponse::clear_resources() {
  resources_.Clear();
}
inline const ::PBUpdateResource& CMsgLoginHallResponse::resources(int index) const {
  return resources_.Get(index);
}
inline ::PBUpdateResource* CMsgLoginHallResponse::mutable_resources(int index) {
  return resources_.Mutable(index);
}
inline ::PBUpdateResource* CMsgLoginHallResponse::add_resources() {
  return resources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >&
CMsgLoginHallResponse::resources() const {
  return resources_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >*
CMsgLoginHallResponse::mutable_resources() {
  return &resources_;
}

// repeated .PBGagaleType1SingleInfo data = 6;
inline int CMsgLoginHallResponse::data_size() const {
  return data_.size();
}
inline void CMsgLoginHallResponse::clear_data() {
  data_.Clear();
}
inline const ::PBGagaleType1SingleInfo& CMsgLoginHallResponse::data(int index) const {
  return data_.Get(index);
}
inline ::PBGagaleType1SingleInfo* CMsgLoginHallResponse::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::PBGagaleType1SingleInfo* CMsgLoginHallResponse::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGagaleType1SingleInfo >&
CMsgLoginHallResponse::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGagaleType1SingleInfo >*
CMsgLoginHallResponse::mutable_data() {
  return &data_;
}

// repeated .PBItem Items = 7;
inline int CMsgLoginHallResponse::items_size() const {
  return items_.size();
}
inline void CMsgLoginHallResponse::clear_items() {
  items_.Clear();
}
inline const ::PBItem& CMsgLoginHallResponse::items(int index) const {
  return items_.Get(index);
}
inline ::PBItem* CMsgLoginHallResponse::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::PBItem* CMsgLoginHallResponse::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
CMsgLoginHallResponse::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
CMsgLoginHallResponse::mutable_items() {
  return &items_;
}

// required bool HasFirstChangeName = 8;
inline bool CMsgLoginHallResponse::has_hasfirstchangename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgLoginHallResponse::set_has_hasfirstchangename() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgLoginHallResponse::clear_has_hasfirstchangename() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgLoginHallResponse::clear_hasfirstchangename() {
  hasfirstchangename_ = false;
  clear_has_hasfirstchangename();
}
inline bool CMsgLoginHallResponse::hasfirstchangename() const {
  return hasfirstchangename_;
}
inline void CMsgLoginHallResponse::set_hasfirstchangename(bool value) {
  set_has_hasfirstchangename();
  hasfirstchangename_ = value;
}

// required int32 headid = 9;
inline bool CMsgLoginHallResponse::has_headid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgLoginHallResponse::set_has_headid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgLoginHallResponse::clear_has_headid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgLoginHallResponse::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 CMsgLoginHallResponse::headid() const {
  return headid_;
}
inline void CMsgLoginHallResponse::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
}

// -------------------------------------------------------------------

// CMsgLeaveHallRequest

// required int32 LeaveType = 1;
inline bool CMsgLeaveHallRequest::has_leavetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaveHallRequest::set_has_leavetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaveHallRequest::clear_has_leavetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaveHallRequest::clear_leavetype() {
  leavetype_ = 0;
  clear_has_leavetype();
}
inline ::google::protobuf::int32 CMsgLeaveHallRequest::leavetype() const {
  return leavetype_;
}
inline void CMsgLeaveHallRequest::set_leavetype(::google::protobuf::int32 value) {
  set_has_leavetype();
  leavetype_ = value;
}

// -------------------------------------------------------------------

// CMsgLeaveHallResponse

// required int32 LeaveType = 1;
inline bool CMsgLeaveHallResponse::has_leavetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaveHallResponse::set_has_leavetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaveHallResponse::clear_has_leavetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaveHallResponse::clear_leavetype() {
  leavetype_ = 0;
  clear_has_leavetype();
}
inline ::google::protobuf::int32 CMsgLeaveHallResponse::leavetype() const {
  return leavetype_;
}
inline void CMsgLeaveHallResponse::set_leavetype(::google::protobuf::int32 value) {
  set_has_leavetype();
  leavetype_ = value;
}

// -------------------------------------------------------------------

// CMsgSystemErrorResponse

// required int32 Result = 1;
inline bool CMsgSystemErrorResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSystemErrorResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSystemErrorResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSystemErrorResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgSystemErrorResponse::result() const {
  return result_;
}
inline void CMsgSystemErrorResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CMsgTestRequest

// optional int32 EntityID = 1;
inline bool CMsgTestRequest::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTestRequest::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTestRequest::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTestRequest::clear_entityid() {
  entityid_ = 0;
  clear_has_entityid();
}
inline ::google::protobuf::int32 CMsgTestRequest::entityid() const {
  return entityid_;
}
inline void CMsgTestRequest::set_entityid(::google::protobuf::int32 value) {
  set_has_entityid();
  entityid_ = value;
}

// optional int64 RoleID = 2;
inline bool CMsgTestRequest::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTestRequest::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTestRequest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTestRequest::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 CMsgTestRequest::roleid() const {
  return roleid_;
}
inline void CMsgTestRequest::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int64 TimeStamp = 3;
inline bool CMsgTestRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTestRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTestRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTestRequest::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 CMsgTestRequest::timestamp() const {
  return timestamp_;
}
inline void CMsgTestRequest::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional string Name = 4;
inline bool CMsgTestRequest::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTestRequest::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTestRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTestRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgTestRequest::name() const {
  return *name_;
}
inline void CMsgTestRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgTestRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgTestRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTestRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgTestRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgTestRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgTestResponse

// optional int32 EntityID = 1;
inline bool CMsgTestResponse::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTestResponse::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTestResponse::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTestResponse::clear_entityid() {
  entityid_ = 0;
  clear_has_entityid();
}
inline ::google::protobuf::int32 CMsgTestResponse::entityid() const {
  return entityid_;
}
inline void CMsgTestResponse::set_entityid(::google::protobuf::int32 value) {
  set_has_entityid();
  entityid_ = value;
}

// optional int64 RoleID = 2;
inline bool CMsgTestResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTestResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTestResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTestResponse::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 CMsgTestResponse::roleid() const {
  return roleid_;
}
inline void CMsgTestResponse::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int64 TimeStamp = 3;
inline bool CMsgTestResponse::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTestResponse::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTestResponse::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTestResponse::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 CMsgTestResponse::timestamp() const {
  return timestamp_;
}
inline void CMsgTestResponse::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional string Name = 4;
inline bool CMsgTestResponse::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTestResponse::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTestResponse::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTestResponse::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgTestResponse::name() const {
  return *name_;
}
inline void CMsgTestResponse::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgTestResponse::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgTestResponse::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTestResponse::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgTestResponse::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgTestResponse::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgExchangeResourceRequest

// required int32 id = 1;
inline bool CMsgExchangeResourceRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExchangeResourceRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExchangeResourceRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExchangeResourceRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CMsgExchangeResourceRequest::id() const {
  return id_;
}
inline void CMsgExchangeResourceRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CMsgExchangeResourceResponse

// required int32 result = 1;
inline bool CMsgExchangeResourceResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExchangeResourceResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExchangeResourceResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExchangeResourceResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgExchangeResourceResponse::result() const {
  return result_;
}
inline void CMsgExchangeResourceResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .PBUpdateResource resources = 2;
inline int CMsgExchangeResourceResponse::resources_size() const {
  return resources_.size();
}
inline void CMsgExchangeResourceResponse::clear_resources() {
  resources_.Clear();
}
inline const ::PBUpdateResource& CMsgExchangeResourceResponse::resources(int index) const {
  return resources_.Get(index);
}
inline ::PBUpdateResource* CMsgExchangeResourceResponse::mutable_resources(int index) {
  return resources_.Mutable(index);
}
inline ::PBUpdateResource* CMsgExchangeResourceResponse::add_resources() {
  return resources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >&
CMsgExchangeResourceResponse::resources() const {
  return resources_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >*
CMsgExchangeResourceResponse::mutable_resources() {
  return &resources_;
}

// -------------------------------------------------------------------

// CMsgRenameRequest

// required string RoleName = 1;
inline bool CMsgRenameRequest::has_rolename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRenameRequest::set_has_rolename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRenameRequest::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRenameRequest::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& CMsgRenameRequest::rolename() const {
  return *rolename_;
}
inline void CMsgRenameRequest::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgRenameRequest::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgRenameRequest::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgRenameRequest::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* CMsgRenameRequest::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgRenameRequest::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgRenameResponse

// required int32 Result = 1;
inline bool CMsgRenameResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRenameResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRenameResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRenameResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgRenameResponse::result() const {
  return result_;
}
inline void CMsgRenameResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required string rolename = 2;
inline bool CMsgRenameResponse::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRenameResponse::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRenameResponse::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRenameResponse::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& CMsgRenameResponse::rolename() const {
  return *rolename_;
}
inline void CMsgRenameResponse::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgRenameResponse::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgRenameResponse::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgRenameResponse::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* CMsgRenameResponse::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgRenameResponse::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgChangeHeadRequest

// required int32 HeadId = 1;
inline bool CMsgChangeHeadRequest::has_headid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgChangeHeadRequest::set_has_headid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgChangeHeadRequest::clear_has_headid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgChangeHeadRequest::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 CMsgChangeHeadRequest::headid() const {
  return headid_;
}
inline void CMsgChangeHeadRequest::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
}

// -------------------------------------------------------------------

// CMsgChangeHeadResponse

// required int32 Result = 1;
inline bool CMsgChangeHeadResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgChangeHeadResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgChangeHeadResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgChangeHeadResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgChangeHeadResponse::result() const {
  return result_;
}
inline void CMsgChangeHeadResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 headid = 2;
inline bool CMsgChangeHeadResponse::has_headid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgChangeHeadResponse::set_has_headid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgChangeHeadResponse::clear_has_headid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgChangeHeadResponse::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 CMsgChangeHeadResponse::headid() const {
  return headid_;
}
inline void CMsgChangeHeadResponse::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
}

// -------------------------------------------------------------------

// CMsgUpdateResourceResponse

// repeated .PBUpdateResource resources = 1;
inline int CMsgUpdateResourceResponse::resources_size() const {
  return resources_.size();
}
inline void CMsgUpdateResourceResponse::clear_resources() {
  resources_.Clear();
}
inline const ::PBUpdateResource& CMsgUpdateResourceResponse::resources(int index) const {
  return resources_.Get(index);
}
inline ::PBUpdateResource* CMsgUpdateResourceResponse::mutable_resources(int index) {
  return resources_.Mutable(index);
}
inline ::PBUpdateResource* CMsgUpdateResourceResponse::add_resources() {
  return resources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >&
CMsgUpdateResourceResponse::resources() const {
  return resources_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBUpdateResource >*
CMsgUpdateResourceResponse::mutable_resources() {
  return &resources_;
}

// -------------------------------------------------------------------

// CMsgAlmsResponse

// -------------------------------------------------------------------

// CMsgBackHallOKRequest

// -------------------------------------------------------------------

// CMsgDataStatisticsRequest

// required .EDataStatisticsType type = 1;
inline bool CMsgDataStatisticsRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDataStatisticsRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDataStatisticsRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDataStatisticsRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::EDataStatisticsType CMsgDataStatisticsRequest::type() const {
  return static_cast< ::EDataStatisticsType >(type_);
}
inline void CMsgDataStatisticsRequest::set_type(::EDataStatisticsType value) {
  assert(::EDataStatisticsType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallDataStatisticsResponse

// required int32 result = 1;
inline bool CMsg8BallDataStatisticsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallDataStatisticsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallDataStatisticsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallDataStatisticsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsg8BallDataStatisticsResponse::result() const {
  return result_;
}
inline void CMsg8BallDataStatisticsResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .EDataStatisticsType type = 2;
inline bool CMsg8BallDataStatisticsResponse::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8BallDataStatisticsResponse::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8BallDataStatisticsResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8BallDataStatisticsResponse::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::EDataStatisticsType CMsg8BallDataStatisticsResponse::type() const {
  return static_cast< ::EDataStatisticsType >(type_);
}
inline void CMsg8BallDataStatisticsResponse::set_type(::EDataStatisticsType value) {
  assert(::EDataStatisticsType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required int32 win = 3;
inline bool CMsg8BallDataStatisticsResponse::has_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsg8BallDataStatisticsResponse::set_has_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsg8BallDataStatisticsResponse::clear_has_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsg8BallDataStatisticsResponse::clear_win() {
  win_ = 0;
  clear_has_win();
}
inline ::google::protobuf::int32 CMsg8BallDataStatisticsResponse::win() const {
  return win_;
}
inline void CMsg8BallDataStatisticsResponse::set_win(::google::protobuf::int32 value) {
  set_has_win();
  win_ = value;
}

// required int32 lose = 4;
inline bool CMsg8BallDataStatisticsResponse::has_lose() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsg8BallDataStatisticsResponse::set_has_lose() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsg8BallDataStatisticsResponse::clear_has_lose() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsg8BallDataStatisticsResponse::clear_lose() {
  lose_ = 0;
  clear_has_lose();
}
inline ::google::protobuf::int32 CMsg8BallDataStatisticsResponse::lose() const {
  return lose_;
}
inline void CMsg8BallDataStatisticsResponse::set_lose(::google::protobuf::int32 value) {
  set_has_lose();
  lose_ = value;
}

// required int32 escape = 5;
inline bool CMsg8BallDataStatisticsResponse::has_escape() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsg8BallDataStatisticsResponse::set_has_escape() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsg8BallDataStatisticsResponse::clear_has_escape() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsg8BallDataStatisticsResponse::clear_escape() {
  escape_ = 0;
  clear_has_escape();
}
inline ::google::protobuf::int32 CMsg8BallDataStatisticsResponse::escape() const {
  return escape_;
}
inline void CMsg8BallDataStatisticsResponse::set_escape(::google::protobuf::int32 value) {
  set_has_escape();
  escape_ = value;
}

// required int32 winningstreak = 6;
inline bool CMsg8BallDataStatisticsResponse::has_winningstreak() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsg8BallDataStatisticsResponse::set_has_winningstreak() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsg8BallDataStatisticsResponse::clear_has_winningstreak() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsg8BallDataStatisticsResponse::clear_winningstreak() {
  winningstreak_ = 0;
  clear_has_winningstreak();
}
inline ::google::protobuf::int32 CMsg8BallDataStatisticsResponse::winningstreak() const {
  return winningstreak_;
}
inline void CMsg8BallDataStatisticsResponse::set_winningstreak(::google::protobuf::int32 value) {
  set_has_winningstreak();
  winningstreak_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLoginHallRequest_Msg>() {
  return ::CMsgLoginHallRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLoginHallResponse_Msg>() {
  return ::CMsgLoginHallResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLeaveHallRequest_Msg>() {
  return ::CMsgLeaveHallRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLeaveHallResponse_Msg>() {
  return ::CMsgLeaveHallResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgSystemErrorResponse_Msg>() {
  return ::CMsgSystemErrorResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgTestRequest_Msg>() {
  return ::CMsgTestRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgTestResponse_Msg>() {
  return ::CMsgTestResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgExchangeResourceRequest_Msg>() {
  return ::CMsgExchangeResourceRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgExchangeResourceResponse_Msg>() {
  return ::CMsgExchangeResourceResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgRenameRequest_Msg>() {
  return ::CMsgRenameRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgRenameResponse_Msg>() {
  return ::CMsgRenameResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgChangeHeadRequest_Msg>() {
  return ::CMsgChangeHeadRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgChangeHeadResponse_Msg>() {
  return ::CMsgChangeHeadResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgUpdateResourceResponse_Msg>() {
  return ::CMsgUpdateResourceResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgAlmsResponse_Msg>() {
  return ::CMsgAlmsResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgBackHallOKRequest_Msg>() {
  return ::CMsgBackHallOKRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDataStatisticsRequest_Msg>() {
  return ::CMsgDataStatisticsRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallDataStatisticsResponse_Msg>() {
  return ::CMsg8BallDataStatisticsResponse_Msg_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_coremessage_2eproto__INCLUDED
