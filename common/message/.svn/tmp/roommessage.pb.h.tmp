// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roommessage.proto

#ifndef PROTOBUF_roommessage_2eproto__INCLUDED
#define PROTOBUF_roommessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "resourcemessage.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_roommessage_2eproto();
void protobuf_AssignDesc_roommessage_2eproto();
void protobuf_ShutdownFile_roommessage_2eproto();

class PBRoomServerInfo;
class PBRoomInfo;
class PBRoleInfo;
class PBConnectInfo;
class CMsgR2HRegistHallRequest;
class CMsgH2RRegistHallResponse;
class CMsgR2HUpdateRoomRequest;
class CMsgH2RUpdateRoomResponse;
class CMsgLoginRoomRequest;
class CMsgLoginRoomResponse;
class CMsgH2RCreateRoomRequest;
class CMsgR2HCreateRoomResponse;
class CMsgGoRoomResponse;
class CMsgJoinGameRequest;
class CMsgJoinGameResponse;
class CMsgUpdateRoleInfoResponse;
class CMsgLeaveRoomRequest;
class CMsgR2HLeaveRoomResponse;
class CMsgR2HUpdateRoleDataResponse;
class CMsgLucky28ShotRequest;
class CMsgLucky28PrepareResponse;
class CMsgLucky28StartResponse;
class CMsgLucky28EndResponse;
class CMsgLucky28ShotRoleResponse;
class CMsgLucky28ShotResultResponse;
class CMsg8BallStartGameRequest;
class CMsg8BallRoundStartResponse;
class CMsg8BallKickInfoRequest;
class CMsg8BallKickInfoResponse;
class CMsg8BallPositionRequest;
class CMsg8BallPositionResponse;
class CMsg8BallRoundEndRequest;
class CMsg8BallEndGameResponse;
class CMsg8BallCannotContinueResponse;
class CMsgLucky28SettlementEndRequest;
class CMsg8BallLeaveMatchRequest;
class CMsg8BallLeaveMatchResponse;
class CMsg8BallMoveBallRequest;
class CMsg8BallMoveBallResponse;
class CMsg8BallMoveGunRequest;
class CMsg8BallMoveGunResponse;
class CMsg8Ball3PFoulResponse;
class CMsg8BallUpdateResultToHall;

enum CMsgR2HRegistHallRequest_Msg {
  CMsgR2HRegistHallRequest_Msg_MsgID = 131073
};
bool CMsgR2HRegistHallRequest_Msg_IsValid(int value);
const CMsgR2HRegistHallRequest_Msg CMsgR2HRegistHallRequest_Msg_Msg_MIN = CMsgR2HRegistHallRequest_Msg_MsgID;
const CMsgR2HRegistHallRequest_Msg CMsgR2HRegistHallRequest_Msg_Msg_MAX = CMsgR2HRegistHallRequest_Msg_MsgID;
const int CMsgR2HRegistHallRequest_Msg_Msg_ARRAYSIZE = CMsgR2HRegistHallRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgR2HRegistHallRequest_Msg_descriptor();
inline const ::std::string& CMsgR2HRegistHallRequest_Msg_Name(CMsgR2HRegistHallRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgR2HRegistHallRequest_Msg_descriptor(), value);
}
inline bool CMsgR2HRegistHallRequest_Msg_Parse(
    const ::std::string& name, CMsgR2HRegistHallRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgR2HRegistHallRequest_Msg>(
    CMsgR2HRegistHallRequest_Msg_descriptor(), name, value);
}
enum CMsgH2RRegistHallResponse_Msg {
  CMsgH2RRegistHallResponse_Msg_MsgID = 131074
};
bool CMsgH2RRegistHallResponse_Msg_IsValid(int value);
const CMsgH2RRegistHallResponse_Msg CMsgH2RRegistHallResponse_Msg_Msg_MIN = CMsgH2RRegistHallResponse_Msg_MsgID;
const CMsgH2RRegistHallResponse_Msg CMsgH2RRegistHallResponse_Msg_Msg_MAX = CMsgH2RRegistHallResponse_Msg_MsgID;
const int CMsgH2RRegistHallResponse_Msg_Msg_ARRAYSIZE = CMsgH2RRegistHallResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgH2RRegistHallResponse_Msg_descriptor();
inline const ::std::string& CMsgH2RRegistHallResponse_Msg_Name(CMsgH2RRegistHallResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgH2RRegistHallResponse_Msg_descriptor(), value);
}
inline bool CMsgH2RRegistHallResponse_Msg_Parse(
    const ::std::string& name, CMsgH2RRegistHallResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgH2RRegistHallResponse_Msg>(
    CMsgH2RRegistHallResponse_Msg_descriptor(), name, value);
}
enum CMsgR2HUpdateRoomRequest_Msg {
  CMsgR2HUpdateRoomRequest_Msg_MsgID = 131075
};
bool CMsgR2HUpdateRoomRequest_Msg_IsValid(int value);
const CMsgR2HUpdateRoomRequest_Msg CMsgR2HUpdateRoomRequest_Msg_Msg_MIN = CMsgR2HUpdateRoomRequest_Msg_MsgID;
const CMsgR2HUpdateRoomRequest_Msg CMsgR2HUpdateRoomRequest_Msg_Msg_MAX = CMsgR2HUpdateRoomRequest_Msg_MsgID;
const int CMsgR2HUpdateRoomRequest_Msg_Msg_ARRAYSIZE = CMsgR2HUpdateRoomRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgR2HUpdateRoomRequest_Msg_descriptor();
inline const ::std::string& CMsgR2HUpdateRoomRequest_Msg_Name(CMsgR2HUpdateRoomRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgR2HUpdateRoomRequest_Msg_descriptor(), value);
}
inline bool CMsgR2HUpdateRoomRequest_Msg_Parse(
    const ::std::string& name, CMsgR2HUpdateRoomRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgR2HUpdateRoomRequest_Msg>(
    CMsgR2HUpdateRoomRequest_Msg_descriptor(), name, value);
}
enum CMsgH2RUpdateRoomResponse_Msg {
  CMsgH2RUpdateRoomResponse_Msg_MsgID = 131076
};
bool CMsgH2RUpdateRoomResponse_Msg_IsValid(int value);
const CMsgH2RUpdateRoomResponse_Msg CMsgH2RUpdateRoomResponse_Msg_Msg_MIN = CMsgH2RUpdateRoomResponse_Msg_MsgID;
const CMsgH2RUpdateRoomResponse_Msg CMsgH2RUpdateRoomResponse_Msg_Msg_MAX = CMsgH2RUpdateRoomResponse_Msg_MsgID;
const int CMsgH2RUpdateRoomResponse_Msg_Msg_ARRAYSIZE = CMsgH2RUpdateRoomResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgH2RUpdateRoomResponse_Msg_descriptor();
inline const ::std::string& CMsgH2RUpdateRoomResponse_Msg_Name(CMsgH2RUpdateRoomResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgH2RUpdateRoomResponse_Msg_descriptor(), value);
}
inline bool CMsgH2RUpdateRoomResponse_Msg_Parse(
    const ::std::string& name, CMsgH2RUpdateRoomResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgH2RUpdateRoomResponse_Msg>(
    CMsgH2RUpdateRoomResponse_Msg_descriptor(), name, value);
}
enum CMsgLoginRoomRequest_Msg {
  CMsgLoginRoomRequest_Msg_MsgID = 131077
};
bool CMsgLoginRoomRequest_Msg_IsValid(int value);
const CMsgLoginRoomRequest_Msg CMsgLoginRoomRequest_Msg_Msg_MIN = CMsgLoginRoomRequest_Msg_MsgID;
const CMsgLoginRoomRequest_Msg CMsgLoginRoomRequest_Msg_Msg_MAX = CMsgLoginRoomRequest_Msg_MsgID;
const int CMsgLoginRoomRequest_Msg_Msg_ARRAYSIZE = CMsgLoginRoomRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLoginRoomRequest_Msg_descriptor();
inline const ::std::string& CMsgLoginRoomRequest_Msg_Name(CMsgLoginRoomRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLoginRoomRequest_Msg_descriptor(), value);
}
inline bool CMsgLoginRoomRequest_Msg_Parse(
    const ::std::string& name, CMsgLoginRoomRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLoginRoomRequest_Msg>(
    CMsgLoginRoomRequest_Msg_descriptor(), name, value);
}
enum CMsgLoginRoomResponse_Msg {
  CMsgLoginRoomResponse_Msg_MsgID = 131078
};
bool CMsgLoginRoomResponse_Msg_IsValid(int value);
const CMsgLoginRoomResponse_Msg CMsgLoginRoomResponse_Msg_Msg_MIN = CMsgLoginRoomResponse_Msg_MsgID;
const CMsgLoginRoomResponse_Msg CMsgLoginRoomResponse_Msg_Msg_MAX = CMsgLoginRoomResponse_Msg_MsgID;
const int CMsgLoginRoomResponse_Msg_Msg_ARRAYSIZE = CMsgLoginRoomResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLoginRoomResponse_Msg_descriptor();
inline const ::std::string& CMsgLoginRoomResponse_Msg_Name(CMsgLoginRoomResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLoginRoomResponse_Msg_descriptor(), value);
}
inline bool CMsgLoginRoomResponse_Msg_Parse(
    const ::std::string& name, CMsgLoginRoomResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLoginRoomResponse_Msg>(
    CMsgLoginRoomResponse_Msg_descriptor(), name, value);
}
enum CMsgH2RCreateRoomRequest_Msg {
  CMsgH2RCreateRoomRequest_Msg_MsgID = 131079
};
bool CMsgH2RCreateRoomRequest_Msg_IsValid(int value);
const CMsgH2RCreateRoomRequest_Msg CMsgH2RCreateRoomRequest_Msg_Msg_MIN = CMsgH2RCreateRoomRequest_Msg_MsgID;
const CMsgH2RCreateRoomRequest_Msg CMsgH2RCreateRoomRequest_Msg_Msg_MAX = CMsgH2RCreateRoomRequest_Msg_MsgID;
const int CMsgH2RCreateRoomRequest_Msg_Msg_ARRAYSIZE = CMsgH2RCreateRoomRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgH2RCreateRoomRequest_Msg_descriptor();
inline const ::std::string& CMsgH2RCreateRoomRequest_Msg_Name(CMsgH2RCreateRoomRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgH2RCreateRoomRequest_Msg_descriptor(), value);
}
inline bool CMsgH2RCreateRoomRequest_Msg_Parse(
    const ::std::string& name, CMsgH2RCreateRoomRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgH2RCreateRoomRequest_Msg>(
    CMsgH2RCreateRoomRequest_Msg_descriptor(), name, value);
}
enum CMsgR2HCreateRoomResponse_Msg {
  CMsgR2HCreateRoomResponse_Msg_MsgID = 131080
};
bool CMsgR2HCreateRoomResponse_Msg_IsValid(int value);
const CMsgR2HCreateRoomResponse_Msg CMsgR2HCreateRoomResponse_Msg_Msg_MIN = CMsgR2HCreateRoomResponse_Msg_MsgID;
const CMsgR2HCreateRoomResponse_Msg CMsgR2HCreateRoomResponse_Msg_Msg_MAX = CMsgR2HCreateRoomResponse_Msg_MsgID;
const int CMsgR2HCreateRoomResponse_Msg_Msg_ARRAYSIZE = CMsgR2HCreateRoomResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgR2HCreateRoomResponse_Msg_descriptor();
inline const ::std::string& CMsgR2HCreateRoomResponse_Msg_Name(CMsgR2HCreateRoomResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgR2HCreateRoomResponse_Msg_descriptor(), value);
}
inline bool CMsgR2HCreateRoomResponse_Msg_Parse(
    const ::std::string& name, CMsgR2HCreateRoomResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgR2HCreateRoomResponse_Msg>(
    CMsgR2HCreateRoomResponse_Msg_descriptor(), name, value);
}
enum CMsgGoRoomResponse_Msg {
  CMsgGoRoomResponse_Msg_MsgID = 131081
};
bool CMsgGoRoomResponse_Msg_IsValid(int value);
const CMsgGoRoomResponse_Msg CMsgGoRoomResponse_Msg_Msg_MIN = CMsgGoRoomResponse_Msg_MsgID;
const CMsgGoRoomResponse_Msg CMsgGoRoomResponse_Msg_Msg_MAX = CMsgGoRoomResponse_Msg_MsgID;
const int CMsgGoRoomResponse_Msg_Msg_ARRAYSIZE = CMsgGoRoomResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGoRoomResponse_Msg_descriptor();
inline const ::std::string& CMsgGoRoomResponse_Msg_Name(CMsgGoRoomResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGoRoomResponse_Msg_descriptor(), value);
}
inline bool CMsgGoRoomResponse_Msg_Parse(
    const ::std::string& name, CMsgGoRoomResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGoRoomResponse_Msg>(
    CMsgGoRoomResponse_Msg_descriptor(), name, value);
}
enum CMsgJoinGameRequest_Msg {
  CMsgJoinGameRequest_Msg_MsgID = 16908298
};
bool CMsgJoinGameRequest_Msg_IsValid(int value);
const CMsgJoinGameRequest_Msg CMsgJoinGameRequest_Msg_Msg_MIN = CMsgJoinGameRequest_Msg_MsgID;
const CMsgJoinGameRequest_Msg CMsgJoinGameRequest_Msg_Msg_MAX = CMsgJoinGameRequest_Msg_MsgID;
const int CMsgJoinGameRequest_Msg_Msg_ARRAYSIZE = CMsgJoinGameRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgJoinGameRequest_Msg_descriptor();
inline const ::std::string& CMsgJoinGameRequest_Msg_Name(CMsgJoinGameRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgJoinGameRequest_Msg_descriptor(), value);
}
inline bool CMsgJoinGameRequest_Msg_Parse(
    const ::std::string& name, CMsgJoinGameRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgJoinGameRequest_Msg>(
    CMsgJoinGameRequest_Msg_descriptor(), name, value);
}
enum CMsgJoinGameResponse_Msg {
  CMsgJoinGameResponse_Msg_MsgID = 131083
};
bool CMsgJoinGameResponse_Msg_IsValid(int value);
const CMsgJoinGameResponse_Msg CMsgJoinGameResponse_Msg_Msg_MIN = CMsgJoinGameResponse_Msg_MsgID;
const CMsgJoinGameResponse_Msg CMsgJoinGameResponse_Msg_Msg_MAX = CMsgJoinGameResponse_Msg_MsgID;
const int CMsgJoinGameResponse_Msg_Msg_ARRAYSIZE = CMsgJoinGameResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgJoinGameResponse_Msg_descriptor();
inline const ::std::string& CMsgJoinGameResponse_Msg_Name(CMsgJoinGameResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgJoinGameResponse_Msg_descriptor(), value);
}
inline bool CMsgJoinGameResponse_Msg_Parse(
    const ::std::string& name, CMsgJoinGameResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgJoinGameResponse_Msg>(
    CMsgJoinGameResponse_Msg_descriptor(), name, value);
}
enum CMsgUpdateRoleInfoResponse_Msg {
  CMsgUpdateRoleInfoResponse_Msg_MsgID = 131086
};
bool CMsgUpdateRoleInfoResponse_Msg_IsValid(int value);
const CMsgUpdateRoleInfoResponse_Msg CMsgUpdateRoleInfoResponse_Msg_Msg_MIN = CMsgUpdateRoleInfoResponse_Msg_MsgID;
const CMsgUpdateRoleInfoResponse_Msg CMsgUpdateRoleInfoResponse_Msg_Msg_MAX = CMsgUpdateRoleInfoResponse_Msg_MsgID;
const int CMsgUpdateRoleInfoResponse_Msg_Msg_ARRAYSIZE = CMsgUpdateRoleInfoResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgUpdateRoleInfoResponse_Msg_descriptor();
inline const ::std::string& CMsgUpdateRoleInfoResponse_Msg_Name(CMsgUpdateRoleInfoResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgUpdateRoleInfoResponse_Msg_descriptor(), value);
}
inline bool CMsgUpdateRoleInfoResponse_Msg_Parse(
    const ::std::string& name, CMsgUpdateRoleInfoResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgUpdateRoleInfoResponse_Msg>(
    CMsgUpdateRoleInfoResponse_Msg_descriptor(), name, value);
}
enum CMsgLeaveRoomRequest_Msg {
  CMsgLeaveRoomRequest_Msg_MsgID = 16908303
};
bool CMsgLeaveRoomRequest_Msg_IsValid(int value);
const CMsgLeaveRoomRequest_Msg CMsgLeaveRoomRequest_Msg_Msg_MIN = CMsgLeaveRoomRequest_Msg_MsgID;
const CMsgLeaveRoomRequest_Msg CMsgLeaveRoomRequest_Msg_Msg_MAX = CMsgLeaveRoomRequest_Msg_MsgID;
const int CMsgLeaveRoomRequest_Msg_Msg_ARRAYSIZE = CMsgLeaveRoomRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLeaveRoomRequest_Msg_descriptor();
inline const ::std::string& CMsgLeaveRoomRequest_Msg_Name(CMsgLeaveRoomRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLeaveRoomRequest_Msg_descriptor(), value);
}
inline bool CMsgLeaveRoomRequest_Msg_Parse(
    const ::std::string& name, CMsgLeaveRoomRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLeaveRoomRequest_Msg>(
    CMsgLeaveRoomRequest_Msg_descriptor(), name, value);
}
enum CMsgR2HLeaveRoomResponse_Msg {
  CMsgR2HLeaveRoomResponse_Msg_MsgID = 131088
};
bool CMsgR2HLeaveRoomResponse_Msg_IsValid(int value);
const CMsgR2HLeaveRoomResponse_Msg CMsgR2HLeaveRoomResponse_Msg_Msg_MIN = CMsgR2HLeaveRoomResponse_Msg_MsgID;
const CMsgR2HLeaveRoomResponse_Msg CMsgR2HLeaveRoomResponse_Msg_Msg_MAX = CMsgR2HLeaveRoomResponse_Msg_MsgID;
const int CMsgR2HLeaveRoomResponse_Msg_Msg_ARRAYSIZE = CMsgR2HLeaveRoomResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgR2HLeaveRoomResponse_Msg_descriptor();
inline const ::std::string& CMsgR2HLeaveRoomResponse_Msg_Name(CMsgR2HLeaveRoomResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgR2HLeaveRoomResponse_Msg_descriptor(), value);
}
inline bool CMsgR2HLeaveRoomResponse_Msg_Parse(
    const ::std::string& name, CMsgR2HLeaveRoomResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgR2HLeaveRoomResponse_Msg>(
    CMsgR2HLeaveRoomResponse_Msg_descriptor(), name, value);
}
enum CMsgR2HUpdateRoleDataResponse_Msg {
  CMsgR2HUpdateRoleDataResponse_Msg_MsgID = 131089
};
bool CMsgR2HUpdateRoleDataResponse_Msg_IsValid(int value);
const CMsgR2HUpdateRoleDataResponse_Msg CMsgR2HUpdateRoleDataResponse_Msg_Msg_MIN = CMsgR2HUpdateRoleDataResponse_Msg_MsgID;
const CMsgR2HUpdateRoleDataResponse_Msg CMsgR2HUpdateRoleDataResponse_Msg_Msg_MAX = CMsgR2HUpdateRoleDataResponse_Msg_MsgID;
const int CMsgR2HUpdateRoleDataResponse_Msg_Msg_ARRAYSIZE = CMsgR2HUpdateRoleDataResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgR2HUpdateRoleDataResponse_Msg_descriptor();
inline const ::std::string& CMsgR2HUpdateRoleDataResponse_Msg_Name(CMsgR2HUpdateRoleDataResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgR2HUpdateRoleDataResponse_Msg_descriptor(), value);
}
inline bool CMsgR2HUpdateRoleDataResponse_Msg_Parse(
    const ::std::string& name, CMsgR2HUpdateRoleDataResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgR2HUpdateRoleDataResponse_Msg>(
    CMsgR2HUpdateRoleDataResponse_Msg_descriptor(), name, value);
}
enum CMsgLucky28ShotRequest_Msg {
  CMsgLucky28ShotRequest_Msg_MsgID = 16908306
};
bool CMsgLucky28ShotRequest_Msg_IsValid(int value);
const CMsgLucky28ShotRequest_Msg CMsgLucky28ShotRequest_Msg_Msg_MIN = CMsgLucky28ShotRequest_Msg_MsgID;
const CMsgLucky28ShotRequest_Msg CMsgLucky28ShotRequest_Msg_Msg_MAX = CMsgLucky28ShotRequest_Msg_MsgID;
const int CMsgLucky28ShotRequest_Msg_Msg_ARRAYSIZE = CMsgLucky28ShotRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLucky28ShotRequest_Msg_descriptor();
inline const ::std::string& CMsgLucky28ShotRequest_Msg_Name(CMsgLucky28ShotRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLucky28ShotRequest_Msg_descriptor(), value);
}
inline bool CMsgLucky28ShotRequest_Msg_Parse(
    const ::std::string& name, CMsgLucky28ShotRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLucky28ShotRequest_Msg>(
    CMsgLucky28ShotRequest_Msg_descriptor(), name, value);
}
enum CMsgLucky28PrepareResponse_Msg {
  CMsgLucky28PrepareResponse_Msg_MsgID = 131091
};
bool CMsgLucky28PrepareResponse_Msg_IsValid(int value);
const CMsgLucky28PrepareResponse_Msg CMsgLucky28PrepareResponse_Msg_Msg_MIN = CMsgLucky28PrepareResponse_Msg_MsgID;
const CMsgLucky28PrepareResponse_Msg CMsgLucky28PrepareResponse_Msg_Msg_MAX = CMsgLucky28PrepareResponse_Msg_MsgID;
const int CMsgLucky28PrepareResponse_Msg_Msg_ARRAYSIZE = CMsgLucky28PrepareResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLucky28PrepareResponse_Msg_descriptor();
inline const ::std::string& CMsgLucky28PrepareResponse_Msg_Name(CMsgLucky28PrepareResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLucky28PrepareResponse_Msg_descriptor(), value);
}
inline bool CMsgLucky28PrepareResponse_Msg_Parse(
    const ::std::string& name, CMsgLucky28PrepareResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLucky28PrepareResponse_Msg>(
    CMsgLucky28PrepareResponse_Msg_descriptor(), name, value);
}
enum CMsgLucky28StartResponse_Msg {
  CMsgLucky28StartResponse_Msg_MsgID = 131092
};
bool CMsgLucky28StartResponse_Msg_IsValid(int value);
const CMsgLucky28StartResponse_Msg CMsgLucky28StartResponse_Msg_Msg_MIN = CMsgLucky28StartResponse_Msg_MsgID;
const CMsgLucky28StartResponse_Msg CMsgLucky28StartResponse_Msg_Msg_MAX = CMsgLucky28StartResponse_Msg_MsgID;
const int CMsgLucky28StartResponse_Msg_Msg_ARRAYSIZE = CMsgLucky28StartResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLucky28StartResponse_Msg_descriptor();
inline const ::std::string& CMsgLucky28StartResponse_Msg_Name(CMsgLucky28StartResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLucky28StartResponse_Msg_descriptor(), value);
}
inline bool CMsgLucky28StartResponse_Msg_Parse(
    const ::std::string& name, CMsgLucky28StartResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLucky28StartResponse_Msg>(
    CMsgLucky28StartResponse_Msg_descriptor(), name, value);
}
enum CMsgLucky28EndResponse_Msg {
  CMsgLucky28EndResponse_Msg_MsgID = 131093
};
bool CMsgLucky28EndResponse_Msg_IsValid(int value);
const CMsgLucky28EndResponse_Msg CMsgLucky28EndResponse_Msg_Msg_MIN = CMsgLucky28EndResponse_Msg_MsgID;
const CMsgLucky28EndResponse_Msg CMsgLucky28EndResponse_Msg_Msg_MAX = CMsgLucky28EndResponse_Msg_MsgID;
const int CMsgLucky28EndResponse_Msg_Msg_ARRAYSIZE = CMsgLucky28EndResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLucky28EndResponse_Msg_descriptor();
inline const ::std::string& CMsgLucky28EndResponse_Msg_Name(CMsgLucky28EndResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLucky28EndResponse_Msg_descriptor(), value);
}
inline bool CMsgLucky28EndResponse_Msg_Parse(
    const ::std::string& name, CMsgLucky28EndResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLucky28EndResponse_Msg>(
    CMsgLucky28EndResponse_Msg_descriptor(), name, value);
}
enum CMsgLucky28ShotRoleResponse_Msg {
  CMsgLucky28ShotRoleResponse_Msg_MsgID = 131094
};
bool CMsgLucky28ShotRoleResponse_Msg_IsValid(int value);
const CMsgLucky28ShotRoleResponse_Msg CMsgLucky28ShotRoleResponse_Msg_Msg_MIN = CMsgLucky28ShotRoleResponse_Msg_MsgID;
const CMsgLucky28ShotRoleResponse_Msg CMsgLucky28ShotRoleResponse_Msg_Msg_MAX = CMsgLucky28ShotRoleResponse_Msg_MsgID;
const int CMsgLucky28ShotRoleResponse_Msg_Msg_ARRAYSIZE = CMsgLucky28ShotRoleResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLucky28ShotRoleResponse_Msg_descriptor();
inline const ::std::string& CMsgLucky28ShotRoleResponse_Msg_Name(CMsgLucky28ShotRoleResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLucky28ShotRoleResponse_Msg_descriptor(), value);
}
inline bool CMsgLucky28ShotRoleResponse_Msg_Parse(
    const ::std::string& name, CMsgLucky28ShotRoleResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLucky28ShotRoleResponse_Msg>(
    CMsgLucky28ShotRoleResponse_Msg_descriptor(), name, value);
}
enum CMsgLucky28ShotResultResponse_Msg {
  CMsgLucky28ShotResultResponse_Msg_MsgID = 131095
};
bool CMsgLucky28ShotResultResponse_Msg_IsValid(int value);
const CMsgLucky28ShotResultResponse_Msg CMsgLucky28ShotResultResponse_Msg_Msg_MIN = CMsgLucky28ShotResultResponse_Msg_MsgID;
const CMsgLucky28ShotResultResponse_Msg CMsgLucky28ShotResultResponse_Msg_Msg_MAX = CMsgLucky28ShotResultResponse_Msg_MsgID;
const int CMsgLucky28ShotResultResponse_Msg_Msg_ARRAYSIZE = CMsgLucky28ShotResultResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLucky28ShotResultResponse_Msg_descriptor();
inline const ::std::string& CMsgLucky28ShotResultResponse_Msg_Name(CMsgLucky28ShotResultResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLucky28ShotResultResponse_Msg_descriptor(), value);
}
inline bool CMsgLucky28ShotResultResponse_Msg_Parse(
    const ::std::string& name, CMsgLucky28ShotResultResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLucky28ShotResultResponse_Msg>(
    CMsgLucky28ShotResultResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallStartGameRequest_Msg {
  CMsg8BallStartGameRequest_Msg_MsgID = 16908312
};
bool CMsg8BallStartGameRequest_Msg_IsValid(int value);
const CMsg8BallStartGameRequest_Msg CMsg8BallStartGameRequest_Msg_Msg_MIN = CMsg8BallStartGameRequest_Msg_MsgID;
const CMsg8BallStartGameRequest_Msg CMsg8BallStartGameRequest_Msg_Msg_MAX = CMsg8BallStartGameRequest_Msg_MsgID;
const int CMsg8BallStartGameRequest_Msg_Msg_ARRAYSIZE = CMsg8BallStartGameRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallStartGameRequest_Msg_descriptor();
inline const ::std::string& CMsg8BallStartGameRequest_Msg_Name(CMsg8BallStartGameRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallStartGameRequest_Msg_descriptor(), value);
}
inline bool CMsg8BallStartGameRequest_Msg_Parse(
    const ::std::string& name, CMsg8BallStartGameRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallStartGameRequest_Msg>(
    CMsg8BallStartGameRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallRoundStartResponse_Msg {
  CMsg8BallRoundStartResponse_Msg_MsgID = 131097
};
bool CMsg8BallRoundStartResponse_Msg_IsValid(int value);
const CMsg8BallRoundStartResponse_Msg CMsg8BallRoundStartResponse_Msg_Msg_MIN = CMsg8BallRoundStartResponse_Msg_MsgID;
const CMsg8BallRoundStartResponse_Msg CMsg8BallRoundStartResponse_Msg_Msg_MAX = CMsg8BallRoundStartResponse_Msg_MsgID;
const int CMsg8BallRoundStartResponse_Msg_Msg_ARRAYSIZE = CMsg8BallRoundStartResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallRoundStartResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallRoundStartResponse_Msg_Name(CMsg8BallRoundStartResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallRoundStartResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallRoundStartResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallRoundStartResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallRoundStartResponse_Msg>(
    CMsg8BallRoundStartResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallKickInfoRequest_Msg {
  CMsg8BallKickInfoRequest_Msg_MsgID = 16908314
};
bool CMsg8BallKickInfoRequest_Msg_IsValid(int value);
const CMsg8BallKickInfoRequest_Msg CMsg8BallKickInfoRequest_Msg_Msg_MIN = CMsg8BallKickInfoRequest_Msg_MsgID;
const CMsg8BallKickInfoRequest_Msg CMsg8BallKickInfoRequest_Msg_Msg_MAX = CMsg8BallKickInfoRequest_Msg_MsgID;
const int CMsg8BallKickInfoRequest_Msg_Msg_ARRAYSIZE = CMsg8BallKickInfoRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallKickInfoRequest_Msg_descriptor();
inline const ::std::string& CMsg8BallKickInfoRequest_Msg_Name(CMsg8BallKickInfoRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallKickInfoRequest_Msg_descriptor(), value);
}
inline bool CMsg8BallKickInfoRequest_Msg_Parse(
    const ::std::string& name, CMsg8BallKickInfoRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallKickInfoRequest_Msg>(
    CMsg8BallKickInfoRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallKickInfoResponse_Msg {
  CMsg8BallKickInfoResponse_Msg_MsgID = 131099
};
bool CMsg8BallKickInfoResponse_Msg_IsValid(int value);
const CMsg8BallKickInfoResponse_Msg CMsg8BallKickInfoResponse_Msg_Msg_MIN = CMsg8BallKickInfoResponse_Msg_MsgID;
const CMsg8BallKickInfoResponse_Msg CMsg8BallKickInfoResponse_Msg_Msg_MAX = CMsg8BallKickInfoResponse_Msg_MsgID;
const int CMsg8BallKickInfoResponse_Msg_Msg_ARRAYSIZE = CMsg8BallKickInfoResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallKickInfoResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallKickInfoResponse_Msg_Name(CMsg8BallKickInfoResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallKickInfoResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallKickInfoResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallKickInfoResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallKickInfoResponse_Msg>(
    CMsg8BallKickInfoResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallPositionRequest_Msg {
  CMsg8BallPositionRequest_Msg_MsgID = 16908316
};
bool CMsg8BallPositionRequest_Msg_IsValid(int value);
const CMsg8BallPositionRequest_Msg CMsg8BallPositionRequest_Msg_Msg_MIN = CMsg8BallPositionRequest_Msg_MsgID;
const CMsg8BallPositionRequest_Msg CMsg8BallPositionRequest_Msg_Msg_MAX = CMsg8BallPositionRequest_Msg_MsgID;
const int CMsg8BallPositionRequest_Msg_Msg_ARRAYSIZE = CMsg8BallPositionRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallPositionRequest_Msg_descriptor();
inline const ::std::string& CMsg8BallPositionRequest_Msg_Name(CMsg8BallPositionRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallPositionRequest_Msg_descriptor(), value);
}
inline bool CMsg8BallPositionRequest_Msg_Parse(
    const ::std::string& name, CMsg8BallPositionRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallPositionRequest_Msg>(
    CMsg8BallPositionRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallPositionResponse_Msg {
  CMsg8BallPositionResponse_Msg_MsgID = 131101
};
bool CMsg8BallPositionResponse_Msg_IsValid(int value);
const CMsg8BallPositionResponse_Msg CMsg8BallPositionResponse_Msg_Msg_MIN = CMsg8BallPositionResponse_Msg_MsgID;
const CMsg8BallPositionResponse_Msg CMsg8BallPositionResponse_Msg_Msg_MAX = CMsg8BallPositionResponse_Msg_MsgID;
const int CMsg8BallPositionResponse_Msg_Msg_ARRAYSIZE = CMsg8BallPositionResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallPositionResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallPositionResponse_Msg_Name(CMsg8BallPositionResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallPositionResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallPositionResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallPositionResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallPositionResponse_Msg>(
    CMsg8BallPositionResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallRoundEndRequest_Msg {
  CMsg8BallRoundEndRequest_Msg_MsgID = 16908318
};
bool CMsg8BallRoundEndRequest_Msg_IsValid(int value);
const CMsg8BallRoundEndRequest_Msg CMsg8BallRoundEndRequest_Msg_Msg_MIN = CMsg8BallRoundEndRequest_Msg_MsgID;
const CMsg8BallRoundEndRequest_Msg CMsg8BallRoundEndRequest_Msg_Msg_MAX = CMsg8BallRoundEndRequest_Msg_MsgID;
const int CMsg8BallRoundEndRequest_Msg_Msg_ARRAYSIZE = CMsg8BallRoundEndRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallRoundEndRequest_Msg_descriptor();
inline const ::std::string& CMsg8BallRoundEndRequest_Msg_Name(CMsg8BallRoundEndRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallRoundEndRequest_Msg_descriptor(), value);
}
inline bool CMsg8BallRoundEndRequest_Msg_Parse(
    const ::std::string& name, CMsg8BallRoundEndRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallRoundEndRequest_Msg>(
    CMsg8BallRoundEndRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallEndGameResponse_Msg {
  CMsg8BallEndGameResponse_Msg_MsgID = 131103
};
bool CMsg8BallEndGameResponse_Msg_IsValid(int value);
const CMsg8BallEndGameResponse_Msg CMsg8BallEndGameResponse_Msg_Msg_MIN = CMsg8BallEndGameResponse_Msg_MsgID;
const CMsg8BallEndGameResponse_Msg CMsg8BallEndGameResponse_Msg_Msg_MAX = CMsg8BallEndGameResponse_Msg_MsgID;
const int CMsg8BallEndGameResponse_Msg_Msg_ARRAYSIZE = CMsg8BallEndGameResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallEndGameResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallEndGameResponse_Msg_Name(CMsg8BallEndGameResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallEndGameResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallEndGameResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallEndGameResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallEndGameResponse_Msg>(
    CMsg8BallEndGameResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallCannotContinueResponse_Msg {
  CMsg8BallCannotContinueResponse_Msg_MsgID = 131104
};
bool CMsg8BallCannotContinueResponse_Msg_IsValid(int value);
const CMsg8BallCannotContinueResponse_Msg CMsg8BallCannotContinueResponse_Msg_Msg_MIN = CMsg8BallCannotContinueResponse_Msg_MsgID;
const CMsg8BallCannotContinueResponse_Msg CMsg8BallCannotContinueResponse_Msg_Msg_MAX = CMsg8BallCannotContinueResponse_Msg_MsgID;
const int CMsg8BallCannotContinueResponse_Msg_Msg_ARRAYSIZE = CMsg8BallCannotContinueResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallCannotContinueResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallCannotContinueResponse_Msg_Name(CMsg8BallCannotContinueResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallCannotContinueResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallCannotContinueResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallCannotContinueResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallCannotContinueResponse_Msg>(
    CMsg8BallCannotContinueResponse_Msg_descriptor(), name, value);
}
enum CMsgLucky28SettlementEndRequest_Msg {
  CMsgLucky28SettlementEndRequest_Msg_MsgID = 16908321
};
bool CMsgLucky28SettlementEndRequest_Msg_IsValid(int value);
const CMsgLucky28SettlementEndRequest_Msg CMsgLucky28SettlementEndRequest_Msg_Msg_MIN = CMsgLucky28SettlementEndRequest_Msg_MsgID;
const CMsgLucky28SettlementEndRequest_Msg CMsgLucky28SettlementEndRequest_Msg_Msg_MAX = CMsgLucky28SettlementEndRequest_Msg_MsgID;
const int CMsgLucky28SettlementEndRequest_Msg_Msg_ARRAYSIZE = CMsgLucky28SettlementEndRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgLucky28SettlementEndRequest_Msg_descriptor();
inline const ::std::string& CMsgLucky28SettlementEndRequest_Msg_Name(CMsgLucky28SettlementEndRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgLucky28SettlementEndRequest_Msg_descriptor(), value);
}
inline bool CMsgLucky28SettlementEndRequest_Msg_Parse(
    const ::std::string& name, CMsgLucky28SettlementEndRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgLucky28SettlementEndRequest_Msg>(
    CMsgLucky28SettlementEndRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallLeaveMatchRequest_Msg {
  CMsg8BallLeaveMatchRequest_Msg_MsgID = 131106
};
bool CMsg8BallLeaveMatchRequest_Msg_IsValid(int value);
const CMsg8BallLeaveMatchRequest_Msg CMsg8BallLeaveMatchRequest_Msg_Msg_MIN = CMsg8BallLeaveMatchRequest_Msg_MsgID;
const CMsg8BallLeaveMatchRequest_Msg CMsg8BallLeaveMatchRequest_Msg_Msg_MAX = CMsg8BallLeaveMatchRequest_Msg_MsgID;
const int CMsg8BallLeaveMatchRequest_Msg_Msg_ARRAYSIZE = CMsg8BallLeaveMatchRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallLeaveMatchRequest_Msg_descriptor();
inline const ::std::string& CMsg8BallLeaveMatchRequest_Msg_Name(CMsg8BallLeaveMatchRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallLeaveMatchRequest_Msg_descriptor(), value);
}
inline bool CMsg8BallLeaveMatchRequest_Msg_Parse(
    const ::std::string& name, CMsg8BallLeaveMatchRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallLeaveMatchRequest_Msg>(
    CMsg8BallLeaveMatchRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallLeaveMatchResponse_Msg {
  CMsg8BallLeaveMatchResponse_Msg_MsgID = 131107
};
bool CMsg8BallLeaveMatchResponse_Msg_IsValid(int value);
const CMsg8BallLeaveMatchResponse_Msg CMsg8BallLeaveMatchResponse_Msg_Msg_MIN = CMsg8BallLeaveMatchResponse_Msg_MsgID;
const CMsg8BallLeaveMatchResponse_Msg CMsg8BallLeaveMatchResponse_Msg_Msg_MAX = CMsg8BallLeaveMatchResponse_Msg_MsgID;
const int CMsg8BallLeaveMatchResponse_Msg_Msg_ARRAYSIZE = CMsg8BallLeaveMatchResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallLeaveMatchResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallLeaveMatchResponse_Msg_Name(CMsg8BallLeaveMatchResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallLeaveMatchResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallLeaveMatchResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallLeaveMatchResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallLeaveMatchResponse_Msg>(
    CMsg8BallLeaveMatchResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallMoveBallRequest_Msg {
  CMsg8BallMoveBallRequest_Msg_MsgID = 16908324
};
bool CMsg8BallMoveBallRequest_Msg_IsValid(int value);
const CMsg8BallMoveBallRequest_Msg CMsg8BallMoveBallRequest_Msg_Msg_MIN = CMsg8BallMoveBallRequest_Msg_MsgID;
const CMsg8BallMoveBallRequest_Msg CMsg8BallMoveBallRequest_Msg_Msg_MAX = CMsg8BallMoveBallRequest_Msg_MsgID;
const int CMsg8BallMoveBallRequest_Msg_Msg_ARRAYSIZE = CMsg8BallMoveBallRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallMoveBallRequest_Msg_descriptor();
inline const ::std::string& CMsg8BallMoveBallRequest_Msg_Name(CMsg8BallMoveBallRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallMoveBallRequest_Msg_descriptor(), value);
}
inline bool CMsg8BallMoveBallRequest_Msg_Parse(
    const ::std::string& name, CMsg8BallMoveBallRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallMoveBallRequest_Msg>(
    CMsg8BallMoveBallRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallMoveBallResponse_Msg {
  CMsg8BallMoveBallResponse_Msg_MsgID = 131109
};
bool CMsg8BallMoveBallResponse_Msg_IsValid(int value);
const CMsg8BallMoveBallResponse_Msg CMsg8BallMoveBallResponse_Msg_Msg_MIN = CMsg8BallMoveBallResponse_Msg_MsgID;
const CMsg8BallMoveBallResponse_Msg CMsg8BallMoveBallResponse_Msg_Msg_MAX = CMsg8BallMoveBallResponse_Msg_MsgID;
const int CMsg8BallMoveBallResponse_Msg_Msg_ARRAYSIZE = CMsg8BallMoveBallResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallMoveBallResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallMoveBallResponse_Msg_Name(CMsg8BallMoveBallResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallMoveBallResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallMoveBallResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallMoveBallResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallMoveBallResponse_Msg>(
    CMsg8BallMoveBallResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallMoveGunRequest_Msg {
  CMsg8BallMoveGunRequest_Msg_MsgID = 16908326
};
bool CMsg8BallMoveGunRequest_Msg_IsValid(int value);
const CMsg8BallMoveGunRequest_Msg CMsg8BallMoveGunRequest_Msg_Msg_MIN = CMsg8BallMoveGunRequest_Msg_MsgID;
const CMsg8BallMoveGunRequest_Msg CMsg8BallMoveGunRequest_Msg_Msg_MAX = CMsg8BallMoveGunRequest_Msg_MsgID;
const int CMsg8BallMoveGunRequest_Msg_Msg_ARRAYSIZE = CMsg8BallMoveGunRequest_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallMoveGunRequest_Msg_descriptor();
inline const ::std::string& CMsg8BallMoveGunRequest_Msg_Name(CMsg8BallMoveGunRequest_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallMoveGunRequest_Msg_descriptor(), value);
}
inline bool CMsg8BallMoveGunRequest_Msg_Parse(
    const ::std::string& name, CMsg8BallMoveGunRequest_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallMoveGunRequest_Msg>(
    CMsg8BallMoveGunRequest_Msg_descriptor(), name, value);
}
enum CMsg8BallMoveGunResponse_Msg {
  CMsg8BallMoveGunResponse_Msg_MsgID = 131111
};
bool CMsg8BallMoveGunResponse_Msg_IsValid(int value);
const CMsg8BallMoveGunResponse_Msg CMsg8BallMoveGunResponse_Msg_Msg_MIN = CMsg8BallMoveGunResponse_Msg_MsgID;
const CMsg8BallMoveGunResponse_Msg CMsg8BallMoveGunResponse_Msg_Msg_MAX = CMsg8BallMoveGunResponse_Msg_MsgID;
const int CMsg8BallMoveGunResponse_Msg_Msg_ARRAYSIZE = CMsg8BallMoveGunResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallMoveGunResponse_Msg_descriptor();
inline const ::std::string& CMsg8BallMoveGunResponse_Msg_Name(CMsg8BallMoveGunResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallMoveGunResponse_Msg_descriptor(), value);
}
inline bool CMsg8BallMoveGunResponse_Msg_Parse(
    const ::std::string& name, CMsg8BallMoveGunResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallMoveGunResponse_Msg>(
    CMsg8BallMoveGunResponse_Msg_descriptor(), name, value);
}
enum CMsg8Ball3PFoulResponse_Msg {
  CMsg8Ball3PFoulResponse_Msg_MsgID = 131112
};
bool CMsg8Ball3PFoulResponse_Msg_IsValid(int value);
const CMsg8Ball3PFoulResponse_Msg CMsg8Ball3PFoulResponse_Msg_Msg_MIN = CMsg8Ball3PFoulResponse_Msg_MsgID;
const CMsg8Ball3PFoulResponse_Msg CMsg8Ball3PFoulResponse_Msg_Msg_MAX = CMsg8Ball3PFoulResponse_Msg_MsgID;
const int CMsg8Ball3PFoulResponse_Msg_Msg_ARRAYSIZE = CMsg8Ball3PFoulResponse_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8Ball3PFoulResponse_Msg_descriptor();
inline const ::std::string& CMsg8Ball3PFoulResponse_Msg_Name(CMsg8Ball3PFoulResponse_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8Ball3PFoulResponse_Msg_descriptor(), value);
}
inline bool CMsg8Ball3PFoulResponse_Msg_Parse(
    const ::std::string& name, CMsg8Ball3PFoulResponse_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8Ball3PFoulResponse_Msg>(
    CMsg8Ball3PFoulResponse_Msg_descriptor(), name, value);
}
enum CMsg8BallUpdateResultToHall_Msg {
  CMsg8BallUpdateResultToHall_Msg_MsgID = 131113
};
bool CMsg8BallUpdateResultToHall_Msg_IsValid(int value);
const CMsg8BallUpdateResultToHall_Msg CMsg8BallUpdateResultToHall_Msg_Msg_MIN = CMsg8BallUpdateResultToHall_Msg_MsgID;
const CMsg8BallUpdateResultToHall_Msg CMsg8BallUpdateResultToHall_Msg_Msg_MAX = CMsg8BallUpdateResultToHall_Msg_MsgID;
const int CMsg8BallUpdateResultToHall_Msg_Msg_ARRAYSIZE = CMsg8BallUpdateResultToHall_Msg_Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsg8BallUpdateResultToHall_Msg_descriptor();
inline const ::std::string& CMsg8BallUpdateResultToHall_Msg_Name(CMsg8BallUpdateResultToHall_Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsg8BallUpdateResultToHall_Msg_descriptor(), value);
}
inline bool CMsg8BallUpdateResultToHall_Msg_Parse(
    const ::std::string& name, CMsg8BallUpdateResultToHall_Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsg8BallUpdateResultToHall_Msg>(
    CMsg8BallUpdateResultToHall_Msg_descriptor(), name, value);
}
// ===================================================================

class PBRoomServerInfo : public ::google::protobuf::Message {
 public:
  PBRoomServerInfo();
  virtual ~PBRoomServerInfo();

  PBRoomServerInfo(const PBRoomServerInfo& from);

  inline PBRoomServerInfo& operator=(const PBRoomServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoomServerInfo& default_instance();

  void Swap(PBRoomServerInfo* other);

  // implements Message ----------------------------------------------

  PBRoomServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoomServerInfo& from);
  void MergeFrom(const PBRoomServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 RoomserverID = 1;
  inline bool has_roomserverid() const;
  inline void clear_roomserverid();
  static const int kRoomserverIDFieldNumber = 1;
  inline ::google::protobuf::int32 roomserverid() const;
  inline void set_roomserverid(::google::protobuf::int32 value);

  // required int32 CurRoomNum = 2;
  inline bool has_curroomnum() const;
  inline void clear_curroomnum();
  static const int kCurRoomNumFieldNumber = 2;
  inline ::google::protobuf::int32 curroomnum() const;
  inline void set_curroomnum(::google::protobuf::int32 value);

  // required int32 CurRoleNum = 3;
  inline bool has_currolenum() const;
  inline void clear_currolenum();
  static const int kCurRoleNumFieldNumber = 3;
  inline ::google::protobuf::int32 currolenum() const;
  inline void set_currolenum(::google::protobuf::int32 value);

  // required int32 MaxRoomNum = 4;
  inline bool has_maxroomnum() const;
  inline void clear_maxroomnum();
  static const int kMaxRoomNumFieldNumber = 4;
  inline ::google::protobuf::int32 maxroomnum() const;
  inline void set_maxroomnum(::google::protobuf::int32 value);

  // required int32 MaxRoleNum = 5;
  inline bool has_maxrolenum() const;
  inline void clear_maxrolenum();
  static const int kMaxRoleNumFieldNumber = 5;
  inline ::google::protobuf::int32 maxrolenum() const;
  inline void set_maxrolenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBRoomServerInfo)
 private:
  inline void set_has_roomserverid();
  inline void clear_has_roomserverid();
  inline void set_has_curroomnum();
  inline void clear_has_curroomnum();
  inline void set_has_currolenum();
  inline void clear_has_currolenum();
  inline void set_has_maxroomnum();
  inline void clear_has_maxroomnum();
  inline void set_has_maxrolenum();
  inline void clear_has_maxrolenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomserverid_;
  ::google::protobuf::int32 curroomnum_;
  ::google::protobuf::int32 currolenum_;
  ::google::protobuf::int32 maxroomnum_;
  ::google::protobuf::int32 maxrolenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static PBRoomServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBRoomInfo : public ::google::protobuf::Message {
 public:
  PBRoomInfo();
  virtual ~PBRoomInfo();

  PBRoomInfo(const PBRoomInfo& from);

  inline PBRoomInfo& operator=(const PBRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoomInfo& default_instance();

  void Swap(PBRoomInfo* other);

  // implements Message ----------------------------------------------

  PBRoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoomInfo& from);
  void MergeFrom(const PBRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 RoomID = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // required .enRoomType RoomType = 2;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 2;
  inline ::enRoomType roomtype() const;
  inline void set_roomtype(::enRoomType value);

  // repeated .PBRoleInfo RoleList = 3;
  inline int rolelist_size() const;
  inline void clear_rolelist();
  static const int kRoleListFieldNumber = 3;
  inline const ::PBRoleInfo& rolelist(int index) const;
  inline ::PBRoleInfo* mutable_rolelist(int index);
  inline ::PBRoleInfo* add_rolelist();
  inline const ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >&
      rolelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >*
      mutable_rolelist();

  // @@protoc_insertion_point(class_scope:PBRoomInfo)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomid_;
  int roomtype_;
  ::google::protobuf::RepeatedPtrField< ::PBRoleInfo > rolelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static PBRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBRoleInfo : public ::google::protobuf::Message {
 public:
  PBRoleInfo();
  virtual ~PBRoleInfo();

  PBRoleInfo(const PBRoleInfo& from);

  inline PBRoleInfo& operator=(const PBRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleInfo& default_instance();

  void Swap(PBRoleInfo* other);

  // implements Message ----------------------------------------------

  PBRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoleInfo& from);
  void MergeFrom(const PBRoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 HeadID = 3;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadIDFieldNumber = 3;
  inline ::google::protobuf::int32 headid() const;
  inline void set_headid(::google::protobuf::int32 value);

  // required int64 Gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // required int32 Status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required int32 gunid = 6;
  inline bool has_gunid() const;
  inline void clear_gunid();
  static const int kGunidFieldNumber = 6;
  inline ::google::protobuf::int32 gunid() const;
  inline void set_gunid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBRoleInfo)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_headid();
  inline void clear_has_headid();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_gunid();
  inline void clear_has_gunid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::std::string* name_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 headid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 gunid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static PBRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBConnectInfo : public ::google::protobuf::Message {
 public:
  PBConnectInfo();
  virtual ~PBConnectInfo();

  PBConnectInfo(const PBConnectInfo& from);

  inline PBConnectInfo& operator=(const PBConnectInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBConnectInfo& default_instance();

  void Swap(PBConnectInfo* other);

  // implements Message ----------------------------------------------

  PBConnectInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBConnectInfo& from);
  void MergeFrom(const PBConnectInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 SrcIP = 1;
  inline bool has_srcip() const;
  inline void clear_srcip();
  static const int kSrcIPFieldNumber = 1;
  inline ::google::protobuf::int32 srcip() const;
  inline void set_srcip(::google::protobuf::int32 value);

  // optional int32 SrcPort = 2;
  inline bool has_srcport() const;
  inline void clear_srcport();
  static const int kSrcPortFieldNumber = 2;
  inline ::google::protobuf::int32 srcport() const;
  inline void set_srcport(::google::protobuf::int32 value);

  // optional int32 SocketID = 3;
  inline bool has_socketid() const;
  inline void clear_socketid();
  static const int kSocketIDFieldNumber = 3;
  inline ::google::protobuf::int32 socketid() const;
  inline void set_socketid(::google::protobuf::int32 value);

  // optional int64 CreateTime = 4;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 4;
  inline ::google::protobuf::int64 createtime() const;
  inline void set_createtime(::google::protobuf::int64 value);

  // optional int32 TcpID = 5;
  inline bool has_tcpid() const;
  inline void clear_tcpid();
  static const int kTcpIDFieldNumber = 5;
  inline ::google::protobuf::int32 tcpid() const;
  inline void set_tcpid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBConnectInfo)
 private:
  inline void set_has_srcip();
  inline void clear_has_srcip();
  inline void set_has_srcport();
  inline void clear_has_srcport();
  inline void set_has_socketid();
  inline void clear_has_socketid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_tcpid();
  inline void clear_has_tcpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 srcip_;
  ::google::protobuf::int32 srcport_;
  ::google::protobuf::int64 createtime_;
  ::google::protobuf::int32 socketid_;
  ::google::protobuf::int32 tcpid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static PBConnectInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgR2HRegistHallRequest : public ::google::protobuf::Message {
 public:
  CMsgR2HRegistHallRequest();
  virtual ~CMsgR2HRegistHallRequest();

  CMsgR2HRegistHallRequest(const CMsgR2HRegistHallRequest& from);

  inline CMsgR2HRegistHallRequest& operator=(const CMsgR2HRegistHallRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgR2HRegistHallRequest& default_instance();

  void Swap(CMsgR2HRegistHallRequest* other);

  // implements Message ----------------------------------------------

  CMsgR2HRegistHallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgR2HRegistHallRequest& from);
  void MergeFrom(const CMsgR2HRegistHallRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgR2HRegistHallRequest_Msg Msg;
  static const Msg MsgID = CMsgR2HRegistHallRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgR2HRegistHallRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgR2HRegistHallRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgR2HRegistHallRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgR2HRegistHallRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgR2HRegistHallRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgR2HRegistHallRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgR2HRegistHallRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBRoomServerInfo RoomServerInfo = 1;
  inline bool has_roomserverinfo() const;
  inline void clear_roomserverinfo();
  static const int kRoomServerInfoFieldNumber = 1;
  inline const ::PBRoomServerInfo& roomserverinfo() const;
  inline ::PBRoomServerInfo* mutable_roomserverinfo();
  inline ::PBRoomServerInfo* release_roomserverinfo();
  inline void set_allocated_roomserverinfo(::PBRoomServerInfo* roomserverinfo);

  // @@protoc_insertion_point(class_scope:CMsgR2HRegistHallRequest)
 private:
  inline void set_has_roomserverinfo();
  inline void clear_has_roomserverinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBRoomServerInfo* roomserverinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgR2HRegistHallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgH2RRegistHallResponse : public ::google::protobuf::Message {
 public:
  CMsgH2RRegistHallResponse();
  virtual ~CMsgH2RRegistHallResponse();

  CMsgH2RRegistHallResponse(const CMsgH2RRegistHallResponse& from);

  inline CMsgH2RRegistHallResponse& operator=(const CMsgH2RRegistHallResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgH2RRegistHallResponse& default_instance();

  void Swap(CMsgH2RRegistHallResponse* other);

  // implements Message ----------------------------------------------

  CMsgH2RRegistHallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgH2RRegistHallResponse& from);
  void MergeFrom(const CMsgH2RRegistHallResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgH2RRegistHallResponse_Msg Msg;
  static const Msg MsgID = CMsgH2RRegistHallResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgH2RRegistHallResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgH2RRegistHallResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgH2RRegistHallResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgH2RRegistHallResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgH2RRegistHallResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgH2RRegistHallResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgH2RRegistHallResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgH2RRegistHallResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgH2RRegistHallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgR2HUpdateRoomRequest : public ::google::protobuf::Message {
 public:
  CMsgR2HUpdateRoomRequest();
  virtual ~CMsgR2HUpdateRoomRequest();

  CMsgR2HUpdateRoomRequest(const CMsgR2HUpdateRoomRequest& from);

  inline CMsgR2HUpdateRoomRequest& operator=(const CMsgR2HUpdateRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgR2HUpdateRoomRequest& default_instance();

  void Swap(CMsgR2HUpdateRoomRequest* other);

  // implements Message ----------------------------------------------

  CMsgR2HUpdateRoomRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgR2HUpdateRoomRequest& from);
  void MergeFrom(const CMsgR2HUpdateRoomRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgR2HUpdateRoomRequest_Msg Msg;
  static const Msg MsgID = CMsgR2HUpdateRoomRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgR2HUpdateRoomRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgR2HUpdateRoomRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgR2HUpdateRoomRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgR2HUpdateRoomRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgR2HUpdateRoomRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgR2HUpdateRoomRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgR2HUpdateRoomRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBRoomServerInfo RoomServerInfo = 1;
  inline bool has_roomserverinfo() const;
  inline void clear_roomserverinfo();
  static const int kRoomServerInfoFieldNumber = 1;
  inline const ::PBRoomServerInfo& roomserverinfo() const;
  inline ::PBRoomServerInfo* mutable_roomserverinfo();
  inline ::PBRoomServerInfo* release_roomserverinfo();
  inline void set_allocated_roomserverinfo(::PBRoomServerInfo* roomserverinfo);

  // @@protoc_insertion_point(class_scope:CMsgR2HUpdateRoomRequest)
 private:
  inline void set_has_roomserverinfo();
  inline void clear_has_roomserverinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBRoomServerInfo* roomserverinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgR2HUpdateRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgH2RUpdateRoomResponse : public ::google::protobuf::Message {
 public:
  CMsgH2RUpdateRoomResponse();
  virtual ~CMsgH2RUpdateRoomResponse();

  CMsgH2RUpdateRoomResponse(const CMsgH2RUpdateRoomResponse& from);

  inline CMsgH2RUpdateRoomResponse& operator=(const CMsgH2RUpdateRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgH2RUpdateRoomResponse& default_instance();

  void Swap(CMsgH2RUpdateRoomResponse* other);

  // implements Message ----------------------------------------------

  CMsgH2RUpdateRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgH2RUpdateRoomResponse& from);
  void MergeFrom(const CMsgH2RUpdateRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgH2RUpdateRoomResponse_Msg Msg;
  static const Msg MsgID = CMsgH2RUpdateRoomResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgH2RUpdateRoomResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgH2RUpdateRoomResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgH2RUpdateRoomResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgH2RUpdateRoomResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgH2RUpdateRoomResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgH2RUpdateRoomResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgH2RUpdateRoomResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgH2RUpdateRoomResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgH2RUpdateRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLoginRoomRequest : public ::google::protobuf::Message {
 public:
  CMsgLoginRoomRequest();
  virtual ~CMsgLoginRoomRequest();

  CMsgLoginRoomRequest(const CMsgLoginRoomRequest& from);

  inline CMsgLoginRoomRequest& operator=(const CMsgLoginRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLoginRoomRequest& default_instance();

  void Swap(CMsgLoginRoomRequest* other);

  // implements Message ----------------------------------------------

  CMsgLoginRoomRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLoginRoomRequest& from);
  void MergeFrom(const CMsgLoginRoomRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLoginRoomRequest_Msg Msg;
  static const Msg MsgID = CMsgLoginRoomRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLoginRoomRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLoginRoomRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLoginRoomRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLoginRoomRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLoginRoomRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLoginRoomRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLoginRoomRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 RoomType = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 1;
  inline ::google::protobuf::int32 roomtype() const;
  inline void set_roomtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgLoginRoomRequest)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLoginRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLoginRoomResponse : public ::google::protobuf::Message {
 public:
  CMsgLoginRoomResponse();
  virtual ~CMsgLoginRoomResponse();

  CMsgLoginRoomResponse(const CMsgLoginRoomResponse& from);

  inline CMsgLoginRoomResponse& operator=(const CMsgLoginRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLoginRoomResponse& default_instance();

  void Swap(CMsgLoginRoomResponse* other);

  // implements Message ----------------------------------------------

  CMsgLoginRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLoginRoomResponse& from);
  void MergeFrom(const CMsgLoginRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLoginRoomResponse_Msg Msg;
  static const Msg MsgID = CMsgLoginRoomResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLoginRoomResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLoginRoomResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLoginRoomResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLoginRoomResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLoginRoomResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLoginRoomResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLoginRoomResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgLoginRoomResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLoginRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgH2RCreateRoomRequest : public ::google::protobuf::Message {
 public:
  CMsgH2RCreateRoomRequest();
  virtual ~CMsgH2RCreateRoomRequest();

  CMsgH2RCreateRoomRequest(const CMsgH2RCreateRoomRequest& from);

  inline CMsgH2RCreateRoomRequest& operator=(const CMsgH2RCreateRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgH2RCreateRoomRequest& default_instance();

  void Swap(CMsgH2RCreateRoomRequest* other);

  // implements Message ----------------------------------------------

  CMsgH2RCreateRoomRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgH2RCreateRoomRequest& from);
  void MergeFrom(const CMsgH2RCreateRoomRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgH2RCreateRoomRequest_Msg Msg;
  static const Msg MsgID = CMsgH2RCreateRoomRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgH2RCreateRoomRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgH2RCreateRoomRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgH2RCreateRoomRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgH2RCreateRoomRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgH2RCreateRoomRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgH2RCreateRoomRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgH2RCreateRoomRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBRoomInfo RoomInfo = 1;
  inline bool has_roominfo() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 1;
  inline const ::PBRoomInfo& roominfo() const;
  inline ::PBRoomInfo* mutable_roominfo();
  inline ::PBRoomInfo* release_roominfo();
  inline void set_allocated_roominfo(::PBRoomInfo* roominfo);

  // repeated .PBConnectInfo ConnectInfo = 2;
  inline int connectinfo_size() const;
  inline void clear_connectinfo();
  static const int kConnectInfoFieldNumber = 2;
  inline const ::PBConnectInfo& connectinfo(int index) const;
  inline ::PBConnectInfo* mutable_connectinfo(int index);
  inline ::PBConnectInfo* add_connectinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBConnectInfo >&
      connectinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBConnectInfo >*
      mutable_connectinfo();

  // @@protoc_insertion_point(class_scope:CMsgH2RCreateRoomRequest)
 private:
  inline void set_has_roominfo();
  inline void clear_has_roominfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBRoomInfo* roominfo_;
  ::google::protobuf::RepeatedPtrField< ::PBConnectInfo > connectinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgH2RCreateRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgR2HCreateRoomResponse : public ::google::protobuf::Message {
 public:
  CMsgR2HCreateRoomResponse();
  virtual ~CMsgR2HCreateRoomResponse();

  CMsgR2HCreateRoomResponse(const CMsgR2HCreateRoomResponse& from);

  inline CMsgR2HCreateRoomResponse& operator=(const CMsgR2HCreateRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgR2HCreateRoomResponse& default_instance();

  void Swap(CMsgR2HCreateRoomResponse* other);

  // implements Message ----------------------------------------------

  CMsgR2HCreateRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgR2HCreateRoomResponse& from);
  void MergeFrom(const CMsgR2HCreateRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgR2HCreateRoomResponse_Msg Msg;
  static const Msg MsgID = CMsgR2HCreateRoomResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgR2HCreateRoomResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgR2HCreateRoomResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgR2HCreateRoomResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgR2HCreateRoomResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgR2HCreateRoomResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgR2HCreateRoomResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgR2HCreateRoomResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .PBRoomServerInfo RoomServerInfo = 2;
  inline bool has_roomserverinfo() const;
  inline void clear_roomserverinfo();
  static const int kRoomServerInfoFieldNumber = 2;
  inline const ::PBRoomServerInfo& roomserverinfo() const;
  inline ::PBRoomServerInfo* mutable_roomserverinfo();
  inline ::PBRoomServerInfo* release_roomserverinfo();
  inline void set_allocated_roomserverinfo(::PBRoomServerInfo* roomserverinfo);

  // optional .PBRoomInfo RoomInfo = 3;
  inline bool has_roominfo() const;
  inline void clear_roominfo();
  static const int kRoomInfoFieldNumber = 3;
  inline const ::PBRoomInfo& roominfo() const;
  inline ::PBRoomInfo* mutable_roominfo();
  inline ::PBRoomInfo* release_roominfo();
  inline void set_allocated_roominfo(::PBRoomInfo* roominfo);

  // @@protoc_insertion_point(class_scope:CMsgR2HCreateRoomResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roomserverinfo();
  inline void clear_has_roomserverinfo();
  inline void set_has_roominfo();
  inline void clear_has_roominfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBRoomServerInfo* roomserverinfo_;
  ::PBRoomInfo* roominfo_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgR2HCreateRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGoRoomResponse : public ::google::protobuf::Message {
 public:
  CMsgGoRoomResponse();
  virtual ~CMsgGoRoomResponse();

  CMsgGoRoomResponse(const CMsgGoRoomResponse& from);

  inline CMsgGoRoomResponse& operator=(const CMsgGoRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGoRoomResponse& default_instance();

  void Swap(CMsgGoRoomResponse* other);

  // implements Message ----------------------------------------------

  CMsgGoRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGoRoomResponse& from);
  void MergeFrom(const CMsgGoRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGoRoomResponse_Msg Msg;
  static const Msg MsgID = CMsgGoRoomResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgGoRoomResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgGoRoomResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgGoRoomResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgGoRoomResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgGoRoomResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgGoRoomResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgGoRoomResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 RoomServerID = 1;
  inline bool has_roomserverid() const;
  inline void clear_roomserverid();
  static const int kRoomServerIDFieldNumber = 1;
  inline ::google::protobuf::int32 roomserverid() const;
  inline void set_roomserverid(::google::protobuf::int32 value);

  // required int32 RoomID = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // required .EGoRoomType GoRoomType = 3;
  inline bool has_goroomtype() const;
  inline void clear_goroomtype();
  static const int kGoRoomTypeFieldNumber = 3;
  inline ::EGoRoomType goroomtype() const;
  inline void set_goroomtype(::EGoRoomType value);

  // required .enRoomType RoomType = 4;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 4;
  inline ::enRoomType roomtype() const;
  inline void set_roomtype(::enRoomType value);

  // @@protoc_insertion_point(class_scope:CMsgGoRoomResponse)
 private:
  inline void set_has_roomserverid();
  inline void clear_has_roomserverid();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_goroomtype();
  inline void clear_has_goroomtype();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roomserverid_;
  ::google::protobuf::int32 roomid_;
  int goroomtype_;
  int roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgGoRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinGameRequest : public ::google::protobuf::Message {
 public:
  CMsgJoinGameRequest();
  virtual ~CMsgJoinGameRequest();

  CMsgJoinGameRequest(const CMsgJoinGameRequest& from);

  inline CMsgJoinGameRequest& operator=(const CMsgJoinGameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinGameRequest& default_instance();

  void Swap(CMsgJoinGameRequest* other);

  // implements Message ----------------------------------------------

  CMsgJoinGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinGameRequest& from);
  void MergeFrom(const CMsgJoinGameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgJoinGameRequest_Msg Msg;
  static const Msg MsgID = CMsgJoinGameRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgJoinGameRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgJoinGameRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgJoinGameRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgJoinGameRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgJoinGameRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgJoinGameRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgJoinGameRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgJoinGameRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgJoinGameResponse : public ::google::protobuf::Message {
 public:
  CMsgJoinGameResponse();
  virtual ~CMsgJoinGameResponse();

  CMsgJoinGameResponse(const CMsgJoinGameResponse& from);

  inline CMsgJoinGameResponse& operator=(const CMsgJoinGameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJoinGameResponse& default_instance();

  void Swap(CMsgJoinGameResponse* other);

  // implements Message ----------------------------------------------

  CMsgJoinGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgJoinGameResponse& from);
  void MergeFrom(const CMsgJoinGameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgJoinGameResponse_Msg Msg;
  static const Msg MsgID = CMsgJoinGameResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgJoinGameResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgJoinGameResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgJoinGameResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgJoinGameResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgJoinGameResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgJoinGameResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgJoinGameResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .EGoRoomType GoRoomType = 2;
  inline bool has_goroomtype() const;
  inline void clear_goroomtype();
  static const int kGoRoomTypeFieldNumber = 2;
  inline ::EGoRoomType goroomtype() const;
  inline void set_goroomtype(::EGoRoomType value);

  // repeated .PBRoleInfo RoleInfos = 3;
  inline int roleinfos_size() const;
  inline void clear_roleinfos();
  static const int kRoleInfosFieldNumber = 3;
  inline const ::PBRoleInfo& roleinfos(int index) const;
  inline ::PBRoleInfo* mutable_roleinfos(int index);
  inline ::PBRoleInfo* add_roleinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >&
      roleinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >*
      mutable_roleinfos();

  // required .enRoomType RoomType = 4;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomTypeFieldNumber = 4;
  inline ::enRoomType roomtype() const;
  inline void set_roomtype(::enRoomType value);

  // @@protoc_insertion_point(class_scope:CMsgJoinGameResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_goroomtype();
  inline void clear_has_goroomtype();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int goroomtype_;
  ::google::protobuf::RepeatedPtrField< ::PBRoleInfo > roleinfos_;
  int roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgJoinGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateRoleInfoResponse : public ::google::protobuf::Message {
 public:
  CMsgUpdateRoleInfoResponse();
  virtual ~CMsgUpdateRoleInfoResponse();

  CMsgUpdateRoleInfoResponse(const CMsgUpdateRoleInfoResponse& from);

  inline CMsgUpdateRoleInfoResponse& operator=(const CMsgUpdateRoleInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateRoleInfoResponse& default_instance();

  void Swap(CMsgUpdateRoleInfoResponse* other);

  // implements Message ----------------------------------------------

  CMsgUpdateRoleInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateRoleInfoResponse& from);
  void MergeFrom(const CMsgUpdateRoleInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgUpdateRoleInfoResponse_Msg Msg;
  static const Msg MsgID = CMsgUpdateRoleInfoResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgUpdateRoleInfoResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgUpdateRoleInfoResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgUpdateRoleInfoResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgUpdateRoleInfoResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgUpdateRoleInfoResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgUpdateRoleInfoResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgUpdateRoleInfoResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PBRoleInfo RoleInfos = 1;
  inline int roleinfos_size() const;
  inline void clear_roleinfos();
  static const int kRoleInfosFieldNumber = 1;
  inline const ::PBRoleInfo& roleinfos(int index) const;
  inline ::PBRoleInfo* mutable_roleinfos(int index);
  inline ::PBRoleInfo* add_roleinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >&
      roleinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >*
      mutable_roleinfos();

  // @@protoc_insertion_point(class_scope:CMsgUpdateRoleInfoResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBRoleInfo > roleinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpdateRoleInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaveRoomRequest : public ::google::protobuf::Message {
 public:
  CMsgLeaveRoomRequest();
  virtual ~CMsgLeaveRoomRequest();

  CMsgLeaveRoomRequest(const CMsgLeaveRoomRequest& from);

  inline CMsgLeaveRoomRequest& operator=(const CMsgLeaveRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveRoomRequest& default_instance();

  void Swap(CMsgLeaveRoomRequest* other);

  // implements Message ----------------------------------------------

  CMsgLeaveRoomRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaveRoomRequest& from);
  void MergeFrom(const CMsgLeaveRoomRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLeaveRoomRequest_Msg Msg;
  static const Msg MsgID = CMsgLeaveRoomRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLeaveRoomRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLeaveRoomRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLeaveRoomRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLeaveRoomRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLeaveRoomRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLeaveRoomRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLeaveRoomRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ELeaveRoomType leavetype = 1;
  inline bool has_leavetype() const;
  inline void clear_leavetype();
  static const int kLeavetypeFieldNumber = 1;
  inline ::ELeaveRoomType leavetype() const;
  inline void set_leavetype(::ELeaveRoomType value);

  // @@protoc_insertion_point(class_scope:CMsgLeaveRoomRequest)
 private:
  inline void set_has_leavetype();
  inline void clear_has_leavetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int leavetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaveRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgR2HLeaveRoomResponse : public ::google::protobuf::Message {
 public:
  CMsgR2HLeaveRoomResponse();
  virtual ~CMsgR2HLeaveRoomResponse();

  CMsgR2HLeaveRoomResponse(const CMsgR2HLeaveRoomResponse& from);

  inline CMsgR2HLeaveRoomResponse& operator=(const CMsgR2HLeaveRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgR2HLeaveRoomResponse& default_instance();

  void Swap(CMsgR2HLeaveRoomResponse* other);

  // implements Message ----------------------------------------------

  CMsgR2HLeaveRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgR2HLeaveRoomResponse& from);
  void MergeFrom(const CMsgR2HLeaveRoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgR2HLeaveRoomResponse_Msg Msg;
  static const Msg MsgID = CMsgR2HLeaveRoomResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgR2HLeaveRoomResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgR2HLeaveRoomResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgR2HLeaveRoomResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgR2HLeaveRoomResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgR2HLeaveRoomResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgR2HLeaveRoomResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgR2HLeaveRoomResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required .ELeaveRoomType leavetype = 2;
  inline bool has_leavetype() const;
  inline void clear_leavetype();
  static const int kLeavetypeFieldNumber = 2;
  inline ::ELeaveRoomType leavetype() const;
  inline void set_leavetype(::ELeaveRoomType value);

  // required .enRoomType roomtype = 3;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomtypeFieldNumber = 3;
  inline ::enRoomType roomtype() const;
  inline void set_roomtype(::enRoomType value);

  // @@protoc_insertion_point(class_scope:CMsgR2HLeaveRoomResponse)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_leavetype();
  inline void clear_has_leavetype();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  int leavetype_;
  int roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgR2HLeaveRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgR2HUpdateRoleDataResponse : public ::google::protobuf::Message {
 public:
  CMsgR2HUpdateRoleDataResponse();
  virtual ~CMsgR2HUpdateRoleDataResponse();

  CMsgR2HUpdateRoleDataResponse(const CMsgR2HUpdateRoleDataResponse& from);

  inline CMsgR2HUpdateRoleDataResponse& operator=(const CMsgR2HUpdateRoleDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgR2HUpdateRoleDataResponse& default_instance();

  void Swap(CMsgR2HUpdateRoleDataResponse* other);

  // implements Message ----------------------------------------------

  CMsgR2HUpdateRoleDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgR2HUpdateRoleDataResponse& from);
  void MergeFrom(const CMsgR2HUpdateRoleDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgR2HUpdateRoleDataResponse_Msg Msg;
  static const Msg MsgID = CMsgR2HUpdateRoleDataResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgR2HUpdateRoleDataResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgR2HUpdateRoleDataResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgR2HUpdateRoleDataResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgR2HUpdateRoleDataResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgR2HUpdateRoleDataResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgR2HUpdateRoleDataResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgR2HUpdateRoleDataResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required int64 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int64 gold() const;
  inline void set_gold(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CMsgR2HUpdateRoleDataResponse)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int64 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgR2HUpdateRoleDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLucky28ShotRequest : public ::google::protobuf::Message {
 public:
  CMsgLucky28ShotRequest();
  virtual ~CMsgLucky28ShotRequest();

  CMsgLucky28ShotRequest(const CMsgLucky28ShotRequest& from);

  inline CMsgLucky28ShotRequest& operator=(const CMsgLucky28ShotRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLucky28ShotRequest& default_instance();

  void Swap(CMsgLucky28ShotRequest* other);

  // implements Message ----------------------------------------------

  CMsgLucky28ShotRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLucky28ShotRequest& from);
  void MergeFrom(const CMsgLucky28ShotRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLucky28ShotRequest_Msg Msg;
  static const Msg MsgID = CMsgLucky28ShotRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLucky28ShotRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLucky28ShotRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLucky28ShotRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLucky28ShotRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLucky28ShotRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLucky28ShotRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLucky28ShotRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .eLucky28ShotType shottype = 1;
  inline bool has_shottype() const;
  inline void clear_shottype();
  static const int kShottypeFieldNumber = 1;
  inline ::eLucky28ShotType shottype() const;
  inline void set_shottype(::eLucky28ShotType value);

  // required .eLucky28BetType bettype = 2;
  inline bool has_bettype() const;
  inline void clear_bettype();
  static const int kBettypeFieldNumber = 2;
  inline ::eLucky28BetType bettype() const;
  inline void set_bettype(::eLucky28BetType value);

  // @@protoc_insertion_point(class_scope:CMsgLucky28ShotRequest)
 private:
  inline void set_has_shottype();
  inline void clear_has_shottype();
  inline void set_has_bettype();
  inline void clear_has_bettype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int shottype_;
  int bettype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLucky28ShotRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLucky28PrepareResponse : public ::google::protobuf::Message {
 public:
  CMsgLucky28PrepareResponse();
  virtual ~CMsgLucky28PrepareResponse();

  CMsgLucky28PrepareResponse(const CMsgLucky28PrepareResponse& from);

  inline CMsgLucky28PrepareResponse& operator=(const CMsgLucky28PrepareResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLucky28PrepareResponse& default_instance();

  void Swap(CMsgLucky28PrepareResponse* other);

  // implements Message ----------------------------------------------

  CMsgLucky28PrepareResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLucky28PrepareResponse& from);
  void MergeFrom(const CMsgLucky28PrepareResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLucky28PrepareResponse_Msg Msg;
  static const Msg MsgID = CMsgLucky28PrepareResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLucky28PrepareResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLucky28PrepareResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLucky28PrepareResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLucky28PrepareResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLucky28PrepareResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLucky28PrepareResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLucky28PrepareResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgLucky28PrepareResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLucky28PrepareResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLucky28StartResponse : public ::google::protobuf::Message {
 public:
  CMsgLucky28StartResponse();
  virtual ~CMsgLucky28StartResponse();

  CMsgLucky28StartResponse(const CMsgLucky28StartResponse& from);

  inline CMsgLucky28StartResponse& operator=(const CMsgLucky28StartResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLucky28StartResponse& default_instance();

  void Swap(CMsgLucky28StartResponse* other);

  // implements Message ----------------------------------------------

  CMsgLucky28StartResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLucky28StartResponse& from);
  void MergeFrom(const CMsgLucky28StartResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLucky28StartResponse_Msg Msg;
  static const Msg MsgID = CMsgLucky28StartResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLucky28StartResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLucky28StartResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLucky28StartResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLucky28StartResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLucky28StartResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLucky28StartResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLucky28StartResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBLucky28RoundInfo roundinfo = 1;
  inline bool has_roundinfo() const;
  inline void clear_roundinfo();
  static const int kRoundinfoFieldNumber = 1;
  inline const ::PBLucky28RoundInfo& roundinfo() const;
  inline ::PBLucky28RoundInfo* mutable_roundinfo();
  inline ::PBLucky28RoundInfo* release_roundinfo();
  inline void set_allocated_roundinfo(::PBLucky28RoundInfo* roundinfo);

  // @@protoc_insertion_point(class_scope:CMsgLucky28StartResponse)
 private:
  inline void set_has_roundinfo();
  inline void clear_has_roundinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBLucky28RoundInfo* roundinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLucky28StartResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLucky28EndResponse : public ::google::protobuf::Message {
 public:
  CMsgLucky28EndResponse();
  virtual ~CMsgLucky28EndResponse();

  CMsgLucky28EndResponse(const CMsgLucky28EndResponse& from);

  inline CMsgLucky28EndResponse& operator=(const CMsgLucky28EndResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLucky28EndResponse& default_instance();

  void Swap(CMsgLucky28EndResponse* other);

  // implements Message ----------------------------------------------

  CMsgLucky28EndResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLucky28EndResponse& from);
  void MergeFrom(const CMsgLucky28EndResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLucky28EndResponse_Msg Msg;
  static const Msg MsgID = CMsgLucky28EndResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLucky28EndResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLucky28EndResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLucky28EndResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLucky28EndResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLucky28EndResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLucky28EndResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLucky28EndResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PBLuckey28EndGame results = 1;
  inline int results_size() const;
  inline void clear_results();
  static const int kResultsFieldNumber = 1;
  inline const ::PBLuckey28EndGame& results(int index) const;
  inline ::PBLuckey28EndGame* mutable_results(int index);
  inline ::PBLuckey28EndGame* add_results();
  inline const ::google::protobuf::RepeatedPtrField< ::PBLuckey28EndGame >&
      results() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLuckey28EndGame >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:CMsgLucky28EndResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PBLuckey28EndGame > results_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLucky28EndResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLucky28ShotRoleResponse : public ::google::protobuf::Message {
 public:
  CMsgLucky28ShotRoleResponse();
  virtual ~CMsgLucky28ShotRoleResponse();

  CMsgLucky28ShotRoleResponse(const CMsgLucky28ShotRoleResponse& from);

  inline CMsgLucky28ShotRoleResponse& operator=(const CMsgLucky28ShotRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLucky28ShotRoleResponse& default_instance();

  void Swap(CMsgLucky28ShotRoleResponse* other);

  // implements Message ----------------------------------------------

  CMsgLucky28ShotRoleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLucky28ShotRoleResponse& from);
  void MergeFrom(const CMsgLucky28ShotRoleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLucky28ShotRoleResponse_Msg Msg;
  static const Msg MsgID = CMsgLucky28ShotRoleResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLucky28ShotRoleResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLucky28ShotRoleResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLucky28ShotRoleResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLucky28ShotRoleResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLucky28ShotRoleResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLucky28ShotRoleResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLucky28ShotRoleResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 shotroleid = 1;
  inline bool has_shotroleid() const;
  inline void clear_shotroleid();
  static const int kShotroleidFieldNumber = 1;
  inline ::google::protobuf::int64 shotroleid() const;
  inline void set_shotroleid(::google::protobuf::int64 value);

  // required int32 roundnum = 2;
  inline bool has_roundnum() const;
  inline void clear_roundnum();
  static const int kRoundnumFieldNumber = 2;
  inline ::google::protobuf::int32 roundnum() const;
  inline void set_roundnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgLucky28ShotRoleResponse)
 private:
  inline void set_has_shotroleid();
  inline void clear_has_shotroleid();
  inline void set_has_roundnum();
  inline void clear_has_roundnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 shotroleid_;
  ::google::protobuf::int32 roundnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLucky28ShotRoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLucky28ShotResultResponse : public ::google::protobuf::Message {
 public:
  CMsgLucky28ShotResultResponse();
  virtual ~CMsgLucky28ShotResultResponse();

  CMsgLucky28ShotResultResponse(const CMsgLucky28ShotResultResponse& from);

  inline CMsgLucky28ShotResultResponse& operator=(const CMsgLucky28ShotResultResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLucky28ShotResultResponse& default_instance();

  void Swap(CMsgLucky28ShotResultResponse* other);

  // implements Message ----------------------------------------------

  CMsgLucky28ShotResultResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLucky28ShotResultResponse& from);
  void MergeFrom(const CMsgLucky28ShotResultResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLucky28ShotResultResponse_Msg Msg;
  static const Msg MsgID = CMsgLucky28ShotResultResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLucky28ShotResultResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLucky28ShotResultResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLucky28ShotResultResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLucky28ShotResultResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLucky28ShotResultResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLucky28ShotResultResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLucky28ShotResultResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 shotroleid = 1;
  inline bool has_shotroleid() const;
  inline void clear_shotroleid();
  static const int kShotroleidFieldNumber = 1;
  inline ::google::protobuf::int64 shotroleid() const;
  inline void set_shotroleid(::google::protobuf::int64 value);

  // required int32 getball = 2;
  inline bool has_getball() const;
  inline void clear_getball();
  static const int kGetballFieldNumber = 2;
  inline ::google::protobuf::int32 getball() const;
  inline void set_getball(::google::protobuf::int32 value);

  // required .eLucky28ShotType shottype = 3;
  inline bool has_shottype() const;
  inline void clear_shottype();
  static const int kShottypeFieldNumber = 3;
  inline ::eLucky28ShotType shottype() const;
  inline void set_shottype(::eLucky28ShotType value);

  // required .eLucky28BetType bettype = 4;
  inline bool has_bettype() const;
  inline void clear_bettype();
  static const int kBettypeFieldNumber = 4;
  inline ::eLucky28BetType bettype() const;
  inline void set_bettype(::eLucky28BetType value);

  // required .PBLucky28RoundInfo roundinfo = 5;
  inline bool has_roundinfo() const;
  inline void clear_roundinfo();
  static const int kRoundinfoFieldNumber = 5;
  inline const ::PBLucky28RoundInfo& roundinfo() const;
  inline ::PBLucky28RoundInfo* mutable_roundinfo();
  inline ::PBLucky28RoundInfo* release_roundinfo();
  inline void set_allocated_roundinfo(::PBLucky28RoundInfo* roundinfo);

  // @@protoc_insertion_point(class_scope:CMsgLucky28ShotResultResponse)
 private:
  inline void set_has_shotroleid();
  inline void clear_has_shotroleid();
  inline void set_has_getball();
  inline void clear_has_getball();
  inline void set_has_shottype();
  inline void clear_has_shottype();
  inline void set_has_bettype();
  inline void clear_has_bettype();
  inline void set_has_roundinfo();
  inline void clear_has_roundinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 shotroleid_;
  ::google::protobuf::int32 getball_;
  int shottype_;
  ::PBLucky28RoundInfo* roundinfo_;
  int bettype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLucky28ShotResultResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallStartGameRequest : public ::google::protobuf::Message {
 public:
  CMsg8BallStartGameRequest();
  virtual ~CMsg8BallStartGameRequest();

  CMsg8BallStartGameRequest(const CMsg8BallStartGameRequest& from);

  inline CMsg8BallStartGameRequest& operator=(const CMsg8BallStartGameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallStartGameRequest& default_instance();

  void Swap(CMsg8BallStartGameRequest* other);

  // implements Message ----------------------------------------------

  CMsg8BallStartGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallStartGameRequest& from);
  void MergeFrom(const CMsg8BallStartGameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallStartGameRequest_Msg Msg;
  static const Msg MsgID = CMsg8BallStartGameRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallStartGameRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallStartGameRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallStartGameRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallStartGameRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallStartGameRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallStartGameRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallStartGameRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsg8BallStartGameRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallStartGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallRoundStartResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallRoundStartResponse();
  virtual ~CMsg8BallRoundStartResponse();

  CMsg8BallRoundStartResponse(const CMsg8BallRoundStartResponse& from);

  inline CMsg8BallRoundStartResponse& operator=(const CMsg8BallRoundStartResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallRoundStartResponse& default_instance();

  void Swap(CMsg8BallRoundStartResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallRoundStartResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallRoundStartResponse& from);
  void MergeFrom(const CMsg8BallRoundStartResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallRoundStartResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallRoundStartResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallRoundStartResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallRoundStartResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallRoundStartResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallRoundStartResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallRoundStartResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallRoundStartResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallRoundStartResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 selfstatus = 1;
  inline bool has_selfstatus() const;
  inline void clear_selfstatus();
  static const int kSelfstatusFieldNumber = 1;
  inline ::google::protobuf::int32 selfstatus() const;
  inline void set_selfstatus(::google::protobuf::int32 value);

  // required int64 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required int32 LastResult = 3;
  inline bool has_lastresult() const;
  inline void clear_lastresult();
  static const int kLastResultFieldNumber = 3;
  inline ::google::protobuf::int32 lastresult() const;
  inline void set_lastresult(::google::protobuf::int32 value);

  // optional .PBBalls balllist = 4;
  inline bool has_balllist() const;
  inline void clear_balllist();
  static const int kBalllistFieldNumber = 4;
  inline const ::PBBalls& balllist() const;
  inline ::PBBalls* mutable_balllist();
  inline ::PBBalls* release_balllist();
  inline void set_allocated_balllist(::PBBalls* balllist);

  // repeated .PB8BallGroup ballgroup = 5;
  inline int ballgroup_size() const;
  inline void clear_ballgroup();
  static const int kBallgroupFieldNumber = 5;
  inline const ::PB8BallGroup& ballgroup(int index) const;
  inline ::PB8BallGroup* mutable_ballgroup(int index);
  inline ::PB8BallGroup* add_ballgroup();
  inline const ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >&
      ballgroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >*
      mutable_ballgroup();

  // @@protoc_insertion_point(class_scope:CMsg8BallRoundStartResponse)
 private:
  inline void set_has_selfstatus();
  inline void clear_has_selfstatus();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_lastresult();
  inline void clear_has_lastresult();
  inline void set_has_balllist();
  inline void clear_has_balllist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int32 selfstatus_;
  ::google::protobuf::int32 lastresult_;
  ::PBBalls* balllist_;
  ::google::protobuf::RepeatedPtrField< ::PB8BallGroup > ballgroup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallRoundStartResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallKickInfoRequest : public ::google::protobuf::Message {
 public:
  CMsg8BallKickInfoRequest();
  virtual ~CMsg8BallKickInfoRequest();

  CMsg8BallKickInfoRequest(const CMsg8BallKickInfoRequest& from);

  inline CMsg8BallKickInfoRequest& operator=(const CMsg8BallKickInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallKickInfoRequest& default_instance();

  void Swap(CMsg8BallKickInfoRequest* other);

  // implements Message ----------------------------------------------

  CMsg8BallKickInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallKickInfoRequest& from);
  void MergeFrom(const CMsg8BallKickInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallKickInfoRequest_Msg Msg;
  static const Msg MsgID = CMsg8BallKickInfoRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallKickInfoRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallKickInfoRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallKickInfoRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallKickInfoRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallKickInfoRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallKickInfoRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallKickInfoRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBKickBallInfo kickinfo = 1;
  inline bool has_kickinfo() const;
  inline void clear_kickinfo();
  static const int kKickinfoFieldNumber = 1;
  inline const ::PBKickBallInfo& kickinfo() const;
  inline ::PBKickBallInfo* mutable_kickinfo();
  inline ::PBKickBallInfo* release_kickinfo();
  inline void set_allocated_kickinfo(::PBKickBallInfo* kickinfo);

  // @@protoc_insertion_point(class_scope:CMsg8BallKickInfoRequest)
 private:
  inline void set_has_kickinfo();
  inline void clear_has_kickinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBKickBallInfo* kickinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallKickInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallKickInfoResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallKickInfoResponse();
  virtual ~CMsg8BallKickInfoResponse();

  CMsg8BallKickInfoResponse(const CMsg8BallKickInfoResponse& from);

  inline CMsg8BallKickInfoResponse& operator=(const CMsg8BallKickInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallKickInfoResponse& default_instance();

  void Swap(CMsg8BallKickInfoResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallKickInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallKickInfoResponse& from);
  void MergeFrom(const CMsg8BallKickInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallKickInfoResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallKickInfoResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallKickInfoResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallKickInfoResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallKickInfoResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallKickInfoResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallKickInfoResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallKickInfoResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallKickInfoResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBKickBallInfo kickinfo = 1;
  inline bool has_kickinfo() const;
  inline void clear_kickinfo();
  static const int kKickinfoFieldNumber = 1;
  inline const ::PBKickBallInfo& kickinfo() const;
  inline ::PBKickBallInfo* mutable_kickinfo();
  inline ::PBKickBallInfo* release_kickinfo();
  inline void set_allocated_kickinfo(::PBKickBallInfo* kickinfo);

  // @@protoc_insertion_point(class_scope:CMsg8BallKickInfoResponse)
 private:
  inline void set_has_kickinfo();
  inline void clear_has_kickinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBKickBallInfo* kickinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallKickInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallPositionRequest : public ::google::protobuf::Message {
 public:
  CMsg8BallPositionRequest();
  virtual ~CMsg8BallPositionRequest();

  CMsg8BallPositionRequest(const CMsg8BallPositionRequest& from);

  inline CMsg8BallPositionRequest& operator=(const CMsg8BallPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallPositionRequest& default_instance();

  void Swap(CMsg8BallPositionRequest* other);

  // implements Message ----------------------------------------------

  CMsg8BallPositionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallPositionRequest& from);
  void MergeFrom(const CMsg8BallPositionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallPositionRequest_Msg Msg;
  static const Msg MsgID = CMsg8BallPositionRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallPositionRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallPositionRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallPositionRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallPositionRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallPositionRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallPositionRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallPositionRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBBalls balllist = 1;
  inline bool has_balllist() const;
  inline void clear_balllist();
  static const int kBalllistFieldNumber = 1;
  inline const ::PBBalls& balllist() const;
  inline ::PBBalls* mutable_balllist();
  inline ::PBBalls* release_balllist();
  inline void set_allocated_balllist(::PBBalls* balllist);

  // @@protoc_insertion_point(class_scope:CMsg8BallPositionRequest)
 private:
  inline void set_has_balllist();
  inline void clear_has_balllist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBBalls* balllist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallPositionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallPositionResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallPositionResponse();
  virtual ~CMsg8BallPositionResponse();

  CMsg8BallPositionResponse(const CMsg8BallPositionResponse& from);

  inline CMsg8BallPositionResponse& operator=(const CMsg8BallPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallPositionResponse& default_instance();

  void Swap(CMsg8BallPositionResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallPositionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallPositionResponse& from);
  void MergeFrom(const CMsg8BallPositionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallPositionResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallPositionResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallPositionResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallPositionResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallPositionResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallPositionResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallPositionResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallPositionResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallPositionResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBBalls balllist = 1;
  inline bool has_balllist() const;
  inline void clear_balllist();
  static const int kBalllistFieldNumber = 1;
  inline const ::PBBalls& balllist() const;
  inline ::PBBalls* mutable_balllist();
  inline ::PBBalls* release_balllist();
  inline void set_allocated_balllist(::PBBalls* balllist);

  // @@protoc_insertion_point(class_scope:CMsg8BallPositionResponse)
 private:
  inline void set_has_balllist();
  inline void clear_has_balllist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBBalls* balllist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallPositionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallRoundEndRequest : public ::google::protobuf::Message {
 public:
  CMsg8BallRoundEndRequest();
  virtual ~CMsg8BallRoundEndRequest();

  CMsg8BallRoundEndRequest(const CMsg8BallRoundEndRequest& from);

  inline CMsg8BallRoundEndRequest& operator=(const CMsg8BallRoundEndRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallRoundEndRequest& default_instance();

  void Swap(CMsg8BallRoundEndRequest* other);

  // implements Message ----------------------------------------------

  CMsg8BallRoundEndRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallRoundEndRequest& from);
  void MergeFrom(const CMsg8BallRoundEndRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallRoundEndRequest_Msg Msg;
  static const Msg MsgID = CMsg8BallRoundEndRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallRoundEndRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallRoundEndRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallRoundEndRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallRoundEndRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallRoundEndRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallRoundEndRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallRoundEndRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .PBBalls balllist = 2;
  inline bool has_balllist() const;
  inline void clear_balllist();
  static const int kBalllistFieldNumber = 2;
  inline const ::PBBalls& balllist() const;
  inline ::PBBalls* mutable_balllist();
  inline ::PBBalls* release_balllist();
  inline void set_allocated_balllist(::PBBalls* balllist);

  // repeated .PB8BallGroup ballgroup = 3;
  inline int ballgroup_size() const;
  inline void clear_ballgroup();
  static const int kBallgroupFieldNumber = 3;
  inline const ::PB8BallGroup& ballgroup(int index) const;
  inline ::PB8BallGroup* mutable_ballgroup(int index);
  inline ::PB8BallGroup* add_ballgroup();
  inline const ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >&
      ballgroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >*
      mutable_ballgroup();

  // optional int64 sucroleid = 4;
  inline bool has_sucroleid() const;
  inline void clear_sucroleid();
  static const int kSucroleidFieldNumber = 4;
  inline ::google::protobuf::int64 sucroleid() const;
  inline void set_sucroleid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CMsg8BallRoundEndRequest)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_balllist();
  inline void clear_has_balllist();
  inline void set_has_sucroleid();
  inline void clear_has_sucroleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBBalls* balllist_;
  ::google::protobuf::RepeatedPtrField< ::PB8BallGroup > ballgroup_;
  ::google::protobuf::int64 sucroleid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallRoundEndRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallEndGameResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallEndGameResponse();
  virtual ~CMsg8BallEndGameResponse();

  CMsg8BallEndGameResponse(const CMsg8BallEndGameResponse& from);

  inline CMsg8BallEndGameResponse& operator=(const CMsg8BallEndGameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallEndGameResponse& default_instance();

  void Swap(CMsg8BallEndGameResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallEndGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallEndGameResponse& from);
  void MergeFrom(const CMsg8BallEndGameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallEndGameResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallEndGameResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallEndGameResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallEndGameResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallEndGameResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallEndGameResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallEndGameResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallEndGameResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallEndGameResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PB8BallEndResult result = 1;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::PB8BallEndResult& result(int index) const;
  inline ::PB8BallEndResult* mutable_result(int index);
  inline ::PB8BallEndResult* add_result();
  inline const ::google::protobuf::RepeatedPtrField< ::PB8BallEndResult >&
      result() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB8BallEndResult >*
      mutable_result();

  // @@protoc_insertion_point(class_scope:CMsg8BallEndGameResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB8BallEndResult > result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallEndGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallCannotContinueResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallCannotContinueResponse();
  virtual ~CMsg8BallCannotContinueResponse();

  CMsg8BallCannotContinueResponse(const CMsg8BallCannotContinueResponse& from);

  inline CMsg8BallCannotContinueResponse& operator=(const CMsg8BallCannotContinueResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallCannotContinueResponse& default_instance();

  void Swap(CMsg8BallCannotContinueResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallCannotContinueResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallCannotContinueResponse& from);
  void MergeFrom(const CMsg8BallCannotContinueResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallCannotContinueResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallCannotContinueResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallCannotContinueResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallCannotContinueResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallCannotContinueResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallCannotContinueResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallCannotContinueResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallCannotContinueResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallCannotContinueResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .enRoomType roomtype = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomtypeFieldNumber = 1;
  inline ::enRoomType roomtype() const;
  inline void set_roomtype(::enRoomType value);

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsg8BallCannotContinueResponse)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int roomtype_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallCannotContinueResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLucky28SettlementEndRequest : public ::google::protobuf::Message {
 public:
  CMsgLucky28SettlementEndRequest();
  virtual ~CMsgLucky28SettlementEndRequest();

  CMsgLucky28SettlementEndRequest(const CMsgLucky28SettlementEndRequest& from);

  inline CMsgLucky28SettlementEndRequest& operator=(const CMsgLucky28SettlementEndRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLucky28SettlementEndRequest& default_instance();

  void Swap(CMsgLucky28SettlementEndRequest* other);

  // implements Message ----------------------------------------------

  CMsgLucky28SettlementEndRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLucky28SettlementEndRequest& from);
  void MergeFrom(const CMsgLucky28SettlementEndRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgLucky28SettlementEndRequest_Msg Msg;
  static const Msg MsgID = CMsgLucky28SettlementEndRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsgLucky28SettlementEndRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsgLucky28SettlementEndRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsgLucky28SettlementEndRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsgLucky28SettlementEndRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsgLucky28SettlementEndRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsgLucky28SettlementEndRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsgLucky28SettlementEndRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgLucky28SettlementEndRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsgLucky28SettlementEndRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallLeaveMatchRequest : public ::google::protobuf::Message {
 public:
  CMsg8BallLeaveMatchRequest();
  virtual ~CMsg8BallLeaveMatchRequest();

  CMsg8BallLeaveMatchRequest(const CMsg8BallLeaveMatchRequest& from);

  inline CMsg8BallLeaveMatchRequest& operator=(const CMsg8BallLeaveMatchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallLeaveMatchRequest& default_instance();

  void Swap(CMsg8BallLeaveMatchRequest* other);

  // implements Message ----------------------------------------------

  CMsg8BallLeaveMatchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallLeaveMatchRequest& from);
  void MergeFrom(const CMsg8BallLeaveMatchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallLeaveMatchRequest_Msg Msg;
  static const Msg MsgID = CMsg8BallLeaveMatchRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallLeaveMatchRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallLeaveMatchRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallLeaveMatchRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallLeaveMatchRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallLeaveMatchRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallLeaveMatchRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallLeaveMatchRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .enRoomType roomtype = 1;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomtypeFieldNumber = 1;
  inline ::enRoomType roomtype() const;
  inline void set_roomtype(::enRoomType value);

  // @@protoc_insertion_point(class_scope:CMsg8BallLeaveMatchRequest)
 private:
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallLeaveMatchRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallLeaveMatchResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallLeaveMatchResponse();
  virtual ~CMsg8BallLeaveMatchResponse();

  CMsg8BallLeaveMatchResponse(const CMsg8BallLeaveMatchResponse& from);

  inline CMsg8BallLeaveMatchResponse& operator=(const CMsg8BallLeaveMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallLeaveMatchResponse& default_instance();

  void Swap(CMsg8BallLeaveMatchResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallLeaveMatchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallLeaveMatchResponse& from);
  void MergeFrom(const CMsg8BallLeaveMatchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallLeaveMatchResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallLeaveMatchResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallLeaveMatchResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallLeaveMatchResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallLeaveMatchResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallLeaveMatchResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallLeaveMatchResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallLeaveMatchResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallLeaveMatchResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required .enRoomType roomtype = 2;
  inline bool has_roomtype() const;
  inline void clear_roomtype();
  static const int kRoomtypeFieldNumber = 2;
  inline ::enRoomType roomtype() const;
  inline void set_roomtype(::enRoomType value);

  // @@protoc_insertion_point(class_scope:CMsg8BallLeaveMatchResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roomtype();
  inline void clear_has_roomtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  int roomtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallLeaveMatchResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallMoveBallRequest : public ::google::protobuf::Message {
 public:
  CMsg8BallMoveBallRequest();
  virtual ~CMsg8BallMoveBallRequest();

  CMsg8BallMoveBallRequest(const CMsg8BallMoveBallRequest& from);

  inline CMsg8BallMoveBallRequest& operator=(const CMsg8BallMoveBallRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallMoveBallRequest& default_instance();

  void Swap(CMsg8BallMoveBallRequest* other);

  // implements Message ----------------------------------------------

  CMsg8BallMoveBallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallMoveBallRequest& from);
  void MergeFrom(const CMsg8BallMoveBallRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallMoveBallRequest_Msg Msg;
  static const Msg MsgID = CMsg8BallMoveBallRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallMoveBallRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallMoveBallRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallMoveBallRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallMoveBallRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallMoveBallRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallMoveBallRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallMoveBallRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBSingleBall ball = 1;
  inline bool has_ball() const;
  inline void clear_ball();
  static const int kBallFieldNumber = 1;
  inline const ::PBSingleBall& ball() const;
  inline ::PBSingleBall* mutable_ball();
  inline ::PBSingleBall* release_ball();
  inline void set_allocated_ball(::PBSingleBall* ball);

  // required int32 angle = 2;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 2;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsg8BallMoveBallRequest)
 private:
  inline void set_has_ball();
  inline void clear_has_ball();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBSingleBall* ball_;
  ::google::protobuf::int32 angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallMoveBallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallMoveBallResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallMoveBallResponse();
  virtual ~CMsg8BallMoveBallResponse();

  CMsg8BallMoveBallResponse(const CMsg8BallMoveBallResponse& from);

  inline CMsg8BallMoveBallResponse& operator=(const CMsg8BallMoveBallResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallMoveBallResponse& default_instance();

  void Swap(CMsg8BallMoveBallResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallMoveBallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallMoveBallResponse& from);
  void MergeFrom(const CMsg8BallMoveBallResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallMoveBallResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallMoveBallResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallMoveBallResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallMoveBallResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallMoveBallResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallMoveBallResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallMoveBallResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallMoveBallResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallMoveBallResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PBSingleBall ball = 1;
  inline bool has_ball() const;
  inline void clear_ball();
  static const int kBallFieldNumber = 1;
  inline const ::PBSingleBall& ball() const;
  inline ::PBSingleBall* mutable_ball();
  inline ::PBSingleBall* release_ball();
  inline void set_allocated_ball(::PBSingleBall* ball);

  // required int32 angle = 2;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 2;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsg8BallMoveBallResponse)
 private:
  inline void set_has_ball();
  inline void clear_has_ball();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PBSingleBall* ball_;
  ::google::protobuf::int32 angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallMoveBallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallMoveGunRequest : public ::google::protobuf::Message {
 public:
  CMsg8BallMoveGunRequest();
  virtual ~CMsg8BallMoveGunRequest();

  CMsg8BallMoveGunRequest(const CMsg8BallMoveGunRequest& from);

  inline CMsg8BallMoveGunRequest& operator=(const CMsg8BallMoveGunRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallMoveGunRequest& default_instance();

  void Swap(CMsg8BallMoveGunRequest* other);

  // implements Message ----------------------------------------------

  CMsg8BallMoveGunRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallMoveGunRequest& from);
  void MergeFrom(const CMsg8BallMoveGunRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallMoveGunRequest_Msg Msg;
  static const Msg MsgID = CMsg8BallMoveGunRequest_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallMoveGunRequest_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallMoveGunRequest_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallMoveGunRequest_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallMoveGunRequest_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallMoveGunRequest_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallMoveGunRequest_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallMoveGunRequest_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 angle = 1;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 1;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsg8BallMoveGunRequest)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallMoveGunRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallMoveGunResponse : public ::google::protobuf::Message {
 public:
  CMsg8BallMoveGunResponse();
  virtual ~CMsg8BallMoveGunResponse();

  CMsg8BallMoveGunResponse(const CMsg8BallMoveGunResponse& from);

  inline CMsg8BallMoveGunResponse& operator=(const CMsg8BallMoveGunResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallMoveGunResponse& default_instance();

  void Swap(CMsg8BallMoveGunResponse* other);

  // implements Message ----------------------------------------------

  CMsg8BallMoveGunResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallMoveGunResponse& from);
  void MergeFrom(const CMsg8BallMoveGunResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallMoveGunResponse_Msg Msg;
  static const Msg MsgID = CMsg8BallMoveGunResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallMoveGunResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallMoveGunResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallMoveGunResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallMoveGunResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallMoveGunResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallMoveGunResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallMoveGunResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 angle = 1;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 1;
  inline ::google::protobuf::int32 angle() const;
  inline void set_angle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsg8BallMoveGunResponse)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallMoveGunResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8Ball3PFoulResponse : public ::google::protobuf::Message {
 public:
  CMsg8Ball3PFoulResponse();
  virtual ~CMsg8Ball3PFoulResponse();

  CMsg8Ball3PFoulResponse(const CMsg8Ball3PFoulResponse& from);

  inline CMsg8Ball3PFoulResponse& operator=(const CMsg8Ball3PFoulResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8Ball3PFoulResponse& default_instance();

  void Swap(CMsg8Ball3PFoulResponse* other);

  // implements Message ----------------------------------------------

  CMsg8Ball3PFoulResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8Ball3PFoulResponse& from);
  void MergeFrom(const CMsg8Ball3PFoulResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8Ball3PFoulResponse_Msg Msg;
  static const Msg MsgID = CMsg8Ball3PFoulResponse_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8Ball3PFoulResponse_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8Ball3PFoulResponse_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8Ball3PFoulResponse_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8Ball3PFoulResponse_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8Ball3PFoulResponse_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8Ball3PFoulResponse_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8Ball3PFoulResponse_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 roleid = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required int32 ballnum = 2;
  inline bool has_ballnum() const;
  inline void clear_ballnum();
  static const int kBallnumFieldNumber = 2;
  inline ::google::protobuf::int32 ballnum() const;
  inline void set_ballnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsg8Ball3PFoulResponse)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_ballnum();
  inline void clear_has_ballnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int32 ballnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8Ball3PFoulResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsg8BallUpdateResultToHall : public ::google::protobuf::Message {
 public:
  CMsg8BallUpdateResultToHall();
  virtual ~CMsg8BallUpdateResultToHall();

  CMsg8BallUpdateResultToHall(const CMsg8BallUpdateResultToHall& from);

  inline CMsg8BallUpdateResultToHall& operator=(const CMsg8BallUpdateResultToHall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsg8BallUpdateResultToHall& default_instance();

  void Swap(CMsg8BallUpdateResultToHall* other);

  // implements Message ----------------------------------------------

  CMsg8BallUpdateResultToHall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsg8BallUpdateResultToHall& from);
  void MergeFrom(const CMsg8BallUpdateResultToHall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsg8BallUpdateResultToHall_Msg Msg;
  static const Msg MsgID = CMsg8BallUpdateResultToHall_Msg_MsgID;
  static inline bool Msg_IsValid(int value) {
    return CMsg8BallUpdateResultToHall_Msg_IsValid(value);
  }
  static const Msg Msg_MIN =
    CMsg8BallUpdateResultToHall_Msg_Msg_MIN;
  static const Msg Msg_MAX =
    CMsg8BallUpdateResultToHall_Msg_Msg_MAX;
  static const int Msg_ARRAYSIZE =
    CMsg8BallUpdateResultToHall_Msg_Msg_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Msg_descriptor() {
    return CMsg8BallUpdateResultToHall_Msg_descriptor();
  }
  static inline const ::std::string& Msg_Name(Msg value) {
    return CMsg8BallUpdateResultToHall_Msg_Name(value);
  }
  static inline bool Msg_Parse(const ::std::string& name,
      Msg* value) {
    return CMsg8BallUpdateResultToHall_Msg_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .EDataStatisticsType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::EDataStatisticsType type() const;
  inline void set_type(::EDataStatisticsType value);

  // repeated .PB8BallDataStatistics data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::PB8BallDataStatistics& data(int index) const;
  inline ::PB8BallDataStatistics* mutable_data(int index);
  inline ::PB8BallDataStatistics* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::PB8BallDataStatistics >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB8BallDataStatistics >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:CMsg8BallUpdateResultToHall)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PB8BallDataStatistics > data_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roommessage_2eproto();
  friend void protobuf_AssignDesc_roommessage_2eproto();
  friend void protobuf_ShutdownFile_roommessage_2eproto();

  void InitAsDefaultInstance();
  static CMsg8BallUpdateResultToHall* default_instance_;
};
// ===================================================================


// ===================================================================

// PBRoomServerInfo

// required int32 RoomserverID = 1;
inline bool PBRoomServerInfo::has_roomserverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBRoomServerInfo::set_has_roomserverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBRoomServerInfo::clear_has_roomserverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBRoomServerInfo::clear_roomserverid() {
  roomserverid_ = 0;
  clear_has_roomserverid();
}
inline ::google::protobuf::int32 PBRoomServerInfo::roomserverid() const {
  return roomserverid_;
}
inline void PBRoomServerInfo::set_roomserverid(::google::protobuf::int32 value) {
  set_has_roomserverid();
  roomserverid_ = value;
}

// required int32 CurRoomNum = 2;
inline bool PBRoomServerInfo::has_curroomnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBRoomServerInfo::set_has_curroomnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBRoomServerInfo::clear_has_curroomnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBRoomServerInfo::clear_curroomnum() {
  curroomnum_ = 0;
  clear_has_curroomnum();
}
inline ::google::protobuf::int32 PBRoomServerInfo::curroomnum() const {
  return curroomnum_;
}
inline void PBRoomServerInfo::set_curroomnum(::google::protobuf::int32 value) {
  set_has_curroomnum();
  curroomnum_ = value;
}

// required int32 CurRoleNum = 3;
inline bool PBRoomServerInfo::has_currolenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBRoomServerInfo::set_has_currolenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBRoomServerInfo::clear_has_currolenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBRoomServerInfo::clear_currolenum() {
  currolenum_ = 0;
  clear_has_currolenum();
}
inline ::google::protobuf::int32 PBRoomServerInfo::currolenum() const {
  return currolenum_;
}
inline void PBRoomServerInfo::set_currolenum(::google::protobuf::int32 value) {
  set_has_currolenum();
  currolenum_ = value;
}

// required int32 MaxRoomNum = 4;
inline bool PBRoomServerInfo::has_maxroomnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBRoomServerInfo::set_has_maxroomnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBRoomServerInfo::clear_has_maxroomnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBRoomServerInfo::clear_maxroomnum() {
  maxroomnum_ = 0;
  clear_has_maxroomnum();
}
inline ::google::protobuf::int32 PBRoomServerInfo::maxroomnum() const {
  return maxroomnum_;
}
inline void PBRoomServerInfo::set_maxroomnum(::google::protobuf::int32 value) {
  set_has_maxroomnum();
  maxroomnum_ = value;
}

// required int32 MaxRoleNum = 5;
inline bool PBRoomServerInfo::has_maxrolenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBRoomServerInfo::set_has_maxrolenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBRoomServerInfo::clear_has_maxrolenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBRoomServerInfo::clear_maxrolenum() {
  maxrolenum_ = 0;
  clear_has_maxrolenum();
}
inline ::google::protobuf::int32 PBRoomServerInfo::maxrolenum() const {
  return maxrolenum_;
}
inline void PBRoomServerInfo::set_maxrolenum(::google::protobuf::int32 value) {
  set_has_maxrolenum();
  maxrolenum_ = value;
}

// -------------------------------------------------------------------

// PBRoomInfo

// required int32 RoomID = 1;
inline bool PBRoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBRoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBRoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBRoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 PBRoomInfo::roomid() const {
  return roomid_;
}
inline void PBRoomInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// required .enRoomType RoomType = 2;
inline bool PBRoomInfo::has_roomtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBRoomInfo::set_has_roomtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBRoomInfo::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBRoomInfo::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::enRoomType PBRoomInfo::roomtype() const {
  return static_cast< ::enRoomType >(roomtype_);
}
inline void PBRoomInfo::set_roomtype(::enRoomType value) {
  assert(::enRoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
}

// repeated .PBRoleInfo RoleList = 3;
inline int PBRoomInfo::rolelist_size() const {
  return rolelist_.size();
}
inline void PBRoomInfo::clear_rolelist() {
  rolelist_.Clear();
}
inline const ::PBRoleInfo& PBRoomInfo::rolelist(int index) const {
  return rolelist_.Get(index);
}
inline ::PBRoleInfo* PBRoomInfo::mutable_rolelist(int index) {
  return rolelist_.Mutable(index);
}
inline ::PBRoleInfo* PBRoomInfo::add_rolelist() {
  return rolelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >&
PBRoomInfo::rolelist() const {
  return rolelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >*
PBRoomInfo::mutable_rolelist() {
  return &rolelist_;
}

// -------------------------------------------------------------------

// PBRoleInfo

// required int64 RoleID = 1;
inline bool PBRoleInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBRoleInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBRoleInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBRoleInfo::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PBRoleInfo::roleid() const {
  return roleid_;
}
inline void PBRoleInfo::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string Name = 2;
inline bool PBRoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBRoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBRoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBRoleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBRoleInfo::name() const {
  return *name_;
}
inline void PBRoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBRoleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBRoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBRoleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBRoleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PBRoleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 HeadID = 3;
inline bool PBRoleInfo::has_headid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBRoleInfo::set_has_headid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBRoleInfo::clear_has_headid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBRoleInfo::clear_headid() {
  headid_ = 0;
  clear_has_headid();
}
inline ::google::protobuf::int32 PBRoleInfo::headid() const {
  return headid_;
}
inline void PBRoleInfo::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
}

// required int64 Gold = 4;
inline bool PBRoleInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBRoleInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBRoleInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBRoleInfo::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 PBRoleInfo::gold() const {
  return gold_;
}
inline void PBRoleInfo::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// required int32 Status = 5;
inline bool PBRoleInfo::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBRoleInfo::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBRoleInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBRoleInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 PBRoleInfo::status() const {
  return status_;
}
inline void PBRoleInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required int32 gunid = 6;
inline bool PBRoleInfo::has_gunid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBRoleInfo::set_has_gunid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBRoleInfo::clear_has_gunid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBRoleInfo::clear_gunid() {
  gunid_ = 0;
  clear_has_gunid();
}
inline ::google::protobuf::int32 PBRoleInfo::gunid() const {
  return gunid_;
}
inline void PBRoleInfo::set_gunid(::google::protobuf::int32 value) {
  set_has_gunid();
  gunid_ = value;
}

// -------------------------------------------------------------------

// PBConnectInfo

// optional int32 SrcIP = 1;
inline bool PBConnectInfo::has_srcip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBConnectInfo::set_has_srcip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBConnectInfo::clear_has_srcip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBConnectInfo::clear_srcip() {
  srcip_ = 0;
  clear_has_srcip();
}
inline ::google::protobuf::int32 PBConnectInfo::srcip() const {
  return srcip_;
}
inline void PBConnectInfo::set_srcip(::google::protobuf::int32 value) {
  set_has_srcip();
  srcip_ = value;
}

// optional int32 SrcPort = 2;
inline bool PBConnectInfo::has_srcport() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBConnectInfo::set_has_srcport() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBConnectInfo::clear_has_srcport() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBConnectInfo::clear_srcport() {
  srcport_ = 0;
  clear_has_srcport();
}
inline ::google::protobuf::int32 PBConnectInfo::srcport() const {
  return srcport_;
}
inline void PBConnectInfo::set_srcport(::google::protobuf::int32 value) {
  set_has_srcport();
  srcport_ = value;
}

// optional int32 SocketID = 3;
inline bool PBConnectInfo::has_socketid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBConnectInfo::set_has_socketid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBConnectInfo::clear_has_socketid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBConnectInfo::clear_socketid() {
  socketid_ = 0;
  clear_has_socketid();
}
inline ::google::protobuf::int32 PBConnectInfo::socketid() const {
  return socketid_;
}
inline void PBConnectInfo::set_socketid(::google::protobuf::int32 value) {
  set_has_socketid();
  socketid_ = value;
}

// optional int64 CreateTime = 4;
inline bool PBConnectInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBConnectInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBConnectInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBConnectInfo::clear_createtime() {
  createtime_ = GOOGLE_LONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::int64 PBConnectInfo::createtime() const {
  return createtime_;
}
inline void PBConnectInfo::set_createtime(::google::protobuf::int64 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional int32 TcpID = 5;
inline bool PBConnectInfo::has_tcpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBConnectInfo::set_has_tcpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBConnectInfo::clear_has_tcpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBConnectInfo::clear_tcpid() {
  tcpid_ = 0;
  clear_has_tcpid();
}
inline ::google::protobuf::int32 PBConnectInfo::tcpid() const {
  return tcpid_;
}
inline void PBConnectInfo::set_tcpid(::google::protobuf::int32 value) {
  set_has_tcpid();
  tcpid_ = value;
}

// -------------------------------------------------------------------

// CMsgR2HRegistHallRequest

// required .PBRoomServerInfo RoomServerInfo = 1;
inline bool CMsgR2HRegistHallRequest::has_roomserverinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgR2HRegistHallRequest::set_has_roomserverinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgR2HRegistHallRequest::clear_has_roomserverinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgR2HRegistHallRequest::clear_roomserverinfo() {
  if (roomserverinfo_ != NULL) roomserverinfo_->::PBRoomServerInfo::Clear();
  clear_has_roomserverinfo();
}
inline const ::PBRoomServerInfo& CMsgR2HRegistHallRequest::roomserverinfo() const {
  return roomserverinfo_ != NULL ? *roomserverinfo_ : *default_instance_->roomserverinfo_;
}
inline ::PBRoomServerInfo* CMsgR2HRegistHallRequest::mutable_roomserverinfo() {
  set_has_roomserverinfo();
  if (roomserverinfo_ == NULL) roomserverinfo_ = new ::PBRoomServerInfo;
  return roomserverinfo_;
}
inline ::PBRoomServerInfo* CMsgR2HRegistHallRequest::release_roomserverinfo() {
  clear_has_roomserverinfo();
  ::PBRoomServerInfo* temp = roomserverinfo_;
  roomserverinfo_ = NULL;
  return temp;
}
inline void CMsgR2HRegistHallRequest::set_allocated_roomserverinfo(::PBRoomServerInfo* roomserverinfo) {
  delete roomserverinfo_;
  roomserverinfo_ = roomserverinfo;
  if (roomserverinfo) {
    set_has_roomserverinfo();
  } else {
    clear_has_roomserverinfo();
  }
}

// -------------------------------------------------------------------

// CMsgH2RRegistHallResponse

// required int32 Result = 1;
inline bool CMsgH2RRegistHallResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgH2RRegistHallResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgH2RRegistHallResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgH2RRegistHallResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgH2RRegistHallResponse::result() const {
  return result_;
}
inline void CMsgH2RRegistHallResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CMsgR2HUpdateRoomRequest

// required .PBRoomServerInfo RoomServerInfo = 1;
inline bool CMsgR2HUpdateRoomRequest::has_roomserverinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgR2HUpdateRoomRequest::set_has_roomserverinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgR2HUpdateRoomRequest::clear_has_roomserverinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgR2HUpdateRoomRequest::clear_roomserverinfo() {
  if (roomserverinfo_ != NULL) roomserverinfo_->::PBRoomServerInfo::Clear();
  clear_has_roomserverinfo();
}
inline const ::PBRoomServerInfo& CMsgR2HUpdateRoomRequest::roomserverinfo() const {
  return roomserverinfo_ != NULL ? *roomserverinfo_ : *default_instance_->roomserverinfo_;
}
inline ::PBRoomServerInfo* CMsgR2HUpdateRoomRequest::mutable_roomserverinfo() {
  set_has_roomserverinfo();
  if (roomserverinfo_ == NULL) roomserverinfo_ = new ::PBRoomServerInfo;
  return roomserverinfo_;
}
inline ::PBRoomServerInfo* CMsgR2HUpdateRoomRequest::release_roomserverinfo() {
  clear_has_roomserverinfo();
  ::PBRoomServerInfo* temp = roomserverinfo_;
  roomserverinfo_ = NULL;
  return temp;
}
inline void CMsgR2HUpdateRoomRequest::set_allocated_roomserverinfo(::PBRoomServerInfo* roomserverinfo) {
  delete roomserverinfo_;
  roomserverinfo_ = roomserverinfo;
  if (roomserverinfo) {
    set_has_roomserverinfo();
  } else {
    clear_has_roomserverinfo();
  }
}

// -------------------------------------------------------------------

// CMsgH2RUpdateRoomResponse

// required int32 Result = 1;
inline bool CMsgH2RUpdateRoomResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgH2RUpdateRoomResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgH2RUpdateRoomResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgH2RUpdateRoomResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgH2RUpdateRoomResponse::result() const {
  return result_;
}
inline void CMsgH2RUpdateRoomResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CMsgLoginRoomRequest

// required int32 RoomType = 1;
inline bool CMsgLoginRoomRequest::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLoginRoomRequest::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLoginRoomRequest::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLoginRoomRequest::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::google::protobuf::int32 CMsgLoginRoomRequest::roomtype() const {
  return roomtype_;
}
inline void CMsgLoginRoomRequest::set_roomtype(::google::protobuf::int32 value) {
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// CMsgLoginRoomResponse

// required int32 Result = 1;
inline bool CMsgLoginRoomResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLoginRoomResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLoginRoomResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLoginRoomResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgLoginRoomResponse::result() const {
  return result_;
}
inline void CMsgLoginRoomResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CMsgH2RCreateRoomRequest

// required .PBRoomInfo RoomInfo = 1;
inline bool CMsgH2RCreateRoomRequest::has_roominfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgH2RCreateRoomRequest::set_has_roominfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgH2RCreateRoomRequest::clear_has_roominfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgH2RCreateRoomRequest::clear_roominfo() {
  if (roominfo_ != NULL) roominfo_->::PBRoomInfo::Clear();
  clear_has_roominfo();
}
inline const ::PBRoomInfo& CMsgH2RCreateRoomRequest::roominfo() const {
  return roominfo_ != NULL ? *roominfo_ : *default_instance_->roominfo_;
}
inline ::PBRoomInfo* CMsgH2RCreateRoomRequest::mutable_roominfo() {
  set_has_roominfo();
  if (roominfo_ == NULL) roominfo_ = new ::PBRoomInfo;
  return roominfo_;
}
inline ::PBRoomInfo* CMsgH2RCreateRoomRequest::release_roominfo() {
  clear_has_roominfo();
  ::PBRoomInfo* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
inline void CMsgH2RCreateRoomRequest::set_allocated_roominfo(::PBRoomInfo* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    set_has_roominfo();
  } else {
    clear_has_roominfo();
  }
}

// repeated .PBConnectInfo ConnectInfo = 2;
inline int CMsgH2RCreateRoomRequest::connectinfo_size() const {
  return connectinfo_.size();
}
inline void CMsgH2RCreateRoomRequest::clear_connectinfo() {
  connectinfo_.Clear();
}
inline const ::PBConnectInfo& CMsgH2RCreateRoomRequest::connectinfo(int index) const {
  return connectinfo_.Get(index);
}
inline ::PBConnectInfo* CMsgH2RCreateRoomRequest::mutable_connectinfo(int index) {
  return connectinfo_.Mutable(index);
}
inline ::PBConnectInfo* CMsgH2RCreateRoomRequest::add_connectinfo() {
  return connectinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBConnectInfo >&
CMsgH2RCreateRoomRequest::connectinfo() const {
  return connectinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBConnectInfo >*
CMsgH2RCreateRoomRequest::mutable_connectinfo() {
  return &connectinfo_;
}

// -------------------------------------------------------------------

// CMsgR2HCreateRoomResponse

// required int32 Result = 1;
inline bool CMsgR2HCreateRoomResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgR2HCreateRoomResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgR2HCreateRoomResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgR2HCreateRoomResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgR2HCreateRoomResponse::result() const {
  return result_;
}
inline void CMsgR2HCreateRoomResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .PBRoomServerInfo RoomServerInfo = 2;
inline bool CMsgR2HCreateRoomResponse::has_roomserverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgR2HCreateRoomResponse::set_has_roomserverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgR2HCreateRoomResponse::clear_has_roomserverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgR2HCreateRoomResponse::clear_roomserverinfo() {
  if (roomserverinfo_ != NULL) roomserverinfo_->::PBRoomServerInfo::Clear();
  clear_has_roomserverinfo();
}
inline const ::PBRoomServerInfo& CMsgR2HCreateRoomResponse::roomserverinfo() const {
  return roomserverinfo_ != NULL ? *roomserverinfo_ : *default_instance_->roomserverinfo_;
}
inline ::PBRoomServerInfo* CMsgR2HCreateRoomResponse::mutable_roomserverinfo() {
  set_has_roomserverinfo();
  if (roomserverinfo_ == NULL) roomserverinfo_ = new ::PBRoomServerInfo;
  return roomserverinfo_;
}
inline ::PBRoomServerInfo* CMsgR2HCreateRoomResponse::release_roomserverinfo() {
  clear_has_roomserverinfo();
  ::PBRoomServerInfo* temp = roomserverinfo_;
  roomserverinfo_ = NULL;
  return temp;
}
inline void CMsgR2HCreateRoomResponse::set_allocated_roomserverinfo(::PBRoomServerInfo* roomserverinfo) {
  delete roomserverinfo_;
  roomserverinfo_ = roomserverinfo;
  if (roomserverinfo) {
    set_has_roomserverinfo();
  } else {
    clear_has_roomserverinfo();
  }
}

// optional .PBRoomInfo RoomInfo = 3;
inline bool CMsgR2HCreateRoomResponse::has_roominfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgR2HCreateRoomResponse::set_has_roominfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgR2HCreateRoomResponse::clear_has_roominfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgR2HCreateRoomResponse::clear_roominfo() {
  if (roominfo_ != NULL) roominfo_->::PBRoomInfo::Clear();
  clear_has_roominfo();
}
inline const ::PBRoomInfo& CMsgR2HCreateRoomResponse::roominfo() const {
  return roominfo_ != NULL ? *roominfo_ : *default_instance_->roominfo_;
}
inline ::PBRoomInfo* CMsgR2HCreateRoomResponse::mutable_roominfo() {
  set_has_roominfo();
  if (roominfo_ == NULL) roominfo_ = new ::PBRoomInfo;
  return roominfo_;
}
inline ::PBRoomInfo* CMsgR2HCreateRoomResponse::release_roominfo() {
  clear_has_roominfo();
  ::PBRoomInfo* temp = roominfo_;
  roominfo_ = NULL;
  return temp;
}
inline void CMsgR2HCreateRoomResponse::set_allocated_roominfo(::PBRoomInfo* roominfo) {
  delete roominfo_;
  roominfo_ = roominfo;
  if (roominfo) {
    set_has_roominfo();
  } else {
    clear_has_roominfo();
  }
}

// -------------------------------------------------------------------

// CMsgGoRoomResponse

// required int32 RoomServerID = 1;
inline bool CMsgGoRoomResponse::has_roomserverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGoRoomResponse::set_has_roomserverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGoRoomResponse::clear_has_roomserverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGoRoomResponse::clear_roomserverid() {
  roomserverid_ = 0;
  clear_has_roomserverid();
}
inline ::google::protobuf::int32 CMsgGoRoomResponse::roomserverid() const {
  return roomserverid_;
}
inline void CMsgGoRoomResponse::set_roomserverid(::google::protobuf::int32 value) {
  set_has_roomserverid();
  roomserverid_ = value;
}

// required int32 RoomID = 2;
inline bool CMsgGoRoomResponse::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGoRoomResponse::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGoRoomResponse::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGoRoomResponse::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 CMsgGoRoomResponse::roomid() const {
  return roomid_;
}
inline void CMsgGoRoomResponse::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// required .EGoRoomType GoRoomType = 3;
inline bool CMsgGoRoomResponse::has_goroomtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGoRoomResponse::set_has_goroomtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGoRoomResponse::clear_has_goroomtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGoRoomResponse::clear_goroomtype() {
  goroomtype_ = 0;
  clear_has_goroomtype();
}
inline ::EGoRoomType CMsgGoRoomResponse::goroomtype() const {
  return static_cast< ::EGoRoomType >(goroomtype_);
}
inline void CMsgGoRoomResponse::set_goroomtype(::EGoRoomType value) {
  assert(::EGoRoomType_IsValid(value));
  set_has_goroomtype();
  goroomtype_ = value;
}

// required .enRoomType RoomType = 4;
inline bool CMsgGoRoomResponse::has_roomtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGoRoomResponse::set_has_roomtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGoRoomResponse::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGoRoomResponse::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::enRoomType CMsgGoRoomResponse::roomtype() const {
  return static_cast< ::enRoomType >(roomtype_);
}
inline void CMsgGoRoomResponse::set_roomtype(::enRoomType value) {
  assert(::enRoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// CMsgJoinGameRequest

// -------------------------------------------------------------------

// CMsgJoinGameResponse

// required int32 Result = 1;
inline bool CMsgJoinGameResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJoinGameResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJoinGameResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJoinGameResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgJoinGameResponse::result() const {
  return result_;
}
inline void CMsgJoinGameResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .EGoRoomType GoRoomType = 2;
inline bool CMsgJoinGameResponse::has_goroomtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJoinGameResponse::set_has_goroomtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJoinGameResponse::clear_has_goroomtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJoinGameResponse::clear_goroomtype() {
  goroomtype_ = 0;
  clear_has_goroomtype();
}
inline ::EGoRoomType CMsgJoinGameResponse::goroomtype() const {
  return static_cast< ::EGoRoomType >(goroomtype_);
}
inline void CMsgJoinGameResponse::set_goroomtype(::EGoRoomType value) {
  assert(::EGoRoomType_IsValid(value));
  set_has_goroomtype();
  goroomtype_ = value;
}

// repeated .PBRoleInfo RoleInfos = 3;
inline int CMsgJoinGameResponse::roleinfos_size() const {
  return roleinfos_.size();
}
inline void CMsgJoinGameResponse::clear_roleinfos() {
  roleinfos_.Clear();
}
inline const ::PBRoleInfo& CMsgJoinGameResponse::roleinfos(int index) const {
  return roleinfos_.Get(index);
}
inline ::PBRoleInfo* CMsgJoinGameResponse::mutable_roleinfos(int index) {
  return roleinfos_.Mutable(index);
}
inline ::PBRoleInfo* CMsgJoinGameResponse::add_roleinfos() {
  return roleinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >&
CMsgJoinGameResponse::roleinfos() const {
  return roleinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >*
CMsgJoinGameResponse::mutable_roleinfos() {
  return &roleinfos_;
}

// required .enRoomType RoomType = 4;
inline bool CMsgJoinGameResponse::has_roomtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgJoinGameResponse::set_has_roomtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgJoinGameResponse::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgJoinGameResponse::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::enRoomType CMsgJoinGameResponse::roomtype() const {
  return static_cast< ::enRoomType >(roomtype_);
}
inline void CMsgJoinGameResponse::set_roomtype(::enRoomType value) {
  assert(::enRoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// CMsgUpdateRoleInfoResponse

// repeated .PBRoleInfo RoleInfos = 1;
inline int CMsgUpdateRoleInfoResponse::roleinfos_size() const {
  return roleinfos_.size();
}
inline void CMsgUpdateRoleInfoResponse::clear_roleinfos() {
  roleinfos_.Clear();
}
inline const ::PBRoleInfo& CMsgUpdateRoleInfoResponse::roleinfos(int index) const {
  return roleinfos_.Get(index);
}
inline ::PBRoleInfo* CMsgUpdateRoleInfoResponse::mutable_roleinfos(int index) {
  return roleinfos_.Mutable(index);
}
inline ::PBRoleInfo* CMsgUpdateRoleInfoResponse::add_roleinfos() {
  return roleinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >&
CMsgUpdateRoleInfoResponse::roleinfos() const {
  return roleinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRoleInfo >*
CMsgUpdateRoleInfoResponse::mutable_roleinfos() {
  return &roleinfos_;
}

// -------------------------------------------------------------------

// CMsgLeaveRoomRequest

// required .ELeaveRoomType leavetype = 1;
inline bool CMsgLeaveRoomRequest::has_leavetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaveRoomRequest::set_has_leavetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaveRoomRequest::clear_has_leavetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaveRoomRequest::clear_leavetype() {
  leavetype_ = 0;
  clear_has_leavetype();
}
inline ::ELeaveRoomType CMsgLeaveRoomRequest::leavetype() const {
  return static_cast< ::ELeaveRoomType >(leavetype_);
}
inline void CMsgLeaveRoomRequest::set_leavetype(::ELeaveRoomType value) {
  assert(::ELeaveRoomType_IsValid(value));
  set_has_leavetype();
  leavetype_ = value;
}

// -------------------------------------------------------------------

// CMsgR2HLeaveRoomResponse

// required int64 roleid = 1;
inline bool CMsgR2HLeaveRoomResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgR2HLeaveRoomResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgR2HLeaveRoomResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgR2HLeaveRoomResponse::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 CMsgR2HLeaveRoomResponse::roleid() const {
  return roleid_;
}
inline void CMsgR2HLeaveRoomResponse::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required .ELeaveRoomType leavetype = 2;
inline bool CMsgR2HLeaveRoomResponse::has_leavetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgR2HLeaveRoomResponse::set_has_leavetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgR2HLeaveRoomResponse::clear_has_leavetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgR2HLeaveRoomResponse::clear_leavetype() {
  leavetype_ = 0;
  clear_has_leavetype();
}
inline ::ELeaveRoomType CMsgR2HLeaveRoomResponse::leavetype() const {
  return static_cast< ::ELeaveRoomType >(leavetype_);
}
inline void CMsgR2HLeaveRoomResponse::set_leavetype(::ELeaveRoomType value) {
  assert(::ELeaveRoomType_IsValid(value));
  set_has_leavetype();
  leavetype_ = value;
}

// required .enRoomType roomtype = 3;
inline bool CMsgR2HLeaveRoomResponse::has_roomtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgR2HLeaveRoomResponse::set_has_roomtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgR2HLeaveRoomResponse::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgR2HLeaveRoomResponse::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::enRoomType CMsgR2HLeaveRoomResponse::roomtype() const {
  return static_cast< ::enRoomType >(roomtype_);
}
inline void CMsgR2HLeaveRoomResponse::set_roomtype(::enRoomType value) {
  assert(::enRoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// CMsgR2HUpdateRoleDataResponse

// required int64 roleid = 1;
inline bool CMsgR2HUpdateRoleDataResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgR2HUpdateRoleDataResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgR2HUpdateRoleDataResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgR2HUpdateRoleDataResponse::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 CMsgR2HUpdateRoleDataResponse::roleid() const {
  return roleid_;
}
inline void CMsgR2HUpdateRoleDataResponse::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int64 gold = 2;
inline bool CMsgR2HUpdateRoleDataResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgR2HUpdateRoleDataResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgR2HUpdateRoleDataResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgR2HUpdateRoleDataResponse::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 CMsgR2HUpdateRoleDataResponse::gold() const {
  return gold_;
}
inline void CMsgR2HUpdateRoleDataResponse::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// CMsgLucky28ShotRequest

// required .eLucky28ShotType shottype = 1;
inline bool CMsgLucky28ShotRequest::has_shottype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLucky28ShotRequest::set_has_shottype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLucky28ShotRequest::clear_has_shottype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLucky28ShotRequest::clear_shottype() {
  shottype_ = 1;
  clear_has_shottype();
}
inline ::eLucky28ShotType CMsgLucky28ShotRequest::shottype() const {
  return static_cast< ::eLucky28ShotType >(shottype_);
}
inline void CMsgLucky28ShotRequest::set_shottype(::eLucky28ShotType value) {
  assert(::eLucky28ShotType_IsValid(value));
  set_has_shottype();
  shottype_ = value;
}

// required .eLucky28BetType bettype = 2;
inline bool CMsgLucky28ShotRequest::has_bettype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLucky28ShotRequest::set_has_bettype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLucky28ShotRequest::clear_has_bettype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLucky28ShotRequest::clear_bettype() {
  bettype_ = 0;
  clear_has_bettype();
}
inline ::eLucky28BetType CMsgLucky28ShotRequest::bettype() const {
  return static_cast< ::eLucky28BetType >(bettype_);
}
inline void CMsgLucky28ShotRequest::set_bettype(::eLucky28BetType value) {
  assert(::eLucky28BetType_IsValid(value));
  set_has_bettype();
  bettype_ = value;
}

// -------------------------------------------------------------------

// CMsgLucky28PrepareResponse

// -------------------------------------------------------------------

// CMsgLucky28StartResponse

// required .PBLucky28RoundInfo roundinfo = 1;
inline bool CMsgLucky28StartResponse::has_roundinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLucky28StartResponse::set_has_roundinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLucky28StartResponse::clear_has_roundinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLucky28StartResponse::clear_roundinfo() {
  if (roundinfo_ != NULL) roundinfo_->::PBLucky28RoundInfo::Clear();
  clear_has_roundinfo();
}
inline const ::PBLucky28RoundInfo& CMsgLucky28StartResponse::roundinfo() const {
  return roundinfo_ != NULL ? *roundinfo_ : *default_instance_->roundinfo_;
}
inline ::PBLucky28RoundInfo* CMsgLucky28StartResponse::mutable_roundinfo() {
  set_has_roundinfo();
  if (roundinfo_ == NULL) roundinfo_ = new ::PBLucky28RoundInfo;
  return roundinfo_;
}
inline ::PBLucky28RoundInfo* CMsgLucky28StartResponse::release_roundinfo() {
  clear_has_roundinfo();
  ::PBLucky28RoundInfo* temp = roundinfo_;
  roundinfo_ = NULL;
  return temp;
}
inline void CMsgLucky28StartResponse::set_allocated_roundinfo(::PBLucky28RoundInfo* roundinfo) {
  delete roundinfo_;
  roundinfo_ = roundinfo;
  if (roundinfo) {
    set_has_roundinfo();
  } else {
    clear_has_roundinfo();
  }
}

// -------------------------------------------------------------------

// CMsgLucky28EndResponse

// repeated .PBLuckey28EndGame results = 1;
inline int CMsgLucky28EndResponse::results_size() const {
  return results_.size();
}
inline void CMsgLucky28EndResponse::clear_results() {
  results_.Clear();
}
inline const ::PBLuckey28EndGame& CMsgLucky28EndResponse::results(int index) const {
  return results_.Get(index);
}
inline ::PBLuckey28EndGame* CMsgLucky28EndResponse::mutable_results(int index) {
  return results_.Mutable(index);
}
inline ::PBLuckey28EndGame* CMsgLucky28EndResponse::add_results() {
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLuckey28EndGame >&
CMsgLucky28EndResponse::results() const {
  return results_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLuckey28EndGame >*
CMsgLucky28EndResponse::mutable_results() {
  return &results_;
}

// -------------------------------------------------------------------

// CMsgLucky28ShotRoleResponse

// required int64 shotroleid = 1;
inline bool CMsgLucky28ShotRoleResponse::has_shotroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLucky28ShotRoleResponse::set_has_shotroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLucky28ShotRoleResponse::clear_has_shotroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLucky28ShotRoleResponse::clear_shotroleid() {
  shotroleid_ = GOOGLE_LONGLONG(0);
  clear_has_shotroleid();
}
inline ::google::protobuf::int64 CMsgLucky28ShotRoleResponse::shotroleid() const {
  return shotroleid_;
}
inline void CMsgLucky28ShotRoleResponse::set_shotroleid(::google::protobuf::int64 value) {
  set_has_shotroleid();
  shotroleid_ = value;
}

// required int32 roundnum = 2;
inline bool CMsgLucky28ShotRoleResponse::has_roundnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLucky28ShotRoleResponse::set_has_roundnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLucky28ShotRoleResponse::clear_has_roundnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLucky28ShotRoleResponse::clear_roundnum() {
  roundnum_ = 0;
  clear_has_roundnum();
}
inline ::google::protobuf::int32 CMsgLucky28ShotRoleResponse::roundnum() const {
  return roundnum_;
}
inline void CMsgLucky28ShotRoleResponse::set_roundnum(::google::protobuf::int32 value) {
  set_has_roundnum();
  roundnum_ = value;
}

// -------------------------------------------------------------------

// CMsgLucky28ShotResultResponse

// required int64 shotroleid = 1;
inline bool CMsgLucky28ShotResultResponse::has_shotroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLucky28ShotResultResponse::set_has_shotroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLucky28ShotResultResponse::clear_has_shotroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLucky28ShotResultResponse::clear_shotroleid() {
  shotroleid_ = GOOGLE_LONGLONG(0);
  clear_has_shotroleid();
}
inline ::google::protobuf::int64 CMsgLucky28ShotResultResponse::shotroleid() const {
  return shotroleid_;
}
inline void CMsgLucky28ShotResultResponse::set_shotroleid(::google::protobuf::int64 value) {
  set_has_shotroleid();
  shotroleid_ = value;
}

// required int32 getball = 2;
inline bool CMsgLucky28ShotResultResponse::has_getball() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLucky28ShotResultResponse::set_has_getball() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLucky28ShotResultResponse::clear_has_getball() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLucky28ShotResultResponse::clear_getball() {
  getball_ = 0;
  clear_has_getball();
}
inline ::google::protobuf::int32 CMsgLucky28ShotResultResponse::getball() const {
  return getball_;
}
inline void CMsgLucky28ShotResultResponse::set_getball(::google::protobuf::int32 value) {
  set_has_getball();
  getball_ = value;
}

// required .eLucky28ShotType shottype = 3;
inline bool CMsgLucky28ShotResultResponse::has_shottype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLucky28ShotResultResponse::set_has_shottype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLucky28ShotResultResponse::clear_has_shottype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLucky28ShotResultResponse::clear_shottype() {
  shottype_ = 1;
  clear_has_shottype();
}
inline ::eLucky28ShotType CMsgLucky28ShotResultResponse::shottype() const {
  return static_cast< ::eLucky28ShotType >(shottype_);
}
inline void CMsgLucky28ShotResultResponse::set_shottype(::eLucky28ShotType value) {
  assert(::eLucky28ShotType_IsValid(value));
  set_has_shottype();
  shottype_ = value;
}

// required .eLucky28BetType bettype = 4;
inline bool CMsgLucky28ShotResultResponse::has_bettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLucky28ShotResultResponse::set_has_bettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLucky28ShotResultResponse::clear_has_bettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLucky28ShotResultResponse::clear_bettype() {
  bettype_ = 0;
  clear_has_bettype();
}
inline ::eLucky28BetType CMsgLucky28ShotResultResponse::bettype() const {
  return static_cast< ::eLucky28BetType >(bettype_);
}
inline void CMsgLucky28ShotResultResponse::set_bettype(::eLucky28BetType value) {
  assert(::eLucky28BetType_IsValid(value));
  set_has_bettype();
  bettype_ = value;
}

// required .PBLucky28RoundInfo roundinfo = 5;
inline bool CMsgLucky28ShotResultResponse::has_roundinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgLucky28ShotResultResponse::set_has_roundinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgLucky28ShotResultResponse::clear_has_roundinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgLucky28ShotResultResponse::clear_roundinfo() {
  if (roundinfo_ != NULL) roundinfo_->::PBLucky28RoundInfo::Clear();
  clear_has_roundinfo();
}
inline const ::PBLucky28RoundInfo& CMsgLucky28ShotResultResponse::roundinfo() const {
  return roundinfo_ != NULL ? *roundinfo_ : *default_instance_->roundinfo_;
}
inline ::PBLucky28RoundInfo* CMsgLucky28ShotResultResponse::mutable_roundinfo() {
  set_has_roundinfo();
  if (roundinfo_ == NULL) roundinfo_ = new ::PBLucky28RoundInfo;
  return roundinfo_;
}
inline ::PBLucky28RoundInfo* CMsgLucky28ShotResultResponse::release_roundinfo() {
  clear_has_roundinfo();
  ::PBLucky28RoundInfo* temp = roundinfo_;
  roundinfo_ = NULL;
  return temp;
}
inline void CMsgLucky28ShotResultResponse::set_allocated_roundinfo(::PBLucky28RoundInfo* roundinfo) {
  delete roundinfo_;
  roundinfo_ = roundinfo;
  if (roundinfo) {
    set_has_roundinfo();
  } else {
    clear_has_roundinfo();
  }
}

// -------------------------------------------------------------------

// CMsg8BallStartGameRequest

// -------------------------------------------------------------------

// CMsg8BallRoundStartResponse

// required int32 selfstatus = 1;
inline bool CMsg8BallRoundStartResponse::has_selfstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallRoundStartResponse::set_has_selfstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallRoundStartResponse::clear_has_selfstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallRoundStartResponse::clear_selfstatus() {
  selfstatus_ = 0;
  clear_has_selfstatus();
}
inline ::google::protobuf::int32 CMsg8BallRoundStartResponse::selfstatus() const {
  return selfstatus_;
}
inline void CMsg8BallRoundStartResponse::set_selfstatus(::google::protobuf::int32 value) {
  set_has_selfstatus();
  selfstatus_ = value;
}

// required int64 roleid = 2;
inline bool CMsg8BallRoundStartResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8BallRoundStartResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8BallRoundStartResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8BallRoundStartResponse::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 CMsg8BallRoundStartResponse::roleid() const {
  return roleid_;
}
inline void CMsg8BallRoundStartResponse::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 LastResult = 3;
inline bool CMsg8BallRoundStartResponse::has_lastresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsg8BallRoundStartResponse::set_has_lastresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsg8BallRoundStartResponse::clear_has_lastresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsg8BallRoundStartResponse::clear_lastresult() {
  lastresult_ = 0;
  clear_has_lastresult();
}
inline ::google::protobuf::int32 CMsg8BallRoundStartResponse::lastresult() const {
  return lastresult_;
}
inline void CMsg8BallRoundStartResponse::set_lastresult(::google::protobuf::int32 value) {
  set_has_lastresult();
  lastresult_ = value;
}

// optional .PBBalls balllist = 4;
inline bool CMsg8BallRoundStartResponse::has_balllist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsg8BallRoundStartResponse::set_has_balllist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsg8BallRoundStartResponse::clear_has_balllist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsg8BallRoundStartResponse::clear_balllist() {
  if (balllist_ != NULL) balllist_->::PBBalls::Clear();
  clear_has_balllist();
}
inline const ::PBBalls& CMsg8BallRoundStartResponse::balllist() const {
  return balllist_ != NULL ? *balllist_ : *default_instance_->balllist_;
}
inline ::PBBalls* CMsg8BallRoundStartResponse::mutable_balllist() {
  set_has_balllist();
  if (balllist_ == NULL) balllist_ = new ::PBBalls;
  return balllist_;
}
inline ::PBBalls* CMsg8BallRoundStartResponse::release_balllist() {
  clear_has_balllist();
  ::PBBalls* temp = balllist_;
  balllist_ = NULL;
  return temp;
}
inline void CMsg8BallRoundStartResponse::set_allocated_balllist(::PBBalls* balllist) {
  delete balllist_;
  balllist_ = balllist;
  if (balllist) {
    set_has_balllist();
  } else {
    clear_has_balllist();
  }
}

// repeated .PB8BallGroup ballgroup = 5;
inline int CMsg8BallRoundStartResponse::ballgroup_size() const {
  return ballgroup_.size();
}
inline void CMsg8BallRoundStartResponse::clear_ballgroup() {
  ballgroup_.Clear();
}
inline const ::PB8BallGroup& CMsg8BallRoundStartResponse::ballgroup(int index) const {
  return ballgroup_.Get(index);
}
inline ::PB8BallGroup* CMsg8BallRoundStartResponse::mutable_ballgroup(int index) {
  return ballgroup_.Mutable(index);
}
inline ::PB8BallGroup* CMsg8BallRoundStartResponse::add_ballgroup() {
  return ballgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >&
CMsg8BallRoundStartResponse::ballgroup() const {
  return ballgroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >*
CMsg8BallRoundStartResponse::mutable_ballgroup() {
  return &ballgroup_;
}

// -------------------------------------------------------------------

// CMsg8BallKickInfoRequest

// required .PBKickBallInfo kickinfo = 1;
inline bool CMsg8BallKickInfoRequest::has_kickinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallKickInfoRequest::set_has_kickinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallKickInfoRequest::clear_has_kickinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallKickInfoRequest::clear_kickinfo() {
  if (kickinfo_ != NULL) kickinfo_->::PBKickBallInfo::Clear();
  clear_has_kickinfo();
}
inline const ::PBKickBallInfo& CMsg8BallKickInfoRequest::kickinfo() const {
  return kickinfo_ != NULL ? *kickinfo_ : *default_instance_->kickinfo_;
}
inline ::PBKickBallInfo* CMsg8BallKickInfoRequest::mutable_kickinfo() {
  set_has_kickinfo();
  if (kickinfo_ == NULL) kickinfo_ = new ::PBKickBallInfo;
  return kickinfo_;
}
inline ::PBKickBallInfo* CMsg8BallKickInfoRequest::release_kickinfo() {
  clear_has_kickinfo();
  ::PBKickBallInfo* temp = kickinfo_;
  kickinfo_ = NULL;
  return temp;
}
inline void CMsg8BallKickInfoRequest::set_allocated_kickinfo(::PBKickBallInfo* kickinfo) {
  delete kickinfo_;
  kickinfo_ = kickinfo;
  if (kickinfo) {
    set_has_kickinfo();
  } else {
    clear_has_kickinfo();
  }
}

// -------------------------------------------------------------------

// CMsg8BallKickInfoResponse

// required .PBKickBallInfo kickinfo = 1;
inline bool CMsg8BallKickInfoResponse::has_kickinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallKickInfoResponse::set_has_kickinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallKickInfoResponse::clear_has_kickinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallKickInfoResponse::clear_kickinfo() {
  if (kickinfo_ != NULL) kickinfo_->::PBKickBallInfo::Clear();
  clear_has_kickinfo();
}
inline const ::PBKickBallInfo& CMsg8BallKickInfoResponse::kickinfo() const {
  return kickinfo_ != NULL ? *kickinfo_ : *default_instance_->kickinfo_;
}
inline ::PBKickBallInfo* CMsg8BallKickInfoResponse::mutable_kickinfo() {
  set_has_kickinfo();
  if (kickinfo_ == NULL) kickinfo_ = new ::PBKickBallInfo;
  return kickinfo_;
}
inline ::PBKickBallInfo* CMsg8BallKickInfoResponse::release_kickinfo() {
  clear_has_kickinfo();
  ::PBKickBallInfo* temp = kickinfo_;
  kickinfo_ = NULL;
  return temp;
}
inline void CMsg8BallKickInfoResponse::set_allocated_kickinfo(::PBKickBallInfo* kickinfo) {
  delete kickinfo_;
  kickinfo_ = kickinfo;
  if (kickinfo) {
    set_has_kickinfo();
  } else {
    clear_has_kickinfo();
  }
}

// -------------------------------------------------------------------

// CMsg8BallPositionRequest

// required .PBBalls balllist = 1;
inline bool CMsg8BallPositionRequest::has_balllist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallPositionRequest::set_has_balllist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallPositionRequest::clear_has_balllist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallPositionRequest::clear_balllist() {
  if (balllist_ != NULL) balllist_->::PBBalls::Clear();
  clear_has_balllist();
}
inline const ::PBBalls& CMsg8BallPositionRequest::balllist() const {
  return balllist_ != NULL ? *balllist_ : *default_instance_->balllist_;
}
inline ::PBBalls* CMsg8BallPositionRequest::mutable_balllist() {
  set_has_balllist();
  if (balllist_ == NULL) balllist_ = new ::PBBalls;
  return balllist_;
}
inline ::PBBalls* CMsg8BallPositionRequest::release_balllist() {
  clear_has_balllist();
  ::PBBalls* temp = balllist_;
  balllist_ = NULL;
  return temp;
}
inline void CMsg8BallPositionRequest::set_allocated_balllist(::PBBalls* balllist) {
  delete balllist_;
  balllist_ = balllist;
  if (balllist) {
    set_has_balllist();
  } else {
    clear_has_balllist();
  }
}

// -------------------------------------------------------------------

// CMsg8BallPositionResponse

// required .PBBalls balllist = 1;
inline bool CMsg8BallPositionResponse::has_balllist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallPositionResponse::set_has_balllist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallPositionResponse::clear_has_balllist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallPositionResponse::clear_balllist() {
  if (balllist_ != NULL) balllist_->::PBBalls::Clear();
  clear_has_balllist();
}
inline const ::PBBalls& CMsg8BallPositionResponse::balllist() const {
  return balllist_ != NULL ? *balllist_ : *default_instance_->balllist_;
}
inline ::PBBalls* CMsg8BallPositionResponse::mutable_balllist() {
  set_has_balllist();
  if (balllist_ == NULL) balllist_ = new ::PBBalls;
  return balllist_;
}
inline ::PBBalls* CMsg8BallPositionResponse::release_balllist() {
  clear_has_balllist();
  ::PBBalls* temp = balllist_;
  balllist_ = NULL;
  return temp;
}
inline void CMsg8BallPositionResponse::set_allocated_balllist(::PBBalls* balllist) {
  delete balllist_;
  balllist_ = balllist;
  if (balllist) {
    set_has_balllist();
  } else {
    clear_has_balllist();
  }
}

// -------------------------------------------------------------------

// CMsg8BallRoundEndRequest

// required int32 result = 1;
inline bool CMsg8BallRoundEndRequest::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallRoundEndRequest::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallRoundEndRequest::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallRoundEndRequest::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsg8BallRoundEndRequest::result() const {
  return result_;
}
inline void CMsg8BallRoundEndRequest::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .PBBalls balllist = 2;
inline bool CMsg8BallRoundEndRequest::has_balllist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8BallRoundEndRequest::set_has_balllist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8BallRoundEndRequest::clear_has_balllist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8BallRoundEndRequest::clear_balllist() {
  if (balllist_ != NULL) balllist_->::PBBalls::Clear();
  clear_has_balllist();
}
inline const ::PBBalls& CMsg8BallRoundEndRequest::balllist() const {
  return balllist_ != NULL ? *balllist_ : *default_instance_->balllist_;
}
inline ::PBBalls* CMsg8BallRoundEndRequest::mutable_balllist() {
  set_has_balllist();
  if (balllist_ == NULL) balllist_ = new ::PBBalls;
  return balllist_;
}
inline ::PBBalls* CMsg8BallRoundEndRequest::release_balllist() {
  clear_has_balllist();
  ::PBBalls* temp = balllist_;
  balllist_ = NULL;
  return temp;
}
inline void CMsg8BallRoundEndRequest::set_allocated_balllist(::PBBalls* balllist) {
  delete balllist_;
  balllist_ = balllist;
  if (balllist) {
    set_has_balllist();
  } else {
    clear_has_balllist();
  }
}

// repeated .PB8BallGroup ballgroup = 3;
inline int CMsg8BallRoundEndRequest::ballgroup_size() const {
  return ballgroup_.size();
}
inline void CMsg8BallRoundEndRequest::clear_ballgroup() {
  ballgroup_.Clear();
}
inline const ::PB8BallGroup& CMsg8BallRoundEndRequest::ballgroup(int index) const {
  return ballgroup_.Get(index);
}
inline ::PB8BallGroup* CMsg8BallRoundEndRequest::mutable_ballgroup(int index) {
  return ballgroup_.Mutable(index);
}
inline ::PB8BallGroup* CMsg8BallRoundEndRequest::add_ballgroup() {
  return ballgroup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >&
CMsg8BallRoundEndRequest::ballgroup() const {
  return ballgroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB8BallGroup >*
CMsg8BallRoundEndRequest::mutable_ballgroup() {
  return &ballgroup_;
}

// optional int64 sucroleid = 4;
inline bool CMsg8BallRoundEndRequest::has_sucroleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsg8BallRoundEndRequest::set_has_sucroleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsg8BallRoundEndRequest::clear_has_sucroleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsg8BallRoundEndRequest::clear_sucroleid() {
  sucroleid_ = GOOGLE_LONGLONG(0);
  clear_has_sucroleid();
}
inline ::google::protobuf::int64 CMsg8BallRoundEndRequest::sucroleid() const {
  return sucroleid_;
}
inline void CMsg8BallRoundEndRequest::set_sucroleid(::google::protobuf::int64 value) {
  set_has_sucroleid();
  sucroleid_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallEndGameResponse

// repeated .PB8BallEndResult result = 1;
inline int CMsg8BallEndGameResponse::result_size() const {
  return result_.size();
}
inline void CMsg8BallEndGameResponse::clear_result() {
  result_.Clear();
}
inline const ::PB8BallEndResult& CMsg8BallEndGameResponse::result(int index) const {
  return result_.Get(index);
}
inline ::PB8BallEndResult* CMsg8BallEndGameResponse::mutable_result(int index) {
  return result_.Mutable(index);
}
inline ::PB8BallEndResult* CMsg8BallEndGameResponse::add_result() {
  return result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB8BallEndResult >&
CMsg8BallEndGameResponse::result() const {
  return result_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB8BallEndResult >*
CMsg8BallEndGameResponse::mutable_result() {
  return &result_;
}

// -------------------------------------------------------------------

// CMsg8BallCannotContinueResponse

// required .enRoomType roomtype = 1;
inline bool CMsg8BallCannotContinueResponse::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallCannotContinueResponse::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallCannotContinueResponse::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallCannotContinueResponse::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::enRoomType CMsg8BallCannotContinueResponse::roomtype() const {
  return static_cast< ::enRoomType >(roomtype_);
}
inline void CMsg8BallCannotContinueResponse::set_roomtype(::enRoomType value) {
  assert(::enRoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
}

// required int32 result = 2;
inline bool CMsg8BallCannotContinueResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8BallCannotContinueResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8BallCannotContinueResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8BallCannotContinueResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsg8BallCannotContinueResponse::result() const {
  return result_;
}
inline void CMsg8BallCannotContinueResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CMsgLucky28SettlementEndRequest

// -------------------------------------------------------------------

// CMsg8BallLeaveMatchRequest

// required .enRoomType roomtype = 1;
inline bool CMsg8BallLeaveMatchRequest::has_roomtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallLeaveMatchRequest::set_has_roomtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallLeaveMatchRequest::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallLeaveMatchRequest::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::enRoomType CMsg8BallLeaveMatchRequest::roomtype() const {
  return static_cast< ::enRoomType >(roomtype_);
}
inline void CMsg8BallLeaveMatchRequest::set_roomtype(::enRoomType value) {
  assert(::enRoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallLeaveMatchResponse

// required int32 result = 1;
inline bool CMsg8BallLeaveMatchResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallLeaveMatchResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallLeaveMatchResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallLeaveMatchResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsg8BallLeaveMatchResponse::result() const {
  return result_;
}
inline void CMsg8BallLeaveMatchResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required .enRoomType roomtype = 2;
inline bool CMsg8BallLeaveMatchResponse::has_roomtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8BallLeaveMatchResponse::set_has_roomtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8BallLeaveMatchResponse::clear_has_roomtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8BallLeaveMatchResponse::clear_roomtype() {
  roomtype_ = 0;
  clear_has_roomtype();
}
inline ::enRoomType CMsg8BallLeaveMatchResponse::roomtype() const {
  return static_cast< ::enRoomType >(roomtype_);
}
inline void CMsg8BallLeaveMatchResponse::set_roomtype(::enRoomType value) {
  assert(::enRoomType_IsValid(value));
  set_has_roomtype();
  roomtype_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallMoveBallRequest

// required .PBSingleBall ball = 1;
inline bool CMsg8BallMoveBallRequest::has_ball() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallMoveBallRequest::set_has_ball() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallMoveBallRequest::clear_has_ball() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallMoveBallRequest::clear_ball() {
  if (ball_ != NULL) ball_->::PBSingleBall::Clear();
  clear_has_ball();
}
inline const ::PBSingleBall& CMsg8BallMoveBallRequest::ball() const {
  return ball_ != NULL ? *ball_ : *default_instance_->ball_;
}
inline ::PBSingleBall* CMsg8BallMoveBallRequest::mutable_ball() {
  set_has_ball();
  if (ball_ == NULL) ball_ = new ::PBSingleBall;
  return ball_;
}
inline ::PBSingleBall* CMsg8BallMoveBallRequest::release_ball() {
  clear_has_ball();
  ::PBSingleBall* temp = ball_;
  ball_ = NULL;
  return temp;
}
inline void CMsg8BallMoveBallRequest::set_allocated_ball(::PBSingleBall* ball) {
  delete ball_;
  ball_ = ball;
  if (ball) {
    set_has_ball();
  } else {
    clear_has_ball();
  }
}

// required int32 angle = 2;
inline bool CMsg8BallMoveBallRequest::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8BallMoveBallRequest::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8BallMoveBallRequest::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8BallMoveBallRequest::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::google::protobuf::int32 CMsg8BallMoveBallRequest::angle() const {
  return angle_;
}
inline void CMsg8BallMoveBallRequest::set_angle(::google::protobuf::int32 value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallMoveBallResponse

// required .PBSingleBall ball = 1;
inline bool CMsg8BallMoveBallResponse::has_ball() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallMoveBallResponse::set_has_ball() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallMoveBallResponse::clear_has_ball() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallMoveBallResponse::clear_ball() {
  if (ball_ != NULL) ball_->::PBSingleBall::Clear();
  clear_has_ball();
}
inline const ::PBSingleBall& CMsg8BallMoveBallResponse::ball() const {
  return ball_ != NULL ? *ball_ : *default_instance_->ball_;
}
inline ::PBSingleBall* CMsg8BallMoveBallResponse::mutable_ball() {
  set_has_ball();
  if (ball_ == NULL) ball_ = new ::PBSingleBall;
  return ball_;
}
inline ::PBSingleBall* CMsg8BallMoveBallResponse::release_ball() {
  clear_has_ball();
  ::PBSingleBall* temp = ball_;
  ball_ = NULL;
  return temp;
}
inline void CMsg8BallMoveBallResponse::set_allocated_ball(::PBSingleBall* ball) {
  delete ball_;
  ball_ = ball;
  if (ball) {
    set_has_ball();
  } else {
    clear_has_ball();
  }
}

// required int32 angle = 2;
inline bool CMsg8BallMoveBallResponse::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8BallMoveBallResponse::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8BallMoveBallResponse::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8BallMoveBallResponse::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::google::protobuf::int32 CMsg8BallMoveBallResponse::angle() const {
  return angle_;
}
inline void CMsg8BallMoveBallResponse::set_angle(::google::protobuf::int32 value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallMoveGunRequest

// required int32 angle = 1;
inline bool CMsg8BallMoveGunRequest::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallMoveGunRequest::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallMoveGunRequest::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallMoveGunRequest::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::google::protobuf::int32 CMsg8BallMoveGunRequest::angle() const {
  return angle_;
}
inline void CMsg8BallMoveGunRequest::set_angle(::google::protobuf::int32 value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallMoveGunResponse

// required int32 angle = 1;
inline bool CMsg8BallMoveGunResponse::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallMoveGunResponse::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallMoveGunResponse::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallMoveGunResponse::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::google::protobuf::int32 CMsg8BallMoveGunResponse::angle() const {
  return angle_;
}
inline void CMsg8BallMoveGunResponse::set_angle(::google::protobuf::int32 value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// CMsg8Ball3PFoulResponse

// required int64 roleid = 1;
inline bool CMsg8Ball3PFoulResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8Ball3PFoulResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8Ball3PFoulResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8Ball3PFoulResponse::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 CMsg8Ball3PFoulResponse::roleid() const {
  return roleid_;
}
inline void CMsg8Ball3PFoulResponse::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 ballnum = 2;
inline bool CMsg8Ball3PFoulResponse::has_ballnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsg8Ball3PFoulResponse::set_has_ballnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsg8Ball3PFoulResponse::clear_has_ballnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsg8Ball3PFoulResponse::clear_ballnum() {
  ballnum_ = 0;
  clear_has_ballnum();
}
inline ::google::protobuf::int32 CMsg8Ball3PFoulResponse::ballnum() const {
  return ballnum_;
}
inline void CMsg8Ball3PFoulResponse::set_ballnum(::google::protobuf::int32 value) {
  set_has_ballnum();
  ballnum_ = value;
}

// -------------------------------------------------------------------

// CMsg8BallUpdateResultToHall

// required .EDataStatisticsType type = 1;
inline bool CMsg8BallUpdateResultToHall::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsg8BallUpdateResultToHall::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsg8BallUpdateResultToHall::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsg8BallUpdateResultToHall::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::EDataStatisticsType CMsg8BallUpdateResultToHall::type() const {
  return static_cast< ::EDataStatisticsType >(type_);
}
inline void CMsg8BallUpdateResultToHall::set_type(::EDataStatisticsType value) {
  assert(::EDataStatisticsType_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated .PB8BallDataStatistics data = 2;
inline int CMsg8BallUpdateResultToHall::data_size() const {
  return data_.size();
}
inline void CMsg8BallUpdateResultToHall::clear_data() {
  data_.Clear();
}
inline const ::PB8BallDataStatistics& CMsg8BallUpdateResultToHall::data(int index) const {
  return data_.Get(index);
}
inline ::PB8BallDataStatistics* CMsg8BallUpdateResultToHall::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::PB8BallDataStatistics* CMsg8BallUpdateResultToHall::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB8BallDataStatistics >&
CMsg8BallUpdateResultToHall::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB8BallDataStatistics >*
CMsg8BallUpdateResultToHall::mutable_data() {
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgR2HRegistHallRequest_Msg>() {
  return ::CMsgR2HRegistHallRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgH2RRegistHallResponse_Msg>() {
  return ::CMsgH2RRegistHallResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgR2HUpdateRoomRequest_Msg>() {
  return ::CMsgR2HUpdateRoomRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgH2RUpdateRoomResponse_Msg>() {
  return ::CMsgH2RUpdateRoomResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLoginRoomRequest_Msg>() {
  return ::CMsgLoginRoomRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLoginRoomResponse_Msg>() {
  return ::CMsgLoginRoomResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgH2RCreateRoomRequest_Msg>() {
  return ::CMsgH2RCreateRoomRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgR2HCreateRoomResponse_Msg>() {
  return ::CMsgR2HCreateRoomResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGoRoomResponse_Msg>() {
  return ::CMsgGoRoomResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgJoinGameRequest_Msg>() {
  return ::CMsgJoinGameRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgJoinGameResponse_Msg>() {
  return ::CMsgJoinGameResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgUpdateRoleInfoResponse_Msg>() {
  return ::CMsgUpdateRoleInfoResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLeaveRoomRequest_Msg>() {
  return ::CMsgLeaveRoomRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgR2HLeaveRoomResponse_Msg>() {
  return ::CMsgR2HLeaveRoomResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgR2HUpdateRoleDataResponse_Msg>() {
  return ::CMsgR2HUpdateRoleDataResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLucky28ShotRequest_Msg>() {
  return ::CMsgLucky28ShotRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLucky28PrepareResponse_Msg>() {
  return ::CMsgLucky28PrepareResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLucky28StartResponse_Msg>() {
  return ::CMsgLucky28StartResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLucky28EndResponse_Msg>() {
  return ::CMsgLucky28EndResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLucky28ShotRoleResponse_Msg>() {
  return ::CMsgLucky28ShotRoleResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLucky28ShotResultResponse_Msg>() {
  return ::CMsgLucky28ShotResultResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallStartGameRequest_Msg>() {
  return ::CMsg8BallStartGameRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallRoundStartResponse_Msg>() {
  return ::CMsg8BallRoundStartResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallKickInfoRequest_Msg>() {
  return ::CMsg8BallKickInfoRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallKickInfoResponse_Msg>() {
  return ::CMsg8BallKickInfoResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallPositionRequest_Msg>() {
  return ::CMsg8BallPositionRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallPositionResponse_Msg>() {
  return ::CMsg8BallPositionResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallRoundEndRequest_Msg>() {
  return ::CMsg8BallRoundEndRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallEndGameResponse_Msg>() {
  return ::CMsg8BallEndGameResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallCannotContinueResponse_Msg>() {
  return ::CMsg8BallCannotContinueResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLucky28SettlementEndRequest_Msg>() {
  return ::CMsgLucky28SettlementEndRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallLeaveMatchRequest_Msg>() {
  return ::CMsg8BallLeaveMatchRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallLeaveMatchResponse_Msg>() {
  return ::CMsg8BallLeaveMatchResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallMoveBallRequest_Msg>() {
  return ::CMsg8BallMoveBallRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallMoveBallResponse_Msg>() {
  return ::CMsg8BallMoveBallResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallMoveGunRequest_Msg>() {
  return ::CMsg8BallMoveGunRequest_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallMoveGunResponse_Msg>() {
  return ::CMsg8BallMoveGunResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8Ball3PFoulResponse_Msg>() {
  return ::CMsg8Ball3PFoulResponse_Msg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsg8BallUpdateResultToHall_Msg>() {
  return ::CMsg8BallUpdateResultToHall_Msg_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_roommessage_2eproto__INCLUDED
