// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbmessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dbmessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgExecuteSqlRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgExecuteSqlRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgExecuteSqlRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgExecuteSqlResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgExecuteSqlResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgExecuteSqlResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PBDataItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDataItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDataItemList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDataItemList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGagaleType1DataInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGagaleType1DataInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGagaleType2DataInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGagaleType2DataInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGagaleType3DataInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGagaleType3DataInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDataGagaleType1List_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDataGagaleType1List_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDataGagaleType2List_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDataGagaleType2List_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDataGagaleType3List_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDataGagaleType3List_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBData8BallStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBData8BallStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBSaveRoleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBSaveRoleData_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SQLTYPE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CALLBACK_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BLOB_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_dbmessage_2eproto() {
  protobuf_AddDesc_dbmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dbmessage.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgExecuteSqlRequest_descriptor_ = file->message_type(0);
  static const int CMsgExecuteSqlRequest_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, logictype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, sqltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, callback_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, sql_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, bufsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, buffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, sqlwhere_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, outnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, hasblob_),
  };
  CMsgExecuteSqlRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgExecuteSqlRequest_descriptor_,
      CMsgExecuteSqlRequest::default_instance_,
      CMsgExecuteSqlRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgExecuteSqlRequest));
  CMsgExecuteSqlRequest_Msg_descriptor_ = CMsgExecuteSqlRequest_descriptor_->enum_type(0);
  CMsgExecuteSqlResponse_descriptor_ = file->message_type(1);
  static const int CMsgExecuteSqlResponse_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, logictype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, teamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, resultcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, rowcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, colcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, fieldvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, fieldvaluelen_),
  };
  CMsgExecuteSqlResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgExecuteSqlResponse_descriptor_,
      CMsgExecuteSqlResponse::default_instance_,
      CMsgExecuteSqlResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgExecuteSqlResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgExecuteSqlResponse));
  CMsgExecuteSqlResponse_Msg_descriptor_ = CMsgExecuteSqlResponse_descriptor_->enum_type(0);
  PBDataItem_descriptor_ = file->message_type(2);
  static const int PBDataItem_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItem, tempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItem, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItem, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItem, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItem, itemtype_),
  };
  PBDataItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDataItem_descriptor_,
      PBDataItem::default_instance_,
      PBDataItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDataItem));
  PBDataItemList_descriptor_ = file->message_type(3);
  static const int PBDataItemList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItemList, items_),
  };
  PBDataItemList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDataItemList_descriptor_,
      PBDataItemList::default_instance_,
      PBDataItemList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItemList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataItemList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDataItemList));
  PBGagaleType1DataInfo_descriptor_ = file->message_type(4);
  static const int PBGagaleType1DataInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType1DataInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType1DataInfo, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType1DataInfo, display_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType1DataInfo, isbig_),
  };
  PBGagaleType1DataInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBGagaleType1DataInfo_descriptor_,
      PBGagaleType1DataInfo::default_instance_,
      PBGagaleType1DataInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType1DataInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType1DataInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBGagaleType1DataInfo));
  PBGagaleType2DataInfo_descriptor_ = file->message_type(5);
  static const int PBGagaleType2DataInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType2DataInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType2DataInfo, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType2DataInfo, display_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType2DataInfo, isbig_),
  };
  PBGagaleType2DataInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBGagaleType2DataInfo_descriptor_,
      PBGagaleType2DataInfo::default_instance_,
      PBGagaleType2DataInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType2DataInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType2DataInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBGagaleType2DataInfo));
  PBGagaleType3DataInfo_descriptor_ = file->message_type(6);
  static const int PBGagaleType3DataInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, rewardtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, rewardnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, display_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, isbig_),
  };
  PBGagaleType3DataInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBGagaleType3DataInfo_descriptor_,
      PBGagaleType3DataInfo::default_instance_,
      PBGagaleType3DataInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGagaleType3DataInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBGagaleType3DataInfo));
  PBDataGagaleType1List_descriptor_ = file->message_type(7);
  static const int PBDataGagaleType1List_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType1List, duiduipeng_),
  };
  PBDataGagaleType1List_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDataGagaleType1List_descriptor_,
      PBDataGagaleType1List::default_instance_,
      PBDataGagaleType1List_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType1List, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType1List, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDataGagaleType1List));
  PBDataGagaleType2List_descriptor_ = file->message_type(8);
  static const int PBDataGagaleType2List_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType2List, sinuoke_),
  };
  PBDataGagaleType2List_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDataGagaleType2List_descriptor_,
      PBDataGagaleType2List::default_instance_,
      PBDataGagaleType2List_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType2List, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType2List, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDataGagaleType2List));
  PBDataGagaleType3List_descriptor_ = file->message_type(9);
  static const int PBDataGagaleType3List_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType3List, dayingjia_),
  };
  PBDataGagaleType3List_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDataGagaleType3List_descriptor_,
      PBDataGagaleType3List::default_instance_,
      PBDataGagaleType3List_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType3List, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDataGagaleType3List, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDataGagaleType3List));
  PBData8BallStatistics_descriptor_ = file->message_type(10);
  static const int PBData8BallStatistics_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData8BallStatistics, win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData8BallStatistics, lose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData8BallStatistics, escape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData8BallStatistics, winningstreak_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData8BallStatistics, maxwinningstreak_),
  };
  PBData8BallStatistics_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBData8BallStatistics_descriptor_,
      PBData8BallStatistics::default_instance_,
      PBData8BallStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData8BallStatistics, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData8BallStatistics, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBData8BallStatistics));
  PBSaveRoleData_descriptor_ = file->message_type(11);
  static const int PBSaveRoleData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, itemlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, hasrename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, duiduipenglist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, ball8_1v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, ball8_3p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, sinuokelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, dayingjialist_),
  };
  PBSaveRoleData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBSaveRoleData_descriptor_,
      PBSaveRoleData::default_instance_,
      PBSaveRoleData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSaveRoleData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBSaveRoleData));
  SQLTYPE_descriptor_ = file->enum_type(0);
  CALLBACK_descriptor_ = file->enum_type(1);
  BLOB_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dbmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgExecuteSqlRequest_descriptor_, &CMsgExecuteSqlRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgExecuteSqlResponse_descriptor_, &CMsgExecuteSqlResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDataItem_descriptor_, &PBDataItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDataItemList_descriptor_, &PBDataItemList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBGagaleType1DataInfo_descriptor_, &PBGagaleType1DataInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBGagaleType2DataInfo_descriptor_, &PBGagaleType2DataInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBGagaleType3DataInfo_descriptor_, &PBGagaleType3DataInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDataGagaleType1List_descriptor_, &PBDataGagaleType1List::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDataGagaleType2List_descriptor_, &PBDataGagaleType2List::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDataGagaleType3List_descriptor_, &PBDataGagaleType3List::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBData8BallStatistics_descriptor_, &PBData8BallStatistics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBSaveRoleData_descriptor_, &PBSaveRoleData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dbmessage_2eproto() {
  delete CMsgExecuteSqlRequest::default_instance_;
  delete CMsgExecuteSqlRequest_reflection_;
  delete CMsgExecuteSqlResponse::default_instance_;
  delete CMsgExecuteSqlResponse_reflection_;
  delete PBDataItem::default_instance_;
  delete PBDataItem_reflection_;
  delete PBDataItemList::default_instance_;
  delete PBDataItemList_reflection_;
  delete PBGagaleType1DataInfo::default_instance_;
  delete PBGagaleType1DataInfo_reflection_;
  delete PBGagaleType2DataInfo::default_instance_;
  delete PBGagaleType2DataInfo_reflection_;
  delete PBGagaleType3DataInfo::default_instance_;
  delete PBGagaleType3DataInfo_reflection_;
  delete PBDataGagaleType1List::default_instance_;
  delete PBDataGagaleType1List_reflection_;
  delete PBDataGagaleType2List::default_instance_;
  delete PBDataGagaleType2List_reflection_;
  delete PBDataGagaleType3List::default_instance_;
  delete PBDataGagaleType3List_reflection_;
  delete PBData8BallStatistics::default_instance_;
  delete PBData8BallStatistics_reflection_;
  delete PBSaveRoleData::default_instance_;
  delete PBSaveRoleData_reflection_;
}

void protobuf_AddDesc_dbmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_resourcemessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017dbmessage.proto\032\025resourcemessage.proto"
    "\"\274\002\n\025CMsgExecuteSqlRequest\022\021\n\tLogicType\030"
    "\001 \001(\r\022\024\n\tSessionID\030\002 \001(\r:\0010\022\024\n\tTimeStamp"
    "\030\003 \001(\004:\0010\022\021\n\006TeamID\030\004 \001(\004:\0010\022!\n\007SqlType\030"
    "\005 \001(\0162\010.SQLTYPE:\006SELECT\022)\n\010Callback\030\006 \001("
    "\0162\t.CALLBACK:\014MUSTCALLBACK\022\013\n\003Sql\030\007 \001(\t\022"
    "\022\n\007BufSize\030\010 \001(\r:\0010\022\016\n\006Buffer\030\t \001(\014\022\020\n\010S"
    "QLWhere\030\n \001(\t\022\024\n\tOutNumber\030\013 \001(\r:\0010\022\026\n\007H"
    "asBlob\030\014 \001(\0162\005.BLOB\"\022\n\003Msg\022\013\n\005MsgID\020\201\200\004\""
    "\336\001\n\026CMsgExecuteSqlResponse\022\021\n\tLogicType\030"
    "\001 \001(\r\022\021\n\tSessionID\030\002 \001(\r\022\021\n\tTimeStamp\030\003 "
    "\001(\004\022\016\n\006TeamID\030\004 \001(\004\022\022\n\nResultCode\030\005 \001(\r\022"
    "\023\n\010RowCount\030\006 \001(\r:\0010\022\023\n\010ColCount\030\007 \001(\r:\001"
    "0\022\022\n\nFieldValue\030\010 \003(\014\022\025\n\rFieldValueLen\030\t"
    " \003(\r\"\022\n\003Msg\022\013\n\005MsgID\020\202\200\004\"\\\n\nPBDataItem\022\016"
    "\n\006TempID\030\001 \001(\005\022\013\n\003Num\030\002 \001(\005\022\016\n\006Status\030\003 "
    "\001(\005\022\017\n\007EndTime\030\004 \001(\005\022\020\n\010ItemType\030\005 \001(\005\","
    "\n\016PBDataItemList\022\032\n\005Items\030\001 \003(\0132\013.PBData"
    "Item\"c\n\025PBGagaleType1DataInfo\022\013\n\003num\030\001 \001"
    "(\005\022\014\n\004gold\030\002 \001(\005\022 \n\007display\030\003 \001(\0162\017.eGag"
    "aleDisplay\022\r\n\005isbig\030\004 \001(\005\"c\n\025PBGagaleTyp"
    "e2DataInfo\022\013\n\003num\030\001 \001(\005\022\014\n\004gold\030\002 \001(\005\022 \n"
    "\007display\030\003 \001(\0162\017.eGagaleDisplay\022\r\n\005isbig"
    "\030\006 \001(\005\"\233\001\n\025PBGagaleType3DataInfo\022\013\n\003num\030"
    "\001 \001(\005\022\"\n\nrewardtype\030\002 \001(\0162\016.EResourceTyp"
    "e\022\021\n\trewardnum\030\003 \001(\005\022 \n\007display\030\004 \001(\0162\017."
    "eGagaleDisplay\022\r\n\005state\030\005 \001(\005\022\r\n\005isbig\030\006"
    " \001(\005\"C\n\025PBDataGagaleType1List\022*\n\nDuiduip"
    "eng\030\001 \003(\0132\026.PBGagaleType1DataInfo\"@\n\025PBD"
    "ataGagaleType2List\022\'\n\007Sinuoke\030\001 \003(\0132\026.PB"
    "GagaleType2DataInfo\"B\n\025PBDataGagaleType3"
    "List\022)\n\tDayingjia\030\001 \003(\0132\026.PBGagaleType3D"
    "ataInfo\"s\n\025PBData8BallStatistics\022\013\n\003win\030"
    "\001 \001(\005\022\014\n\004lose\030\002 \001(\005\022\016\n\006escape\030\003 \001(\005\022\025\n\rw"
    "inningstreak\030\004 \001(\005\022\030\n\020maxwinningstreak\030\005"
    " \001(\005\"\247\002\n\016PBSaveRoleData\022!\n\010itemlist\030\001 \001("
    "\0132\017.PBDataItemList\022\021\n\thasrename\030\002 \001(\010\022.\n"
    "\016duiduipenglist\030\003 \001(\0132\026.PBDataGagaleType"
    "1List\022)\n\tball8_1v1\030\004 \001(\0132\026.PBData8BallSt"
    "atistics\022(\n\010ball8_3p\030\005 \001(\0132\026.PBData8Ball"
    "Statistics\022+\n\013sinuokelist\030\006 \001(\0132\026.PBData"
    "GagaleType2List\022-\n\rdayingjialist\030\007 \001(\0132\026"
    ".PBDataGagaleType3List*C\n\007SQLTYPE\022\n\n\006SEL"
    "ECT\020\001\022\n\n\006INSERT\020\002\022\n\n\006UPDATE\020\003\022\n\n\006DELETE\020"
    "\004\022\010\n\004CALL\020\005*-\n\010CALLBACK\022\020\n\014MUSTCALLBACK\020"
    "\001\022\017\n\013NOTCALLBACK\020\002*!\n\004BLOB\022\013\n\007HASBLOB\020\001\022"
    "\014\n\010NONEBLOB\020\002B\002H\001", 1857);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dbmessage.proto", &protobuf_RegisterTypes);
  CMsgExecuteSqlRequest::default_instance_ = new CMsgExecuteSqlRequest();
  CMsgExecuteSqlResponse::default_instance_ = new CMsgExecuteSqlResponse();
  PBDataItem::default_instance_ = new PBDataItem();
  PBDataItemList::default_instance_ = new PBDataItemList();
  PBGagaleType1DataInfo::default_instance_ = new PBGagaleType1DataInfo();
  PBGagaleType2DataInfo::default_instance_ = new PBGagaleType2DataInfo();
  PBGagaleType3DataInfo::default_instance_ = new PBGagaleType3DataInfo();
  PBDataGagaleType1List::default_instance_ = new PBDataGagaleType1List();
  PBDataGagaleType2List::default_instance_ = new PBDataGagaleType2List();
  PBDataGagaleType3List::default_instance_ = new PBDataGagaleType3List();
  PBData8BallStatistics::default_instance_ = new PBData8BallStatistics();
  PBSaveRoleData::default_instance_ = new PBSaveRoleData();
  CMsgExecuteSqlRequest::default_instance_->InitAsDefaultInstance();
  CMsgExecuteSqlResponse::default_instance_->InitAsDefaultInstance();
  PBDataItem::default_instance_->InitAsDefaultInstance();
  PBDataItemList::default_instance_->InitAsDefaultInstance();
  PBGagaleType1DataInfo::default_instance_->InitAsDefaultInstance();
  PBGagaleType2DataInfo::default_instance_->InitAsDefaultInstance();
  PBGagaleType3DataInfo::default_instance_->InitAsDefaultInstance();
  PBDataGagaleType1List::default_instance_->InitAsDefaultInstance();
  PBDataGagaleType2List::default_instance_->InitAsDefaultInstance();
  PBDataGagaleType3List::default_instance_->InitAsDefaultInstance();
  PBData8BallStatistics::default_instance_->InitAsDefaultInstance();
  PBSaveRoleData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dbmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dbmessage_2eproto {
  StaticDescriptorInitializer_dbmessage_2eproto() {
    protobuf_AddDesc_dbmessage_2eproto();
  }
} static_descriptor_initializer_dbmessage_2eproto_;
const ::google::protobuf::EnumDescriptor* SQLTYPE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SQLTYPE_descriptor_;
}
bool SQLTYPE_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CALLBACK_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CALLBACK_descriptor_;
}
bool CALLBACK_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BLOB_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BLOB_descriptor_;
}
bool BLOB_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgExecuteSqlRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExecuteSqlRequest_Msg_descriptor_;
}
bool CMsgExecuteSqlRequest_Msg_IsValid(int value) {
  switch(value) {
    case 65537:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgExecuteSqlRequest_Msg CMsgExecuteSqlRequest::MsgID;
const CMsgExecuteSqlRequest_Msg CMsgExecuteSqlRequest::Msg_MIN;
const CMsgExecuteSqlRequest_Msg CMsgExecuteSqlRequest::Msg_MAX;
const int CMsgExecuteSqlRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgExecuteSqlRequest::kLogicTypeFieldNumber;
const int CMsgExecuteSqlRequest::kSessionIDFieldNumber;
const int CMsgExecuteSqlRequest::kTimeStampFieldNumber;
const int CMsgExecuteSqlRequest::kTeamIDFieldNumber;
const int CMsgExecuteSqlRequest::kSqlTypeFieldNumber;
const int CMsgExecuteSqlRequest::kCallbackFieldNumber;
const int CMsgExecuteSqlRequest::kSqlFieldNumber;
const int CMsgExecuteSqlRequest::kBufSizeFieldNumber;
const int CMsgExecuteSqlRequest::kBufferFieldNumber;
const int CMsgExecuteSqlRequest::kSQLWhereFieldNumber;
const int CMsgExecuteSqlRequest::kOutNumberFieldNumber;
const int CMsgExecuteSqlRequest::kHasBlobFieldNumber;
#endif  // !_MSC_VER

CMsgExecuteSqlRequest::CMsgExecuteSqlRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgExecuteSqlRequest::InitAsDefaultInstance() {
}

CMsgExecuteSqlRequest::CMsgExecuteSqlRequest(const CMsgExecuteSqlRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgExecuteSqlRequest::SharedCtor() {
  _cached_size_ = 0;
  logictype_ = 0u;
  sessionid_ = 0u;
  timestamp_ = GOOGLE_ULONGLONG(0);
  teamid_ = GOOGLE_ULONGLONG(0);
  sqltype_ = 1;
  callback_ = 1;
  sql_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bufsize_ = 0u;
  buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sqlwhere_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  outnumber_ = 0u;
  hasblob_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgExecuteSqlRequest::~CMsgExecuteSqlRequest() {
  SharedDtor();
}

void CMsgExecuteSqlRequest::SharedDtor() {
  if (sql_ != &::google::protobuf::internal::kEmptyString) {
    delete sql_;
  }
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    delete buffer_;
  }
  if (sqlwhere_ != &::google::protobuf::internal::kEmptyString) {
    delete sqlwhere_;
  }
  if (this != default_instance_) {
  }
}

void CMsgExecuteSqlRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgExecuteSqlRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExecuteSqlRequest_descriptor_;
}

const CMsgExecuteSqlRequest& CMsgExecuteSqlRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

CMsgExecuteSqlRequest* CMsgExecuteSqlRequest::default_instance_ = NULL;

CMsgExecuteSqlRequest* CMsgExecuteSqlRequest::New() const {
  return new CMsgExecuteSqlRequest;
}

void CMsgExecuteSqlRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    logictype_ = 0u;
    sessionid_ = 0u;
    timestamp_ = GOOGLE_ULONGLONG(0);
    teamid_ = GOOGLE_ULONGLONG(0);
    sqltype_ = 1;
    callback_ = 1;
    if (has_sql()) {
      if (sql_ != &::google::protobuf::internal::kEmptyString) {
        sql_->clear();
      }
    }
    bufsize_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_buffer()) {
      if (buffer_ != &::google::protobuf::internal::kEmptyString) {
        buffer_->clear();
      }
    }
    if (has_sqlwhere()) {
      if (sqlwhere_ != &::google::protobuf::internal::kEmptyString) {
        sqlwhere_->clear();
      }
    }
    outnumber_ = 0u;
    hasblob_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgExecuteSqlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 LogicType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logictype_)));
          set_has_logictype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_SessionID;
        break;
      }

      // optional uint32 SessionID = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SessionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sessionid_)));
          set_has_sessionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_TimeStamp;
        break;
      }

      // optional uint64 TimeStamp = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_TimeStamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_TeamID;
        break;
      }

      // optional uint64 TeamID = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_TeamID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
          set_has_teamid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_SqlType;
        break;
      }

      // optional .SQLTYPE SqlType = 5 [default = SELECT];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SqlType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SQLTYPE_IsValid(value)) {
            set_sqltype(static_cast< ::SQLTYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_Callback;
        break;
      }

      // optional .CALLBACK Callback = 6 [default = MUSTCALLBACK];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Callback:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CALLBACK_IsValid(value)) {
            set_callback(static_cast< ::CALLBACK >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_Sql;
        break;
      }

      // optional string Sql = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Sql:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sql().data(), this->sql().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_BufSize;
        break;
      }

      // optional uint32 BufSize = 8 [default = 0];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_BufSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bufsize_)));
          set_has_bufsize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_Buffer;
        break;
      }

      // optional bytes Buffer = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_SQLWhere;
        break;
      }

      // optional string SQLWhere = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_SQLWhere:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sqlwhere()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sqlwhere().data(), this->sqlwhere().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_OutNumber;
        break;
      }

      // optional uint32 OutNumber = 11 [default = 0];
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_OutNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outnumber_)));
          set_has_outnumber();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_HasBlob;
        break;
      }

      // optional .BLOB HasBlob = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_HasBlob:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BLOB_IsValid(value)) {
            set_hasblob(static_cast< ::BLOB >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgExecuteSqlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 LogicType = 1;
  if (has_logictype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->logictype(), output);
  }

  // optional uint32 SessionID = 2 [default = 0];
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sessionid(), output);
  }

  // optional uint64 TimeStamp = 3 [default = 0];
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->timestamp(), output);
  }

  // optional uint64 TeamID = 4 [default = 0];
  if (has_teamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->teamid(), output);
  }

  // optional .SQLTYPE SqlType = 5 [default = SELECT];
  if (has_sqltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->sqltype(), output);
  }

  // optional .CALLBACK Callback = 6 [default = MUSTCALLBACK];
  if (has_callback()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->callback(), output);
  }

  // optional string Sql = 7;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->sql(), output);
  }

  // optional uint32 BufSize = 8 [default = 0];
  if (has_bufsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->bufsize(), output);
  }

  // optional bytes Buffer = 9;
  if (has_buffer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      9, this->buffer(), output);
  }

  // optional string SQLWhere = 10;
  if (has_sqlwhere()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sqlwhere().data(), this->sqlwhere().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->sqlwhere(), output);
  }

  // optional uint32 OutNumber = 11 [default = 0];
  if (has_outnumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->outnumber(), output);
  }

  // optional .BLOB HasBlob = 12;
  if (has_hasblob()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->hasblob(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgExecuteSqlRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 LogicType = 1;
  if (has_logictype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->logictype(), target);
  }

  // optional uint32 SessionID = 2 [default = 0];
  if (has_sessionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sessionid(), target);
  }

  // optional uint64 TimeStamp = 3 [default = 0];
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->timestamp(), target);
  }

  // optional uint64 TeamID = 4 [default = 0];
  if (has_teamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->teamid(), target);
  }

  // optional .SQLTYPE SqlType = 5 [default = SELECT];
  if (has_sqltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->sqltype(), target);
  }

  // optional .CALLBACK Callback = 6 [default = MUSTCALLBACK];
  if (has_callback()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->callback(), target);
  }

  // optional string Sql = 7;
  if (has_sql()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sql().data(), this->sql().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sql(), target);
  }

  // optional uint32 BufSize = 8 [default = 0];
  if (has_bufsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->bufsize(), target);
  }

  // optional bytes Buffer = 9;
  if (has_buffer()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->buffer(), target);
  }

  // optional string SQLWhere = 10;
  if (has_sqlwhere()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sqlwhere().data(), this->sqlwhere().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sqlwhere(), target);
  }

  // optional uint32 OutNumber = 11 [default = 0];
  if (has_outnumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->outnumber(), target);
  }

  // optional .BLOB HasBlob = 12;
  if (has_hasblob()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->hasblob(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgExecuteSqlRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 LogicType = 1;
    if (has_logictype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logictype());
    }

    // optional uint32 SessionID = 2 [default = 0];
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sessionid());
    }

    // optional uint64 TimeStamp = 3 [default = 0];
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional uint64 TeamID = 4 [default = 0];
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->teamid());
    }

    // optional .SQLTYPE SqlType = 5 [default = SELECT];
    if (has_sqltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sqltype());
    }

    // optional .CALLBACK Callback = 6 [default = MUSTCALLBACK];
    if (has_callback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->callback());
    }

    // optional string Sql = 7;
    if (has_sql()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sql());
    }

    // optional uint32 BufSize = 8 [default = 0];
    if (has_bufsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bufsize());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bytes Buffer = 9;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buffer());
    }

    // optional string SQLWhere = 10;
    if (has_sqlwhere()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sqlwhere());
    }

    // optional uint32 OutNumber = 11 [default = 0];
    if (has_outnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->outnumber());
    }

    // optional .BLOB HasBlob = 12;
    if (has_hasblob()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->hasblob());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgExecuteSqlRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgExecuteSqlRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgExecuteSqlRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgExecuteSqlRequest::MergeFrom(const CMsgExecuteSqlRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_logictype()) {
      set_logictype(from.logictype());
    }
    if (from.has_sessionid()) {
      set_sessionid(from.sessionid());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_teamid()) {
      set_teamid(from.teamid());
    }
    if (from.has_sqltype()) {
      set_sqltype(from.sqltype());
    }
    if (from.has_callback()) {
      set_callback(from.callback());
    }
    if (from.has_sql()) {
      set_sql(from.sql());
    }
    if (from.has_bufsize()) {
      set_bufsize(from.bufsize());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_buffer()) {
      set_buffer(from.buffer());
    }
    if (from.has_sqlwhere()) {
      set_sqlwhere(from.sqlwhere());
    }
    if (from.has_outnumber()) {
      set_outnumber(from.outnumber());
    }
    if (from.has_hasblob()) {
      set_hasblob(from.hasblob());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgExecuteSqlRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgExecuteSqlRequest::CopyFrom(const CMsgExecuteSqlRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgExecuteSqlRequest::IsInitialized() const {

  return true;
}

void CMsgExecuteSqlRequest::Swap(CMsgExecuteSqlRequest* other) {
  if (other != this) {
    std::swap(logictype_, other->logictype_);
    std::swap(sessionid_, other->sessionid_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(teamid_, other->teamid_);
    std::swap(sqltype_, other->sqltype_);
    std::swap(callback_, other->callback_);
    std::swap(sql_, other->sql_);
    std::swap(bufsize_, other->bufsize_);
    std::swap(buffer_, other->buffer_);
    std::swap(sqlwhere_, other->sqlwhere_);
    std::swap(outnumber_, other->outnumber_);
    std::swap(hasblob_, other->hasblob_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgExecuteSqlRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgExecuteSqlRequest_descriptor_;
  metadata.reflection = CMsgExecuteSqlRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgExecuteSqlResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExecuteSqlResponse_Msg_descriptor_;
}
bool CMsgExecuteSqlResponse_Msg_IsValid(int value) {
  switch(value) {
    case 65538:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgExecuteSqlResponse_Msg CMsgExecuteSqlResponse::MsgID;
const CMsgExecuteSqlResponse_Msg CMsgExecuteSqlResponse::Msg_MIN;
const CMsgExecuteSqlResponse_Msg CMsgExecuteSqlResponse::Msg_MAX;
const int CMsgExecuteSqlResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgExecuteSqlResponse::kLogicTypeFieldNumber;
const int CMsgExecuteSqlResponse::kSessionIDFieldNumber;
const int CMsgExecuteSqlResponse::kTimeStampFieldNumber;
const int CMsgExecuteSqlResponse::kTeamIDFieldNumber;
const int CMsgExecuteSqlResponse::kResultCodeFieldNumber;
const int CMsgExecuteSqlResponse::kRowCountFieldNumber;
const int CMsgExecuteSqlResponse::kColCountFieldNumber;
const int CMsgExecuteSqlResponse::kFieldValueFieldNumber;
const int CMsgExecuteSqlResponse::kFieldValueLenFieldNumber;
#endif  // !_MSC_VER

CMsgExecuteSqlResponse::CMsgExecuteSqlResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgExecuteSqlResponse::InitAsDefaultInstance() {
}

CMsgExecuteSqlResponse::CMsgExecuteSqlResponse(const CMsgExecuteSqlResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgExecuteSqlResponse::SharedCtor() {
  _cached_size_ = 0;
  logictype_ = 0u;
  sessionid_ = 0u;
  timestamp_ = GOOGLE_ULONGLONG(0);
  teamid_ = GOOGLE_ULONGLONG(0);
  resultcode_ = 0u;
  rowcount_ = 0u;
  colcount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgExecuteSqlResponse::~CMsgExecuteSqlResponse() {
  SharedDtor();
}

void CMsgExecuteSqlResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgExecuteSqlResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgExecuteSqlResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgExecuteSqlResponse_descriptor_;
}

const CMsgExecuteSqlResponse& CMsgExecuteSqlResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

CMsgExecuteSqlResponse* CMsgExecuteSqlResponse::default_instance_ = NULL;

CMsgExecuteSqlResponse* CMsgExecuteSqlResponse::New() const {
  return new CMsgExecuteSqlResponse;
}

void CMsgExecuteSqlResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    logictype_ = 0u;
    sessionid_ = 0u;
    timestamp_ = GOOGLE_ULONGLONG(0);
    teamid_ = GOOGLE_ULONGLONG(0);
    resultcode_ = 0u;
    rowcount_ = 0u;
    colcount_ = 0u;
  }
  fieldvalue_.Clear();
  fieldvaluelen_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgExecuteSqlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 LogicType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logictype_)));
          set_has_logictype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_SessionID;
        break;
      }

      // optional uint32 SessionID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SessionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sessionid_)));
          set_has_sessionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_TimeStamp;
        break;
      }

      // optional uint64 TimeStamp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_TimeStamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_TeamID;
        break;
      }

      // optional uint64 TeamID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_TeamID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
          set_has_teamid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ResultCode;
        break;
      }

      // optional uint32 ResultCode = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ResultCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resultcode_)));
          set_has_resultcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_RowCount;
        break;
      }

      // optional uint32 RowCount = 6 [default = 0];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RowCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowcount_)));
          set_has_rowcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_ColCount;
        break;
      }

      // optional uint32 ColCount = 7 [default = 0];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ColCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &colcount_)));
          set_has_colcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_FieldValue;
        break;
      }

      // repeated bytes FieldValue = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_FieldValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_fieldvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_FieldValue;
        if (input->ExpectTag(72)) goto parse_FieldValueLen;
        break;
      }

      // repeated uint32 FieldValueLen = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_FieldValueLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_fieldvaluelen())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fieldvaluelen())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_FieldValueLen;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgExecuteSqlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 LogicType = 1;
  if (has_logictype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->logictype(), output);
  }

  // optional uint32 SessionID = 2;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sessionid(), output);
  }

  // optional uint64 TimeStamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->timestamp(), output);
  }

  // optional uint64 TeamID = 4;
  if (has_teamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->teamid(), output);
  }

  // optional uint32 ResultCode = 5;
  if (has_resultcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->resultcode(), output);
  }

  // optional uint32 RowCount = 6 [default = 0];
  if (has_rowcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rowcount(), output);
  }

  // optional uint32 ColCount = 7 [default = 0];
  if (has_colcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->colcount(), output);
  }

  // repeated bytes FieldValue = 8;
  for (int i = 0; i < this->fieldvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->fieldvalue(i), output);
  }

  // repeated uint32 FieldValueLen = 9;
  for (int i = 0; i < this->fieldvaluelen_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->fieldvaluelen(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgExecuteSqlResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 LogicType = 1;
  if (has_logictype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->logictype(), target);
  }

  // optional uint32 SessionID = 2;
  if (has_sessionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sessionid(), target);
  }

  // optional uint64 TimeStamp = 3;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->timestamp(), target);
  }

  // optional uint64 TeamID = 4;
  if (has_teamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->teamid(), target);
  }

  // optional uint32 ResultCode = 5;
  if (has_resultcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->resultcode(), target);
  }

  // optional uint32 RowCount = 6 [default = 0];
  if (has_rowcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rowcount(), target);
  }

  // optional uint32 ColCount = 7 [default = 0];
  if (has_colcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->colcount(), target);
  }

  // repeated bytes FieldValue = 8;
  for (int i = 0; i < this->fieldvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->fieldvalue(i), target);
  }

  // repeated uint32 FieldValueLen = 9;
  for (int i = 0; i < this->fieldvaluelen_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->fieldvaluelen(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgExecuteSqlResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 LogicType = 1;
    if (has_logictype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logictype());
    }

    // optional uint32 SessionID = 2;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sessionid());
    }

    // optional uint64 TimeStamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional uint64 TeamID = 4;
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->teamid());
    }

    // optional uint32 ResultCode = 5;
    if (has_resultcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resultcode());
    }

    // optional uint32 RowCount = 6 [default = 0];
    if (has_rowcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rowcount());
    }

    // optional uint32 ColCount = 7 [default = 0];
    if (has_colcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->colcount());
    }

  }
  // repeated bytes FieldValue = 8;
  total_size += 1 * this->fieldvalue_size();
  for (int i = 0; i < this->fieldvalue_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->fieldvalue(i));
  }

  // repeated uint32 FieldValueLen = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->fieldvaluelen_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->fieldvaluelen(i));
    }
    total_size += 1 * this->fieldvaluelen_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgExecuteSqlResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgExecuteSqlResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgExecuteSqlResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgExecuteSqlResponse::MergeFrom(const CMsgExecuteSqlResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  fieldvalue_.MergeFrom(from.fieldvalue_);
  fieldvaluelen_.MergeFrom(from.fieldvaluelen_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_logictype()) {
      set_logictype(from.logictype());
    }
    if (from.has_sessionid()) {
      set_sessionid(from.sessionid());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_teamid()) {
      set_teamid(from.teamid());
    }
    if (from.has_resultcode()) {
      set_resultcode(from.resultcode());
    }
    if (from.has_rowcount()) {
      set_rowcount(from.rowcount());
    }
    if (from.has_colcount()) {
      set_colcount(from.colcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgExecuteSqlResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgExecuteSqlResponse::CopyFrom(const CMsgExecuteSqlResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgExecuteSqlResponse::IsInitialized() const {

  return true;
}

void CMsgExecuteSqlResponse::Swap(CMsgExecuteSqlResponse* other) {
  if (other != this) {
    std::swap(logictype_, other->logictype_);
    std::swap(sessionid_, other->sessionid_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(teamid_, other->teamid_);
    std::swap(resultcode_, other->resultcode_);
    std::swap(rowcount_, other->rowcount_);
    std::swap(colcount_, other->colcount_);
    fieldvalue_.Swap(&other->fieldvalue_);
    fieldvaluelen_.Swap(&other->fieldvaluelen_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgExecuteSqlResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgExecuteSqlResponse_descriptor_;
  metadata.reflection = CMsgExecuteSqlResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDataItem::kTempIDFieldNumber;
const int PBDataItem::kNumFieldNumber;
const int PBDataItem::kStatusFieldNumber;
const int PBDataItem::kEndTimeFieldNumber;
const int PBDataItem::kItemTypeFieldNumber;
#endif  // !_MSC_VER

PBDataItem::PBDataItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDataItem::InitAsDefaultInstance() {
}

PBDataItem::PBDataItem(const PBDataItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDataItem::SharedCtor() {
  _cached_size_ = 0;
  tempid_ = 0;
  num_ = 0;
  status_ = 0;
  endtime_ = 0;
  itemtype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDataItem::~PBDataItem() {
  SharedDtor();
}

void PBDataItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDataItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDataItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDataItem_descriptor_;
}

const PBDataItem& PBDataItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBDataItem* PBDataItem::default_instance_ = NULL;

PBDataItem* PBDataItem::New() const {
  return new PBDataItem;
}

void PBDataItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tempid_ = 0;
    num_ = 0;
    status_ = 0;
    endtime_ = 0;
    itemtype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDataItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 TempID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tempid_)));
          set_has_tempid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional int32 Num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Status;
        break;
      }

      // optional int32 Status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_EndTime;
        break;
      }

      // optional int32 EndTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_EndTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ItemType;
        break;
      }

      // optional int32 ItemType = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ItemType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemtype_)));
          set_has_itemtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDataItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 TempID = 1;
  if (has_tempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tempid(), output);
  }

  // optional int32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // optional int32 Status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // optional int32 EndTime = 4;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->endtime(), output);
  }

  // optional int32 ItemType = 5;
  if (has_itemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->itemtype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDataItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 TempID = 1;
  if (has_tempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tempid(), target);
  }

  // optional int32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // optional int32 Status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // optional int32 EndTime = 4;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->endtime(), target);
  }

  // optional int32 ItemType = 5;
  if (has_itemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->itemtype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDataItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 TempID = 1;
    if (has_tempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tempid());
    }

    // optional int32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 Status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional int32 EndTime = 4;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->endtime());
    }

    // optional int32 ItemType = 5;
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemtype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDataItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDataItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDataItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDataItem::MergeFrom(const PBDataItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tempid()) {
      set_tempid(from.tempid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
    if (from.has_itemtype()) {
      set_itemtype(from.itemtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDataItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDataItem::CopyFrom(const PBDataItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDataItem::IsInitialized() const {

  return true;
}

void PBDataItem::Swap(PBDataItem* other) {
  if (other != this) {
    std::swap(tempid_, other->tempid_);
    std::swap(num_, other->num_);
    std::swap(status_, other->status_);
    std::swap(endtime_, other->endtime_);
    std::swap(itemtype_, other->itemtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDataItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDataItem_descriptor_;
  metadata.reflection = PBDataItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDataItemList::kItemsFieldNumber;
#endif  // !_MSC_VER

PBDataItemList::PBDataItemList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDataItemList::InitAsDefaultInstance() {
}

PBDataItemList::PBDataItemList(const PBDataItemList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDataItemList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDataItemList::~PBDataItemList() {
  SharedDtor();
}

void PBDataItemList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDataItemList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDataItemList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDataItemList_descriptor_;
}

const PBDataItemList& PBDataItemList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBDataItemList* PBDataItemList::default_instance_ = NULL;

PBDataItemList* PBDataItemList::New() const {
  return new PBDataItemList;
}

void PBDataItemList::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDataItemList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBDataItem Items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDataItemList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBDataItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDataItemList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBDataItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDataItemList::ByteSize() const {
  int total_size = 0;

  // repeated .PBDataItem Items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDataItemList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDataItemList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDataItemList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDataItemList::MergeFrom(const PBDataItemList& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDataItemList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDataItemList::CopyFrom(const PBDataItemList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDataItemList::IsInitialized() const {

  return true;
}

void PBDataItemList::Swap(PBDataItemList* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDataItemList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDataItemList_descriptor_;
  metadata.reflection = PBDataItemList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBGagaleType1DataInfo::kNumFieldNumber;
const int PBGagaleType1DataInfo::kGoldFieldNumber;
const int PBGagaleType1DataInfo::kDisplayFieldNumber;
const int PBGagaleType1DataInfo::kIsbigFieldNumber;
#endif  // !_MSC_VER

PBGagaleType1DataInfo::PBGagaleType1DataInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBGagaleType1DataInfo::InitAsDefaultInstance() {
}

PBGagaleType1DataInfo::PBGagaleType1DataInfo(const PBGagaleType1DataInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBGagaleType1DataInfo::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0;
  gold_ = 0;
  display_ = 0;
  isbig_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBGagaleType1DataInfo::~PBGagaleType1DataInfo() {
  SharedDtor();
}

void PBGagaleType1DataInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBGagaleType1DataInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGagaleType1DataInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGagaleType1DataInfo_descriptor_;
}

const PBGagaleType1DataInfo& PBGagaleType1DataInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBGagaleType1DataInfo* PBGagaleType1DataInfo::default_instance_ = NULL;

PBGagaleType1DataInfo* PBGagaleType1DataInfo::New() const {
  return new PBGagaleType1DataInfo;
}

void PBGagaleType1DataInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num_ = 0;
    gold_ = 0;
    display_ = 0;
    isbig_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBGagaleType1DataInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }

      // optional int32 gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_display;
        break;
      }

      // optional .eGagaleDisplay display = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_display:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::eGagaleDisplay_IsValid(value)) {
            set_display(static_cast< ::eGagaleDisplay >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_isbig;
        break;
      }

      // optional int32 isbig = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isbig:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isbig_)));
          set_has_isbig();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBGagaleType1DataInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num(), output);
  }

  // optional int32 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }

  // optional .eGagaleDisplay display = 3;
  if (has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->display(), output);
  }

  // optional int32 isbig = 4;
  if (has_isbig()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->isbig(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBGagaleType1DataInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num(), target);
  }

  // optional int32 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }

  // optional .eGagaleDisplay display = 3;
  if (has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->display(), target);
  }

  // optional int32 isbig = 4;
  if (has_isbig()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->isbig(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBGagaleType1DataInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional .eGagaleDisplay display = 3;
    if (has_display()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->display());
    }

    // optional int32 isbig = 4;
    if (has_isbig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isbig());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGagaleType1DataInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBGagaleType1DataInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBGagaleType1DataInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBGagaleType1DataInfo::MergeFrom(const PBGagaleType1DataInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_display()) {
      set_display(from.display());
    }
    if (from.has_isbig()) {
      set_isbig(from.isbig());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBGagaleType1DataInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGagaleType1DataInfo::CopyFrom(const PBGagaleType1DataInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGagaleType1DataInfo::IsInitialized() const {

  return true;
}

void PBGagaleType1DataInfo::Swap(PBGagaleType1DataInfo* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(gold_, other->gold_);
    std::swap(display_, other->display_);
    std::swap(isbig_, other->isbig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBGagaleType1DataInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGagaleType1DataInfo_descriptor_;
  metadata.reflection = PBGagaleType1DataInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBGagaleType2DataInfo::kNumFieldNumber;
const int PBGagaleType2DataInfo::kGoldFieldNumber;
const int PBGagaleType2DataInfo::kDisplayFieldNumber;
const int PBGagaleType2DataInfo::kIsbigFieldNumber;
#endif  // !_MSC_VER

PBGagaleType2DataInfo::PBGagaleType2DataInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBGagaleType2DataInfo::InitAsDefaultInstance() {
}

PBGagaleType2DataInfo::PBGagaleType2DataInfo(const PBGagaleType2DataInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBGagaleType2DataInfo::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0;
  gold_ = 0;
  display_ = 0;
  isbig_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBGagaleType2DataInfo::~PBGagaleType2DataInfo() {
  SharedDtor();
}

void PBGagaleType2DataInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBGagaleType2DataInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGagaleType2DataInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGagaleType2DataInfo_descriptor_;
}

const PBGagaleType2DataInfo& PBGagaleType2DataInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBGagaleType2DataInfo* PBGagaleType2DataInfo::default_instance_ = NULL;

PBGagaleType2DataInfo* PBGagaleType2DataInfo::New() const {
  return new PBGagaleType2DataInfo;
}

void PBGagaleType2DataInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num_ = 0;
    gold_ = 0;
    display_ = 0;
    isbig_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBGagaleType2DataInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }

      // optional int32 gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_display;
        break;
      }

      // optional .eGagaleDisplay display = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_display:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::eGagaleDisplay_IsValid(value)) {
            set_display(static_cast< ::eGagaleDisplay >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_isbig;
        break;
      }

      // optional int32 isbig = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isbig:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isbig_)));
          set_has_isbig();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBGagaleType2DataInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num(), output);
  }

  // optional int32 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }

  // optional .eGagaleDisplay display = 3;
  if (has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->display(), output);
  }

  // optional int32 isbig = 6;
  if (has_isbig()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->isbig(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBGagaleType2DataInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num(), target);
  }

  // optional int32 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }

  // optional .eGagaleDisplay display = 3;
  if (has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->display(), target);
  }

  // optional int32 isbig = 6;
  if (has_isbig()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->isbig(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBGagaleType2DataInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }

    // optional .eGagaleDisplay display = 3;
    if (has_display()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->display());
    }

    // optional int32 isbig = 6;
    if (has_isbig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isbig());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGagaleType2DataInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBGagaleType2DataInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBGagaleType2DataInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBGagaleType2DataInfo::MergeFrom(const PBGagaleType2DataInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_display()) {
      set_display(from.display());
    }
    if (from.has_isbig()) {
      set_isbig(from.isbig());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBGagaleType2DataInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGagaleType2DataInfo::CopyFrom(const PBGagaleType2DataInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGagaleType2DataInfo::IsInitialized() const {

  return true;
}

void PBGagaleType2DataInfo::Swap(PBGagaleType2DataInfo* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(gold_, other->gold_);
    std::swap(display_, other->display_);
    std::swap(isbig_, other->isbig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBGagaleType2DataInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGagaleType2DataInfo_descriptor_;
  metadata.reflection = PBGagaleType2DataInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBGagaleType3DataInfo::kNumFieldNumber;
const int PBGagaleType3DataInfo::kRewardtypeFieldNumber;
const int PBGagaleType3DataInfo::kRewardnumFieldNumber;
const int PBGagaleType3DataInfo::kDisplayFieldNumber;
const int PBGagaleType3DataInfo::kStateFieldNumber;
const int PBGagaleType3DataInfo::kIsbigFieldNumber;
#endif  // !_MSC_VER

PBGagaleType3DataInfo::PBGagaleType3DataInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBGagaleType3DataInfo::InitAsDefaultInstance() {
}

PBGagaleType3DataInfo::PBGagaleType3DataInfo(const PBGagaleType3DataInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBGagaleType3DataInfo::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0;
  rewardtype_ = 0;
  rewardnum_ = 0;
  display_ = 0;
  state_ = 0;
  isbig_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBGagaleType3DataInfo::~PBGagaleType3DataInfo() {
  SharedDtor();
}

void PBGagaleType3DataInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBGagaleType3DataInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGagaleType3DataInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGagaleType3DataInfo_descriptor_;
}

const PBGagaleType3DataInfo& PBGagaleType3DataInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBGagaleType3DataInfo* PBGagaleType3DataInfo::default_instance_ = NULL;

PBGagaleType3DataInfo* PBGagaleType3DataInfo::New() const {
  return new PBGagaleType3DataInfo;
}

void PBGagaleType3DataInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num_ = 0;
    rewardtype_ = 0;
    rewardnum_ = 0;
    display_ = 0;
    state_ = 0;
    isbig_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBGagaleType3DataInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rewardtype;
        break;
      }

      // optional .EResourceType rewardtype = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewardtype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EResourceType_IsValid(value)) {
            set_rewardtype(static_cast< ::EResourceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rewardnum;
        break;
      }

      // optional int32 rewardnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewardnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rewardnum_)));
          set_has_rewardnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_display;
        break;
      }

      // optional .eGagaleDisplay display = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_display:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::eGagaleDisplay_IsValid(value)) {
            set_display(static_cast< ::eGagaleDisplay >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_state;
        break;
      }

      // optional int32 state = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_isbig;
        break;
      }

      // optional int32 isbig = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isbig:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isbig_)));
          set_has_isbig();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBGagaleType3DataInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num(), output);
  }

  // optional .EResourceType rewardtype = 2;
  if (has_rewardtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->rewardtype(), output);
  }

  // optional int32 rewardnum = 3;
  if (has_rewardnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rewardnum(), output);
  }

  // optional .eGagaleDisplay display = 4;
  if (has_display()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->display(), output);
  }

  // optional int32 state = 5;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  // optional int32 isbig = 6;
  if (has_isbig()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->isbig(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBGagaleType3DataInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num(), target);
  }

  // optional .EResourceType rewardtype = 2;
  if (has_rewardtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->rewardtype(), target);
  }

  // optional int32 rewardnum = 3;
  if (has_rewardnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rewardnum(), target);
  }

  // optional .eGagaleDisplay display = 4;
  if (has_display()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->display(), target);
  }

  // optional int32 state = 5;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  // optional int32 isbig = 6;
  if (has_isbig()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->isbig(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBGagaleType3DataInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // optional .EResourceType rewardtype = 2;
    if (has_rewardtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->rewardtype());
    }

    // optional int32 rewardnum = 3;
    if (has_rewardnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rewardnum());
    }

    // optional .eGagaleDisplay display = 4;
    if (has_display()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->display());
    }

    // optional int32 state = 5;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

    // optional int32 isbig = 6;
    if (has_isbig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isbig());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGagaleType3DataInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBGagaleType3DataInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBGagaleType3DataInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBGagaleType3DataInfo::MergeFrom(const PBGagaleType3DataInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_rewardtype()) {
      set_rewardtype(from.rewardtype());
    }
    if (from.has_rewardnum()) {
      set_rewardnum(from.rewardnum());
    }
    if (from.has_display()) {
      set_display(from.display());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_isbig()) {
      set_isbig(from.isbig());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBGagaleType3DataInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGagaleType3DataInfo::CopyFrom(const PBGagaleType3DataInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGagaleType3DataInfo::IsInitialized() const {

  return true;
}

void PBGagaleType3DataInfo::Swap(PBGagaleType3DataInfo* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(rewardtype_, other->rewardtype_);
    std::swap(rewardnum_, other->rewardnum_);
    std::swap(display_, other->display_);
    std::swap(state_, other->state_);
    std::swap(isbig_, other->isbig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBGagaleType3DataInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGagaleType3DataInfo_descriptor_;
  metadata.reflection = PBGagaleType3DataInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDataGagaleType1List::kDuiduipengFieldNumber;
#endif  // !_MSC_VER

PBDataGagaleType1List::PBDataGagaleType1List()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDataGagaleType1List::InitAsDefaultInstance() {
}

PBDataGagaleType1List::PBDataGagaleType1List(const PBDataGagaleType1List& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDataGagaleType1List::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDataGagaleType1List::~PBDataGagaleType1List() {
  SharedDtor();
}

void PBDataGagaleType1List::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDataGagaleType1List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDataGagaleType1List::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDataGagaleType1List_descriptor_;
}

const PBDataGagaleType1List& PBDataGagaleType1List::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBDataGagaleType1List* PBDataGagaleType1List::default_instance_ = NULL;

PBDataGagaleType1List* PBDataGagaleType1List::New() const {
  return new PBDataGagaleType1List;
}

void PBDataGagaleType1List::Clear() {
  duiduipeng_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDataGagaleType1List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBGagaleType1DataInfo Duiduipeng = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Duiduipeng:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_duiduipeng()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Duiduipeng;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDataGagaleType1List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBGagaleType1DataInfo Duiduipeng = 1;
  for (int i = 0; i < this->duiduipeng_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->duiduipeng(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDataGagaleType1List::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBGagaleType1DataInfo Duiduipeng = 1;
  for (int i = 0; i < this->duiduipeng_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->duiduipeng(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDataGagaleType1List::ByteSize() const {
  int total_size = 0;

  // repeated .PBGagaleType1DataInfo Duiduipeng = 1;
  total_size += 1 * this->duiduipeng_size();
  for (int i = 0; i < this->duiduipeng_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->duiduipeng(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDataGagaleType1List::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDataGagaleType1List* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDataGagaleType1List*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDataGagaleType1List::MergeFrom(const PBDataGagaleType1List& from) {
  GOOGLE_CHECK_NE(&from, this);
  duiduipeng_.MergeFrom(from.duiduipeng_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDataGagaleType1List::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDataGagaleType1List::CopyFrom(const PBDataGagaleType1List& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDataGagaleType1List::IsInitialized() const {

  return true;
}

void PBDataGagaleType1List::Swap(PBDataGagaleType1List* other) {
  if (other != this) {
    duiduipeng_.Swap(&other->duiduipeng_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDataGagaleType1List::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDataGagaleType1List_descriptor_;
  metadata.reflection = PBDataGagaleType1List_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDataGagaleType2List::kSinuokeFieldNumber;
#endif  // !_MSC_VER

PBDataGagaleType2List::PBDataGagaleType2List()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDataGagaleType2List::InitAsDefaultInstance() {
}

PBDataGagaleType2List::PBDataGagaleType2List(const PBDataGagaleType2List& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDataGagaleType2List::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDataGagaleType2List::~PBDataGagaleType2List() {
  SharedDtor();
}

void PBDataGagaleType2List::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDataGagaleType2List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDataGagaleType2List::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDataGagaleType2List_descriptor_;
}

const PBDataGagaleType2List& PBDataGagaleType2List::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBDataGagaleType2List* PBDataGagaleType2List::default_instance_ = NULL;

PBDataGagaleType2List* PBDataGagaleType2List::New() const {
  return new PBDataGagaleType2List;
}

void PBDataGagaleType2List::Clear() {
  sinuoke_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDataGagaleType2List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBGagaleType2DataInfo Sinuoke = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Sinuoke:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sinuoke()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Sinuoke;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDataGagaleType2List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBGagaleType2DataInfo Sinuoke = 1;
  for (int i = 0; i < this->sinuoke_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sinuoke(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDataGagaleType2List::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBGagaleType2DataInfo Sinuoke = 1;
  for (int i = 0; i < this->sinuoke_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sinuoke(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDataGagaleType2List::ByteSize() const {
  int total_size = 0;

  // repeated .PBGagaleType2DataInfo Sinuoke = 1;
  total_size += 1 * this->sinuoke_size();
  for (int i = 0; i < this->sinuoke_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sinuoke(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDataGagaleType2List::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDataGagaleType2List* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDataGagaleType2List*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDataGagaleType2List::MergeFrom(const PBDataGagaleType2List& from) {
  GOOGLE_CHECK_NE(&from, this);
  sinuoke_.MergeFrom(from.sinuoke_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDataGagaleType2List::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDataGagaleType2List::CopyFrom(const PBDataGagaleType2List& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDataGagaleType2List::IsInitialized() const {

  return true;
}

void PBDataGagaleType2List::Swap(PBDataGagaleType2List* other) {
  if (other != this) {
    sinuoke_.Swap(&other->sinuoke_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDataGagaleType2List::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDataGagaleType2List_descriptor_;
  metadata.reflection = PBDataGagaleType2List_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDataGagaleType3List::kDayingjiaFieldNumber;
#endif  // !_MSC_VER

PBDataGagaleType3List::PBDataGagaleType3List()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDataGagaleType3List::InitAsDefaultInstance() {
}

PBDataGagaleType3List::PBDataGagaleType3List(const PBDataGagaleType3List& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDataGagaleType3List::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDataGagaleType3List::~PBDataGagaleType3List() {
  SharedDtor();
}

void PBDataGagaleType3List::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDataGagaleType3List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDataGagaleType3List::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDataGagaleType3List_descriptor_;
}

const PBDataGagaleType3List& PBDataGagaleType3List::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBDataGagaleType3List* PBDataGagaleType3List::default_instance_ = NULL;

PBDataGagaleType3List* PBDataGagaleType3List::New() const {
  return new PBDataGagaleType3List;
}

void PBDataGagaleType3List::Clear() {
  dayingjia_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDataGagaleType3List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBGagaleType3DataInfo Dayingjia = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Dayingjia:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dayingjia()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Dayingjia;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDataGagaleType3List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBGagaleType3DataInfo Dayingjia = 1;
  for (int i = 0; i < this->dayingjia_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dayingjia(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDataGagaleType3List::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBGagaleType3DataInfo Dayingjia = 1;
  for (int i = 0; i < this->dayingjia_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dayingjia(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDataGagaleType3List::ByteSize() const {
  int total_size = 0;

  // repeated .PBGagaleType3DataInfo Dayingjia = 1;
  total_size += 1 * this->dayingjia_size();
  for (int i = 0; i < this->dayingjia_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dayingjia(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDataGagaleType3List::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDataGagaleType3List* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDataGagaleType3List*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDataGagaleType3List::MergeFrom(const PBDataGagaleType3List& from) {
  GOOGLE_CHECK_NE(&from, this);
  dayingjia_.MergeFrom(from.dayingjia_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDataGagaleType3List::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDataGagaleType3List::CopyFrom(const PBDataGagaleType3List& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDataGagaleType3List::IsInitialized() const {

  return true;
}

void PBDataGagaleType3List::Swap(PBDataGagaleType3List* other) {
  if (other != this) {
    dayingjia_.Swap(&other->dayingjia_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDataGagaleType3List::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDataGagaleType3List_descriptor_;
  metadata.reflection = PBDataGagaleType3List_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBData8BallStatistics::kWinFieldNumber;
const int PBData8BallStatistics::kLoseFieldNumber;
const int PBData8BallStatistics::kEscapeFieldNumber;
const int PBData8BallStatistics::kWinningstreakFieldNumber;
const int PBData8BallStatistics::kMaxwinningstreakFieldNumber;
#endif  // !_MSC_VER

PBData8BallStatistics::PBData8BallStatistics()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBData8BallStatistics::InitAsDefaultInstance() {
}

PBData8BallStatistics::PBData8BallStatistics(const PBData8BallStatistics& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBData8BallStatistics::SharedCtor() {
  _cached_size_ = 0;
  win_ = 0;
  lose_ = 0;
  escape_ = 0;
  winningstreak_ = 0;
  maxwinningstreak_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBData8BallStatistics::~PBData8BallStatistics() {
  SharedDtor();
}

void PBData8BallStatistics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBData8BallStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBData8BallStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBData8BallStatistics_descriptor_;
}

const PBData8BallStatistics& PBData8BallStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBData8BallStatistics* PBData8BallStatistics::default_instance_ = NULL;

PBData8BallStatistics* PBData8BallStatistics::New() const {
  return new PBData8BallStatistics;
}

void PBData8BallStatistics::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    win_ = 0;
    lose_ = 0;
    escape_ = 0;
    winningstreak_ = 0;
    maxwinningstreak_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBData8BallStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 win = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_)));
          set_has_win();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lose;
        break;
      }

      // optional int32 lose = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lose_)));
          set_has_lose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_escape;
        break;
      }

      // optional int32 escape = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_escape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escape_)));
          set_has_escape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_winningstreak;
        break;
      }

      // optional int32 winningstreak = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_winningstreak:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &winningstreak_)));
          set_has_winningstreak();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_maxwinningstreak;
        break;
      }

      // optional int32 maxwinningstreak = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxwinningstreak:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxwinningstreak_)));
          set_has_maxwinningstreak();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBData8BallStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 win = 1;
  if (has_win()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->win(), output);
  }

  // optional int32 lose = 2;
  if (has_lose()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lose(), output);
  }

  // optional int32 escape = 3;
  if (has_escape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->escape(), output);
  }

  // optional int32 winningstreak = 4;
  if (has_winningstreak()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->winningstreak(), output);
  }

  // optional int32 maxwinningstreak = 5;
  if (has_maxwinningstreak()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxwinningstreak(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBData8BallStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 win = 1;
  if (has_win()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->win(), target);
  }

  // optional int32 lose = 2;
  if (has_lose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lose(), target);
  }

  // optional int32 escape = 3;
  if (has_escape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->escape(), target);
  }

  // optional int32 winningstreak = 4;
  if (has_winningstreak()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->winningstreak(), target);
  }

  // optional int32 maxwinningstreak = 5;
  if (has_maxwinningstreak()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxwinningstreak(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBData8BallStatistics::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 win = 1;
    if (has_win()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win());
    }

    // optional int32 lose = 2;
    if (has_lose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lose());
    }

    // optional int32 escape = 3;
    if (has_escape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escape());
    }

    // optional int32 winningstreak = 4;
    if (has_winningstreak()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->winningstreak());
    }

    // optional int32 maxwinningstreak = 5;
    if (has_maxwinningstreak()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxwinningstreak());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBData8BallStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBData8BallStatistics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBData8BallStatistics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBData8BallStatistics::MergeFrom(const PBData8BallStatistics& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_win()) {
      set_win(from.win());
    }
    if (from.has_lose()) {
      set_lose(from.lose());
    }
    if (from.has_escape()) {
      set_escape(from.escape());
    }
    if (from.has_winningstreak()) {
      set_winningstreak(from.winningstreak());
    }
    if (from.has_maxwinningstreak()) {
      set_maxwinningstreak(from.maxwinningstreak());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBData8BallStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBData8BallStatistics::CopyFrom(const PBData8BallStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBData8BallStatistics::IsInitialized() const {

  return true;
}

void PBData8BallStatistics::Swap(PBData8BallStatistics* other) {
  if (other != this) {
    std::swap(win_, other->win_);
    std::swap(lose_, other->lose_);
    std::swap(escape_, other->escape_);
    std::swap(winningstreak_, other->winningstreak_);
    std::swap(maxwinningstreak_, other->maxwinningstreak_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBData8BallStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBData8BallStatistics_descriptor_;
  metadata.reflection = PBData8BallStatistics_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBSaveRoleData::kItemlistFieldNumber;
const int PBSaveRoleData::kHasrenameFieldNumber;
const int PBSaveRoleData::kDuiduipenglistFieldNumber;
const int PBSaveRoleData::kBall81V1FieldNumber;
const int PBSaveRoleData::kBall83PFieldNumber;
const int PBSaveRoleData::kSinuokelistFieldNumber;
const int PBSaveRoleData::kDayingjialistFieldNumber;
#endif  // !_MSC_VER

PBSaveRoleData::PBSaveRoleData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBSaveRoleData::InitAsDefaultInstance() {
  itemlist_ = const_cast< ::PBDataItemList*>(&::PBDataItemList::default_instance());
  duiduipenglist_ = const_cast< ::PBDataGagaleType1List*>(&::PBDataGagaleType1List::default_instance());
  ball8_1v1_ = const_cast< ::PBData8BallStatistics*>(&::PBData8BallStatistics::default_instance());
  ball8_3p_ = const_cast< ::PBData8BallStatistics*>(&::PBData8BallStatistics::default_instance());
  sinuokelist_ = const_cast< ::PBDataGagaleType2List*>(&::PBDataGagaleType2List::default_instance());
  dayingjialist_ = const_cast< ::PBDataGagaleType3List*>(&::PBDataGagaleType3List::default_instance());
}

PBSaveRoleData::PBSaveRoleData(const PBSaveRoleData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBSaveRoleData::SharedCtor() {
  _cached_size_ = 0;
  itemlist_ = NULL;
  hasrename_ = false;
  duiduipenglist_ = NULL;
  ball8_1v1_ = NULL;
  ball8_3p_ = NULL;
  sinuokelist_ = NULL;
  dayingjialist_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBSaveRoleData::~PBSaveRoleData() {
  SharedDtor();
}

void PBSaveRoleData::SharedDtor() {
  if (this != default_instance_) {
    delete itemlist_;
    delete duiduipenglist_;
    delete ball8_1v1_;
    delete ball8_3p_;
    delete sinuokelist_;
    delete dayingjialist_;
  }
}

void PBSaveRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSaveRoleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBSaveRoleData_descriptor_;
}

const PBSaveRoleData& PBSaveRoleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dbmessage_2eproto();
  return *default_instance_;
}

PBSaveRoleData* PBSaveRoleData::default_instance_ = NULL;

PBSaveRoleData* PBSaveRoleData::New() const {
  return new PBSaveRoleData;
}

void PBSaveRoleData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_itemlist()) {
      if (itemlist_ != NULL) itemlist_->::PBDataItemList::Clear();
    }
    hasrename_ = false;
    if (has_duiduipenglist()) {
      if (duiduipenglist_ != NULL) duiduipenglist_->::PBDataGagaleType1List::Clear();
    }
    if (has_ball8_1v1()) {
      if (ball8_1v1_ != NULL) ball8_1v1_->::PBData8BallStatistics::Clear();
    }
    if (has_ball8_3p()) {
      if (ball8_3p_ != NULL) ball8_3p_->::PBData8BallStatistics::Clear();
    }
    if (has_sinuokelist()) {
      if (sinuokelist_ != NULL) sinuokelist_->::PBDataGagaleType2List::Clear();
    }
    if (has_dayingjialist()) {
      if (dayingjialist_ != NULL) dayingjialist_->::PBDataGagaleType3List::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBSaveRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBDataItemList itemlist = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hasrename;
        break;
      }

      // optional bool hasrename = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hasrename:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasrename_)));
          set_has_hasrename();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_duiduipenglist;
        break;
      }

      // optional .PBDataGagaleType1List duiduipenglist = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_duiduipenglist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_duiduipenglist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ball8_1v1;
        break;
      }

      // optional .PBData8BallStatistics ball8_1v1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ball8_1v1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ball8_1v1()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_ball8_3p;
        break;
      }

      // optional .PBData8BallStatistics ball8_3p = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ball8_3p:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ball8_3p()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_sinuokelist;
        break;
      }

      // optional .PBDataGagaleType2List sinuokelist = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sinuokelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sinuokelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_dayingjialist;
        break;
      }

      // optional .PBDataGagaleType3List dayingjialist = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dayingjialist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dayingjialist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBSaveRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PBDataItemList itemlist = 1;
  if (has_itemlist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(), output);
  }

  // optional bool hasrename = 2;
  if (has_hasrename()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->hasrename(), output);
  }

  // optional .PBDataGagaleType1List duiduipenglist = 3;
  if (has_duiduipenglist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->duiduipenglist(), output);
  }

  // optional .PBData8BallStatistics ball8_1v1 = 4;
  if (has_ball8_1v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->ball8_1v1(), output);
  }

  // optional .PBData8BallStatistics ball8_3p = 5;
  if (has_ball8_3p()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->ball8_3p(), output);
  }

  // optional .PBDataGagaleType2List sinuokelist = 6;
  if (has_sinuokelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->sinuokelist(), output);
  }

  // optional .PBDataGagaleType3List dayingjialist = 7;
  if (has_dayingjialist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->dayingjialist(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBSaveRoleData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBDataItemList itemlist = 1;
  if (has_itemlist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->itemlist(), target);
  }

  // optional bool hasrename = 2;
  if (has_hasrename()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->hasrename(), target);
  }

  // optional .PBDataGagaleType1List duiduipenglist = 3;
  if (has_duiduipenglist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->duiduipenglist(), target);
  }

  // optional .PBData8BallStatistics ball8_1v1 = 4;
  if (has_ball8_1v1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->ball8_1v1(), target);
  }

  // optional .PBData8BallStatistics ball8_3p = 5;
  if (has_ball8_3p()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->ball8_3p(), target);
  }

  // optional .PBDataGagaleType2List sinuokelist = 6;
  if (has_sinuokelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->sinuokelist(), target);
  }

  // optional .PBDataGagaleType3List dayingjialist = 7;
  if (has_dayingjialist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->dayingjialist(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBSaveRoleData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBDataItemList itemlist = 1;
    if (has_itemlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemlist());
    }

    // optional bool hasrename = 2;
    if (has_hasrename()) {
      total_size += 1 + 1;
    }

    // optional .PBDataGagaleType1List duiduipenglist = 3;
    if (has_duiduipenglist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->duiduipenglist());
    }

    // optional .PBData8BallStatistics ball8_1v1 = 4;
    if (has_ball8_1v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ball8_1v1());
    }

    // optional .PBData8BallStatistics ball8_3p = 5;
    if (has_ball8_3p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ball8_3p());
    }

    // optional .PBDataGagaleType2List sinuokelist = 6;
    if (has_sinuokelist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sinuokelist());
    }

    // optional .PBDataGagaleType3List dayingjialist = 7;
    if (has_dayingjialist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dayingjialist());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSaveRoleData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBSaveRoleData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBSaveRoleData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBSaveRoleData::MergeFrom(const PBSaveRoleData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemlist()) {
      mutable_itemlist()->::PBDataItemList::MergeFrom(from.itemlist());
    }
    if (from.has_hasrename()) {
      set_hasrename(from.hasrename());
    }
    if (from.has_duiduipenglist()) {
      mutable_duiduipenglist()->::PBDataGagaleType1List::MergeFrom(from.duiduipenglist());
    }
    if (from.has_ball8_1v1()) {
      mutable_ball8_1v1()->::PBData8BallStatistics::MergeFrom(from.ball8_1v1());
    }
    if (from.has_ball8_3p()) {
      mutable_ball8_3p()->::PBData8BallStatistics::MergeFrom(from.ball8_3p());
    }
    if (from.has_sinuokelist()) {
      mutable_sinuokelist()->::PBDataGagaleType2List::MergeFrom(from.sinuokelist());
    }
    if (from.has_dayingjialist()) {
      mutable_dayingjialist()->::PBDataGagaleType3List::MergeFrom(from.dayingjialist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBSaveRoleData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSaveRoleData::CopyFrom(const PBSaveRoleData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSaveRoleData::IsInitialized() const {

  return true;
}

void PBSaveRoleData::Swap(PBSaveRoleData* other) {
  if (other != this) {
    std::swap(itemlist_, other->itemlist_);
    std::swap(hasrename_, other->hasrename_);
    std::swap(duiduipenglist_, other->duiduipenglist_);
    std::swap(ball8_1v1_, other->ball8_1v1_);
    std::swap(ball8_3p_, other->ball8_3p_);
    std::swap(sinuokelist_, other->sinuokelist_);
    std::swap(dayingjialist_, other->dayingjialist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBSaveRoleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBSaveRoleData_descriptor_;
  metadata.reflection = PBSaveRoleData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
