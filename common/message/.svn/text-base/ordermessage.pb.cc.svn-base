// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ordermessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ordermessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgOpenOrderRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenOrderRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenOrderRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenOrderResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenOrderResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenOrderResponse_Msg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ordermessage_2eproto() {
  protobuf_AddDesc_ordermessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ordermessage.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgOpenOrderRequest_descriptor_ = file->message_type(0);
  static const int CMsgOpenOrderRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderRequest, type_),
  };
  CMsgOpenOrderRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenOrderRequest_descriptor_,
      CMsgOpenOrderRequest::default_instance_,
      CMsgOpenOrderRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenOrderRequest));
  CMsgOpenOrderRequest_Msg_descriptor_ = CMsgOpenOrderRequest_descriptor_->enum_type(0);
  CMsgOpenOrderResponse_descriptor_ = file->message_type(1);
  static const int CMsgOpenOrderResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderResponse, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderResponse, datalist_),
  };
  CMsgOpenOrderResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenOrderResponse_descriptor_,
      CMsgOpenOrderResponse::default_instance_,
      CMsgOpenOrderResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenOrderResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenOrderResponse));
  CMsgOpenOrderResponse_Msg_descriptor_ = CMsgOpenOrderResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ordermessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenOrderRequest_descriptor_, &CMsgOpenOrderRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenOrderResponse_descriptor_, &CMsgOpenOrderResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ordermessage_2eproto() {
  delete CMsgOpenOrderRequest::default_instance_;
  delete CMsgOpenOrderRequest_reflection_;
  delete CMsgOpenOrderResponse::default_instance_;
  delete CMsgOpenOrderResponse_reflection_;
}

void protobuf_AddDesc_ordermessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_resourcemessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022ordermessage.proto\032\025resourcemessage.pr"
    "oto\"E\n\024CMsgOpenOrderRequest\022\031\n\004type\030\001 \002("
    "\0162\013.EOrderType\"\022\n\003Msg\022\013\n\005MsgID\020\201\200\024\"z\n\025CM"
    "sgOpenOrderResponse\022\016\n\006Result\030\001 \002(\005\022\031\n\004t"
    "ype\030\002 \002(\0162\013.EOrderType\022\"\n\010DataList\030\003 \003(\013"
    "2\020.PBOrderGoldData\"\022\n\003Msg\022\013\n\005MsgID\020\202\200\024B\002"
    "H\001", 242);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ordermessage.proto", &protobuf_RegisterTypes);
  CMsgOpenOrderRequest::default_instance_ = new CMsgOpenOrderRequest();
  CMsgOpenOrderResponse::default_instance_ = new CMsgOpenOrderResponse();
  CMsgOpenOrderRequest::default_instance_->InitAsDefaultInstance();
  CMsgOpenOrderResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ordermessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ordermessage_2eproto {
  StaticDescriptorInitializer_ordermessage_2eproto() {
    protobuf_AddDesc_ordermessage_2eproto();
  }
} static_descriptor_initializer_ordermessage_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenOrderRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenOrderRequest_Msg_descriptor_;
}
bool CMsgOpenOrderRequest_Msg_IsValid(int value) {
  switch(value) {
    case 327681:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenOrderRequest_Msg CMsgOpenOrderRequest::MsgID;
const CMsgOpenOrderRequest_Msg CMsgOpenOrderRequest::Msg_MIN;
const CMsgOpenOrderRequest_Msg CMsgOpenOrderRequest::Msg_MAX;
const int CMsgOpenOrderRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenOrderRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

CMsgOpenOrderRequest::CMsgOpenOrderRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenOrderRequest::InitAsDefaultInstance() {
}

CMsgOpenOrderRequest::CMsgOpenOrderRequest(const CMsgOpenOrderRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenOrderRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenOrderRequest::~CMsgOpenOrderRequest() {
  SharedDtor();
}

void CMsgOpenOrderRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenOrderRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenOrderRequest_descriptor_;
}

const CMsgOpenOrderRequest& CMsgOpenOrderRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ordermessage_2eproto();
  return *default_instance_;
}

CMsgOpenOrderRequest* CMsgOpenOrderRequest::default_instance_ = NULL;

CMsgOpenOrderRequest* CMsgOpenOrderRequest::New() const {
  return new CMsgOpenOrderRequest;
}

void CMsgOpenOrderRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .EOrderType type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EOrderType_IsValid(value)) {
            set_type(static_cast< ::EOrderType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .EOrderType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenOrderRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .EOrderType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenOrderRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .EOrderType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenOrderRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenOrderRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenOrderRequest::MergeFrom(const CMsgOpenOrderRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenOrderRequest::CopyFrom(const CMsgOpenOrderRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenOrderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgOpenOrderRequest::Swap(CMsgOpenOrderRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenOrderRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenOrderRequest_descriptor_;
  metadata.reflection = CMsgOpenOrderRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenOrderResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenOrderResponse_Msg_descriptor_;
}
bool CMsgOpenOrderResponse_Msg_IsValid(int value) {
  switch(value) {
    case 327682:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenOrderResponse_Msg CMsgOpenOrderResponse::MsgID;
const CMsgOpenOrderResponse_Msg CMsgOpenOrderResponse::Msg_MIN;
const CMsgOpenOrderResponse_Msg CMsgOpenOrderResponse::Msg_MAX;
const int CMsgOpenOrderResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenOrderResponse::kResultFieldNumber;
const int CMsgOpenOrderResponse::kTypeFieldNumber;
const int CMsgOpenOrderResponse::kDataListFieldNumber;
#endif  // !_MSC_VER

CMsgOpenOrderResponse::CMsgOpenOrderResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenOrderResponse::InitAsDefaultInstance() {
}

CMsgOpenOrderResponse::CMsgOpenOrderResponse(const CMsgOpenOrderResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenOrderResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenOrderResponse::~CMsgOpenOrderResponse() {
  SharedDtor();
}

void CMsgOpenOrderResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenOrderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenOrderResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenOrderResponse_descriptor_;
}

const CMsgOpenOrderResponse& CMsgOpenOrderResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ordermessage_2eproto();
  return *default_instance_;
}

CMsgOpenOrderResponse* CMsgOpenOrderResponse::default_instance_ = NULL;

CMsgOpenOrderResponse* CMsgOpenOrderResponse::New() const {
  return new CMsgOpenOrderResponse;
}

void CMsgOpenOrderResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    type_ = 0;
  }
  datalist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenOrderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .EOrderType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::EOrderType_IsValid(value)) {
            set_type(static_cast< ::EOrderType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_DataList;
        break;
      }

      // repeated .PBOrderGoldData DataList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DataList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datalist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_DataList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenOrderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required .EOrderType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // repeated .PBOrderGoldData DataList = 3;
  for (int i = 0; i < this->datalist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->datalist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenOrderResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required .EOrderType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // repeated .PBOrderGoldData DataList = 3;
  for (int i = 0; i < this->datalist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->datalist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenOrderResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required .EOrderType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  // repeated .PBOrderGoldData DataList = 3;
  total_size += 1 * this->datalist_size();
  for (int i = 0; i < this->datalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datalist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenOrderResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenOrderResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenOrderResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenOrderResponse::MergeFrom(const CMsgOpenOrderResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  datalist_.MergeFrom(from.datalist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenOrderResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenOrderResponse::CopyFrom(const CMsgOpenOrderResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenOrderResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CMsgOpenOrderResponse::Swap(CMsgOpenOrderResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(type_, other->type_);
    datalist_.Swap(&other->datalist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenOrderResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenOrderResponse_descriptor_;
  metadata.reflection = CMsgOpenOrderResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
