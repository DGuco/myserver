// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: itemmessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "itemmessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgItemDataRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgItemDataRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgItemDataRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgItemDataResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgItemDataResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgItemDataResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgItemUseRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgItemUseRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgItemUseRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgItemUseResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgItemUseResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgItemUseResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgShopBuyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgShopBuyRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgShopBuyRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgShopBuyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgShopBuyResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgShopBuyResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgBuyGagaleType1Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgBuyGagaleType1Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType1Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgBuyGagaleType1Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgBuyGagaleType1Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType1Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenGagaleType1Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenGagaleType1Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType1Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenGagaleType1Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenGagaleType1Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType1Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGagaleType1Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGagaleType1Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGagaleType1Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenShakeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenShakeRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenShakeRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenShakeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenShakeResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenShakeResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgShakeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgShakeRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgShakeRequest_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgShakeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgShakeResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgShakeResponse_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGagaleType1Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGagaleType1Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGagaleType1Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgBuyGagaleType2Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgBuyGagaleType2Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType2Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgBuyGagaleType2Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgBuyGagaleType2Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType2Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenGagaleType2Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenGagaleType2Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType2Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenGagaleType2Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenGagaleType2Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType2Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGagaleType2Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGagaleType2Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGagaleType2Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGagaleType2Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGagaleType2Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGagaleType2Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgBuyGagaleType3Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgBuyGagaleType3Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType3Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgBuyGagaleType3Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgBuyGagaleType3Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType3Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenGagaleType3Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenGagaleType3Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType3Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgOpenGagaleType3Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgOpenGagaleType3Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType3Response_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGagaleType3Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGagaleType3Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGagaleType3Request_Msg_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CMsgGagaleType3Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGagaleType3Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMsgGagaleType3Response_Msg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_itemmessage_2eproto() {
  protobuf_AddDesc_itemmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "itemmessage.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgItemDataRequest_descriptor_ = file->message_type(0);
  static const int CMsgItemDataRequest_offsets_[1] = {
  };
  CMsgItemDataRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgItemDataRequest_descriptor_,
      CMsgItemDataRequest::default_instance_,
      CMsgItemDataRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemDataRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemDataRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgItemDataRequest));
  CMsgItemDataRequest_Msg_descriptor_ = CMsgItemDataRequest_descriptor_->enum_type(0);
  CMsgItemDataResponse_descriptor_ = file->message_type(1);
  static const int CMsgItemDataResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemDataResponse, items_),
  };
  CMsgItemDataResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgItemDataResponse_descriptor_,
      CMsgItemDataResponse::default_instance_,
      CMsgItemDataResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemDataResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemDataResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgItemDataResponse));
  CMsgItemDataResponse_Msg_descriptor_ = CMsgItemDataResponse_descriptor_->enum_type(0);
  CMsgItemUseRequest_descriptor_ = file->message_type(2);
  static const int CMsgItemUseRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseRequest, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseRequest, arrayindex_),
  };
  CMsgItemUseRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgItemUseRequest_descriptor_,
      CMsgItemUseRequest::default_instance_,
      CMsgItemUseRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgItemUseRequest));
  CMsgItemUseRequest_Msg_descriptor_ = CMsgItemUseRequest_descriptor_->enum_type(0);
  CMsgItemUseResponse_descriptor_ = file->message_type(3);
  static const int CMsgItemUseResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseResponse, items_),
  };
  CMsgItemUseResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgItemUseResponse_descriptor_,
      CMsgItemUseResponse::default_instance_,
      CMsgItemUseResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemUseResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgItemUseResponse));
  CMsgItemUseResponse_Msg_descriptor_ = CMsgItemUseResponse_descriptor_->enum_type(0);
  CMsgShopBuyRequest_descriptor_ = file->message_type(4);
  static const int CMsgShopBuyRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyRequest, shopserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyRequest, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyRequest, continuetime_),
  };
  CMsgShopBuyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgShopBuyRequest_descriptor_,
      CMsgShopBuyRequest::default_instance_,
      CMsgShopBuyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgShopBuyRequest));
  CMsgShopBuyRequest_Msg_descriptor_ = CMsgShopBuyRequest_descriptor_->enum_type(0);
  CMsgShopBuyResponse_descriptor_ = file->message_type(5);
  static const int CMsgShopBuyResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyResponse, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyResponse, resources_),
  };
  CMsgShopBuyResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgShopBuyResponse_descriptor_,
      CMsgShopBuyResponse::default_instance_,
      CMsgShopBuyResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShopBuyResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgShopBuyResponse));
  CMsgShopBuyResponse_Msg_descriptor_ = CMsgShopBuyResponse_descriptor_->enum_type(0);
  CMsgBuyGagaleType1Request_descriptor_ = file->message_type(6);
  static const int CMsgBuyGagaleType1Request_offsets_[1] = {
  };
  CMsgBuyGagaleType1Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgBuyGagaleType1Request_descriptor_,
      CMsgBuyGagaleType1Request::default_instance_,
      CMsgBuyGagaleType1Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType1Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType1Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgBuyGagaleType1Request));
  CMsgBuyGagaleType1Request_Msg_descriptor_ = CMsgBuyGagaleType1Request_descriptor_->enum_type(0);
  CMsgBuyGagaleType1Response_descriptor_ = file->message_type(7);
  static const int CMsgBuyGagaleType1Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType1Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType1Response, data_),
  };
  CMsgBuyGagaleType1Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgBuyGagaleType1Response_descriptor_,
      CMsgBuyGagaleType1Response::default_instance_,
      CMsgBuyGagaleType1Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType1Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType1Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgBuyGagaleType1Response));
  CMsgBuyGagaleType1Response_Msg_descriptor_ = CMsgBuyGagaleType1Response_descriptor_->enum_type(0);
  CMsgOpenGagaleType1Request_descriptor_ = file->message_type(8);
  static const int CMsgOpenGagaleType1Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Request, openindex_),
  };
  CMsgOpenGagaleType1Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenGagaleType1Request_descriptor_,
      CMsgOpenGagaleType1Request::default_instance_,
      CMsgOpenGagaleType1Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenGagaleType1Request));
  CMsgOpenGagaleType1Request_Msg_descriptor_ = CMsgOpenGagaleType1Request_descriptor_->enum_type(0);
  CMsgOpenGagaleType1Response_descriptor_ = file->message_type(9);
  static const int CMsgOpenGagaleType1Response_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Response, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Response, gold_),
  };
  CMsgOpenGagaleType1Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenGagaleType1Response_descriptor_,
      CMsgOpenGagaleType1Response::default_instance_,
      CMsgOpenGagaleType1Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType1Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenGagaleType1Response));
  CMsgOpenGagaleType1Response_Msg_descriptor_ = CMsgOpenGagaleType1Response_descriptor_->enum_type(0);
  CMsgGagaleType1Request_descriptor_ = file->message_type(10);
  static const int CMsgGagaleType1Request_offsets_[1] = {
  };
  CMsgGagaleType1Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGagaleType1Request_descriptor_,
      CMsgGagaleType1Request::default_instance_,
      CMsgGagaleType1Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType1Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType1Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGagaleType1Request));
  CMsgGagaleType1Request_Msg_descriptor_ = CMsgGagaleType1Request_descriptor_->enum_type(0);
  CMsgOpenShakeRequest_descriptor_ = file->message_type(11);
  static const int CMsgOpenShakeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenShakeRequest, index_),
  };
  CMsgOpenShakeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenShakeRequest_descriptor_,
      CMsgOpenShakeRequest::default_instance_,
      CMsgOpenShakeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenShakeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenShakeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenShakeRequest));
  CMsgOpenShakeRequest_Msg_descriptor_ = CMsgOpenShakeRequest_descriptor_->enum_type(0);
  CMsgOpenShakeResponse_descriptor_ = file->message_type(12);
  static const int CMsgOpenShakeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenShakeResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenShakeResponse, pool_),
  };
  CMsgOpenShakeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenShakeResponse_descriptor_,
      CMsgOpenShakeResponse::default_instance_,
      CMsgOpenShakeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenShakeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenShakeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenShakeResponse));
  CMsgOpenShakeResponse_Msg_descriptor_ = CMsgOpenShakeResponse_descriptor_->enum_type(0);
  CMsgShakeRequest_descriptor_ = file->message_type(13);
  static const int CMsgShakeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeRequest, index_),
  };
  CMsgShakeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgShakeRequest_descriptor_,
      CMsgShakeRequest::default_instance_,
      CMsgShakeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgShakeRequest));
  CMsgShakeRequest_Msg_descriptor_ = CMsgShakeRequest_descriptor_->enum_type(0);
  CMsgShakeResponse_descriptor_ = file->message_type(14);
  static const int CMsgShakeResponse_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, two_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, three_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, pool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, flag_),
  };
  CMsgShakeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgShakeResponse_descriptor_,
      CMsgShakeResponse::default_instance_,
      CMsgShakeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgShakeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgShakeResponse));
  CMsgShakeResponse_Msg_descriptor_ = CMsgShakeResponse_descriptor_->enum_type(0);
  CMsgGagaleType1Response_descriptor_ = file->message_type(15);
  static const int CMsgGagaleType1Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType1Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType1Response, data_),
  };
  CMsgGagaleType1Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGagaleType1Response_descriptor_,
      CMsgGagaleType1Response::default_instance_,
      CMsgGagaleType1Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType1Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType1Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGagaleType1Response));
  CMsgGagaleType1Response_Msg_descriptor_ = CMsgGagaleType1Response_descriptor_->enum_type(0);
  CMsgBuyGagaleType2Request_descriptor_ = file->message_type(16);
  static const int CMsgBuyGagaleType2Request_offsets_[1] = {
  };
  CMsgBuyGagaleType2Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgBuyGagaleType2Request_descriptor_,
      CMsgBuyGagaleType2Request::default_instance_,
      CMsgBuyGagaleType2Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType2Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType2Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgBuyGagaleType2Request));
  CMsgBuyGagaleType2Request_Msg_descriptor_ = CMsgBuyGagaleType2Request_descriptor_->enum_type(0);
  CMsgBuyGagaleType2Response_descriptor_ = file->message_type(17);
  static const int CMsgBuyGagaleType2Response_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType2Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType2Response, mydata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType2Response, endata_),
  };
  CMsgBuyGagaleType2Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgBuyGagaleType2Response_descriptor_,
      CMsgBuyGagaleType2Response::default_instance_,
      CMsgBuyGagaleType2Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType2Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType2Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgBuyGagaleType2Response));
  CMsgBuyGagaleType2Response_Msg_descriptor_ = CMsgBuyGagaleType2Response_descriptor_->enum_type(0);
  CMsgOpenGagaleType2Request_descriptor_ = file->message_type(18);
  static const int CMsgOpenGagaleType2Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Request, openindex_),
  };
  CMsgOpenGagaleType2Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenGagaleType2Request_descriptor_,
      CMsgOpenGagaleType2Request::default_instance_,
      CMsgOpenGagaleType2Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenGagaleType2Request));
  CMsgOpenGagaleType2Request_Msg_descriptor_ = CMsgOpenGagaleType2Request_descriptor_->enum_type(0);
  CMsgOpenGagaleType2Response_descriptor_ = file->message_type(19);
  static const int CMsgOpenGagaleType2Response_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Response, mydata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Response, endata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Response, sumreward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Response, openindex_),
  };
  CMsgOpenGagaleType2Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenGagaleType2Response_descriptor_,
      CMsgOpenGagaleType2Response::default_instance_,
      CMsgOpenGagaleType2Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType2Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenGagaleType2Response));
  CMsgOpenGagaleType2Response_Msg_descriptor_ = CMsgOpenGagaleType2Response_descriptor_->enum_type(0);
  CMsgGagaleType2Request_descriptor_ = file->message_type(20);
  static const int CMsgGagaleType2Request_offsets_[1] = {
  };
  CMsgGagaleType2Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGagaleType2Request_descriptor_,
      CMsgGagaleType2Request::default_instance_,
      CMsgGagaleType2Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType2Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType2Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGagaleType2Request));
  CMsgGagaleType2Request_Msg_descriptor_ = CMsgGagaleType2Request_descriptor_->enum_type(0);
  CMsgGagaleType2Response_descriptor_ = file->message_type(21);
  static const int CMsgGagaleType2Response_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType2Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType2Response, mydata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType2Response, endata_),
  };
  CMsgGagaleType2Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGagaleType2Response_descriptor_,
      CMsgGagaleType2Response::default_instance_,
      CMsgGagaleType2Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType2Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType2Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGagaleType2Response));
  CMsgGagaleType2Response_Msg_descriptor_ = CMsgGagaleType2Response_descriptor_->enum_type(0);
  CMsgBuyGagaleType3Request_descriptor_ = file->message_type(22);
  static const int CMsgBuyGagaleType3Request_offsets_[1] = {
  };
  CMsgBuyGagaleType3Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgBuyGagaleType3Request_descriptor_,
      CMsgBuyGagaleType3Request::default_instance_,
      CMsgBuyGagaleType3Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType3Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType3Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgBuyGagaleType3Request));
  CMsgBuyGagaleType3Request_Msg_descriptor_ = CMsgBuyGagaleType3Request_descriptor_->enum_type(0);
  CMsgBuyGagaleType3Response_descriptor_ = file->message_type(23);
  static const int CMsgBuyGagaleType3Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType3Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType3Response, mydata_),
  };
  CMsgBuyGagaleType3Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgBuyGagaleType3Response_descriptor_,
      CMsgBuyGagaleType3Response::default_instance_,
      CMsgBuyGagaleType3Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType3Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgBuyGagaleType3Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgBuyGagaleType3Response));
  CMsgBuyGagaleType3Response_Msg_descriptor_ = CMsgBuyGagaleType3Response_descriptor_->enum_type(0);
  CMsgOpenGagaleType3Request_descriptor_ = file->message_type(24);
  static const int CMsgOpenGagaleType3Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Request, openindex_),
  };
  CMsgOpenGagaleType3Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenGagaleType3Request_descriptor_,
      CMsgOpenGagaleType3Request::default_instance_,
      CMsgOpenGagaleType3Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenGagaleType3Request));
  CMsgOpenGagaleType3Request_Msg_descriptor_ = CMsgOpenGagaleType3Request_descriptor_->enum_type(0);
  CMsgOpenGagaleType3Response_descriptor_ = file->message_type(25);
  static const int CMsgOpenGagaleType3Response_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Response, mydata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Response, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Response, demond_),
  };
  CMsgOpenGagaleType3Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgOpenGagaleType3Response_descriptor_,
      CMsgOpenGagaleType3Response::default_instance_,
      CMsgOpenGagaleType3Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgOpenGagaleType3Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgOpenGagaleType3Response));
  CMsgOpenGagaleType3Response_Msg_descriptor_ = CMsgOpenGagaleType3Response_descriptor_->enum_type(0);
  CMsgGagaleType3Request_descriptor_ = file->message_type(26);
  static const int CMsgGagaleType3Request_offsets_[1] = {
  };
  CMsgGagaleType3Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGagaleType3Request_descriptor_,
      CMsgGagaleType3Request::default_instance_,
      CMsgGagaleType3Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType3Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType3Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGagaleType3Request));
  CMsgGagaleType3Request_Msg_descriptor_ = CMsgGagaleType3Request_descriptor_->enum_type(0);
  CMsgGagaleType3Response_descriptor_ = file->message_type(27);
  static const int CMsgGagaleType3Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType3Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType3Response, mydata_),
  };
  CMsgGagaleType3Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGagaleType3Response_descriptor_,
      CMsgGagaleType3Response::default_instance_,
      CMsgGagaleType3Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType3Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGagaleType3Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGagaleType3Response));
  CMsgGagaleType3Response_Msg_descriptor_ = CMsgGagaleType3Response_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_itemmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgItemDataRequest_descriptor_, &CMsgItemDataRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgItemDataResponse_descriptor_, &CMsgItemDataResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgItemUseRequest_descriptor_, &CMsgItemUseRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgItemUseResponse_descriptor_, &CMsgItemUseResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgShopBuyRequest_descriptor_, &CMsgShopBuyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgShopBuyResponse_descriptor_, &CMsgShopBuyResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgBuyGagaleType1Request_descriptor_, &CMsgBuyGagaleType1Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgBuyGagaleType1Response_descriptor_, &CMsgBuyGagaleType1Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenGagaleType1Request_descriptor_, &CMsgOpenGagaleType1Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenGagaleType1Response_descriptor_, &CMsgOpenGagaleType1Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGagaleType1Request_descriptor_, &CMsgGagaleType1Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenShakeRequest_descriptor_, &CMsgOpenShakeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenShakeResponse_descriptor_, &CMsgOpenShakeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgShakeRequest_descriptor_, &CMsgShakeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgShakeResponse_descriptor_, &CMsgShakeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGagaleType1Response_descriptor_, &CMsgGagaleType1Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgBuyGagaleType2Request_descriptor_, &CMsgBuyGagaleType2Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgBuyGagaleType2Response_descriptor_, &CMsgBuyGagaleType2Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenGagaleType2Request_descriptor_, &CMsgOpenGagaleType2Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenGagaleType2Response_descriptor_, &CMsgOpenGagaleType2Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGagaleType2Request_descriptor_, &CMsgGagaleType2Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGagaleType2Response_descriptor_, &CMsgGagaleType2Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgBuyGagaleType3Request_descriptor_, &CMsgBuyGagaleType3Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgBuyGagaleType3Response_descriptor_, &CMsgBuyGagaleType3Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenGagaleType3Request_descriptor_, &CMsgOpenGagaleType3Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgOpenGagaleType3Response_descriptor_, &CMsgOpenGagaleType3Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGagaleType3Request_descriptor_, &CMsgGagaleType3Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGagaleType3Response_descriptor_, &CMsgGagaleType3Response::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_itemmessage_2eproto() {
  delete CMsgItemDataRequest::default_instance_;
  delete CMsgItemDataRequest_reflection_;
  delete CMsgItemDataResponse::default_instance_;
  delete CMsgItemDataResponse_reflection_;
  delete CMsgItemUseRequest::default_instance_;
  delete CMsgItemUseRequest_reflection_;
  delete CMsgItemUseResponse::default_instance_;
  delete CMsgItemUseResponse_reflection_;
  delete CMsgShopBuyRequest::default_instance_;
  delete CMsgShopBuyRequest_reflection_;
  delete CMsgShopBuyResponse::default_instance_;
  delete CMsgShopBuyResponse_reflection_;
  delete CMsgBuyGagaleType1Request::default_instance_;
  delete CMsgBuyGagaleType1Request_reflection_;
  delete CMsgBuyGagaleType1Response::default_instance_;
  delete CMsgBuyGagaleType1Response_reflection_;
  delete CMsgOpenGagaleType1Request::default_instance_;
  delete CMsgOpenGagaleType1Request_reflection_;
  delete CMsgOpenGagaleType1Response::default_instance_;
  delete CMsgOpenGagaleType1Response_reflection_;
  delete CMsgGagaleType1Request::default_instance_;
  delete CMsgGagaleType1Request_reflection_;
  delete CMsgOpenShakeRequest::default_instance_;
  delete CMsgOpenShakeRequest_reflection_;
  delete CMsgOpenShakeResponse::default_instance_;
  delete CMsgOpenShakeResponse_reflection_;
  delete CMsgShakeRequest::default_instance_;
  delete CMsgShakeRequest_reflection_;
  delete CMsgShakeResponse::default_instance_;
  delete CMsgShakeResponse_reflection_;
  delete CMsgGagaleType1Response::default_instance_;
  delete CMsgGagaleType1Response_reflection_;
  delete CMsgBuyGagaleType2Request::default_instance_;
  delete CMsgBuyGagaleType2Request_reflection_;
  delete CMsgBuyGagaleType2Response::default_instance_;
  delete CMsgBuyGagaleType2Response_reflection_;
  delete CMsgOpenGagaleType2Request::default_instance_;
  delete CMsgOpenGagaleType2Request_reflection_;
  delete CMsgOpenGagaleType2Response::default_instance_;
  delete CMsgOpenGagaleType2Response_reflection_;
  delete CMsgGagaleType2Request::default_instance_;
  delete CMsgGagaleType2Request_reflection_;
  delete CMsgGagaleType2Response::default_instance_;
  delete CMsgGagaleType2Response_reflection_;
  delete CMsgBuyGagaleType3Request::default_instance_;
  delete CMsgBuyGagaleType3Request_reflection_;
  delete CMsgBuyGagaleType3Response::default_instance_;
  delete CMsgBuyGagaleType3Response_reflection_;
  delete CMsgOpenGagaleType3Request::default_instance_;
  delete CMsgOpenGagaleType3Request_reflection_;
  delete CMsgOpenGagaleType3Response::default_instance_;
  delete CMsgOpenGagaleType3Response_reflection_;
  delete CMsgGagaleType3Request::default_instance_;
  delete CMsgGagaleType3Request_reflection_;
  delete CMsgGagaleType3Response::default_instance_;
  delete CMsgGagaleType3Response_reflection_;
}

void protobuf_AddDesc_itemmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_resourcemessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021itemmessage.proto\032\025resourcemessage.pro"
    "to\")\n\023CMsgItemDataRequest\"\022\n\003Msg\022\013\n\005MsgI"
    "D\020\201\200\020\"B\n\024CMsgItemDataResponse\022\026\n\005Items\030\001"
    " \003(\0132\007.PBItem\"\022\n\003Msg\022\013\n\005MsgID\020\202\200\020\"L\n\022CMs"
    "gItemUseRequest\022\016\n\006ItemID\030\001 \002(\005\022\022\n\nArray"
    "Index\030\002 \002(\005\"\022\n\003Msg\022\013\n\005MsgID\020\203\200\020\"Q\n\023CMsgI"
    "temUseResponse\022\016\n\006Result\030\001 \002(\005\022\026\n\005Items\030"
    "\002 \003(\0132\007.PBItem\"\022\n\003Msg\022\013\n\005MsgID\020\204\200\020\"_\n\022CM"
    "sgShopBuyRequest\022\022\n\nShopSerial\030\001 \002(\005\022\013\n\003"
    "Num\030\002 \002(\005\022\024\n\014ContinueTime\030\003 \002(\005\"\022\n\003Msg\022\013"
    "\n\005MsgID\020\205\200\020\"w\n\023CMsgShopBuyResponse\022\016\n\006Re"
    "sult\030\001 \002(\005\022\026\n\005Items\030\002 \003(\0132\007.PBItem\022$\n\tre"
    "sources\030\003 \003(\0132\021.PBUpdateResource\"\022\n\003Msg\022"
    "\013\n\005MsgID\020\206\200\020\"/\n\031CMsgBuyGagaleType1Reques"
    "t\"\022\n\003Msg\022\013\n\005MsgID\020\207\200\020\"h\n\032CMsgBuyGagaleTy"
    "pe1Response\022\016\n\006Result\030\001 \002(\005\022&\n\004data\030\002 \003("
    "\0132\030.PBGagaleType1SingleInfo\"\022\n\003Msg\022\013\n\005Ms"
    "gID\020\210\200\020\"C\n\032CMsgOpenGagaleType1Request\022\021\n"
    "\topenindex\030\001 \003(\005\"\022\n\003Msg\022\013\n\005MsgID\020\211\200\020\"\212\001\n"
    "\033CMsgOpenGagaleType1Response\022\016\n\006Result\030\001"
    " \002(\005\022&\n\004data\030\002 \003(\0132\030.PBGagaleType1Single"
    "Info\022\037\n\004gold\030\003 \002(\0132\021.PBUpdateResource\"\022\n"
    "\003Msg\022\013\n\005MsgID\020\212\200\020\",\n\026CMsgGagaleType1Requ"
    "est\"\022\n\003Msg\022\013\n\005MsgID\020\213\200\020\"9\n\024CMsgOpenShake"
    "Request\022\r\n\005Index\030\001 \002(\005\"\022\n\003Msg\022\013\n\005MsgID\020\214"
    "\200\020\"I\n\025CMsgOpenShakeResponse\022\016\n\006Result\030\001 "
    "\002(\005\022\014\n\004Pool\030\002 \002(\003\"\022\n\003Msg\022\013\n\005MsgID\020\215\200\020\"5\n"
    "\020CMsgShakeRequest\022\r\n\005Index\030\001 \002(\005\"\022\n\003Msg\022"
    "\013\n\005MsgID\020\216\200\020\"\233\001\n\021CMsgShakeResponse\022\016\n\006Re"
    "sult\030\001 \002(\005\022\013\n\003One\030\002 \002(\005\022\013\n\003Two\030\003 \002(\005\022\r\n\005"
    "Three\030\004 \002(\005\022\016\n\006Reward\030\005 \002(\003\022\r\n\005Money\030\006 \002"
    "(\003\022\014\n\004Pool\030\007 \002(\003\022\014\n\004Flag\030\010 \002(\005\"\022\n\003Msg\022\013\n"
    "\005MsgID\020\217\200\020\"e\n\027CMsgGagaleType1Response\022\016\n"
    "\006Result\030\001 \002(\005\022&\n\004data\030\002 \003(\0132\030.PBGagaleTy"
    "pe1SingleInfo\"\022\n\003Msg\022\013\n\005MsgID\020\220\200\020\"/\n\031CMs"
    "gBuyGagaleType2Request\"\022\n\003Msg\022\013\n\005MsgID\020\221"
    "\200\020\"\224\001\n\032CMsgBuyGagaleType2Response\022\016\n\006Res"
    "ult\030\001 \002(\005\022(\n\006mydata\030\002 \003(\0132\030.PBGagaleType"
    "2SingleInfo\022(\n\006endata\030\003 \003(\0132\030.PBGagaleTy"
    "pe2SingleInfo\"\022\n\003Msg\022\013\n\005MsgID\020\222\200\020\"C\n\032CMs"
    "gOpenGagaleType2Request\022\021\n\topenindex\030\001 \003"
    "(\005\"\022\n\003Msg\022\013\n\005MsgID\020\223\200\020\"\273\001\n\033CMsgOpenGagal"
    "eType2Response\022\016\n\006Result\030\001 \002(\005\022(\n\006mydata"
    "\030\002 \003(\0132\030.PBGagaleType2SingleInfo\022(\n\006enda"
    "ta\030\003 \003(\0132\030.PBGagaleType2SingleInfo\022\021\n\tSu"
    "mReward\030\004 \001(\005\022\021\n\topenindex\030\005 \002(\005\"\022\n\003Msg\022"
    "\013\n\005MsgID\020\224\200\020\",\n\026CMsgGagaleType2Request\"\022"
    "\n\003Msg\022\013\n\005MsgID\020\225\200\020\"\221\001\n\027CMsgGagaleType2Re"
    "sponse\022\016\n\006Result\030\001 \002(\005\022(\n\006mydata\030\002 \003(\0132\030"
    ".PBGagaleType2SingleInfo\022(\n\006endata\030\003 \003(\013"
    "2\030.PBGagaleType2SingleInfo\"\022\n\003Msg\022\013\n\005Msg"
    "ID\020\226\200\020\"/\n\031CMsgBuyGagaleType3Request\"\022\n\003M"
    "sg\022\013\n\005MsgID\020\227\200\020\"j\n\032CMsgBuyGagaleType3Res"
    "ponse\022\016\n\006Result\030\001 \002(\005\022(\n\006mydata\030\002 \003(\0132\030."
    "PBGagaleType3SingleInfo\"\022\n\003Msg\022\013\n\005MsgID\020"
    "\230\200\020\"C\n\032CMsgOpenGagaleType3Request\022\021\n\tope"
    "nindex\030\001 \003(\005\"\022\n\003Msg\022\013\n\005MsgID\020\231\200\020\"\257\001\n\033CMs"
    "gOpenGagaleType3Response\022\016\n\006Result\030\001 \002(\005"
    "\022(\n\006mydata\030\002 \003(\0132\030.PBGagaleType3SingleIn"
    "fo\022\037\n\004gold\030\003 \002(\0132\021.PBUpdateResource\022!\n\006d"
    "emond\030\004 \002(\0132\021.PBUpdateResource\"\022\n\003Msg\022\013\n"
    "\005MsgID\020\232\200\020\",\n\026CMsgGagaleType3Request\"\022\n\003"
    "Msg\022\013\n\005MsgID\020\233\200\020\"g\n\027CMsgGagaleType3Respo"
    "nse\022\016\n\006Result\030\001 \002(\005\022(\n\006mydata\030\002 \003(\0132\030.PB"
    "GagaleType3SingleInfo\"\022\n\003Msg\022\013\n\005MsgID\020\234\200"
    "\020B\002H\001", 2605);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "itemmessage.proto", &protobuf_RegisterTypes);
  CMsgItemDataRequest::default_instance_ = new CMsgItemDataRequest();
  CMsgItemDataResponse::default_instance_ = new CMsgItemDataResponse();
  CMsgItemUseRequest::default_instance_ = new CMsgItemUseRequest();
  CMsgItemUseResponse::default_instance_ = new CMsgItemUseResponse();
  CMsgShopBuyRequest::default_instance_ = new CMsgShopBuyRequest();
  CMsgShopBuyResponse::default_instance_ = new CMsgShopBuyResponse();
  CMsgBuyGagaleType1Request::default_instance_ = new CMsgBuyGagaleType1Request();
  CMsgBuyGagaleType1Response::default_instance_ = new CMsgBuyGagaleType1Response();
  CMsgOpenGagaleType1Request::default_instance_ = new CMsgOpenGagaleType1Request();
  CMsgOpenGagaleType1Response::default_instance_ = new CMsgOpenGagaleType1Response();
  CMsgGagaleType1Request::default_instance_ = new CMsgGagaleType1Request();
  CMsgOpenShakeRequest::default_instance_ = new CMsgOpenShakeRequest();
  CMsgOpenShakeResponse::default_instance_ = new CMsgOpenShakeResponse();
  CMsgShakeRequest::default_instance_ = new CMsgShakeRequest();
  CMsgShakeResponse::default_instance_ = new CMsgShakeResponse();
  CMsgGagaleType1Response::default_instance_ = new CMsgGagaleType1Response();
  CMsgBuyGagaleType2Request::default_instance_ = new CMsgBuyGagaleType2Request();
  CMsgBuyGagaleType2Response::default_instance_ = new CMsgBuyGagaleType2Response();
  CMsgOpenGagaleType2Request::default_instance_ = new CMsgOpenGagaleType2Request();
  CMsgOpenGagaleType2Response::default_instance_ = new CMsgOpenGagaleType2Response();
  CMsgGagaleType2Request::default_instance_ = new CMsgGagaleType2Request();
  CMsgGagaleType2Response::default_instance_ = new CMsgGagaleType2Response();
  CMsgBuyGagaleType3Request::default_instance_ = new CMsgBuyGagaleType3Request();
  CMsgBuyGagaleType3Response::default_instance_ = new CMsgBuyGagaleType3Response();
  CMsgOpenGagaleType3Request::default_instance_ = new CMsgOpenGagaleType3Request();
  CMsgOpenGagaleType3Response::default_instance_ = new CMsgOpenGagaleType3Response();
  CMsgGagaleType3Request::default_instance_ = new CMsgGagaleType3Request();
  CMsgGagaleType3Response::default_instance_ = new CMsgGagaleType3Response();
  CMsgItemDataRequest::default_instance_->InitAsDefaultInstance();
  CMsgItemDataResponse::default_instance_->InitAsDefaultInstance();
  CMsgItemUseRequest::default_instance_->InitAsDefaultInstance();
  CMsgItemUseResponse::default_instance_->InitAsDefaultInstance();
  CMsgShopBuyRequest::default_instance_->InitAsDefaultInstance();
  CMsgShopBuyResponse::default_instance_->InitAsDefaultInstance();
  CMsgBuyGagaleType1Request::default_instance_->InitAsDefaultInstance();
  CMsgBuyGagaleType1Response::default_instance_->InitAsDefaultInstance();
  CMsgOpenGagaleType1Request::default_instance_->InitAsDefaultInstance();
  CMsgOpenGagaleType1Response::default_instance_->InitAsDefaultInstance();
  CMsgGagaleType1Request::default_instance_->InitAsDefaultInstance();
  CMsgOpenShakeRequest::default_instance_->InitAsDefaultInstance();
  CMsgOpenShakeResponse::default_instance_->InitAsDefaultInstance();
  CMsgShakeRequest::default_instance_->InitAsDefaultInstance();
  CMsgShakeResponse::default_instance_->InitAsDefaultInstance();
  CMsgGagaleType1Response::default_instance_->InitAsDefaultInstance();
  CMsgBuyGagaleType2Request::default_instance_->InitAsDefaultInstance();
  CMsgBuyGagaleType2Response::default_instance_->InitAsDefaultInstance();
  CMsgOpenGagaleType2Request::default_instance_->InitAsDefaultInstance();
  CMsgOpenGagaleType2Response::default_instance_->InitAsDefaultInstance();
  CMsgGagaleType2Request::default_instance_->InitAsDefaultInstance();
  CMsgGagaleType2Response::default_instance_->InitAsDefaultInstance();
  CMsgBuyGagaleType3Request::default_instance_->InitAsDefaultInstance();
  CMsgBuyGagaleType3Response::default_instance_->InitAsDefaultInstance();
  CMsgOpenGagaleType3Request::default_instance_->InitAsDefaultInstance();
  CMsgOpenGagaleType3Response::default_instance_->InitAsDefaultInstance();
  CMsgGagaleType3Request::default_instance_->InitAsDefaultInstance();
  CMsgGagaleType3Response::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_itemmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_itemmessage_2eproto {
  StaticDescriptorInitializer_itemmessage_2eproto() {
    protobuf_AddDesc_itemmessage_2eproto();
  }
} static_descriptor_initializer_itemmessage_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgItemDataRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemDataRequest_Msg_descriptor_;
}
bool CMsgItemDataRequest_Msg_IsValid(int value) {
  switch(value) {
    case 262145:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgItemDataRequest_Msg CMsgItemDataRequest::MsgID;
const CMsgItemDataRequest_Msg CMsgItemDataRequest::Msg_MIN;
const CMsgItemDataRequest_Msg CMsgItemDataRequest::Msg_MAX;
const int CMsgItemDataRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgItemDataRequest::CMsgItemDataRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgItemDataRequest::InitAsDefaultInstance() {
}

CMsgItemDataRequest::CMsgItemDataRequest(const CMsgItemDataRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgItemDataRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgItemDataRequest::~CMsgItemDataRequest() {
  SharedDtor();
}

void CMsgItemDataRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgItemDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemDataRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemDataRequest_descriptor_;
}

const CMsgItemDataRequest& CMsgItemDataRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgItemDataRequest* CMsgItemDataRequest::default_instance_ = NULL;

CMsgItemDataRequest* CMsgItemDataRequest::New() const {
  return new CMsgItemDataRequest;
}

void CMsgItemDataRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgItemDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgItemDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgItemDataRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgItemDataRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgItemDataRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgItemDataRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgItemDataRequest::MergeFrom(const CMsgItemDataRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgItemDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemDataRequest::CopyFrom(const CMsgItemDataRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemDataRequest::IsInitialized() const {

  return true;
}

void CMsgItemDataRequest::Swap(CMsgItemDataRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgItemDataRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgItemDataRequest_descriptor_;
  metadata.reflection = CMsgItemDataRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgItemDataResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemDataResponse_Msg_descriptor_;
}
bool CMsgItemDataResponse_Msg_IsValid(int value) {
  switch(value) {
    case 262146:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgItemDataResponse_Msg CMsgItemDataResponse::MsgID;
const CMsgItemDataResponse_Msg CMsgItemDataResponse::Msg_MIN;
const CMsgItemDataResponse_Msg CMsgItemDataResponse::Msg_MAX;
const int CMsgItemDataResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgItemDataResponse::kItemsFieldNumber;
#endif  // !_MSC_VER

CMsgItemDataResponse::CMsgItemDataResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgItemDataResponse::InitAsDefaultInstance() {
}

CMsgItemDataResponse::CMsgItemDataResponse(const CMsgItemDataResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgItemDataResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgItemDataResponse::~CMsgItemDataResponse() {
  SharedDtor();
}

void CMsgItemDataResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgItemDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemDataResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemDataResponse_descriptor_;
}

const CMsgItemDataResponse& CMsgItemDataResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgItemDataResponse* CMsgItemDataResponse::default_instance_ = NULL;

CMsgItemDataResponse* CMsgItemDataResponse::New() const {
  return new CMsgItemDataResponse;
}

void CMsgItemDataResponse::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgItemDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBItem Items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgItemDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgItemDataResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgItemDataResponse::ByteSize() const {
  int total_size = 0;

  // repeated .PBItem Items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgItemDataResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgItemDataResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgItemDataResponse::MergeFrom(const CMsgItemDataResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgItemDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemDataResponse::CopyFrom(const CMsgItemDataResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemDataResponse::IsInitialized() const {

  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgItemDataResponse::Swap(CMsgItemDataResponse* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgItemDataResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgItemDataResponse_descriptor_;
  metadata.reflection = CMsgItemDataResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgItemUseRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemUseRequest_Msg_descriptor_;
}
bool CMsgItemUseRequest_Msg_IsValid(int value) {
  switch(value) {
    case 262147:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgItemUseRequest_Msg CMsgItemUseRequest::MsgID;
const CMsgItemUseRequest_Msg CMsgItemUseRequest::Msg_MIN;
const CMsgItemUseRequest_Msg CMsgItemUseRequest::Msg_MAX;
const int CMsgItemUseRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgItemUseRequest::kItemIDFieldNumber;
const int CMsgItemUseRequest::kArrayIndexFieldNumber;
#endif  // !_MSC_VER

CMsgItemUseRequest::CMsgItemUseRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgItemUseRequest::InitAsDefaultInstance() {
}

CMsgItemUseRequest::CMsgItemUseRequest(const CMsgItemUseRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgItemUseRequest::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  arrayindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgItemUseRequest::~CMsgItemUseRequest() {
  SharedDtor();
}

void CMsgItemUseRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgItemUseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemUseRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemUseRequest_descriptor_;
}

const CMsgItemUseRequest& CMsgItemUseRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgItemUseRequest* CMsgItemUseRequest::default_instance_ = NULL;

CMsgItemUseRequest* CMsgItemUseRequest::New() const {
  return new CMsgItemUseRequest;
}

void CMsgItemUseRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0;
    arrayindex_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgItemUseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ItemID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ArrayIndex;
        break;
      }

      // required int32 ArrayIndex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ArrayIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arrayindex_)));
          set_has_arrayindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgItemUseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ItemID = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // required int32 ArrayIndex = 2;
  if (has_arrayindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->arrayindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgItemUseRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ItemID = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // required int32 ArrayIndex = 2;
  if (has_arrayindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->arrayindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgItemUseRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ItemID = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // required int32 ArrayIndex = 2;
    if (has_arrayindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arrayindex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemUseRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgItemUseRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgItemUseRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgItemUseRequest::MergeFrom(const CMsgItemUseRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_arrayindex()) {
      set_arrayindex(from.arrayindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgItemUseRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemUseRequest::CopyFrom(const CMsgItemUseRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemUseRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CMsgItemUseRequest::Swap(CMsgItemUseRequest* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(arrayindex_, other->arrayindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgItemUseRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgItemUseRequest_descriptor_;
  metadata.reflection = CMsgItemUseRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgItemUseResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemUseResponse_Msg_descriptor_;
}
bool CMsgItemUseResponse_Msg_IsValid(int value) {
  switch(value) {
    case 262148:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgItemUseResponse_Msg CMsgItemUseResponse::MsgID;
const CMsgItemUseResponse_Msg CMsgItemUseResponse::Msg_MIN;
const CMsgItemUseResponse_Msg CMsgItemUseResponse::Msg_MAX;
const int CMsgItemUseResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgItemUseResponse::kResultFieldNumber;
const int CMsgItemUseResponse::kItemsFieldNumber;
#endif  // !_MSC_VER

CMsgItemUseResponse::CMsgItemUseResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgItemUseResponse::InitAsDefaultInstance() {
}

CMsgItemUseResponse::CMsgItemUseResponse(const CMsgItemUseResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgItemUseResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgItemUseResponse::~CMsgItemUseResponse() {
  SharedDtor();
}

void CMsgItemUseResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgItemUseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemUseResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgItemUseResponse_descriptor_;
}

const CMsgItemUseResponse& CMsgItemUseResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgItemUseResponse* CMsgItemUseResponse::default_instance_ = NULL;

CMsgItemUseResponse* CMsgItemUseResponse::New() const {
  return new CMsgItemUseResponse;
}

void CMsgItemUseResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgItemUseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        break;
      }

      // repeated .PBItem Items = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgItemUseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBItem Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgItemUseResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBItem Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgItemUseResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBItem Items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemUseResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgItemUseResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgItemUseResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgItemUseResponse::MergeFrom(const CMsgItemUseResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgItemUseResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemUseResponse::CopyFrom(const CMsgItemUseResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemUseResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgItemUseResponse::Swap(CMsgItemUseResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgItemUseResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgItemUseResponse_descriptor_;
  metadata.reflection = CMsgItemUseResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgShopBuyRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShopBuyRequest_Msg_descriptor_;
}
bool CMsgShopBuyRequest_Msg_IsValid(int value) {
  switch(value) {
    case 262149:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgShopBuyRequest_Msg CMsgShopBuyRequest::MsgID;
const CMsgShopBuyRequest_Msg CMsgShopBuyRequest::Msg_MIN;
const CMsgShopBuyRequest_Msg CMsgShopBuyRequest::Msg_MAX;
const int CMsgShopBuyRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgShopBuyRequest::kShopSerialFieldNumber;
const int CMsgShopBuyRequest::kNumFieldNumber;
const int CMsgShopBuyRequest::kContinueTimeFieldNumber;
#endif  // !_MSC_VER

CMsgShopBuyRequest::CMsgShopBuyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgShopBuyRequest::InitAsDefaultInstance() {
}

CMsgShopBuyRequest::CMsgShopBuyRequest(const CMsgShopBuyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgShopBuyRequest::SharedCtor() {
  _cached_size_ = 0;
  shopserial_ = 0;
  num_ = 0;
  continuetime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgShopBuyRequest::~CMsgShopBuyRequest() {
  SharedDtor();
}

void CMsgShopBuyRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgShopBuyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgShopBuyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShopBuyRequest_descriptor_;
}

const CMsgShopBuyRequest& CMsgShopBuyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgShopBuyRequest* CMsgShopBuyRequest::default_instance_ = NULL;

CMsgShopBuyRequest* CMsgShopBuyRequest::New() const {
  return new CMsgShopBuyRequest;
}

void CMsgShopBuyRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shopserial_ = 0;
    num_ = 0;
    continuetime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgShopBuyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ShopSerial = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shopserial_)));
          set_has_shopserial();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // required int32 Num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ContinueTime;
        break;
      }

      // required int32 ContinueTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ContinueTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continuetime_)));
          set_has_continuetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgShopBuyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 ShopSerial = 1;
  if (has_shopserial()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shopserial(), output);
  }

  // required int32 Num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  // required int32 ContinueTime = 3;
  if (has_continuetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->continuetime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgShopBuyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 ShopSerial = 1;
  if (has_shopserial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shopserial(), target);
  }

  // required int32 Num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  // required int32 ContinueTime = 3;
  if (has_continuetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->continuetime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgShopBuyRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ShopSerial = 1;
    if (has_shopserial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shopserial());
    }

    // required int32 Num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

    // required int32 ContinueTime = 3;
    if (has_continuetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->continuetime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgShopBuyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgShopBuyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgShopBuyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgShopBuyRequest::MergeFrom(const CMsgShopBuyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shopserial()) {
      set_shopserial(from.shopserial());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_continuetime()) {
      set_continuetime(from.continuetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgShopBuyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShopBuyRequest::CopyFrom(const CMsgShopBuyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShopBuyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CMsgShopBuyRequest::Swap(CMsgShopBuyRequest* other) {
  if (other != this) {
    std::swap(shopserial_, other->shopserial_);
    std::swap(num_, other->num_);
    std::swap(continuetime_, other->continuetime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgShopBuyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgShopBuyRequest_descriptor_;
  metadata.reflection = CMsgShopBuyRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgShopBuyResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShopBuyResponse_Msg_descriptor_;
}
bool CMsgShopBuyResponse_Msg_IsValid(int value) {
  switch(value) {
    case 262150:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgShopBuyResponse_Msg CMsgShopBuyResponse::MsgID;
const CMsgShopBuyResponse_Msg CMsgShopBuyResponse::Msg_MIN;
const CMsgShopBuyResponse_Msg CMsgShopBuyResponse::Msg_MAX;
const int CMsgShopBuyResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgShopBuyResponse::kResultFieldNumber;
const int CMsgShopBuyResponse::kItemsFieldNumber;
const int CMsgShopBuyResponse::kResourcesFieldNumber;
#endif  // !_MSC_VER

CMsgShopBuyResponse::CMsgShopBuyResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgShopBuyResponse::InitAsDefaultInstance() {
}

CMsgShopBuyResponse::CMsgShopBuyResponse(const CMsgShopBuyResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgShopBuyResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgShopBuyResponse::~CMsgShopBuyResponse() {
  SharedDtor();
}

void CMsgShopBuyResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgShopBuyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgShopBuyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShopBuyResponse_descriptor_;
}

const CMsgShopBuyResponse& CMsgShopBuyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgShopBuyResponse* CMsgShopBuyResponse::default_instance_ = NULL;

CMsgShopBuyResponse* CMsgShopBuyResponse::New() const {
  return new CMsgShopBuyResponse;
}

void CMsgShopBuyResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  items_.Clear();
  resources_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgShopBuyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        break;
      }

      // repeated .PBItem Items = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Items;
        if (input->ExpectTag(26)) goto parse_resources;
        break;
      }

      // repeated .PBUpdateResource resources = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_resources;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgShopBuyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBItem Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // repeated .PBUpdateResource resources = 3;
  for (int i = 0; i < this->resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->resources(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgShopBuyResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBItem Items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  // repeated .PBUpdateResource resources = 3;
  for (int i = 0; i < this->resources_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->resources(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgShopBuyResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBItem Items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  // repeated .PBUpdateResource resources = 3;
  total_size += 1 * this->resources_size();
  for (int i = 0; i < this->resources_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgShopBuyResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgShopBuyResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgShopBuyResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgShopBuyResponse::MergeFrom(const CMsgShopBuyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  resources_.MergeFrom(from.resources_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgShopBuyResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShopBuyResponse::CopyFrom(const CMsgShopBuyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShopBuyResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgShopBuyResponse::Swap(CMsgShopBuyResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    items_.Swap(&other->items_);
    resources_.Swap(&other->resources_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgShopBuyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgShopBuyResponse_descriptor_;
  metadata.reflection = CMsgShopBuyResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType1Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType1Request_Msg_descriptor_;
}
bool CMsgBuyGagaleType1Request_Msg_IsValid(int value) {
  switch(value) {
    case 262151:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgBuyGagaleType1Request_Msg CMsgBuyGagaleType1Request::MsgID;
const CMsgBuyGagaleType1Request_Msg CMsgBuyGagaleType1Request::Msg_MIN;
const CMsgBuyGagaleType1Request_Msg CMsgBuyGagaleType1Request::Msg_MAX;
const int CMsgBuyGagaleType1Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgBuyGagaleType1Request::CMsgBuyGagaleType1Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgBuyGagaleType1Request::InitAsDefaultInstance() {
}

CMsgBuyGagaleType1Request::CMsgBuyGagaleType1Request(const CMsgBuyGagaleType1Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgBuyGagaleType1Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgBuyGagaleType1Request::~CMsgBuyGagaleType1Request() {
  SharedDtor();
}

void CMsgBuyGagaleType1Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgBuyGagaleType1Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgBuyGagaleType1Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType1Request_descriptor_;
}

const CMsgBuyGagaleType1Request& CMsgBuyGagaleType1Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgBuyGagaleType1Request* CMsgBuyGagaleType1Request::default_instance_ = NULL;

CMsgBuyGagaleType1Request* CMsgBuyGagaleType1Request::New() const {
  return new CMsgBuyGagaleType1Request;
}

void CMsgBuyGagaleType1Request::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgBuyGagaleType1Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgBuyGagaleType1Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgBuyGagaleType1Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgBuyGagaleType1Request::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgBuyGagaleType1Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgBuyGagaleType1Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgBuyGagaleType1Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgBuyGagaleType1Request::MergeFrom(const CMsgBuyGagaleType1Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgBuyGagaleType1Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBuyGagaleType1Request::CopyFrom(const CMsgBuyGagaleType1Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBuyGagaleType1Request::IsInitialized() const {

  return true;
}

void CMsgBuyGagaleType1Request::Swap(CMsgBuyGagaleType1Request* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgBuyGagaleType1Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgBuyGagaleType1Request_descriptor_;
  metadata.reflection = CMsgBuyGagaleType1Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType1Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType1Response_Msg_descriptor_;
}
bool CMsgBuyGagaleType1Response_Msg_IsValid(int value) {
  switch(value) {
    case 262152:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgBuyGagaleType1Response_Msg CMsgBuyGagaleType1Response::MsgID;
const CMsgBuyGagaleType1Response_Msg CMsgBuyGagaleType1Response::Msg_MIN;
const CMsgBuyGagaleType1Response_Msg CMsgBuyGagaleType1Response::Msg_MAX;
const int CMsgBuyGagaleType1Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgBuyGagaleType1Response::kResultFieldNumber;
const int CMsgBuyGagaleType1Response::kDataFieldNumber;
#endif  // !_MSC_VER

CMsgBuyGagaleType1Response::CMsgBuyGagaleType1Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgBuyGagaleType1Response::InitAsDefaultInstance() {
}

CMsgBuyGagaleType1Response::CMsgBuyGagaleType1Response(const CMsgBuyGagaleType1Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgBuyGagaleType1Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgBuyGagaleType1Response::~CMsgBuyGagaleType1Response() {
  SharedDtor();
}

void CMsgBuyGagaleType1Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgBuyGagaleType1Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgBuyGagaleType1Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType1Response_descriptor_;
}

const CMsgBuyGagaleType1Response& CMsgBuyGagaleType1Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgBuyGagaleType1Response* CMsgBuyGagaleType1Response::default_instance_ = NULL;

CMsgBuyGagaleType1Response* CMsgBuyGagaleType1Response::New() const {
  return new CMsgBuyGagaleType1Response;
}

void CMsgBuyGagaleType1Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgBuyGagaleType1Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .PBGagaleType1SingleInfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgBuyGagaleType1Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType1SingleInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgBuyGagaleType1Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType1SingleInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgBuyGagaleType1Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBGagaleType1SingleInfo data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgBuyGagaleType1Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgBuyGagaleType1Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgBuyGagaleType1Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgBuyGagaleType1Response::MergeFrom(const CMsgBuyGagaleType1Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgBuyGagaleType1Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBuyGagaleType1Response::CopyFrom(const CMsgBuyGagaleType1Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBuyGagaleType1Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgBuyGagaleType1Response::Swap(CMsgBuyGagaleType1Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgBuyGagaleType1Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgBuyGagaleType1Response_descriptor_;
  metadata.reflection = CMsgBuyGagaleType1Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType1Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType1Request_Msg_descriptor_;
}
bool CMsgOpenGagaleType1Request_Msg_IsValid(int value) {
  switch(value) {
    case 262153:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenGagaleType1Request_Msg CMsgOpenGagaleType1Request::MsgID;
const CMsgOpenGagaleType1Request_Msg CMsgOpenGagaleType1Request::Msg_MIN;
const CMsgOpenGagaleType1Request_Msg CMsgOpenGagaleType1Request::Msg_MAX;
const int CMsgOpenGagaleType1Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenGagaleType1Request::kOpenindexFieldNumber;
#endif  // !_MSC_VER

CMsgOpenGagaleType1Request::CMsgOpenGagaleType1Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenGagaleType1Request::InitAsDefaultInstance() {
}

CMsgOpenGagaleType1Request::CMsgOpenGagaleType1Request(const CMsgOpenGagaleType1Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenGagaleType1Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenGagaleType1Request::~CMsgOpenGagaleType1Request() {
  SharedDtor();
}

void CMsgOpenGagaleType1Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenGagaleType1Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenGagaleType1Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType1Request_descriptor_;
}

const CMsgOpenGagaleType1Request& CMsgOpenGagaleType1Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenGagaleType1Request* CMsgOpenGagaleType1Request::default_instance_ = NULL;

CMsgOpenGagaleType1Request* CMsgOpenGagaleType1Request::New() const {
  return new CMsgOpenGagaleType1Request;
}

void CMsgOpenGagaleType1Request::Clear() {
  openindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenGagaleType1Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 openindex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_openindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_openindex())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_openindex())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_openindex;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenGagaleType1Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 openindex = 1;
  for (int i = 0; i < this->openindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->openindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenGagaleType1Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 openindex = 1;
  for (int i = 0; i < this->openindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->openindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenGagaleType1Request::ByteSize() const {
  int total_size = 0;

  // repeated int32 openindex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->openindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->openindex(i));
    }
    total_size += 1 * this->openindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenGagaleType1Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenGagaleType1Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenGagaleType1Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenGagaleType1Request::MergeFrom(const CMsgOpenGagaleType1Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  openindex_.MergeFrom(from.openindex_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenGagaleType1Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenGagaleType1Request::CopyFrom(const CMsgOpenGagaleType1Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenGagaleType1Request::IsInitialized() const {

  return true;
}

void CMsgOpenGagaleType1Request::Swap(CMsgOpenGagaleType1Request* other) {
  if (other != this) {
    openindex_.Swap(&other->openindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenGagaleType1Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenGagaleType1Request_descriptor_;
  metadata.reflection = CMsgOpenGagaleType1Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType1Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType1Response_Msg_descriptor_;
}
bool CMsgOpenGagaleType1Response_Msg_IsValid(int value) {
  switch(value) {
    case 262154:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenGagaleType1Response_Msg CMsgOpenGagaleType1Response::MsgID;
const CMsgOpenGagaleType1Response_Msg CMsgOpenGagaleType1Response::Msg_MIN;
const CMsgOpenGagaleType1Response_Msg CMsgOpenGagaleType1Response::Msg_MAX;
const int CMsgOpenGagaleType1Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenGagaleType1Response::kResultFieldNumber;
const int CMsgOpenGagaleType1Response::kDataFieldNumber;
const int CMsgOpenGagaleType1Response::kGoldFieldNumber;
#endif  // !_MSC_VER

CMsgOpenGagaleType1Response::CMsgOpenGagaleType1Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenGagaleType1Response::InitAsDefaultInstance() {
  gold_ = const_cast< ::PBUpdateResource*>(&::PBUpdateResource::default_instance());
}

CMsgOpenGagaleType1Response::CMsgOpenGagaleType1Response(const CMsgOpenGagaleType1Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenGagaleType1Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  gold_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenGagaleType1Response::~CMsgOpenGagaleType1Response() {
  SharedDtor();
}

void CMsgOpenGagaleType1Response::SharedDtor() {
  if (this != default_instance_) {
    delete gold_;
  }
}

void CMsgOpenGagaleType1Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenGagaleType1Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType1Response_descriptor_;
}

const CMsgOpenGagaleType1Response& CMsgOpenGagaleType1Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenGagaleType1Response* CMsgOpenGagaleType1Response::default_instance_ = NULL;

CMsgOpenGagaleType1Response* CMsgOpenGagaleType1Response::New() const {
  return new CMsgOpenGagaleType1Response;
}

void CMsgOpenGagaleType1Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_gold()) {
      if (gold_ != NULL) gold_->::PBUpdateResource::Clear();
    }
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenGagaleType1Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .PBGagaleType1SingleInfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectTag(26)) goto parse_gold;
        break;
      }

      // required .PBUpdateResource gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gold:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gold()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenGagaleType1Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType1SingleInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // required .PBUpdateResource gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenGagaleType1Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType1SingleInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  // required .PBUpdateResource gold = 3;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->gold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenGagaleType1Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required .PBUpdateResource gold = 3;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gold());
    }

  }
  // repeated .PBGagaleType1SingleInfo data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenGagaleType1Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenGagaleType1Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenGagaleType1Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenGagaleType1Response::MergeFrom(const CMsgOpenGagaleType1Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_gold()) {
      mutable_gold()->::PBUpdateResource::MergeFrom(from.gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenGagaleType1Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenGagaleType1Response::CopyFrom(const CMsgOpenGagaleType1Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenGagaleType1Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgOpenGagaleType1Response::Swap(CMsgOpenGagaleType1Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    data_.Swap(&other->data_);
    std::swap(gold_, other->gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenGagaleType1Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenGagaleType1Response_descriptor_;
  metadata.reflection = CMsgOpenGagaleType1Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGagaleType1Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType1Request_Msg_descriptor_;
}
bool CMsgGagaleType1Request_Msg_IsValid(int value) {
  switch(value) {
    case 262155:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGagaleType1Request_Msg CMsgGagaleType1Request::MsgID;
const CMsgGagaleType1Request_Msg CMsgGagaleType1Request::Msg_MIN;
const CMsgGagaleType1Request_Msg CMsgGagaleType1Request::Msg_MAX;
const int CMsgGagaleType1Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGagaleType1Request::CMsgGagaleType1Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGagaleType1Request::InitAsDefaultInstance() {
}

CMsgGagaleType1Request::CMsgGagaleType1Request(const CMsgGagaleType1Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGagaleType1Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGagaleType1Request::~CMsgGagaleType1Request() {
  SharedDtor();
}

void CMsgGagaleType1Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGagaleType1Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGagaleType1Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType1Request_descriptor_;
}

const CMsgGagaleType1Request& CMsgGagaleType1Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgGagaleType1Request* CMsgGagaleType1Request::default_instance_ = NULL;

CMsgGagaleType1Request* CMsgGagaleType1Request::New() const {
  return new CMsgGagaleType1Request;
}

void CMsgGagaleType1Request::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGagaleType1Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgGagaleType1Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGagaleType1Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGagaleType1Request::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGagaleType1Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGagaleType1Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGagaleType1Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGagaleType1Request::MergeFrom(const CMsgGagaleType1Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGagaleType1Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGagaleType1Request::CopyFrom(const CMsgGagaleType1Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGagaleType1Request::IsInitialized() const {

  return true;
}

void CMsgGagaleType1Request::Swap(CMsgGagaleType1Request* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGagaleType1Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGagaleType1Request_descriptor_;
  metadata.reflection = CMsgGagaleType1Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenShakeRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenShakeRequest_Msg_descriptor_;
}
bool CMsgOpenShakeRequest_Msg_IsValid(int value) {
  switch(value) {
    case 262156:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenShakeRequest_Msg CMsgOpenShakeRequest::MsgID;
const CMsgOpenShakeRequest_Msg CMsgOpenShakeRequest::Msg_MIN;
const CMsgOpenShakeRequest_Msg CMsgOpenShakeRequest::Msg_MAX;
const int CMsgOpenShakeRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenShakeRequest::kIndexFieldNumber;
#endif  // !_MSC_VER

CMsgOpenShakeRequest::CMsgOpenShakeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenShakeRequest::InitAsDefaultInstance() {
}

CMsgOpenShakeRequest::CMsgOpenShakeRequest(const CMsgOpenShakeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenShakeRequest::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenShakeRequest::~CMsgOpenShakeRequest() {
  SharedDtor();
}

void CMsgOpenShakeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenShakeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenShakeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenShakeRequest_descriptor_;
}

const CMsgOpenShakeRequest& CMsgOpenShakeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenShakeRequest* CMsgOpenShakeRequest::default_instance_ = NULL;

CMsgOpenShakeRequest* CMsgOpenShakeRequest::New() const {
  return new CMsgOpenShakeRequest;
}

void CMsgOpenShakeRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenShakeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenShakeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenShakeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenShakeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenShakeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenShakeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenShakeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenShakeRequest::MergeFrom(const CMsgOpenShakeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenShakeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenShakeRequest::CopyFrom(const CMsgOpenShakeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenShakeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgOpenShakeRequest::Swap(CMsgOpenShakeRequest* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenShakeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenShakeRequest_descriptor_;
  metadata.reflection = CMsgOpenShakeRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenShakeResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenShakeResponse_Msg_descriptor_;
}
bool CMsgOpenShakeResponse_Msg_IsValid(int value) {
  switch(value) {
    case 262157:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenShakeResponse_Msg CMsgOpenShakeResponse::MsgID;
const CMsgOpenShakeResponse_Msg CMsgOpenShakeResponse::Msg_MIN;
const CMsgOpenShakeResponse_Msg CMsgOpenShakeResponse::Msg_MAX;
const int CMsgOpenShakeResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenShakeResponse::kResultFieldNumber;
const int CMsgOpenShakeResponse::kPoolFieldNumber;
#endif  // !_MSC_VER

CMsgOpenShakeResponse::CMsgOpenShakeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenShakeResponse::InitAsDefaultInstance() {
}

CMsgOpenShakeResponse::CMsgOpenShakeResponse(const CMsgOpenShakeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenShakeResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  pool_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenShakeResponse::~CMsgOpenShakeResponse() {
  SharedDtor();
}

void CMsgOpenShakeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenShakeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenShakeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenShakeResponse_descriptor_;
}

const CMsgOpenShakeResponse& CMsgOpenShakeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenShakeResponse* CMsgOpenShakeResponse::default_instance_ = NULL;

CMsgOpenShakeResponse* CMsgOpenShakeResponse::New() const {
  return new CMsgOpenShakeResponse;
}

void CMsgOpenShakeResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    pool_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenShakeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Pool;
        break;
      }

      // required int64 Pool = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Pool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pool_)));
          set_has_pool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenShakeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required int64 Pool = 2;
  if (has_pool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->pool(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenShakeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required int64 Pool = 2;
  if (has_pool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->pool(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenShakeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required int64 Pool = 2;
    if (has_pool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pool());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenShakeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenShakeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenShakeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenShakeResponse::MergeFrom(const CMsgOpenShakeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_pool()) {
      set_pool(from.pool());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenShakeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenShakeResponse::CopyFrom(const CMsgOpenShakeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenShakeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CMsgOpenShakeResponse::Swap(CMsgOpenShakeResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(pool_, other->pool_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenShakeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenShakeResponse_descriptor_;
  metadata.reflection = CMsgOpenShakeResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgShakeRequest_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShakeRequest_Msg_descriptor_;
}
bool CMsgShakeRequest_Msg_IsValid(int value) {
  switch(value) {
    case 262158:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgShakeRequest_Msg CMsgShakeRequest::MsgID;
const CMsgShakeRequest_Msg CMsgShakeRequest::Msg_MIN;
const CMsgShakeRequest_Msg CMsgShakeRequest::Msg_MAX;
const int CMsgShakeRequest::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgShakeRequest::kIndexFieldNumber;
#endif  // !_MSC_VER

CMsgShakeRequest::CMsgShakeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgShakeRequest::InitAsDefaultInstance() {
}

CMsgShakeRequest::CMsgShakeRequest(const CMsgShakeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgShakeRequest::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgShakeRequest::~CMsgShakeRequest() {
  SharedDtor();
}

void CMsgShakeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgShakeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgShakeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShakeRequest_descriptor_;
}

const CMsgShakeRequest& CMsgShakeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgShakeRequest* CMsgShakeRequest::default_instance_ = NULL;

CMsgShakeRequest* CMsgShakeRequest::New() const {
  return new CMsgShakeRequest;
}

void CMsgShakeRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgShakeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgShakeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgShakeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgShakeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgShakeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgShakeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgShakeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgShakeRequest::MergeFrom(const CMsgShakeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgShakeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShakeRequest::CopyFrom(const CMsgShakeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShakeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgShakeRequest::Swap(CMsgShakeRequest* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgShakeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgShakeRequest_descriptor_;
  metadata.reflection = CMsgShakeRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgShakeResponse_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShakeResponse_Msg_descriptor_;
}
bool CMsgShakeResponse_Msg_IsValid(int value) {
  switch(value) {
    case 262159:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgShakeResponse_Msg CMsgShakeResponse::MsgID;
const CMsgShakeResponse_Msg CMsgShakeResponse::Msg_MIN;
const CMsgShakeResponse_Msg CMsgShakeResponse::Msg_MAX;
const int CMsgShakeResponse::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgShakeResponse::kResultFieldNumber;
const int CMsgShakeResponse::kOneFieldNumber;
const int CMsgShakeResponse::kTwoFieldNumber;
const int CMsgShakeResponse::kThreeFieldNumber;
const int CMsgShakeResponse::kRewardFieldNumber;
const int CMsgShakeResponse::kMoneyFieldNumber;
const int CMsgShakeResponse::kPoolFieldNumber;
const int CMsgShakeResponse::kFlagFieldNumber;
#endif  // !_MSC_VER

CMsgShakeResponse::CMsgShakeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgShakeResponse::InitAsDefaultInstance() {
}

CMsgShakeResponse::CMsgShakeResponse(const CMsgShakeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgShakeResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  one_ = 0;
  two_ = 0;
  three_ = 0;
  reward_ = GOOGLE_LONGLONG(0);
  money_ = GOOGLE_LONGLONG(0);
  pool_ = GOOGLE_LONGLONG(0);
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgShakeResponse::~CMsgShakeResponse() {
  SharedDtor();
}

void CMsgShakeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgShakeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgShakeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgShakeResponse_descriptor_;
}

const CMsgShakeResponse& CMsgShakeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgShakeResponse* CMsgShakeResponse::default_instance_ = NULL;

CMsgShakeResponse* CMsgShakeResponse::New() const {
  return new CMsgShakeResponse;
}

void CMsgShakeResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    one_ = 0;
    two_ = 0;
    three_ = 0;
    reward_ = GOOGLE_LONGLONG(0);
    money_ = GOOGLE_LONGLONG(0);
    pool_ = GOOGLE_LONGLONG(0);
    flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgShakeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_One;
        break;
      }

      // required int32 One = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_One:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &one_)));
          set_has_one();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_Two;
        break;
      }

      // required int32 Two = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Two:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &two_)));
          set_has_two();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_Three;
        break;
      }

      // required int32 Three = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Three:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &three_)));
          set_has_three();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_Reward;
        break;
      }

      // required int64 Reward = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reward_)));
          set_has_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_Money;
        break;
      }

      // required int64 Money = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_Pool;
        break;
      }

      // required int64 Pool = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Pool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pool_)));
          set_has_pool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_Flag;
        break;
      }

      // required int32 Flag = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgShakeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // required int32 One = 2;
  if (has_one()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->one(), output);
  }

  // required int32 Two = 3;
  if (has_two()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->two(), output);
  }

  // required int32 Three = 4;
  if (has_three()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->three(), output);
  }

  // required int64 Reward = 5;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->reward(), output);
  }

  // required int64 Money = 6;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->money(), output);
  }

  // required int64 Pool = 7;
  if (has_pool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->pool(), output);
  }

  // required int32 Flag = 8;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgShakeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // required int32 One = 2;
  if (has_one()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->one(), target);
  }

  // required int32 Two = 3;
  if (has_two()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->two(), target);
  }

  // required int32 Three = 4;
  if (has_three()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->three(), target);
  }

  // required int64 Reward = 5;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->reward(), target);
  }

  // required int64 Money = 6;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->money(), target);
  }

  // required int64 Pool = 7;
  if (has_pool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->pool(), target);
  }

  // required int32 Flag = 8;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgShakeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required int32 One = 2;
    if (has_one()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->one());
    }

    // required int32 Two = 3;
    if (has_two()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->two());
    }

    // required int32 Three = 4;
    if (has_three()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->three());
    }

    // required int64 Reward = 5;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->reward());
    }

    // required int64 Money = 6;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // required int64 Pool = 7;
    if (has_pool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pool());
    }

    // required int32 Flag = 8;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgShakeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgShakeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgShakeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgShakeResponse::MergeFrom(const CMsgShakeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_one()) {
      set_one(from.one());
    }
    if (from.has_two()) {
      set_two(from.two());
    }
    if (from.has_three()) {
      set_three(from.three());
    }
    if (from.has_reward()) {
      set_reward(from.reward());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_pool()) {
      set_pool(from.pool());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgShakeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgShakeResponse::CopyFrom(const CMsgShakeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgShakeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void CMsgShakeResponse::Swap(CMsgShakeResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(one_, other->one_);
    std::swap(two_, other->two_);
    std::swap(three_, other->three_);
    std::swap(reward_, other->reward_);
    std::swap(money_, other->money_);
    std::swap(pool_, other->pool_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgShakeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgShakeResponse_descriptor_;
  metadata.reflection = CMsgShakeResponse_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGagaleType1Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType1Response_Msg_descriptor_;
}
bool CMsgGagaleType1Response_Msg_IsValid(int value) {
  switch(value) {
    case 262160:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGagaleType1Response_Msg CMsgGagaleType1Response::MsgID;
const CMsgGagaleType1Response_Msg CMsgGagaleType1Response::Msg_MIN;
const CMsgGagaleType1Response_Msg CMsgGagaleType1Response::Msg_MAX;
const int CMsgGagaleType1Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgGagaleType1Response::kResultFieldNumber;
const int CMsgGagaleType1Response::kDataFieldNumber;
#endif  // !_MSC_VER

CMsgGagaleType1Response::CMsgGagaleType1Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGagaleType1Response::InitAsDefaultInstance() {
}

CMsgGagaleType1Response::CMsgGagaleType1Response(const CMsgGagaleType1Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGagaleType1Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGagaleType1Response::~CMsgGagaleType1Response() {
  SharedDtor();
}

void CMsgGagaleType1Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGagaleType1Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGagaleType1Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType1Response_descriptor_;
}

const CMsgGagaleType1Response& CMsgGagaleType1Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgGagaleType1Response* CMsgGagaleType1Response::default_instance_ = NULL;

CMsgGagaleType1Response* CMsgGagaleType1Response::New() const {
  return new CMsgGagaleType1Response;
}

void CMsgGagaleType1Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGagaleType1Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .PBGagaleType1SingleInfo data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgGagaleType1Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType1SingleInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGagaleType1Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType1SingleInfo data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGagaleType1Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBGagaleType1SingleInfo data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGagaleType1Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGagaleType1Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGagaleType1Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGagaleType1Response::MergeFrom(const CMsgGagaleType1Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGagaleType1Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGagaleType1Response::CopyFrom(const CMsgGagaleType1Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGagaleType1Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgGagaleType1Response::Swap(CMsgGagaleType1Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGagaleType1Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGagaleType1Response_descriptor_;
  metadata.reflection = CMsgGagaleType1Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType2Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType2Request_Msg_descriptor_;
}
bool CMsgBuyGagaleType2Request_Msg_IsValid(int value) {
  switch(value) {
    case 262161:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgBuyGagaleType2Request_Msg CMsgBuyGagaleType2Request::MsgID;
const CMsgBuyGagaleType2Request_Msg CMsgBuyGagaleType2Request::Msg_MIN;
const CMsgBuyGagaleType2Request_Msg CMsgBuyGagaleType2Request::Msg_MAX;
const int CMsgBuyGagaleType2Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgBuyGagaleType2Request::CMsgBuyGagaleType2Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgBuyGagaleType2Request::InitAsDefaultInstance() {
}

CMsgBuyGagaleType2Request::CMsgBuyGagaleType2Request(const CMsgBuyGagaleType2Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgBuyGagaleType2Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgBuyGagaleType2Request::~CMsgBuyGagaleType2Request() {
  SharedDtor();
}

void CMsgBuyGagaleType2Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgBuyGagaleType2Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgBuyGagaleType2Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType2Request_descriptor_;
}

const CMsgBuyGagaleType2Request& CMsgBuyGagaleType2Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgBuyGagaleType2Request* CMsgBuyGagaleType2Request::default_instance_ = NULL;

CMsgBuyGagaleType2Request* CMsgBuyGagaleType2Request::New() const {
  return new CMsgBuyGagaleType2Request;
}

void CMsgBuyGagaleType2Request::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgBuyGagaleType2Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgBuyGagaleType2Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgBuyGagaleType2Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgBuyGagaleType2Request::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgBuyGagaleType2Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgBuyGagaleType2Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgBuyGagaleType2Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgBuyGagaleType2Request::MergeFrom(const CMsgBuyGagaleType2Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgBuyGagaleType2Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBuyGagaleType2Request::CopyFrom(const CMsgBuyGagaleType2Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBuyGagaleType2Request::IsInitialized() const {

  return true;
}

void CMsgBuyGagaleType2Request::Swap(CMsgBuyGagaleType2Request* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgBuyGagaleType2Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgBuyGagaleType2Request_descriptor_;
  metadata.reflection = CMsgBuyGagaleType2Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType2Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType2Response_Msg_descriptor_;
}
bool CMsgBuyGagaleType2Response_Msg_IsValid(int value) {
  switch(value) {
    case 262162:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgBuyGagaleType2Response_Msg CMsgBuyGagaleType2Response::MsgID;
const CMsgBuyGagaleType2Response_Msg CMsgBuyGagaleType2Response::Msg_MIN;
const CMsgBuyGagaleType2Response_Msg CMsgBuyGagaleType2Response::Msg_MAX;
const int CMsgBuyGagaleType2Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgBuyGagaleType2Response::kResultFieldNumber;
const int CMsgBuyGagaleType2Response::kMydataFieldNumber;
const int CMsgBuyGagaleType2Response::kEndataFieldNumber;
#endif  // !_MSC_VER

CMsgBuyGagaleType2Response::CMsgBuyGagaleType2Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgBuyGagaleType2Response::InitAsDefaultInstance() {
}

CMsgBuyGagaleType2Response::CMsgBuyGagaleType2Response(const CMsgBuyGagaleType2Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgBuyGagaleType2Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgBuyGagaleType2Response::~CMsgBuyGagaleType2Response() {
  SharedDtor();
}

void CMsgBuyGagaleType2Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgBuyGagaleType2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgBuyGagaleType2Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType2Response_descriptor_;
}

const CMsgBuyGagaleType2Response& CMsgBuyGagaleType2Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgBuyGagaleType2Response* CMsgBuyGagaleType2Response::default_instance_ = NULL;

CMsgBuyGagaleType2Response* CMsgBuyGagaleType2Response::New() const {
  return new CMsgBuyGagaleType2Response;
}

void CMsgBuyGagaleType2Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  mydata_.Clear();
  endata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgBuyGagaleType2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        break;
      }

      // repeated .PBGagaleType2SingleInfo mydata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mydata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mydata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        if (input->ExpectTag(26)) goto parse_endata;
        break;
      }

      // repeated .PBGagaleType2SingleInfo endata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_endata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_endata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_endata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgBuyGagaleType2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType2SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mydata(i), output);
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  for (int i = 0; i < this->endata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->endata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgBuyGagaleType2Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType2SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mydata(i), target);
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  for (int i = 0; i < this->endata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->endata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgBuyGagaleType2Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBGagaleType2SingleInfo mydata = 2;
  total_size += 1 * this->mydata_size();
  for (int i = 0; i < this->mydata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mydata(i));
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  total_size += 1 * this->endata_size();
  for (int i = 0; i < this->endata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->endata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgBuyGagaleType2Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgBuyGagaleType2Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgBuyGagaleType2Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgBuyGagaleType2Response::MergeFrom(const CMsgBuyGagaleType2Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  mydata_.MergeFrom(from.mydata_);
  endata_.MergeFrom(from.endata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgBuyGagaleType2Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBuyGagaleType2Response::CopyFrom(const CMsgBuyGagaleType2Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBuyGagaleType2Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < mydata_size(); i++) {
    if (!this->mydata(i).IsInitialized()) return false;
  }
  for (int i = 0; i < endata_size(); i++) {
    if (!this->endata(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgBuyGagaleType2Response::Swap(CMsgBuyGagaleType2Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mydata_.Swap(&other->mydata_);
    endata_.Swap(&other->endata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgBuyGagaleType2Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgBuyGagaleType2Response_descriptor_;
  metadata.reflection = CMsgBuyGagaleType2Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType2Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType2Request_Msg_descriptor_;
}
bool CMsgOpenGagaleType2Request_Msg_IsValid(int value) {
  switch(value) {
    case 262163:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenGagaleType2Request_Msg CMsgOpenGagaleType2Request::MsgID;
const CMsgOpenGagaleType2Request_Msg CMsgOpenGagaleType2Request::Msg_MIN;
const CMsgOpenGagaleType2Request_Msg CMsgOpenGagaleType2Request::Msg_MAX;
const int CMsgOpenGagaleType2Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenGagaleType2Request::kOpenindexFieldNumber;
#endif  // !_MSC_VER

CMsgOpenGagaleType2Request::CMsgOpenGagaleType2Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenGagaleType2Request::InitAsDefaultInstance() {
}

CMsgOpenGagaleType2Request::CMsgOpenGagaleType2Request(const CMsgOpenGagaleType2Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenGagaleType2Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenGagaleType2Request::~CMsgOpenGagaleType2Request() {
  SharedDtor();
}

void CMsgOpenGagaleType2Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenGagaleType2Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenGagaleType2Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType2Request_descriptor_;
}

const CMsgOpenGagaleType2Request& CMsgOpenGagaleType2Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenGagaleType2Request* CMsgOpenGagaleType2Request::default_instance_ = NULL;

CMsgOpenGagaleType2Request* CMsgOpenGagaleType2Request::New() const {
  return new CMsgOpenGagaleType2Request;
}

void CMsgOpenGagaleType2Request::Clear() {
  openindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenGagaleType2Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 openindex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_openindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_openindex())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_openindex())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_openindex;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenGagaleType2Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 openindex = 1;
  for (int i = 0; i < this->openindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->openindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenGagaleType2Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 openindex = 1;
  for (int i = 0; i < this->openindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->openindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenGagaleType2Request::ByteSize() const {
  int total_size = 0;

  // repeated int32 openindex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->openindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->openindex(i));
    }
    total_size += 1 * this->openindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenGagaleType2Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenGagaleType2Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenGagaleType2Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenGagaleType2Request::MergeFrom(const CMsgOpenGagaleType2Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  openindex_.MergeFrom(from.openindex_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenGagaleType2Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenGagaleType2Request::CopyFrom(const CMsgOpenGagaleType2Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenGagaleType2Request::IsInitialized() const {

  return true;
}

void CMsgOpenGagaleType2Request::Swap(CMsgOpenGagaleType2Request* other) {
  if (other != this) {
    openindex_.Swap(&other->openindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenGagaleType2Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenGagaleType2Request_descriptor_;
  metadata.reflection = CMsgOpenGagaleType2Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType2Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType2Response_Msg_descriptor_;
}
bool CMsgOpenGagaleType2Response_Msg_IsValid(int value) {
  switch(value) {
    case 262164:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenGagaleType2Response_Msg CMsgOpenGagaleType2Response::MsgID;
const CMsgOpenGagaleType2Response_Msg CMsgOpenGagaleType2Response::Msg_MIN;
const CMsgOpenGagaleType2Response_Msg CMsgOpenGagaleType2Response::Msg_MAX;
const int CMsgOpenGagaleType2Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenGagaleType2Response::kResultFieldNumber;
const int CMsgOpenGagaleType2Response::kMydataFieldNumber;
const int CMsgOpenGagaleType2Response::kEndataFieldNumber;
const int CMsgOpenGagaleType2Response::kSumRewardFieldNumber;
const int CMsgOpenGagaleType2Response::kOpenindexFieldNumber;
#endif  // !_MSC_VER

CMsgOpenGagaleType2Response::CMsgOpenGagaleType2Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenGagaleType2Response::InitAsDefaultInstance() {
}

CMsgOpenGagaleType2Response::CMsgOpenGagaleType2Response(const CMsgOpenGagaleType2Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenGagaleType2Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  sumreward_ = 0;
  openindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenGagaleType2Response::~CMsgOpenGagaleType2Response() {
  SharedDtor();
}

void CMsgOpenGagaleType2Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenGagaleType2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenGagaleType2Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType2Response_descriptor_;
}

const CMsgOpenGagaleType2Response& CMsgOpenGagaleType2Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenGagaleType2Response* CMsgOpenGagaleType2Response::default_instance_ = NULL;

CMsgOpenGagaleType2Response* CMsgOpenGagaleType2Response::New() const {
  return new CMsgOpenGagaleType2Response;
}

void CMsgOpenGagaleType2Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    sumreward_ = 0;
    openindex_ = 0;
  }
  mydata_.Clear();
  endata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenGagaleType2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        break;
      }

      // repeated .PBGagaleType2SingleInfo mydata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mydata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mydata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        if (input->ExpectTag(26)) goto parse_endata;
        break;
      }

      // repeated .PBGagaleType2SingleInfo endata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_endata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_endata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_endata;
        if (input->ExpectTag(32)) goto parse_SumReward;
        break;
      }

      // optional int32 SumReward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_SumReward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sumreward_)));
          set_has_sumreward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_openindex;
        break;
      }

      // required int32 openindex = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_openindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openindex_)));
          set_has_openindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenGagaleType2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType2SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mydata(i), output);
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  for (int i = 0; i < this->endata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->endata(i), output);
  }

  // optional int32 SumReward = 4;
  if (has_sumreward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sumreward(), output);
  }

  // required int32 openindex = 5;
  if (has_openindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->openindex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenGagaleType2Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType2SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mydata(i), target);
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  for (int i = 0; i < this->endata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->endata(i), target);
  }

  // optional int32 SumReward = 4;
  if (has_sumreward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sumreward(), target);
  }

  // required int32 openindex = 5;
  if (has_openindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->openindex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenGagaleType2Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 SumReward = 4;
    if (has_sumreward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sumreward());
    }

    // required int32 openindex = 5;
    if (has_openindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->openindex());
    }

  }
  // repeated .PBGagaleType2SingleInfo mydata = 2;
  total_size += 1 * this->mydata_size();
  for (int i = 0; i < this->mydata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mydata(i));
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  total_size += 1 * this->endata_size();
  for (int i = 0; i < this->endata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->endata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenGagaleType2Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenGagaleType2Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenGagaleType2Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenGagaleType2Response::MergeFrom(const CMsgOpenGagaleType2Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  mydata_.MergeFrom(from.mydata_);
  endata_.MergeFrom(from.endata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_sumreward()) {
      set_sumreward(from.sumreward());
    }
    if (from.has_openindex()) {
      set_openindex(from.openindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenGagaleType2Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenGagaleType2Response::CopyFrom(const CMsgOpenGagaleType2Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenGagaleType2Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000011) != 0x00000011) return false;

  for (int i = 0; i < mydata_size(); i++) {
    if (!this->mydata(i).IsInitialized()) return false;
  }
  for (int i = 0; i < endata_size(); i++) {
    if (!this->endata(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgOpenGagaleType2Response::Swap(CMsgOpenGagaleType2Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mydata_.Swap(&other->mydata_);
    endata_.Swap(&other->endata_);
    std::swap(sumreward_, other->sumreward_);
    std::swap(openindex_, other->openindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenGagaleType2Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenGagaleType2Response_descriptor_;
  metadata.reflection = CMsgOpenGagaleType2Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGagaleType2Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType2Request_Msg_descriptor_;
}
bool CMsgGagaleType2Request_Msg_IsValid(int value) {
  switch(value) {
    case 262165:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGagaleType2Request_Msg CMsgGagaleType2Request::MsgID;
const CMsgGagaleType2Request_Msg CMsgGagaleType2Request::Msg_MIN;
const CMsgGagaleType2Request_Msg CMsgGagaleType2Request::Msg_MAX;
const int CMsgGagaleType2Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGagaleType2Request::CMsgGagaleType2Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGagaleType2Request::InitAsDefaultInstance() {
}

CMsgGagaleType2Request::CMsgGagaleType2Request(const CMsgGagaleType2Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGagaleType2Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGagaleType2Request::~CMsgGagaleType2Request() {
  SharedDtor();
}

void CMsgGagaleType2Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGagaleType2Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGagaleType2Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType2Request_descriptor_;
}

const CMsgGagaleType2Request& CMsgGagaleType2Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgGagaleType2Request* CMsgGagaleType2Request::default_instance_ = NULL;

CMsgGagaleType2Request* CMsgGagaleType2Request::New() const {
  return new CMsgGagaleType2Request;
}

void CMsgGagaleType2Request::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGagaleType2Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgGagaleType2Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGagaleType2Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGagaleType2Request::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGagaleType2Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGagaleType2Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGagaleType2Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGagaleType2Request::MergeFrom(const CMsgGagaleType2Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGagaleType2Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGagaleType2Request::CopyFrom(const CMsgGagaleType2Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGagaleType2Request::IsInitialized() const {

  return true;
}

void CMsgGagaleType2Request::Swap(CMsgGagaleType2Request* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGagaleType2Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGagaleType2Request_descriptor_;
  metadata.reflection = CMsgGagaleType2Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGagaleType2Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType2Response_Msg_descriptor_;
}
bool CMsgGagaleType2Response_Msg_IsValid(int value) {
  switch(value) {
    case 262166:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGagaleType2Response_Msg CMsgGagaleType2Response::MsgID;
const CMsgGagaleType2Response_Msg CMsgGagaleType2Response::Msg_MIN;
const CMsgGagaleType2Response_Msg CMsgGagaleType2Response::Msg_MAX;
const int CMsgGagaleType2Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgGagaleType2Response::kResultFieldNumber;
const int CMsgGagaleType2Response::kMydataFieldNumber;
const int CMsgGagaleType2Response::kEndataFieldNumber;
#endif  // !_MSC_VER

CMsgGagaleType2Response::CMsgGagaleType2Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGagaleType2Response::InitAsDefaultInstance() {
}

CMsgGagaleType2Response::CMsgGagaleType2Response(const CMsgGagaleType2Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGagaleType2Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGagaleType2Response::~CMsgGagaleType2Response() {
  SharedDtor();
}

void CMsgGagaleType2Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGagaleType2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGagaleType2Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType2Response_descriptor_;
}

const CMsgGagaleType2Response& CMsgGagaleType2Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgGagaleType2Response* CMsgGagaleType2Response::default_instance_ = NULL;

CMsgGagaleType2Response* CMsgGagaleType2Response::New() const {
  return new CMsgGagaleType2Response;
}

void CMsgGagaleType2Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  mydata_.Clear();
  endata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGagaleType2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        break;
      }

      // repeated .PBGagaleType2SingleInfo mydata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mydata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mydata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        if (input->ExpectTag(26)) goto parse_endata;
        break;
      }

      // repeated .PBGagaleType2SingleInfo endata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_endata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_endata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_endata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgGagaleType2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType2SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mydata(i), output);
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  for (int i = 0; i < this->endata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->endata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGagaleType2Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType2SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mydata(i), target);
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  for (int i = 0; i < this->endata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->endata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGagaleType2Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBGagaleType2SingleInfo mydata = 2;
  total_size += 1 * this->mydata_size();
  for (int i = 0; i < this->mydata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mydata(i));
  }

  // repeated .PBGagaleType2SingleInfo endata = 3;
  total_size += 1 * this->endata_size();
  for (int i = 0; i < this->endata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->endata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGagaleType2Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGagaleType2Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGagaleType2Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGagaleType2Response::MergeFrom(const CMsgGagaleType2Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  mydata_.MergeFrom(from.mydata_);
  endata_.MergeFrom(from.endata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGagaleType2Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGagaleType2Response::CopyFrom(const CMsgGagaleType2Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGagaleType2Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < mydata_size(); i++) {
    if (!this->mydata(i).IsInitialized()) return false;
  }
  for (int i = 0; i < endata_size(); i++) {
    if (!this->endata(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgGagaleType2Response::Swap(CMsgGagaleType2Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mydata_.Swap(&other->mydata_);
    endata_.Swap(&other->endata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGagaleType2Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGagaleType2Response_descriptor_;
  metadata.reflection = CMsgGagaleType2Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType3Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType3Request_Msg_descriptor_;
}
bool CMsgBuyGagaleType3Request_Msg_IsValid(int value) {
  switch(value) {
    case 262167:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgBuyGagaleType3Request_Msg CMsgBuyGagaleType3Request::MsgID;
const CMsgBuyGagaleType3Request_Msg CMsgBuyGagaleType3Request::Msg_MIN;
const CMsgBuyGagaleType3Request_Msg CMsgBuyGagaleType3Request::Msg_MAX;
const int CMsgBuyGagaleType3Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgBuyGagaleType3Request::CMsgBuyGagaleType3Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgBuyGagaleType3Request::InitAsDefaultInstance() {
}

CMsgBuyGagaleType3Request::CMsgBuyGagaleType3Request(const CMsgBuyGagaleType3Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgBuyGagaleType3Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgBuyGagaleType3Request::~CMsgBuyGagaleType3Request() {
  SharedDtor();
}

void CMsgBuyGagaleType3Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgBuyGagaleType3Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgBuyGagaleType3Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType3Request_descriptor_;
}

const CMsgBuyGagaleType3Request& CMsgBuyGagaleType3Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgBuyGagaleType3Request* CMsgBuyGagaleType3Request::default_instance_ = NULL;

CMsgBuyGagaleType3Request* CMsgBuyGagaleType3Request::New() const {
  return new CMsgBuyGagaleType3Request;
}

void CMsgBuyGagaleType3Request::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgBuyGagaleType3Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgBuyGagaleType3Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgBuyGagaleType3Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgBuyGagaleType3Request::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgBuyGagaleType3Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgBuyGagaleType3Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgBuyGagaleType3Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgBuyGagaleType3Request::MergeFrom(const CMsgBuyGagaleType3Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgBuyGagaleType3Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBuyGagaleType3Request::CopyFrom(const CMsgBuyGagaleType3Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBuyGagaleType3Request::IsInitialized() const {

  return true;
}

void CMsgBuyGagaleType3Request::Swap(CMsgBuyGagaleType3Request* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgBuyGagaleType3Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgBuyGagaleType3Request_descriptor_;
  metadata.reflection = CMsgBuyGagaleType3Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgBuyGagaleType3Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType3Response_Msg_descriptor_;
}
bool CMsgBuyGagaleType3Response_Msg_IsValid(int value) {
  switch(value) {
    case 262168:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgBuyGagaleType3Response_Msg CMsgBuyGagaleType3Response::MsgID;
const CMsgBuyGagaleType3Response_Msg CMsgBuyGagaleType3Response::Msg_MIN;
const CMsgBuyGagaleType3Response_Msg CMsgBuyGagaleType3Response::Msg_MAX;
const int CMsgBuyGagaleType3Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgBuyGagaleType3Response::kResultFieldNumber;
const int CMsgBuyGagaleType3Response::kMydataFieldNumber;
#endif  // !_MSC_VER

CMsgBuyGagaleType3Response::CMsgBuyGagaleType3Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgBuyGagaleType3Response::InitAsDefaultInstance() {
}

CMsgBuyGagaleType3Response::CMsgBuyGagaleType3Response(const CMsgBuyGagaleType3Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgBuyGagaleType3Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgBuyGagaleType3Response::~CMsgBuyGagaleType3Response() {
  SharedDtor();
}

void CMsgBuyGagaleType3Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgBuyGagaleType3Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgBuyGagaleType3Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgBuyGagaleType3Response_descriptor_;
}

const CMsgBuyGagaleType3Response& CMsgBuyGagaleType3Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgBuyGagaleType3Response* CMsgBuyGagaleType3Response::default_instance_ = NULL;

CMsgBuyGagaleType3Response* CMsgBuyGagaleType3Response::New() const {
  return new CMsgBuyGagaleType3Response;
}

void CMsgBuyGagaleType3Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  mydata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgBuyGagaleType3Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        break;
      }

      // repeated .PBGagaleType3SingleInfo mydata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mydata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mydata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgBuyGagaleType3Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType3SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mydata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgBuyGagaleType3Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType3SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mydata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgBuyGagaleType3Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBGagaleType3SingleInfo mydata = 2;
  total_size += 1 * this->mydata_size();
  for (int i = 0; i < this->mydata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mydata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgBuyGagaleType3Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgBuyGagaleType3Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgBuyGagaleType3Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgBuyGagaleType3Response::MergeFrom(const CMsgBuyGagaleType3Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  mydata_.MergeFrom(from.mydata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgBuyGagaleType3Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBuyGagaleType3Response::CopyFrom(const CMsgBuyGagaleType3Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBuyGagaleType3Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < mydata_size(); i++) {
    if (!this->mydata(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgBuyGagaleType3Response::Swap(CMsgBuyGagaleType3Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mydata_.Swap(&other->mydata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgBuyGagaleType3Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgBuyGagaleType3Response_descriptor_;
  metadata.reflection = CMsgBuyGagaleType3Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType3Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType3Request_Msg_descriptor_;
}
bool CMsgOpenGagaleType3Request_Msg_IsValid(int value) {
  switch(value) {
    case 262169:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenGagaleType3Request_Msg CMsgOpenGagaleType3Request::MsgID;
const CMsgOpenGagaleType3Request_Msg CMsgOpenGagaleType3Request::Msg_MIN;
const CMsgOpenGagaleType3Request_Msg CMsgOpenGagaleType3Request::Msg_MAX;
const int CMsgOpenGagaleType3Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenGagaleType3Request::kOpenindexFieldNumber;
#endif  // !_MSC_VER

CMsgOpenGagaleType3Request::CMsgOpenGagaleType3Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenGagaleType3Request::InitAsDefaultInstance() {
}

CMsgOpenGagaleType3Request::CMsgOpenGagaleType3Request(const CMsgOpenGagaleType3Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenGagaleType3Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenGagaleType3Request::~CMsgOpenGagaleType3Request() {
  SharedDtor();
}

void CMsgOpenGagaleType3Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgOpenGagaleType3Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenGagaleType3Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType3Request_descriptor_;
}

const CMsgOpenGagaleType3Request& CMsgOpenGagaleType3Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenGagaleType3Request* CMsgOpenGagaleType3Request::default_instance_ = NULL;

CMsgOpenGagaleType3Request* CMsgOpenGagaleType3Request::New() const {
  return new CMsgOpenGagaleType3Request;
}

void CMsgOpenGagaleType3Request::Clear() {
  openindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenGagaleType3Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 openindex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_openindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_openindex())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_openindex())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_openindex;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenGagaleType3Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 openindex = 1;
  for (int i = 0; i < this->openindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->openindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenGagaleType3Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 openindex = 1;
  for (int i = 0; i < this->openindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->openindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenGagaleType3Request::ByteSize() const {
  int total_size = 0;

  // repeated int32 openindex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->openindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->openindex(i));
    }
    total_size += 1 * this->openindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenGagaleType3Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenGagaleType3Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenGagaleType3Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenGagaleType3Request::MergeFrom(const CMsgOpenGagaleType3Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  openindex_.MergeFrom(from.openindex_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenGagaleType3Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenGagaleType3Request::CopyFrom(const CMsgOpenGagaleType3Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenGagaleType3Request::IsInitialized() const {

  return true;
}

void CMsgOpenGagaleType3Request::Swap(CMsgOpenGagaleType3Request* other) {
  if (other != this) {
    openindex_.Swap(&other->openindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenGagaleType3Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenGagaleType3Request_descriptor_;
  metadata.reflection = CMsgOpenGagaleType3Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgOpenGagaleType3Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType3Response_Msg_descriptor_;
}
bool CMsgOpenGagaleType3Response_Msg_IsValid(int value) {
  switch(value) {
    case 262170:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgOpenGagaleType3Response_Msg CMsgOpenGagaleType3Response::MsgID;
const CMsgOpenGagaleType3Response_Msg CMsgOpenGagaleType3Response::Msg_MIN;
const CMsgOpenGagaleType3Response_Msg CMsgOpenGagaleType3Response::Msg_MAX;
const int CMsgOpenGagaleType3Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgOpenGagaleType3Response::kResultFieldNumber;
const int CMsgOpenGagaleType3Response::kMydataFieldNumber;
const int CMsgOpenGagaleType3Response::kGoldFieldNumber;
const int CMsgOpenGagaleType3Response::kDemondFieldNumber;
#endif  // !_MSC_VER

CMsgOpenGagaleType3Response::CMsgOpenGagaleType3Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgOpenGagaleType3Response::InitAsDefaultInstance() {
  gold_ = const_cast< ::PBUpdateResource*>(&::PBUpdateResource::default_instance());
  demond_ = const_cast< ::PBUpdateResource*>(&::PBUpdateResource::default_instance());
}

CMsgOpenGagaleType3Response::CMsgOpenGagaleType3Response(const CMsgOpenGagaleType3Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgOpenGagaleType3Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  gold_ = NULL;
  demond_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgOpenGagaleType3Response::~CMsgOpenGagaleType3Response() {
  SharedDtor();
}

void CMsgOpenGagaleType3Response::SharedDtor() {
  if (this != default_instance_) {
    delete gold_;
    delete demond_;
  }
}

void CMsgOpenGagaleType3Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgOpenGagaleType3Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgOpenGagaleType3Response_descriptor_;
}

const CMsgOpenGagaleType3Response& CMsgOpenGagaleType3Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgOpenGagaleType3Response* CMsgOpenGagaleType3Response::default_instance_ = NULL;

CMsgOpenGagaleType3Response* CMsgOpenGagaleType3Response::New() const {
  return new CMsgOpenGagaleType3Response;
}

void CMsgOpenGagaleType3Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_gold()) {
      if (gold_ != NULL) gold_->::PBUpdateResource::Clear();
    }
    if (has_demond()) {
      if (demond_ != NULL) demond_->::PBUpdateResource::Clear();
    }
  }
  mydata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgOpenGagaleType3Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        break;
      }

      // repeated .PBGagaleType3SingleInfo mydata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mydata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mydata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        if (input->ExpectTag(26)) goto parse_gold;
        break;
      }

      // required .PBUpdateResource gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gold:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gold()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_demond;
        break;
      }

      // required .PBUpdateResource demond = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_demond:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_demond()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgOpenGagaleType3Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType3SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mydata(i), output);
  }

  // required .PBUpdateResource gold = 3;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gold(), output);
  }

  // required .PBUpdateResource demond = 4;
  if (has_demond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->demond(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgOpenGagaleType3Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType3SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mydata(i), target);
  }

  // required .PBUpdateResource gold = 3;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->gold(), target);
  }

  // required .PBUpdateResource demond = 4;
  if (has_demond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->demond(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgOpenGagaleType3Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // required .PBUpdateResource gold = 3;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gold());
    }

    // required .PBUpdateResource demond = 4;
    if (has_demond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->demond());
    }

  }
  // repeated .PBGagaleType3SingleInfo mydata = 2;
  total_size += 1 * this->mydata_size();
  for (int i = 0; i < this->mydata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mydata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgOpenGagaleType3Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgOpenGagaleType3Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgOpenGagaleType3Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgOpenGagaleType3Response::MergeFrom(const CMsgOpenGagaleType3Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  mydata_.MergeFrom(from.mydata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_gold()) {
      mutable_gold()->::PBUpdateResource::MergeFrom(from.gold());
    }
    if (from.has_demond()) {
      mutable_demond()->::PBUpdateResource::MergeFrom(from.demond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgOpenGagaleType3Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgOpenGagaleType3Response::CopyFrom(const CMsgOpenGagaleType3Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgOpenGagaleType3Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;

  for (int i = 0; i < mydata_size(); i++) {
    if (!this->mydata(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgOpenGagaleType3Response::Swap(CMsgOpenGagaleType3Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mydata_.Swap(&other->mydata_);
    std::swap(gold_, other->gold_);
    std::swap(demond_, other->demond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgOpenGagaleType3Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgOpenGagaleType3Response_descriptor_;
  metadata.reflection = CMsgOpenGagaleType3Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGagaleType3Request_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType3Request_Msg_descriptor_;
}
bool CMsgGagaleType3Request_Msg_IsValid(int value) {
  switch(value) {
    case 262171:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGagaleType3Request_Msg CMsgGagaleType3Request::MsgID;
const CMsgGagaleType3Request_Msg CMsgGagaleType3Request::Msg_MIN;
const CMsgGagaleType3Request_Msg CMsgGagaleType3Request::Msg_MAX;
const int CMsgGagaleType3Request::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

CMsgGagaleType3Request::CMsgGagaleType3Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGagaleType3Request::InitAsDefaultInstance() {
}

CMsgGagaleType3Request::CMsgGagaleType3Request(const CMsgGagaleType3Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGagaleType3Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGagaleType3Request::~CMsgGagaleType3Request() {
  SharedDtor();
}

void CMsgGagaleType3Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGagaleType3Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGagaleType3Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType3Request_descriptor_;
}

const CMsgGagaleType3Request& CMsgGagaleType3Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgGagaleType3Request* CMsgGagaleType3Request::default_instance_ = NULL;

CMsgGagaleType3Request* CMsgGagaleType3Request::New() const {
  return new CMsgGagaleType3Request;
}

void CMsgGagaleType3Request::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGagaleType3Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMsgGagaleType3Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGagaleType3Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGagaleType3Request::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGagaleType3Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGagaleType3Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGagaleType3Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGagaleType3Request::MergeFrom(const CMsgGagaleType3Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGagaleType3Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGagaleType3Request::CopyFrom(const CMsgGagaleType3Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGagaleType3Request::IsInitialized() const {

  return true;
}

void CMsgGagaleType3Request::Swap(CMsgGagaleType3Request* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGagaleType3Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGagaleType3Request_descriptor_;
  metadata.reflection = CMsgGagaleType3Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* CMsgGagaleType3Response_Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType3Response_Msg_descriptor_;
}
bool CMsgGagaleType3Response_Msg_IsValid(int value) {
  switch(value) {
    case 262172:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CMsgGagaleType3Response_Msg CMsgGagaleType3Response::MsgID;
const CMsgGagaleType3Response_Msg CMsgGagaleType3Response::Msg_MIN;
const CMsgGagaleType3Response_Msg CMsgGagaleType3Response::Msg_MAX;
const int CMsgGagaleType3Response::Msg_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CMsgGagaleType3Response::kResultFieldNumber;
const int CMsgGagaleType3Response::kMydataFieldNumber;
#endif  // !_MSC_VER

CMsgGagaleType3Response::CMsgGagaleType3Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGagaleType3Response::InitAsDefaultInstance() {
}

CMsgGagaleType3Response::CMsgGagaleType3Response(const CMsgGagaleType3Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGagaleType3Response::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGagaleType3Response::~CMsgGagaleType3Response() {
  SharedDtor();
}

void CMsgGagaleType3Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGagaleType3Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGagaleType3Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGagaleType3Response_descriptor_;
}

const CMsgGagaleType3Response& CMsgGagaleType3Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_itemmessage_2eproto();
  return *default_instance_;
}

CMsgGagaleType3Response* CMsgGagaleType3Response::default_instance_ = NULL;

CMsgGagaleType3Response* CMsgGagaleType3Response::New() const {
  return new CMsgGagaleType3Response;
}

void CMsgGagaleType3Response::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  mydata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGagaleType3Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        break;
      }

      // repeated .PBGagaleType3SingleInfo mydata = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mydata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mydata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mydata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgGagaleType3Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 Result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // repeated .PBGagaleType3SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mydata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGagaleType3Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 Result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // repeated .PBGagaleType3SingleInfo mydata = 2;
  for (int i = 0; i < this->mydata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mydata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGagaleType3Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  // repeated .PBGagaleType3SingleInfo mydata = 2;
  total_size += 1 * this->mydata_size();
  for (int i = 0; i < this->mydata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mydata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGagaleType3Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGagaleType3Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGagaleType3Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGagaleType3Response::MergeFrom(const CMsgGagaleType3Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  mydata_.MergeFrom(from.mydata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGagaleType3Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGagaleType3Response::CopyFrom(const CMsgGagaleType3Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGagaleType3Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < mydata_size(); i++) {
    if (!this->mydata(i).IsInitialized()) return false;
  }
  return true;
}

void CMsgGagaleType3Response::Swap(CMsgGagaleType3Response* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    mydata_.Swap(&other->mydata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGagaleType3Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGagaleType3Response_descriptor_;
  metadata.reflection = CMsgGagaleType3Response_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
